aws:
  cloudFront:
    distributionId:
    url:
    publicKeyId:
    privateKey:
    signatureDuration: 5h
  s3:
    bucketName:
    signatureDuration: 30m

encrypt:
  key:
  salt:

kafka:
  topic:
    sampleCreated:
      name: sample.created
      partitions: 1
    sampleUpdated:
      name: sample.updated
      partitions: 1
    sampleDeleted:
      name: sample.deleted
      partitions: 1

logging:
  includeApplicationName: false
  level:
    liquibase:
      util: ERROR
    org:
      apache:
        kafka: ERROR
      springframework:
        context:
          support:
            # Disable warning messages from spring retry bean configurations.
            PostProcessorRegistrationDelegate: ERROR

management:
  endpoint:
    health:
      showDetails: ALWAYS
    prometheus:
      enabled: true
  endpoints:
    web:
      exposure:
        include: '*'
  otlp:
    metrics:
      export:
        url:
    tracing:
      endpoint:

openApi:
  info:
    title: ${name}
    description: ${description}
    version: ${version}
    contact:
      name: Jonathan Leijendekker
      url: https://leijendary.com
      email:
    license:
      name: Jonathan Leijendekker
      url: https://leijendary.com
  security:
    - Authorization: [ ]
  servers:
    - url: http://localhost
      description: Local
    - url: https://api.dev.leijendary.com
      description: Development
    - url: https://api.test.leijendary.com
      description: Testing
    - url: https://api.staging.leijendary.com
      description: Staging
    - url: https://api.leijendary.com
      description: Production

server:
  error:
    whitelabel:
      enabled: false
  http2:
    enabled: true
  port: 80

spring:
  application:
    name: ${name}
  autoconfigure:
    exclude:
      - org.springframework.boot.autoconfigure.data.elasticsearch.ReactiveElasticsearchRepositoriesAutoConfiguration
  cache:
    type: REDIS
    redis:
      timeToLive: 5h
  cloud:
    openfeign:
      client:
        config:
          petStore:
            url: https://petstore.swagger.io
    refresh:
      enabled: false
  data:
    redis:
      host:
      port:
      ssl:
        enabled: true
      username:
      password:
      repositories:
        enabled: false
  datasource:
    primary:
      poolName: Primary
      jdbcUrl:
      username: \${spring.datasource.username}
      password: \${spring.datasource.password}
    readOnly:
      poolName: Read-only
      readOnly: true
      jdbcUrl:
      username: \${spring.datasource.username}
      password: \${spring.datasource.password}
    username:
    password:
  elasticsearch:
    uris:
    username:
    password:
  jackson:
    defaultPropertyInclusion: NON_ABSENT
  kafka:
    bootstrapServers:
    clientId: ${name}
    consumer:
      groupId: ${name}
      properties:
        partition:
          assignment:
            strategy: org.apache.kafka.clients.consumer.CooperativeStickyAssignor
    jaas:
      enabled: true
      loginModule: org.apache.kafka.common.security.scram.ScramLoginModule
      options:
        username:
        password:
    listener:
      ackMode: RECORD
      observationEnabled: true
    producer:
      acks: all
    properties:
      sasl:
        mechanism: SCRAM-SHA-256
    security:
      protocol: SASL_SSL
    template:
      observationEnabled: true
  main:
    bannerMode: LOG
  messages:
    basename: messages.access, messages.error, messages.validation
  threads:
    virtual:
      enabled: true

springdoc:
  pathsToMatch: /api/**
  swaggerUi:
    disableSwaggerDefaultUrl: true
