aws:
  cloudFront:
    distributionId:
    url:
    publicKeyId:
    privateKey:
    signatureDuration: 5h
  s3:
    bucketName:
    signatureDuration: 30m

encrypt:
  key:
  salt:

kafka:
  topic:
    sampleCreated:
      name: sample.created
      partitions: 1
    sampleUpdated:
      name: sample.updated
      partitions: 1
    sampleDeleted:
      name: sample.deleted
      partitions: 1

logging:
  level:
    liquibase.util: ERROR
    org.apache.kafka: ERROR
    # Disable warning messages from spring retry bean configurations.
    org.springframework.context.support.PostProcessorRegistrationDelegate: ERROR

management:
  endpoint:
    health:
      showDetails: ALWAYS
  endpoints:
    web:
      exposure:
        include: health
  cloudwatch:
    metrics:
      export:
        namespace: Java/SpringBoot/${name}
  zipkin:
    tracing:
      endpoint:

server:
  error:
    whitelabel:
      enabled: false
  http2:
    enabled: true
  port: 80

spring:
  ai:
    ollama:
      chat:
        model: llama3.1
      embedding:
        model: all-minilm
    vectorstore:
      pgvector:
        initializeSchema: true
  application:
    name: ${name}
  autoconfigure:
    exclude:
      - org.springframework.boot.autoconfigure.data.elasticsearch.ReactiveElasticsearchRepositoriesAutoConfiguration
  cache:
    type: REDIS
    redis:
      timeToLive: 5h
  cloud:
    openfeign:
      client:
        config:
          petStore:
            url: https://petstore.swagger.io
    refresh:
      enabled: false
  data:
    redis:
      host:
      port:
      ssl:
        enabled: true
      username:
      password:
      repositories:
        enabled: false
  datasource:
    primary:
      poolName: Primary
      jdbcUrl:
      username: \${spring.datasource.username}
      password: \${spring.datasource.password}
    readOnly:
      poolName: Read-only
      readOnly: true
      jdbcUrl:
      username: \${spring.datasource.username}
      password: \${spring.datasource.password}
    username:
    password:
  elasticsearch:
    uris:
    username:
    password:
  jackson:
    defaultPropertyInclusion: NON_ABSENT
  kafka:
    bootstrapServers:
    clientId: ${name}
    consumer:
      groupId: ${name}
      properties:
        partition:
          assignment:
            strategy: org.apache.kafka.clients.consumer.CooperativeStickyAssignor
    jaas:
      enabled: true
      loginModule: org.apache.kafka.common.security.scram.ScramLoginModule
      options:
        username:
        password:
    listener:
      ackMode: RECORD
      observationEnabled: true
    producer:
      acks: all
    properties:
      sasl:
        mechanism: SCRAM-SHA-256
    security:
      protocol: SASL_SSL
    template:
      observationEnabled: true
  main:
    bannerMode: LOG
  messages:
    basename: messages.access, messages.error, messages.validation
  mvc:
    async:
      requestTimeout: -1
    logResolvedException: false
  threads:
    virtual:
      enabled: true

springdoc:
  openApi:
    components:
      securitySchemes:
        oauth2:
          type: oauth2
          flows:
            implicit:
              authorizationUrl: https://leijendary.eu.auth0.com/authorize
              scopes:
                sample.admin.read: Read sample records as an admin
                sample.admin.write: Create sample records as an admin
                sample.admin.image.write: Upload or delete sample images as an admin
                sample.read: Read sample records
                sample.search.read: Search sample records
                sample.search.write: Reindex sample records
                image.write: Upload/validate images
                ai.chat.read: Read AI chat details or history
                ai.chat.write: Create or send chat messages to AI
    servers:
      - url: http://localhost
        description: Local
      - url: https://api.dev.leijendary.com
        description: Development
      - url: https://api.test.leijendary.com
        description: Testing
      - url: https://api.sandbox.leijendary.com
        description: Sandbox
      - url: https://api.leijendary.com
        description: Production
  groupConfigs:
    - group: sample.v1
      pathsToMatch: /api/v1/samples/**
    - group: sample.v1
      pathsToMatch: /api/v2/samples/**
    - group: image.v1
      pathsToMatch: /api/v1/images/**
    - group: ai.chat.v1
      pathsToMatch: /api/v1/ai/chat/**
