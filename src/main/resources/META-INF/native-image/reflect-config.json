[
{
  "name":"[B"
},
{
  "name":"[C"
},
{
  "name":"[D"
},
{
  "name":"[F"
},
{
  "name":"[I"
},
{
  "name":"[J"
},
{
  "name":"[Lcom.fasterxml.jackson.databind.deser.BeanDeserializerModifier;"
},
{
  "name":"[Lcom.fasterxml.jackson.databind.deser.Deserializers;"
},
{
  "name":"[Lcom.fasterxml.jackson.databind.deser.KeyDeserializers;"
},
{
  "name":"[Lcom.fasterxml.jackson.databind.deser.ValueInstantiators;"
},
{
  "name":"[Lcom.fasterxml.jackson.databind.ser.BeanSerializerModifier;"
},
{
  "name":"[Lcom.fasterxml.jackson.databind.ser.Serializers;"
},
{
  "name":"[Ljava.lang.Class;",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":["java.lang.String"] }, {"name":"<init>","parameterTypes":["java.lang.String[]"] }, {"name":"from","parameterTypes":["java.lang.String"] }, {"name":"from","parameterTypes":["java.lang.String[]"] }, {"name":"of","parameterTypes":["java.lang.String"] }, {"name":"of","parameterTypes":["java.lang.String[]"] }, {"name":"valueOf","parameterTypes":["java.lang.String"] }, {"name":"valueOf","parameterTypes":["java.lang.String[]"] }]
},
{
  "name":"[Ljava.lang.Object;"
},
{
  "name":"[Ljava.lang.String;",
  "methods":[{"name":"toClass","parameterTypes":[] }, {"name":"toClass[]","parameterTypes":[] }]
},
{
  "name":"[Ljava.lang.annotation.Annotation;"
},
{
  "name":"[Ljava.sql.Statement;"
},
{
  "name":"[Ljavax.management.openmbean.CompositeData;"
},
{
  "name":"[Lkotlin.annotation.AnnotationTarget;"
},
{
  "name":"[Lorg.springframework.cloud.commons.config.DefaultsBindHandlerAdvisor$MappingsProvider;"
},
{
  "name":"[Lorg.springframework.core.io.Resource;",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":["java.lang.String"] }, {"name":"from","parameterTypes":["java.lang.String"] }, {"name":"of","parameterTypes":["java.lang.String"] }, {"name":"valueOf","parameterTypes":["java.lang.String"] }]
},
{
  "name":"[Lorg.springframework.data.elasticsearch.annotations.Alias;"
},
{
  "name":"[Lorg.springframework.kafka.annotation.TopicPartition;"
},
{
  "name":"[Lorg.springframework.kafka.retrytopic.ExceptionBasedDltDestination;"
},
{
  "name":"[Lorg.springframework.util.ConcurrentReferenceHashMap$Segment;"
},
{
  "name":"[Lorg.springframework.web.bind.annotation.RequestMethod;"
},
{
  "name":"[S"
},
{
  "name":"[Z"
},
{
  "name":"apple.security.AppleProvider",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"boolean",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Boolean"] }, {"name":"from","parameterTypes":["java.lang.Boolean"] }, {"name":"of","parameterTypes":["java.lang.Boolean"] }, {"name":"valueOf","parameterTypes":["java.lang.Boolean"] }]
},
{
  "name":"brave.Clock"
},
{
  "name":"brave.CurrentSpanCustomizer",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"annotate","parameterTypes":["java.lang.String"] }, {"name":"name","parameterTypes":["java.lang.String"] }, {"name":"tag","parameterTypes":["java.lang.String","java.lang.String"] }]
},
{
  "name":"brave.ScopedSpan"
},
{
  "name":"brave.Span"
},
{
  "name":"brave.SpanCustomizer",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"brave.Tag"
},
{
  "name":"brave.Tracer",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"toString","parameterTypes":[] }]
},
{
  "name":"brave.Tracer$SpanInScope"
},
{
  "name":"brave.Tracing",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"brave.Tracing$Builder"
},
{
  "name":"brave.Tracing$Default",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"currentTraceContext","parameterTypes":[] }, {"name":"isNoop","parameterTypes":[] }, {"name":"propagation","parameterTypes":[] }, {"name":"sampler","parameterTypes":[] }, {"name":"setNoop","parameterTypes":["boolean"] }, {"name":"toString","parameterTypes":[] }, {"name":"tracer","parameterTypes":[] }]
},
{
  "name":"brave.baggage.BaggageField"
},
{
  "name":"brave.baggage.BaggagePropagation$FactoryBuilder",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"brave.baggage.BaggagePropagationConfig"
},
{
  "name":"brave.baggage.BaggagePropagationCustomizer",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"brave.baggage.CorrelationScopeConfig"
},
{
  "name":"brave.baggage.CorrelationScopeCustomizer",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"brave.baggage.CorrelationScopeDecorator",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"brave.baggage.CorrelationScopeDecorator$Builder",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"add","parameterTypes":["brave.baggage.CorrelationScopeConfig"] }, {"name":"clear","parameterTypes":[] }, {"name":"configs","parameterTypes":[] }]
},
{
  "name":"brave.baggage.CorrelationScopeDecorator$Multiple",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"decorateScope","parameterTypes":["brave.propagation.TraceContext","brave.propagation.CurrentTraceContext$Scope"] }]
},
{
  "name":"brave.context.slf4j.MDCScopeDecorator$Builder",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"brave.handler.MutableSpan"
},
{
  "name":"brave.handler.SpanHandler",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"begin","parameterTypes":["brave.propagation.TraceContext","brave.handler.MutableSpan","brave.propagation.TraceContext"] }, {"name":"handlesAbandoned","parameterTypes":[] }]
},
{
  "name":"brave.handler.SpanHandler$Cause"
},
{
  "name":"brave.internal.Nullable",
  "queryAllDeclaredMethods":true
},
{
  "name":"brave.propagation.CurrentTraceContext",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"executor","parameterTypes":["java.util.concurrent.Executor"] }, {"name":"executorService","parameterTypes":["java.util.concurrent.ExecutorService"] }, {"name":"maybeScope","parameterTypes":["brave.propagation.TraceContext"] }, {"name":"wrap","parameterTypes":["java.lang.Runnable"] }, {"name":"wrap","parameterTypes":["java.util.concurrent.Callable"] }]
},
{
  "name":"brave.propagation.CurrentTraceContext$Scope"
},
{
  "name":"brave.propagation.CurrentTraceContext$ScopeDecorator",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"brave.propagation.Propagation"
},
{
  "name":"brave.propagation.Propagation$Factory",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"create","parameterTypes":["brave.propagation.Propagation$KeyFactory"] }]
},
{
  "name":"brave.propagation.Propagation$KeyFactory"
},
{
  "name":"brave.propagation.ThreadLocalCurrentTraceContext",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"get","parameterTypes":[] }, {"name":"newScope","parameterTypes":["brave.propagation.TraceContext"] }]
},
{
  "name":"brave.propagation.ThreadLocalCurrentTraceContext$Builder"
},
{
  "name":"brave.propagation.TraceContext"
},
{
  "name":"brave.propagation.TraceContextOrSamplingFlags"
},
{
  "name":"brave.sampler.Sampler",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"brave.sampler.Sampler$1",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"isSampled","parameterTypes":["long"] }, {"name":"toString","parameterTypes":[] }]
},
{
  "name":"brave.sampler.SamplerFunction"
},
{
  "name":"ch.qos.logback.classic.BasicConfigurator",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"ch.qos.logback.classic.LoggerContext"
},
{
  "name":"ch.qos.logback.classic.joran.SerializedModelConfigurator",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"ch.qos.logback.classic.pattern.DateConverter",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"ch.qos.logback.classic.pattern.LevelConverter",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"ch.qos.logback.classic.pattern.LineSeparatorConverter",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"ch.qos.logback.classic.pattern.LoggerConverter",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"ch.qos.logback.classic.pattern.MessageConverter",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"ch.qos.logback.classic.pattern.ThreadConverter",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"ch.qos.logback.classic.spi.LogbackServiceProvider"
},
{
  "name":"ch.qos.logback.classic.util.DefaultJoranConfigurator",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"clojure.core$clojure_version"
},
{
  "name":"co.elastic.clients.ApiClient",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"_jsonpMapper","parameterTypes":[] }, {"name":"_transport","parameterTypes":[] }, {"name":"_transportOptions","parameterTypes":[] }, {"name":"withTransportOptions","parameterTypes":["java.util.function.Function"] }]
},
{
  "name":"co.elastic.clients.elasticsearch.ElasticsearchClient",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"shutdown","parameterTypes":[] }, {"name":"withTransportOptions","parameterTypes":["co.elastic.clients.transport.TransportOptions"] }]
},
{
  "name":"co.elastic.clients.elasticsearch._types.ElasticsearchException"
},
{
  "name":"co.elastic.clients.elasticsearch._types.SortOptions"
},
{
  "name":"co.elastic.clients.elasticsearch._types.Time$Builder"
},
{
  "name":"co.elastic.clients.elasticsearch._types.query_dsl.IdsQuery$Builder"
},
{
  "name":"co.elastic.clients.elasticsearch._types.query_dsl.MatchAllQuery$Builder"
},
{
  "name":"co.elastic.clients.elasticsearch._types.query_dsl.Query$Builder"
},
{
  "name":"co.elastic.clients.elasticsearch.async_search.ElasticsearchAsyncSearchClient"
},
{
  "name":"co.elastic.clients.elasticsearch.autoscaling.ElasticsearchAutoscalingClient"
},
{
  "name":"co.elastic.clients.elasticsearch.cat.ElasticsearchCatClient"
},
{
  "name":"co.elastic.clients.elasticsearch.ccr.ElasticsearchCcrClient"
},
{
  "name":"co.elastic.clients.elasticsearch.cluster.ElasticsearchClusterClient"
},
{
  "name":"co.elastic.clients.elasticsearch.cluster.HealthRequest$Builder"
},
{
  "name":"co.elastic.clients.elasticsearch.cluster.HealthResponse"
},
{
  "name":"co.elastic.clients.elasticsearch.connector.ElasticsearchConnectorClient"
},
{
  "name":"co.elastic.clients.elasticsearch.core.BulkRequest"
},
{
  "name":"co.elastic.clients.elasticsearch.core.BulkResponse"
},
{
  "name":"co.elastic.clients.elasticsearch.core.ClearScrollRequest"
},
{
  "name":"co.elastic.clients.elasticsearch.core.ClearScrollRequest$Builder"
},
{
  "name":"co.elastic.clients.elasticsearch.core.ClearScrollResponse"
},
{
  "name":"co.elastic.clients.elasticsearch.core.ClosePointInTimeRequest"
},
{
  "name":"co.elastic.clients.elasticsearch.core.ClosePointInTimeResponse"
},
{
  "name":"co.elastic.clients.elasticsearch.core.CountRequest"
},
{
  "name":"co.elastic.clients.elasticsearch.core.CountResponse"
},
{
  "name":"co.elastic.clients.elasticsearch.core.CreateRequest"
},
{
  "name":"co.elastic.clients.elasticsearch.core.CreateResponse"
},
{
  "name":"co.elastic.clients.elasticsearch.core.DeleteByQueryRequest"
},
{
  "name":"co.elastic.clients.elasticsearch.core.DeleteByQueryResponse"
},
{
  "name":"co.elastic.clients.elasticsearch.core.DeleteByQueryRethrottleRequest"
},
{
  "name":"co.elastic.clients.elasticsearch.core.DeleteByQueryRethrottleResponse"
},
{
  "name":"co.elastic.clients.elasticsearch.core.DeleteRequest"
},
{
  "name":"co.elastic.clients.elasticsearch.core.DeleteResponse"
},
{
  "name":"co.elastic.clients.elasticsearch.core.DeleteScriptRequest"
},
{
  "name":"co.elastic.clients.elasticsearch.core.DeleteScriptResponse"
},
{
  "name":"co.elastic.clients.elasticsearch.core.ExistsRequest"
},
{
  "name":"co.elastic.clients.elasticsearch.core.ExistsSourceRequest"
},
{
  "name":"co.elastic.clients.elasticsearch.core.ExplainRequest"
},
{
  "name":"co.elastic.clients.elasticsearch.core.ExplainResponse"
},
{
  "name":"co.elastic.clients.elasticsearch.core.FieldCapsRequest"
},
{
  "name":"co.elastic.clients.elasticsearch.core.FieldCapsResponse"
},
{
  "name":"co.elastic.clients.elasticsearch.core.GetRequest"
},
{
  "name":"co.elastic.clients.elasticsearch.core.GetResponse"
},
{
  "name":"co.elastic.clients.elasticsearch.core.GetScriptContextResponse"
},
{
  "name":"co.elastic.clients.elasticsearch.core.GetScriptLanguagesResponse"
},
{
  "name":"co.elastic.clients.elasticsearch.core.GetScriptRequest"
},
{
  "name":"co.elastic.clients.elasticsearch.core.GetScriptResponse"
},
{
  "name":"co.elastic.clients.elasticsearch.core.GetSourceRequest"
},
{
  "name":"co.elastic.clients.elasticsearch.core.GetSourceResponse"
},
{
  "name":"co.elastic.clients.elasticsearch.core.HealthReportRequest"
},
{
  "name":"co.elastic.clients.elasticsearch.core.HealthReportResponse"
},
{
  "name":"co.elastic.clients.elasticsearch.core.IndexRequest"
},
{
  "name":"co.elastic.clients.elasticsearch.core.IndexResponse"
},
{
  "name":"co.elastic.clients.elasticsearch.core.InfoResponse"
},
{
  "name":"co.elastic.clients.elasticsearch.core.KnnSearchRequest"
},
{
  "name":"co.elastic.clients.elasticsearch.core.KnnSearchResponse"
},
{
  "name":"co.elastic.clients.elasticsearch.core.MgetRequest"
},
{
  "name":"co.elastic.clients.elasticsearch.core.MgetResponse"
},
{
  "name":"co.elastic.clients.elasticsearch.core.MsearchRequest"
},
{
  "name":"co.elastic.clients.elasticsearch.core.MsearchResponse"
},
{
  "name":"co.elastic.clients.elasticsearch.core.MsearchTemplateRequest"
},
{
  "name":"co.elastic.clients.elasticsearch.core.MsearchTemplateResponse"
},
{
  "name":"co.elastic.clients.elasticsearch.core.MtermvectorsRequest"
},
{
  "name":"co.elastic.clients.elasticsearch.core.MtermvectorsResponse"
},
{
  "name":"co.elastic.clients.elasticsearch.core.OpenPointInTimeRequest"
},
{
  "name":"co.elastic.clients.elasticsearch.core.OpenPointInTimeResponse"
},
{
  "name":"co.elastic.clients.elasticsearch.core.PutScriptRequest"
},
{
  "name":"co.elastic.clients.elasticsearch.core.PutScriptResponse"
},
{
  "name":"co.elastic.clients.elasticsearch.core.RankEvalRequest"
},
{
  "name":"co.elastic.clients.elasticsearch.core.RankEvalResponse"
},
{
  "name":"co.elastic.clients.elasticsearch.core.ReindexRequest"
},
{
  "name":"co.elastic.clients.elasticsearch.core.ReindexResponse"
},
{
  "name":"co.elastic.clients.elasticsearch.core.ReindexRethrottleRequest"
},
{
  "name":"co.elastic.clients.elasticsearch.core.ReindexRethrottleResponse"
},
{
  "name":"co.elastic.clients.elasticsearch.core.RenderSearchTemplateRequest"
},
{
  "name":"co.elastic.clients.elasticsearch.core.RenderSearchTemplateResponse"
},
{
  "name":"co.elastic.clients.elasticsearch.core.ScriptsPainlessExecuteRequest"
},
{
  "name":"co.elastic.clients.elasticsearch.core.ScriptsPainlessExecuteResponse"
},
{
  "name":"co.elastic.clients.elasticsearch.core.ScrollRequest"
},
{
  "name":"co.elastic.clients.elasticsearch.core.ScrollRequest$Builder"
},
{
  "name":"co.elastic.clients.elasticsearch.core.ScrollResponse"
},
{
  "name":"co.elastic.clients.elasticsearch.core.SearchMvtRequest"
},
{
  "name":"co.elastic.clients.elasticsearch.core.SearchRequest"
},
{
  "name":"co.elastic.clients.elasticsearch.core.SearchResponse"
},
{
  "name":"co.elastic.clients.elasticsearch.core.SearchShardsRequest"
},
{
  "name":"co.elastic.clients.elasticsearch.core.SearchShardsResponse"
},
{
  "name":"co.elastic.clients.elasticsearch.core.SearchTemplateRequest"
},
{
  "name":"co.elastic.clients.elasticsearch.core.SearchTemplateResponse"
},
{
  "name":"co.elastic.clients.elasticsearch.core.TermsEnumRequest"
},
{
  "name":"co.elastic.clients.elasticsearch.core.TermsEnumResponse"
},
{
  "name":"co.elastic.clients.elasticsearch.core.TermvectorsRequest"
},
{
  "name":"co.elastic.clients.elasticsearch.core.TermvectorsResponse"
},
{
  "name":"co.elastic.clients.elasticsearch.core.UpdateByQueryRequest"
},
{
  "name":"co.elastic.clients.elasticsearch.core.UpdateByQueryResponse"
},
{
  "name":"co.elastic.clients.elasticsearch.core.UpdateByQueryRethrottleRequest"
},
{
  "name":"co.elastic.clients.elasticsearch.core.UpdateByQueryRethrottleResponse"
},
{
  "name":"co.elastic.clients.elasticsearch.core.UpdateRequest"
},
{
  "name":"co.elastic.clients.elasticsearch.core.UpdateResponse"
},
{
  "name":"co.elastic.clients.elasticsearch.core.bulk.BulkResponseItem"
},
{
  "name":"co.elastic.clients.elasticsearch.core.search.Hit"
},
{
  "name":"co.elastic.clients.elasticsearch.core.search.ResponseBody"
},
{
  "name":"co.elastic.clients.elasticsearch.dangling_indices.ElasticsearchDanglingIndicesClient"
},
{
  "name":"co.elastic.clients.elasticsearch.enrich.ElasticsearchEnrichClient"
},
{
  "name":"co.elastic.clients.elasticsearch.eql.ElasticsearchEqlClient"
},
{
  "name":"co.elastic.clients.elasticsearch.esql.ElasticsearchEsqlClient"
},
{
  "name":"co.elastic.clients.elasticsearch.features.ElasticsearchFeaturesClient"
},
{
  "name":"co.elastic.clients.elasticsearch.fleet.ElasticsearchFleetClient"
},
{
  "name":"co.elastic.clients.elasticsearch.graph.ElasticsearchGraphClient"
},
{
  "name":"co.elastic.clients.elasticsearch.ilm.ElasticsearchIlmClient"
},
{
  "name":"co.elastic.clients.elasticsearch.indices.ElasticsearchIndicesClient"
},
{
  "name":"co.elastic.clients.elasticsearch.inference.ElasticsearchInferenceClient"
},
{
  "name":"co.elastic.clients.elasticsearch.ingest.ElasticsearchIngestClient"
},
{
  "name":"co.elastic.clients.elasticsearch.license.ElasticsearchLicenseClient"
},
{
  "name":"co.elastic.clients.elasticsearch.logstash.ElasticsearchLogstashClient"
},
{
  "name":"co.elastic.clients.elasticsearch.migration.ElasticsearchMigrationClient"
},
{
  "name":"co.elastic.clients.elasticsearch.ml.ElasticsearchMlClient"
},
{
  "name":"co.elastic.clients.elasticsearch.monitoring.ElasticsearchMonitoringClient"
},
{
  "name":"co.elastic.clients.elasticsearch.nodes.ElasticsearchNodesClient"
},
{
  "name":"co.elastic.clients.elasticsearch.query_rules.ElasticsearchQueryRulesClient"
},
{
  "name":"co.elastic.clients.elasticsearch.rollup.ElasticsearchRollupClient"
},
{
  "name":"co.elastic.clients.elasticsearch.search_application.ElasticsearchSearchApplicationClient"
},
{
  "name":"co.elastic.clients.elasticsearch.searchable_snapshots.ElasticsearchSearchableSnapshotsClient"
},
{
  "name":"co.elastic.clients.elasticsearch.security.ElasticsearchSecurityClient"
},
{
  "name":"co.elastic.clients.elasticsearch.shutdown.ElasticsearchShutdownClient"
},
{
  "name":"co.elastic.clients.elasticsearch.slm.ElasticsearchSlmClient"
},
{
  "name":"co.elastic.clients.elasticsearch.snapshot.ElasticsearchSnapshotClient"
},
{
  "name":"co.elastic.clients.elasticsearch.sql.ElasticsearchSqlClient"
},
{
  "name":"co.elastic.clients.elasticsearch.ssl.ElasticsearchSslClient"
},
{
  "name":"co.elastic.clients.elasticsearch.synonyms.ElasticsearchSynonymsClient"
},
{
  "name":"co.elastic.clients.elasticsearch.tasks.ElasticsearchTasksClient"
},
{
  "name":"co.elastic.clients.elasticsearch.text_structure.ElasticsearchTextStructureClient"
},
{
  "name":"co.elastic.clients.elasticsearch.transform.ElasticsearchTransformClient"
},
{
  "name":"co.elastic.clients.elasticsearch.watcher.ElasticsearchWatcherClient"
},
{
  "name":"co.elastic.clients.elasticsearch.xpack.ElasticsearchXpackClient"
},
{
  "name":"co.elastic.clients.json.BufferingJsonGenerator"
},
{
  "name":"co.elastic.clients.json.BufferingJsonpMapper",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"co.elastic.clients.json.JsonpDeserializer"
},
{
  "name":"co.elastic.clients.json.JsonpMapper",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"attribute","parameterTypes":["java.lang.String","java.lang.Object"] }, {"name":"deserialize","parameterTypes":["jakarta.json.stream.JsonParser","java.lang.Class"] }, {"name":"deserialize","parameterTypes":["jakarta.json.stream.JsonParser","java.lang.Class","jakarta.json.stream.JsonParser$Event"] }, {"name":"ignoreUnknownFields","parameterTypes":[] }]
},
{
  "name":"co.elastic.clients.json.JsonpMapperBase",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"attribute","parameterTypes":["java.lang.String"] }, {"name":"deserialize","parameterTypes":["jakarta.json.stream.JsonParser","java.lang.reflect.Type"] }, {"name":"deserialize","parameterTypes":["jakarta.json.stream.JsonParser","java.lang.reflect.Type","jakarta.json.stream.JsonParser$Event"] }]
},
{
  "name":"co.elastic.clients.json.JsonpSerializer"
},
{
  "name":"co.elastic.clients.json.NdJsonpSerializable"
},
{
  "name":"co.elastic.clients.json.jackson.JacksonJsonpMapper",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"createBufferingGenerator","parameterTypes":[] }, {"name":"jsonProvider","parameterTypes":[] }, {"name":"serialize","parameterTypes":["java.lang.Object","jakarta.json.stream.JsonGenerator"] }, {"name":"withAttribute","parameterTypes":["java.lang.String","java.lang.Object"] }]
},
{
  "name":"co.elastic.clients.transport.ElasticsearchTransport",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"co.elastic.clients.transport.ElasticsearchTransportBase",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"jsonpMapper","parameterTypes":[] }, {"name":"options","parameterTypes":[] }, {"name":"performRequest","parameterTypes":["java.lang.Object","co.elastic.clients.transport.Endpoint","co.elastic.clients.transport.TransportOptions"] }, {"name":"performRequestAsync","parameterTypes":["java.lang.Object","co.elastic.clients.transport.Endpoint","co.elastic.clients.transport.TransportOptions"] }]
},
{
  "name":"co.elastic.clients.transport.Endpoint"
},
{
  "name":"co.elastic.clients.transport.Transport",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"co.elastic.clients.transport.TransportOptions"
},
{
  "name":"co.elastic.clients.transport.endpoints.BinaryResponse"
},
{
  "name":"co.elastic.clients.transport.endpoints.BooleanResponse"
},
{
  "name":"co.elastic.clients.transport.http.HeaderMap"
},
{
  "name":"co.elastic.clients.transport.http.TransportHttpClient$Request"
},
{
  "name":"co.elastic.clients.transport.http.TransportHttpClient$Response"
},
{
  "name":"co.elastic.clients.transport.instrumentation.Instrumentation$Context"
},
{
  "name":"co.elastic.clients.transport.rest_client.RestClientTransport",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"co.elastic.clients.util.BinaryData"
},
{
  "name":"co.elastic.clients.util.ObjectBuilder"
},
{
  "name":"com.fasterxml.aalto.AsyncXMLStreamReader"
},
{
  "name":"com.fasterxml.jackson.annotation.JacksonAnnotation",
  "queryAllDeclaredMethods":true
},
{
  "name":"com.fasterxml.jackson.annotation.JsonAutoDetect$Value"
},
{
  "name":"com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility"
},
{
  "name":"com.fasterxml.jackson.annotation.JsonIgnore",
  "queryAllDeclaredMethods":true
},
{
  "name":"com.fasterxml.jackson.annotation.JsonInclude",
  "queryAllDeclaredMethods":true
},
{
  "name":"com.fasterxml.jackson.annotation.JsonInclude$Include"
},
{
  "name":"com.fasterxml.jackson.annotation.JsonInclude$IncludeEditor"
},
{
  "name":"com.fasterxml.jackson.annotation.JsonInclude$Value"
},
{
  "name":"com.fasterxml.jackson.annotation.JsonProperty"
},
{
  "name":"com.fasterxml.jackson.annotation.JsonSetter$Value"
},
{
  "name":"com.fasterxml.jackson.annotation.JsonTypeInfo$As"
},
{
  "name":"com.fasterxml.jackson.annotation.JsonView"
},
{
  "name":"com.fasterxml.jackson.annotation.PropertyAccessor"
},
{
  "name":"com.fasterxml.jackson.core.Base64Variant"
},
{
  "name":"com.fasterxml.jackson.core.FormatSchema"
},
{
  "name":"com.fasterxml.jackson.core.JsonEncoding"
},
{
  "name":"com.fasterxml.jackson.core.JsonFactory"
},
{
  "name":"com.fasterxml.jackson.core.JsonFactory$Feature"
},
{
  "name":"com.fasterxml.jackson.core.JsonGenerator"
},
{
  "name":"com.fasterxml.jackson.core.JsonGenerator$Feature"
},
{
  "name":"com.fasterxml.jackson.core.JsonParser"
},
{
  "name":"com.fasterxml.jackson.core.JsonParser$Feature"
},
{
  "name":"com.fasterxml.jackson.core.JsonProcessingException"
},
{
  "name":"com.fasterxml.jackson.core.JsonToken"
},
{
  "name":"com.fasterxml.jackson.core.ObjectCodec",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"getJsonFactory","parameterTypes":[] }, {"name":"readValues","parameterTypes":["com.fasterxml.jackson.core.JsonParser","com.fasterxml.jackson.core.type.ResolvedType"] }, {"name":"readValues","parameterTypes":["com.fasterxml.jackson.core.JsonParser","java.lang.Class"] }]
},
{
  "name":"com.fasterxml.jackson.core.PrettyPrinter"
},
{
  "name":"com.fasterxml.jackson.core.StreamReadFeature"
},
{
  "name":"com.fasterxml.jackson.core.StreamWriteFeature"
},
{
  "name":"com.fasterxml.jackson.core.TreeCodec",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"com.fasterxml.jackson.core.TreeNode"
},
{
  "name":"com.fasterxml.jackson.core.Version"
},
{
  "name":"com.fasterxml.jackson.core.Versioned",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"com.fasterxml.jackson.core.exc.StreamReadException"
},
{
  "name":"com.fasterxml.jackson.core.exc.StreamWriteException"
},
{
  "name":"com.fasterxml.jackson.core.io.CharacterEscapes"
},
{
  "name":"com.fasterxml.jackson.core.type.ResolvedType"
},
{
  "name":"com.fasterxml.jackson.core.type.TypeReference"
},
{
  "name":"com.fasterxml.jackson.databind.AnnotationIntrospector"
},
{
  "name":"com.fasterxml.jackson.databind.DatabindException"
},
{
  "name":"com.fasterxml.jackson.databind.DeserializationConfig"
},
{
  "name":"com.fasterxml.jackson.databind.DeserializationContext"
},
{
  "name":"com.fasterxml.jackson.databind.DeserializationFeature"
},
{
  "name":"com.fasterxml.jackson.databind.InjectableValues"
},
{
  "name":"com.fasterxml.jackson.databind.JavaType"
},
{
  "name":"com.fasterxml.jackson.databind.JsonDeserializer"
},
{
  "name":"com.fasterxml.jackson.databind.JsonMappingException"
},
{
  "name":"com.fasterxml.jackson.databind.JsonNode"
},
{
  "name":"com.fasterxml.jackson.databind.JsonSerializer"
},
{
  "name":"com.fasterxml.jackson.databind.KeyDeserializer"
},
{
  "name":"com.fasterxml.jackson.databind.MapperFeature"
},
{
  "name":"com.fasterxml.jackson.databind.MappingIterator"
},
{
  "name":"com.fasterxml.jackson.databind.Module",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"getDependencies","parameterTypes":[] }, {"name":"getTypeId","parameterTypes":[] }]
},
{
  "name":"com.fasterxml.jackson.databind.Module$SetupContext"
},
{
  "name":"com.fasterxml.jackson.databind.ObjectMapper",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"createArrayNode","parameterTypes":[] }, {"name":"createObjectNode","parameterTypes":[] }, {"name":"getFactory","parameterTypes":[] }, {"name":"missingNode","parameterTypes":[] }, {"name":"nullNode","parameterTypes":[] }, {"name":"readTree","parameterTypes":["com.fasterxml.jackson.core.JsonParser"] }, {"name":"readValue","parameterTypes":["com.fasterxml.jackson.core.JsonParser","com.fasterxml.jackson.core.type.ResolvedType"] }, {"name":"readValue","parameterTypes":["com.fasterxml.jackson.core.JsonParser","com.fasterxml.jackson.core.type.TypeReference"] }, {"name":"readValue","parameterTypes":["com.fasterxml.jackson.core.JsonParser","java.lang.Class"] }, {"name":"readValues","parameterTypes":["com.fasterxml.jackson.core.JsonParser","com.fasterxml.jackson.core.type.ResolvedType"] }, {"name":"readValues","parameterTypes":["com.fasterxml.jackson.core.JsonParser","com.fasterxml.jackson.core.type.TypeReference"] }, {"name":"readValues","parameterTypes":["com.fasterxml.jackson.core.JsonParser","java.lang.Class"] }, {"name":"treeAsTokens","parameterTypes":["com.fasterxml.jackson.core.TreeNode"] }, {"name":"treeToValue","parameterTypes":["com.fasterxml.jackson.core.TreeNode","java.lang.Class"] }, {"name":"version","parameterTypes":[] }, {"name":"writeTree","parameterTypes":["com.fasterxml.jackson.core.JsonGenerator","com.fasterxml.jackson.core.TreeNode"] }, {"name":"writeValue","parameterTypes":["com.fasterxml.jackson.core.JsonGenerator","java.lang.Object"] }]
},
{
  "name":"com.fasterxml.jackson.databind.ObjectMapper$DefaultTyping"
},
{
  "name":"com.fasterxml.jackson.databind.ObjectReader"
},
{
  "name":"com.fasterxml.jackson.databind.ObjectWriter"
},
{
  "name":"com.fasterxml.jackson.databind.PropertyNamingStrategy"
},
{
  "name":"com.fasterxml.jackson.databind.SerializationConfig"
},
{
  "name":"com.fasterxml.jackson.databind.SerializationFeature"
},
{
  "name":"com.fasterxml.jackson.databind.SerializerProvider"
},
{
  "name":"com.fasterxml.jackson.databind.cfg.CacheProvider"
},
{
  "name":"com.fasterxml.jackson.databind.cfg.ConstructorDetector"
},
{
  "name":"com.fasterxml.jackson.databind.cfg.ContextAttributes"
},
{
  "name":"com.fasterxml.jackson.databind.cfg.DatatypeFeature"
},
{
  "name":"com.fasterxml.jackson.databind.cfg.HandlerInstantiator"
},
{
  "name":"com.fasterxml.jackson.databind.cfg.MutableCoercionConfig"
},
{
  "name":"com.fasterxml.jackson.databind.cfg.MutableConfigOverride"
},
{
  "name":"com.fasterxml.jackson.databind.deser.BeanDeserializerModifier"
},
{
  "name":"com.fasterxml.jackson.databind.deser.DefaultDeserializationContext"
},
{
  "name":"com.fasterxml.jackson.databind.deser.DeserializationProblemHandler"
},
{
  "name":"com.fasterxml.jackson.databind.deser.ValueInstantiator"
},
{
  "name":"com.fasterxml.jackson.databind.exc.InvalidFormatException"
},
{
  "name":"com.fasterxml.jackson.databind.exc.MismatchedInputException"
},
{
  "name":"com.fasterxml.jackson.databind.ext.Java7SupportImpl",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.fasterxml.jackson.databind.introspect.AccessorNamingStrategy$Provider"
},
{
  "name":"com.fasterxml.jackson.databind.introspect.ClassIntrospector"
},
{
  "name":"com.fasterxml.jackson.databind.introspect.ClassIntrospector$MixInResolver"
},
{
  "name":"com.fasterxml.jackson.databind.introspect.VisibilityChecker"
},
{
  "name":"com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper"
},
{
  "name":"com.fasterxml.jackson.databind.jsonschema.JsonSchema"
},
{
  "name":"com.fasterxml.jackson.databind.jsontype.NamedType"
},
{
  "name":"com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator"
},
{
  "name":"com.fasterxml.jackson.databind.jsontype.SubtypeResolver"
},
{
  "name":"com.fasterxml.jackson.databind.jsontype.TypeResolverBuilder"
},
{
  "name":"com.fasterxml.jackson.databind.module.SimpleAbstractTypeResolver"
},
{
  "name":"com.fasterxml.jackson.databind.module.SimpleDeserializers"
},
{
  "name":"com.fasterxml.jackson.databind.module.SimpleKeyDeserializers"
},
{
  "name":"com.fasterxml.jackson.databind.module.SimpleModule",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"addAbstractTypeMapping","parameterTypes":["java.lang.Class","java.lang.Class"] }, {"name":"addDeserializer","parameterTypes":["java.lang.Class","com.fasterxml.jackson.databind.JsonDeserializer"] }, {"name":"addKeyDeserializer","parameterTypes":["java.lang.Class","com.fasterxml.jackson.databind.KeyDeserializer"] }, {"name":"addKeySerializer","parameterTypes":["java.lang.Class","com.fasterxml.jackson.databind.JsonSerializer"] }, {"name":"addSerializer","parameterTypes":["com.fasterxml.jackson.databind.JsonSerializer"] }, {"name":"addSerializer","parameterTypes":["java.lang.Class","com.fasterxml.jackson.databind.JsonSerializer"] }, {"name":"addValueInstantiator","parameterTypes":["java.lang.Class","com.fasterxml.jackson.databind.deser.ValueInstantiator"] }, {"name":"getModuleName","parameterTypes":[] }, {"name":"getTypeId","parameterTypes":[] }, {"name":"registerSubtypes","parameterTypes":["java.util.Collection"] }, {"name":"registerSubtypes","parameterTypes":["com.fasterxml.jackson.databind.jsontype.NamedType[]"] }, {"name":"registerSubtypes","parameterTypes":["java.lang.Class[]"] }, {"name":"setAbstractTypes","parameterTypes":["com.fasterxml.jackson.databind.module.SimpleAbstractTypeResolver"] }, {"name":"setDeserializerModifier","parameterTypes":["com.fasterxml.jackson.databind.deser.BeanDeserializerModifier"] }, {"name":"setDeserializers","parameterTypes":["com.fasterxml.jackson.databind.module.SimpleDeserializers"] }, {"name":"setKeyDeserializers","parameterTypes":["com.fasterxml.jackson.databind.module.SimpleKeyDeserializers"] }, {"name":"setKeySerializers","parameterTypes":["com.fasterxml.jackson.databind.module.SimpleSerializers"] }, {"name":"setMixInAnnotation","parameterTypes":["java.lang.Class","java.lang.Class"] }, {"name":"setSerializerModifier","parameterTypes":["com.fasterxml.jackson.databind.ser.BeanSerializerModifier"] }, {"name":"setSerializers","parameterTypes":["com.fasterxml.jackson.databind.module.SimpleSerializers"] }, {"name":"setValueInstantiators","parameterTypes":["com.fasterxml.jackson.databind.module.SimpleValueInstantiators"] }, {"name":"setupModule","parameterTypes":["com.fasterxml.jackson.databind.Module$SetupContext"] }, {"name":"version","parameterTypes":[] }]
},
{
  "name":"com.fasterxml.jackson.databind.module.SimpleSerializers"
},
{
  "name":"com.fasterxml.jackson.databind.module.SimpleValueInstantiators"
},
{
  "name":"com.fasterxml.jackson.databind.node.ArrayNode"
},
{
  "name":"com.fasterxml.jackson.databind.node.JsonNodeFactory"
},
{
  "name":"com.fasterxml.jackson.databind.node.ObjectNode"
},
{
  "name":"com.fasterxml.jackson.databind.ser.BeanSerializerModifier"
},
{
  "name":"com.fasterxml.jackson.databind.ser.DefaultSerializerProvider"
},
{
  "name":"com.fasterxml.jackson.databind.ser.FilterProvider"
},
{
  "name":"com.fasterxml.jackson.databind.ser.SerializerFactory"
},
{
  "name":"com.fasterxml.jackson.databind.type.LogicalType"
},
{
  "name":"com.fasterxml.jackson.databind.type.TypeFactory"
},
{
  "name":"com.fasterxml.jackson.dataformat.cbor.CBORFactory"
},
{
  "name":"com.fasterxml.jackson.dataformat.smile.SmileFactory"
},
{
  "name":"com.fasterxml.jackson.dataformat.xml.XmlMapper"
},
{
  "name":"com.fasterxml.jackson.dataformat.yaml.YAMLFactory"
},
{
  "name":"com.fasterxml.jackson.datatype.jdk8.Jdk8Module",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.fasterxml.jackson.datatype.joda.JodaModule"
},
{
  "name":"com.fasterxml.jackson.datatype.jsr310.JavaTimeModule",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.fasterxml.jackson.module.kotlin.KotlinModule",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.fasterxml.jackson.module.kotlin.KotlinModule$Builder"
},
{
  "name":"com.fasterxml.jackson.module.kotlin.SingletonSupport"
},
{
  "name":"com.fasterxml.jackson.module.paramnames.ParameterNamesModule",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"equals","parameterTypes":["java.lang.Object"] }, {"name":"hashCode","parameterTypes":[] }, {"name":"setupModule","parameterTypes":["com.fasterxml.jackson.databind.Module$SetupContext"] }]
},
{
  "name":"com.google.common.base.Optional"
},
{
  "name":"com.google.gson.Gson"
},
{
  "name":"com.google.protobuf.Message"
},
{
  "name":"com.ibm.lang.management.OperatingSystemMXBean"
},
{
  "name":"com.jayway.jsonpath.DocumentContext"
},
{
  "name":"com.leijendary.Application",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"com.leijendary.ApplicationKt",
  "methods":[{"name":"main","parameterTypes":["java.lang.String[]"] }]
},
{
  "name":"com.leijendary.ApplicationKt__ApplicationContextInitializer",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.leijendary.ApplicationKt__EnvironmentPostProcessor"
},
{
  "name":"com.leijendary.client.PetStoreClient",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"getPets","parameterTypes":["org.openapi.petstore.v2.model.Pet$Status"] }, {"name":"getStoreInventory","parameterTypes":[] }, {"name":"login","parameterTypes":["java.lang.String","java.lang.String"] }]
},
{
  "name":"com.leijendary.client.PetStoreFeignConfiguration",
  "queryAllDeclaredMethods":true
},
{
  "name":"com.leijendary.config.AiConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"chatClient","parameterTypes":["org.springframework.ai.chat.client.ChatClient$Builder","org.springframework.ai.chat.memory.ChatMemory","org.springframework.ai.vectorstore.VectorStore"] }, {"name":"titleChatClient","parameterTypes":["org.springframework.ai.chat.client.ChatClient$Builder"] }]
},
{
  "name":"com.leijendary.config.AwsConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":["software.amazon.awssdk.auth.credentials.AwsCredentialsProvider","software.amazon.awssdk.regions.providers.AwsRegionProvider"] }, {"name":"cloudFrontClient","parameterTypes":[] }]
},
{
  "name":"com.leijendary.config.CacheConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"cacheManagerCustomizer","parameterTypes":[] }, {"name":"redisCustomConversions","parameterTypes":["java.util.List"] }]
},
{
  "name":"com.leijendary.config.DatabaseConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"auditorAware","parameterTypes":[] }, {"name":"dataSource","parameterTypes":["javax.sql.DataSource","javax.sql.DataSource"] }, {"name":"prefixedIDBeforeConvertCallback","parameterTypes":[] }, {"name":"primaryDataSource","parameterTypes":["com.leijendary.config.properties.DataSourcePrimaryProperties"] }, {"name":"readOnlyDataSource","parameterTypes":["com.leijendary.config.properties.DataSourceReadOnlyProperties"] }, {"name":"readOnlyTransactionTemplate","parameterTypes":["org.springframework.jdbc.support.JdbcTransactionManager"] }, {"name":"transactionManager","parameterTypes":["org.springframework.jdbc.support.JdbcTransactionManager"] }, {"name":"transactionTemplate","parameterTypes":["org.springframework.jdbc.support.JdbcTransactionManager"] }]
},
{
  "name":"com.leijendary.config.DatabaseConfiguration$Companion"
},
{
  "name":"com.leijendary.config.KafkaConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":["com.leijendary.interceptor.KafkaInterceptor","org.springframework.boot.autoconfigure.kafka.KafkaProperties","com.leijendary.config.properties.KafkaTopicProperties"] }, {"name":"kafkaListenerContainerFactory","parameterTypes":["org.springframework.kafka.core.ConsumerFactory","org.springframework.kafka.core.KafkaTemplate"] }, {"name":"kafkaTemplate","parameterTypes":["org.springframework.kafka.core.ProducerFactory"] }, {"name":"topicConcurrencyEnhancer","parameterTypes":[] }]
},
{
  "name":"com.leijendary.config.OpenApiConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"com.leijendary.config.SynchronizedTransactionManager",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":["javax.sql.DataSource"] }]
},
{
  "name":"com.leijendary.config.TransactionRoutingDataSource",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"com.leijendary.config.properties.AwsCloudFrontProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["java.lang.String","java.lang.String","java.lang.String","java.lang.String","java.time.Duration"] }, {"name":"equals","parameterTypes":["java.lang.Object"] }, {"name":"hashCode","parameterTypes":[] }, {"name":"toString","parameterTypes":[] }]
},
{
  "name":"com.leijendary.config.properties.AwsS3Properties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["java.lang.String","java.time.Duration"] }, {"name":"equals","parameterTypes":["java.lang.Object"] }, {"name":"hashCode","parameterTypes":[] }, {"name":"toString","parameterTypes":[] }]
},
{
  "name":"com.leijendary.config.properties.DataSourcePrimaryProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"com.leijendary.config.properties.DataSourceReadOnlyProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"com.leijendary.config.properties.KafkaTopicProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"containsKey","parameterTypes":["java.lang.Object"] }, {"name":"containsValue","parameterTypes":["java.lang.Object"] }, {"name":"entrySet","parameterTypes":[] }, {"name":"get","parameterTypes":["java.lang.Object"] }, {"name":"getOrDefault","parameterTypes":["java.lang.Object","java.lang.Object"] }, {"name":"keySet","parameterTypes":[] }, {"name":"remove","parameterTypes":["java.lang.Object"] }, {"name":"remove","parameterTypes":["java.lang.Object","java.lang.Object"] }, {"name":"size","parameterTypes":[] }, {"name":"values","parameterTypes":[] }]
},
{
  "name":"com.leijendary.config.properties.KafkaTopicProperties$KafkaTopic",
  "queryAllDeclaredConstructors":true,
  "fields":[{"name":"this$0"}],
  "methods":[{"name":"<init>","parameterTypes":["java.lang.String","int","int"] }, {"name":"<init>","parameterTypes":["java.lang.String","int","int","int","kotlin.jvm.internal.DefaultConstructorMarker"] }]
},
{
  "name":"com.leijendary.config.properties.OpenApiProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"com.leijendary.context.DatabaseContext",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":["org.springframework.transaction.support.TransactionTemplate","org.springframework.transaction.support.TransactionTemplate"] }]
},
{
  "name":"com.leijendary.context.SpringContext",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":["com.fasterxml.jackson.databind.ObjectMapper"] }, {"name":"setApplicationContext","parameterTypes":["org.springframework.context.ApplicationContext"] }]
},
{
  "name":"com.leijendary.domain.ai.chat.AiChat",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["java.lang.String"] }, {"name":"component1","parameterTypes":[] }, {"name":"copy","parameterTypes":["java.lang.String"] }, {"name":"equals","parameterTypes":["java.lang.Object"] }, {"name":"getCreatedAt","parameterTypes":[] }, {"name":"getCreatedBy","parameterTypes":[] }, {"name":"getId","parameterTypes":[] }, {"name":"getPrefix","parameterTypes":[] }, {"name":"getTitle","parameterTypes":[] }, {"name":"hashCode","parameterTypes":[] }, {"name":"isNew","parameterTypes":[] }, {"name":"setCreatedAt","parameterTypes":["java.time.Instant"] }, {"name":"setCreatedBy","parameterTypes":["java.lang.String"] }, {"name":"setId","parameterTypes":["java.lang.String"] }, {"name":"setTitle","parameterTypes":["java.lang.String"] }, {"name":"toString","parameterTypes":[] }]
},
{
  "name":"com.leijendary.domain.ai.chat.AiChat$Companion"
},
{
  "name":"com.leijendary.domain.ai.chat.AiChatController",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":["com.leijendary.domain.ai.chat.AiChatService"] }]
},
{
  "name":"com.leijendary.domain.ai.chat.AiChatCreateResponse"
},
{
  "name":"com.leijendary.domain.ai.chat.AiChatHistoryResponse"
},
{
  "name":"com.leijendary.domain.ai.chat.AiChatMemory",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["java.lang.String","java.lang.String","org.springframework.ai.chat.messages.MessageType"] }, {"name":"component1","parameterTypes":[] }, {"name":"component2","parameterTypes":[] }, {"name":"component3","parameterTypes":[] }, {"name":"copy","parameterTypes":["java.lang.String","java.lang.String","org.springframework.ai.chat.messages.MessageType"] }, {"name":"equals","parameterTypes":["java.lang.Object"] }, {"name":"getContent","parameterTypes":[] }, {"name":"getConversationId","parameterTypes":[] }, {"name":"getId","parameterTypes":[] }, {"name":"getTimestamp","parameterTypes":[] }, {"name":"getType","parameterTypes":[] }, {"name":"hashCode","parameterTypes":[] }, {"name":"isNew","parameterTypes":[] }, {"name":"setTimestamp","parameterTypes":["java.time.Instant"] }, {"name":"toString","parameterTypes":[] }]
},
{
  "name":"com.leijendary.domain.ai.chat.AiChatMemoryRepository",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"findByConversationId","parameterTypes":["java.lang.String","org.springframework.data.domain.Pageable"] }]
},
{
  "name":"com.leijendary.domain.ai.chat.AiChatRepository",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"cursor","parameterTypes":["java.lang.String","com.leijendary.model.Cursorable","java.lang.Class"] }, {"name":"existsByIdAndCreatedBy","parameterTypes":["java.lang.String","java.lang.String"] }, {"name":"findFirstByIdAndCreatedBy","parameterTypes":["java.lang.String","java.lang.String","java.lang.Class"] }]
},
{
  "name":"com.leijendary.domain.ai.chat.AiChatRequest"
},
{
  "name":"com.leijendary.domain.ai.chat.AiChatResponse"
},
{
  "name":"com.leijendary.domain.ai.chat.AiChatService",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"com.leijendary.domain.ai.chat.AiChatServiceImpl",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":["com.leijendary.domain.ai.chat.AiChatRepository","org.springframework.ai.chat.client.ChatClient","org.springframework.ai.chat.memory.ChatMemory","org.springframework.ai.chat.client.ChatClient","io.micrometer.tracing.Tracer"] }, {"name":"create","parameterTypes":["com.leijendary.domain.ai.chat.AiChatRequest"] }, {"name":"cursor","parameterTypes":["com.leijendary.model.Cursorable"] }, {"name":"delete","parameterTypes":["java.lang.String"] }, {"name":"get","parameterTypes":["java.lang.String"] }, {"name":"history","parameterTypes":["java.lang.String"] }]
},
{
  "name":"com.leijendary.domain.ai.chat.PersistentChatMemory",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":["com.leijendary.domain.ai.chat.AiChatMemoryRepository"] }, {"name":"add","parameterTypes":["java.lang.String","java.util.List"] }, {"name":"clear","parameterTypes":["java.lang.String"] }, {"name":"get","parameterTypes":["java.lang.String","int"] }]
},
{
  "name":"com.leijendary.domain.image.Image",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["java.lang.String"] }, {"name":"component1","parameterTypes":[] }, {"name":"copy","parameterTypes":["java.lang.String"] }, {"name":"equals","parameterTypes":["java.lang.Object"] }, {"name":"getCreatedAt","parameterTypes":[] }, {"name":"getCreatedBy","parameterTypes":[] }, {"name":"getId","parameterTypes":[] }, {"name":"getMediaType","parameterTypes":[] }, {"name":"getName","parameterTypes":[] }, {"name":"getPrefix","parameterTypes":[] }, {"name":"getValidated","parameterTypes":[] }, {"name":"hashCode","parameterTypes":[] }, {"name":"isNew","parameterTypes":[] }, {"name":"setCreatedAt","parameterTypes":["java.time.Instant"] }, {"name":"setCreatedBy","parameterTypes":["java.lang.String"] }, {"name":"setId","parameterTypes":["java.lang.String"] }, {"name":"setMediaType","parameterTypes":["java.lang.String"] }, {"name":"setName","parameterTypes":["java.lang.String"] }, {"name":"setValidated","parameterTypes":["boolean"] }, {"name":"toString","parameterTypes":[] }]
},
{
  "name":"com.leijendary.domain.image.Image$Companion"
},
{
  "name":"com.leijendary.domain.image.ImageController",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":["com.leijendary.domain.image.ImageService"] }]
},
{
  "name":"com.leijendary.domain.image.ImageCreateUrlRequest"
},
{
  "name":"com.leijendary.domain.image.ImageCreateUrlResponse"
},
{
  "name":"com.leijendary.domain.image.ImageDeleteRequest"
},
{
  "name":"com.leijendary.domain.image.ImageMetadata",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["java.lang.String","java.lang.String"] }, {"name":"component1","parameterTypes":[] }, {"name":"component2","parameterTypes":[] }, {"name":"copy","parameterTypes":["java.lang.String","java.lang.String"] }, {"name":"equals","parameterTypes":["java.lang.Object"] }, {"name":"getId","parameterTypes":[] }, {"name":"getName","parameterTypes":[] }, {"name":"getValue","parameterTypes":[] }, {"name":"hashCode","parameterTypes":[] }, {"name":"isNew","parameterTypes":[] }, {"name":"setId","parameterTypes":["java.lang.String"] }, {"name":"setName","parameterTypes":["java.lang.String"] }, {"name":"setValue","parameterTypes":["java.lang.String"] }, {"name":"toString","parameterTypes":[] }]
},
{
  "name":"com.leijendary.domain.image.ImageMetadataRepository",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"com.leijendary.domain.image.ImageMultiValidateResponse"
},
{
  "name":"com.leijendary.domain.image.ImageRepository",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"deleteByName","parameterTypes":["java.lang.String"] }, {"name":"findByName","parameterTypes":["java.lang.String"] }, {"name":"setValidated","parameterTypes":["java.lang.String","java.lang.String"] }]
},
{
  "name":"com.leijendary.domain.image.ImageRequest"
},
{
  "name":"com.leijendary.domain.image.ImageResponse",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["java.lang.String","java.lang.String","java.lang.String"] }, {"name":"component1","parameterTypes":[] }, {"name":"component2","parameterTypes":[] }, {"name":"component3","parameterTypes":[] }, {"name":"copy","parameterTypes":["java.lang.String","java.lang.String","java.lang.String"] }, {"name":"equals","parameterTypes":["java.lang.Object"] }, {"name":"getOriginal","parameterTypes":[] }, {"name":"getPreview","parameterTypes":[] }, {"name":"getThumbnail","parameterTypes":[] }, {"name":"hashCode","parameterTypes":[] }, {"name":"setOriginal","parameterTypes":["java.lang.String"] }, {"name":"setPreview","parameterTypes":["java.lang.String"] }, {"name":"setThumbnail","parameterTypes":["java.lang.String"] }, {"name":"toString","parameterTypes":[] }]
},
{
  "name":"com.leijendary.domain.image.ImageService",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"com.leijendary.domain.image.ImageServiceImpl",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":["com.leijendary.storage.BlockStorage","com.leijendary.context.DatabaseContext","com.leijendary.domain.image.ImageMetadataRepository","com.leijendary.domain.image.ImageRepository"] }, {"name":"createUploadUrl","parameterTypes":["com.leijendary.domain.image.ImageCreateUrlRequest"] }, {"name":"delete","parameterTypes":["java.lang.String"] }, {"name":"getPrivateUrl","parameterTypes":["com.leijendary.projection.ImageProjection"] }, {"name":"getPublicUrl","parameterTypes":["com.leijendary.projection.ImageProjection"] }, {"name":"validate","parameterTypes":["com.leijendary.domain.image.ImageRequest"] }, {"name":"validate","parameterTypes":["java.lang.String"] }]
},
{
  "name":"com.leijendary.domain.image.ImageValidateRequest"
},
{
  "name":"com.leijendary.domain.image.ImageValidateResponse"
},
{
  "name":"com.leijendary.domain.sample.Sample",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["java.lang.String","java.lang.String","java.math.BigDecimal"] }, {"name":"component1","parameterTypes":[] }, {"name":"component2","parameterTypes":[] }, {"name":"component3","parameterTypes":[] }, {"name":"copy","parameterTypes":["java.lang.String","java.lang.String","java.math.BigDecimal"] }, {"name":"equals","parameterTypes":["java.lang.Object"] }, {"name":"getAmount","parameterTypes":[] }, {"name":"getCreatedAt","parameterTypes":[] }, {"name":"getCreatedBy","parameterTypes":[] }, {"name":"getDescription","parameterTypes":[] }, {"name":"getId","parameterTypes":[] }, {"name":"getLastModifiedAt","parameterTypes":[] }, {"name":"getLastModifiedBy","parameterTypes":[] }, {"name":"getName","parameterTypes":[] }, {"name":"getPrefix","parameterTypes":[] }, {"name":"getVersion","parameterTypes":[] }, {"name":"hashCode","parameterTypes":[] }, {"name":"isNew","parameterTypes":[] }, {"name":"setAmount","parameterTypes":["java.math.BigDecimal"] }, {"name":"setCreatedAt","parameterTypes":["java.time.Instant"] }, {"name":"setCreatedBy","parameterTypes":["java.lang.String"] }, {"name":"setDescription","parameterTypes":["java.lang.String"] }, {"name":"setId","parameterTypes":["java.lang.String"] }, {"name":"setLastModifiedAt","parameterTypes":["java.time.Instant"] }, {"name":"setLastModifiedBy","parameterTypes":["java.lang.String"] }, {"name":"setName","parameterTypes":["java.lang.String"] }, {"name":"setVersion","parameterTypes":["int"] }, {"name":"toString","parameterTypes":[] }]
},
{
  "name":"com.leijendary.domain.sample.Sample$Companion"
},
{
  "name":"com.leijendary.domain.sample.SampleAdminController",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":["com.leijendary.domain.sample.SampleService"] }]
},
{
  "name":"com.leijendary.domain.sample.SampleController",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":["com.leijendary.client.PetStoreClient","org.springframework.data.redis.core.StringRedisTemplate","com.leijendary.domain.sample.SampleService"] }]
},
{
  "name":"com.leijendary.domain.sample.SampleDetailResponse"
},
{
  "name":"com.leijendary.domain.sample.SampleImage",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["java.lang.String","java.lang.String","java.lang.String"] }, {"name":"component1","parameterTypes":[] }, {"name":"component2","parameterTypes":[] }, {"name":"component3","parameterTypes":[] }, {"name":"copy","parameterTypes":["java.lang.String","java.lang.String","java.lang.String"] }, {"name":"equals","parameterTypes":["java.lang.Object"] }, {"name":"getId","parameterTypes":[] }, {"name":"getOriginal","parameterTypes":[] }, {"name":"getPreview","parameterTypes":[] }, {"name":"getThumbnail","parameterTypes":[] }, {"name":"hashCode","parameterTypes":[] }, {"name":"isNew","parameterTypes":[] }, {"name":"setId","parameterTypes":["java.lang.String"] }, {"name":"setOriginal","parameterTypes":["java.lang.String"] }, {"name":"setPreview","parameterTypes":["java.lang.String"] }, {"name":"setThumbnail","parameterTypes":["java.lang.String"] }, {"name":"toString","parameterTypes":[] }]
},
{
  "name":"com.leijendary.domain.sample.SampleImageRepository",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"findById","parameterTypes":["java.lang.String","java.lang.Class"] }]
},
{
  "name":"com.leijendary.domain.sample.SampleMessageConsumer",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":["com.leijendary.domain.sample.SampleSearchService"] }]
},
{
  "name":"com.leijendary.domain.sample.SampleMessageProducer",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":["org.springframework.kafka.core.KafkaTemplate","com.leijendary.config.properties.KafkaTopicProperties"] }]
},
{
  "name":"com.leijendary.domain.sample.SampleMessageProducer$$SpringCGLIB$$0",
  "fields":[{"name":"CGLIB$CALLBACK_FILTER"}, {"name":"CGLIB$FACTORY_DATA"}],
  "methods":[{"name":"CGLIB$SET_THREAD_CALLBACKS","parameterTypes":["org.springframework.cglib.proxy.Callback[]"] }]
},
{
  "name":"com.leijendary.domain.sample.SampleRepository",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"cursor","parameterTypes":["java.lang.String","com.leijendary.model.Cursorable","java.lang.Class"] }, {"name":"findBy","parameterTypes":["org.springframework.data.domain.Pageable","java.lang.Class"] }, {"name":"findById","parameterTypes":["java.lang.String","java.lang.Class"] }, {"name":"findByNameContainingIgnoreCase","parameterTypes":["java.lang.String","org.springframework.data.domain.Pageable","java.lang.Class"] }, {"name":"streamBy","parameterTypes":["java.lang.Class"] }]
},
{
  "name":"com.leijendary.domain.sample.SampleRequest"
},
{
  "name":"com.leijendary.domain.sample.SampleResponse"
},
{
  "name":"com.leijendary.domain.sample.SampleSearch",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["java.lang.String","java.lang.String","java.lang.String","java.math.BigDecimal","java.util.List","com.leijendary.domain.image.ImageResponse","java.time.Instant","org.springframework.data.elasticsearch.core.suggest.Completion"] }, {"name":"component1","parameterTypes":[] }, {"name":"component2","parameterTypes":[] }, {"name":"component3","parameterTypes":[] }, {"name":"component4","parameterTypes":[] }, {"name":"component5","parameterTypes":[] }, {"name":"component6","parameterTypes":[] }, {"name":"component7","parameterTypes":[] }, {"name":"component8","parameterTypes":[] }, {"name":"copy","parameterTypes":["java.lang.String","java.lang.String","java.lang.String","java.math.BigDecimal","java.util.List","com.leijendary.domain.image.ImageResponse","java.time.Instant","org.springframework.data.elasticsearch.core.suggest.Completion"] }, {"name":"equals","parameterTypes":["java.lang.Object"] }, {"name":"getAmount","parameterTypes":[] }, {"name":"getCompletion","parameterTypes":[] }, {"name":"getCreatedAt","parameterTypes":[] }, {"name":"getDescription","parameterTypes":[] }, {"name":"getId","parameterTypes":[] }, {"name":"getImage","parameterTypes":[] }, {"name":"getName","parameterTypes":[] }, {"name":"getTranslation","parameterTypes":["java.lang.String"] }, {"name":"getTranslations","parameterTypes":[] }, {"name":"hashCode","parameterTypes":[] }, {"name":"setAmount","parameterTypes":["java.math.BigDecimal"] }, {"name":"setCompletion","parameterTypes":["org.springframework.data.elasticsearch.core.suggest.Completion"] }, {"name":"setCreatedAt","parameterTypes":["java.time.Instant"] }, {"name":"setDescription","parameterTypes":["java.lang.String"] }, {"name":"setId","parameterTypes":["java.lang.String"] }, {"name":"setImage","parameterTypes":["com.leijendary.domain.image.ImageResponse"] }, {"name":"setName","parameterTypes":["java.lang.String"] }, {"name":"setTranslations","parameterTypes":["java.util.List"] }, {"name":"toString","parameterTypes":[] }]
},
{
  "name":"com.leijendary.domain.sample.SampleSearch$Companion"
},
{
  "name":"com.leijendary.domain.sample.SampleSearchController",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":["com.leijendary.domain.sample.SampleSearchService"] }]
},
{
  "name":"com.leijendary.domain.sample.SampleSearchCustomRepository",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"deleteImage","parameterTypes":["java.lang.String"] }, {"name":"setImage","parameterTypes":["java.lang.String","com.leijendary.projection.ImageProjection"] }]
},
{
  "name":"com.leijendary.domain.sample.SampleSearchCustomRepositoryImpl",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":["org.springframework.data.elasticsearch.client.elc.ElasticsearchTemplate"] }, {"name":"deleteImage","parameterTypes":["java.lang.String"] }, {"name":"setImage","parameterTypes":["java.lang.String","com.leijendary.projection.ImageProjection"] }]
},
{
  "name":"com.leijendary.domain.sample.SampleSearchCustomRepositoryImpl$$SpringCGLIB$$0",
  "fields":[{"name":"CGLIB$CALLBACK_FILTER"}, {"name":"CGLIB$FACTORY_DATA"}],
  "methods":[{"name":"CGLIB$SET_THREAD_CALLBACKS","parameterTypes":["org.springframework.cglib.proxy.Callback[]"] }, {"name":"toObject","parameterTypes":[] }]
},
{
  "name":"com.leijendary.domain.sample.SampleSearchRepository",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"findByTranslations","parameterTypes":["java.lang.String","org.springframework.data.domain.Pageable"] }]
},
{
  "name":"com.leijendary.domain.sample.SampleSearchService",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"com.leijendary.domain.sample.SampleSearchServiceImpl",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":["com.leijendary.domain.image.ImageService","com.leijendary.domain.sample.SampleImageRepository","com.leijendary.domain.sample.SampleRepository","com.leijendary.domain.sample.SampleSearchRepository","com.leijendary.domain.sample.SampleTranslationRepository"] }, {"name":"delete","parameterTypes":["java.lang.String"] }, {"name":"page","parameterTypes":["com.leijendary.model.QueryRequest","org.springframework.data.domain.Pageable"] }, {"name":"reindex","parameterTypes":[] }, {"name":"save","parameterTypes":["com.leijendary.domain.sample.SampleDetailResponse"] }, {"name":"update","parameterTypes":["com.leijendary.domain.sample.SampleDetailResponse"] }]
},
{
  "name":"com.leijendary.domain.sample.SampleSearchServiceImpl$$SpringCGLIB$$0",
  "fields":[{"name":"CGLIB$CALLBACK_FILTER"}, {"name":"CGLIB$FACTORY_DATA"}],
  "methods":[{"name":"CGLIB$SET_THREAD_CALLBACKS","parameterTypes":["org.springframework.cglib.proxy.Callback[]"] }]
},
{
  "name":"com.leijendary.domain.sample.SampleService",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"com.leijendary.domain.sample.SampleServiceImpl",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":["com.leijendary.context.DatabaseContext","com.leijendary.domain.image.ImageService","com.leijendary.domain.sample.SampleImageRepository","com.leijendary.domain.sample.SampleMessageProducer","com.leijendary.domain.sample.SampleRepository","com.leijendary.domain.sample.SampleSearchRepository","com.leijendary.domain.sample.SampleTranslationRepository"] }, {"name":"create","parameterTypes":["com.leijendary.domain.sample.SampleRequest"] }, {"name":"cursor","parameterTypes":["com.leijendary.model.QueryRequest","com.leijendary.model.Cursorable"] }, {"name":"delete","parameterTypes":["java.lang.String"] }, {"name":"deleteImage","parameterTypes":["java.lang.String"] }, {"name":"get","parameterTypes":["java.lang.String","boolean"] }, {"name":"page","parameterTypes":["com.leijendary.model.QueryRequest","org.springframework.data.domain.Pageable"] }, {"name":"saveImage","parameterTypes":["java.lang.String","com.leijendary.domain.image.ImageRequest"] }, {"name":"update","parameterTypes":["java.lang.String","com.leijendary.domain.sample.SampleRequest"] }]
},
{
  "name":"com.leijendary.domain.sample.SampleTranslation",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["java.lang.String","java.lang.String","java.lang.String","int"] }, {"name":"component1","parameterTypes":[] }, {"name":"component2","parameterTypes":[] }, {"name":"component3","parameterTypes":[] }, {"name":"component4","parameterTypes":[] }, {"name":"copy","parameterTypes":["java.lang.String","java.lang.String","java.lang.String","int"] }, {"name":"equals","parameterTypes":["java.lang.Object"] }, {"name":"getDescription","parameterTypes":[] }, {"name":"getId","parameterTypes":[] }, {"name":"getLanguage","parameterTypes":[] }, {"name":"getName","parameterTypes":[] }, {"name":"getOrdinal","parameterTypes":[] }, {"name":"hashCode","parameterTypes":[] }, {"name":"isNew","parameterTypes":[] }, {"name":"setDescription","parameterTypes":["java.lang.String"] }, {"name":"setId","parameterTypes":["java.lang.String"] }, {"name":"setLanguage","parameterTypes":["java.lang.String"] }, {"name":"setName","parameterTypes":["java.lang.String"] }, {"name":"setOrdinal","parameterTypes":["int"] }, {"name":"toString","parameterTypes":[] }]
},
{
  "name":"com.leijendary.domain.sample.SampleTranslationRepository",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"findById","parameterTypes":["java.lang.String","java.lang.Class"] }, {"name":"findFirstByIdAndLanguage","parameterTypes":["java.lang.String","java.lang.String"] }]
},
{
  "name":"com.leijendary.domain.sample.SampleTranslationSearch",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["java.lang.String","java.lang.String","java.lang.String","int"] }, {"name":"component1","parameterTypes":[] }, {"name":"component2","parameterTypes":[] }, {"name":"component3","parameterTypes":[] }, {"name":"component4","parameterTypes":[] }, {"name":"copy","parameterTypes":["java.lang.String","java.lang.String","java.lang.String","int"] }, {"name":"equals","parameterTypes":["java.lang.Object"] }, {"name":"getDescription","parameterTypes":[] }, {"name":"getLanguage","parameterTypes":[] }, {"name":"getName","parameterTypes":[] }, {"name":"getOrdinal","parameterTypes":[] }, {"name":"hashCode","parameterTypes":[] }, {"name":"toString","parameterTypes":[] }]
},
{
  "name":"com.leijendary.error.AsyncRequestNotUsableExceptionHandler",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"com.leijendary.error.ClientAbortExceptionHandler",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"com.leijendary.error.ErrorModelExceptionHandler",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"com.leijendary.error.GlobalExceptionHandler",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":["org.springframework.context.MessageSource"] }]
},
{
  "name":"com.leijendary.error.HttpClientErrorExceptionHandler",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"com.leijendary.error.HttpMessageNotReadableExceptionHandler",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":["org.springframework.context.MessageSource"] }]
},
{
  "name":"com.leijendary.error.HttpRequestMethodNotSupportedExceptionHandler",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":["org.springframework.context.MessageSource"] }]
},
{
  "name":"com.leijendary.error.MethodExceptionHandler",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":["org.springframework.context.MessageSource"] }]
},
{
  "name":"com.leijendary.error.MissingServletRequestPartExceptionHandler",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":["org.springframework.context.MessageSource"] }]
},
{
  "name":"com.leijendary.error.NoResourceFoundExceptionHandler",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":["org.springframework.context.MessageSource"] }]
},
{
  "name":"com.leijendary.error.OptimisticLockingFailureExceptionHandler",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":["org.springframework.context.MessageSource"] }]
},
{
  "name":"com.leijendary.error.PSQLExceptionHandler",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":["org.springframework.context.MessageSource"] }]
},
{
  "name":"com.leijendary.error.ResourceNotFoundExceptionHandler",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":["org.springframework.context.MessageSource"] }]
},
{
  "name":"com.leijendary.error.ResourceNotUniqueExceptionHandler",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":["org.springframework.context.MessageSource"] }]
},
{
  "name":"com.leijendary.error.StatusExceptionHandler",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":["org.springframework.context.MessageSource"] }]
},
{
  "name":"com.leijendary.error.exception.ErrorModelException"
},
{
  "name":"com.leijendary.error.exception.ResourceNotFoundException"
},
{
  "name":"com.leijendary.error.exception.ResourceNotUniqueException"
},
{
  "name":"com.leijendary.error.exception.StatusException"
},
{
  "name":"com.leijendary.filter.TraceFilter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":["io.micrometer.tracing.Tracer"] }]
},
{
  "name":"com.leijendary.interceptor.KafkaInterceptor",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"configure","parameterTypes":["java.util.Map"] }, {"name":"intercept","parameterTypes":["org.apache.kafka.clients.consumer.ConsumerRecord","org.apache.kafka.clients.consumer.Consumer"] }, {"name":"onAcknowledgement","parameterTypes":["org.apache.kafka.clients.producer.RecordMetadata","java.lang.Exception"] }, {"name":"onSend","parameterTypes":["org.apache.kafka.clients.producer.ProducerRecord"] }]
},
{
  "name":"com.leijendary.model.Cursorable"
},
{
  "name":"com.leijendary.model.CursoredModel"
},
{
  "name":"com.leijendary.model.ErrorModel"
},
{
  "name":"com.leijendary.model.ErrorSource"
},
{
  "name":"com.leijendary.model.QueryRequest"
},
{
  "name":"com.leijendary.projection.CursorProjection"
},
{
  "name":"com.leijendary.projection.ImageProjection",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"com.leijendary.projection.LocaleProjection",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"com.leijendary.projection.LocalizedProjection",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"com.leijendary.projection.PrefixedIDProjection",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"getPrefix","parameterTypes":[] }]
},
{
  "name":"com.leijendary.security.Encryption",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":["org.springframework.cloud.bootstrap.encrypt.KeyProperties"] }]
},
{
  "name":"com.leijendary.storage.BlockStorage",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":["com.leijendary.config.properties.AwsCloudFrontProperties","com.leijendary.config.properties.AwsS3Properties","software.amazon.awssdk.services.cloudfront.CloudFrontClient","software.amazon.awssdk.services.s3.S3Client","software.amazon.awssdk.services.s3.presigner.S3Presigner"] }]
},
{
  "name":"com.leijendary.storage.BlockStorage$Request"
},
{
  "name":"com.pgvector.PGvector"
},
{
  "name":"com.querydsl.core.types.Predicate"
},
{
  "name":"com.rometools.rome.feed.WireFeed"
},
{
  "name":"com.samskivert.mustache.Template"
},
{
  "name":"com.sun.crypto.provider.AESCipher$General",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.sun.crypto.provider.ARCFOURCipher",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.sun.crypto.provider.ChaCha20Cipher$ChaCha20Poly1305",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.sun.crypto.provider.DESCipher",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.sun.crypto.provider.DESedeCipher",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.sun.crypto.provider.DHParameters",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.sun.crypto.provider.GaloisCounterMode$AESGCM",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.sun.crypto.provider.HmacCore$HmacSHA256",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.sun.crypto.provider.HmacSHA1",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.sun.crypto.provider.PBKDF2Core$HmacSHA1",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.sun.crypto.provider.PBKDF2Core$HmacSHA224",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.sun.crypto.provider.PBKDF2Core$HmacSHA256",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.sun.crypto.provider.PBKDF2Core$HmacSHA384",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.sun.crypto.provider.PBKDF2Core$HmacSHA512",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.sun.crypto.provider.TlsMasterSecretGenerator",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.sun.management.GarbageCollectionNotificationInfo"
},
{
  "name":"com.sun.management.GarbageCollectorMXBean",
  "queryAllPublicMethods":true
},
{
  "name":"com.sun.management.GcInfo",
  "queryAllPublicMethods":true,
  "fields":[{"name":"builder"}, {"name":"extAttributes"}],
  "methods":[{"name":"getMemoryUsageBeforeGc","parameterTypes":[] }]
},
{
  "name":"com.sun.management.HotSpotDiagnosticMXBean",
  "queryAllPublicMethods":true
},
{
  "name":"com.sun.management.OperatingSystemMXBean",
  "methods":[{"name":"getCpuLoad","parameterTypes":[] }, {"name":"getProcessCpuLoad","parameterTypes":[] }, {"name":"getProcessCpuTime","parameterTypes":[] }]
},
{
  "name":"com.sun.management.ThreadMXBean",
  "queryAllPublicMethods":true
},
{
  "name":"com.sun.management.UnixOperatingSystemMXBean",
  "queryAllPublicMethods":true,
  "methods":[{"name":"getMaxFileDescriptorCount","parameterTypes":[] }, {"name":"getOpenFileDescriptorCount","parameterTypes":[] }]
},
{
  "name":"com.sun.management.VMOption",
  "queryAllPublicMethods":true
},
{
  "name":"com.sun.management.internal.GarbageCollectorExtImpl",
  "queryAllPublicConstructors":true
},
{
  "name":"com.sun.management.internal.HotSpotDiagnostic",
  "queryAllPublicConstructors":true
},
{
  "name":"com.sun.management.internal.HotSpotThreadImpl",
  "queryAllPublicConstructors":true
},
{
  "name":"com.sun.management.internal.OperatingSystemImpl",
  "queryAllPublicConstructors":true
},
{
  "name":"com.sun.org.apache.xalan.internal.xsltc.trax.TransformerFactoryImpl",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.sun.org.apache.xerces.internal.jaxp.SAXParserFactoryImpl",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.sun.xml.internal.stream.XMLInputFactoryImpl",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.zaxxer.hikari.HikariConfig",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"addDataSourceProperty","parameterTypes":["java.lang.String","java.lang.Object"] }, {"name":"addHealthCheckProperty","parameterTypes":["java.lang.String","java.lang.String"] }, {"name":"copyStateTo","parameterTypes":["com.zaxxer.hikari.HikariConfig"] }, {"name":"getCatalog","parameterTypes":[] }, {"name":"getConnectionInitSql","parameterTypes":[] }, {"name":"getConnectionTestQuery","parameterTypes":[] }, {"name":"getConnectionTimeout","parameterTypes":[] }, {"name":"getDataSource","parameterTypes":[] }, {"name":"getDataSourceClassName","parameterTypes":[] }, {"name":"getDataSourceJNDI","parameterTypes":[] }, {"name":"getDataSourceProperties","parameterTypes":[] }, {"name":"getDriverClassName","parameterTypes":[] }, {"name":"getExceptionOverrideClassName","parameterTypes":[] }, {"name":"getHealthCheckProperties","parameterTypes":[] }, {"name":"getHealthCheckRegistry","parameterTypes":[] }, {"name":"getIdleTimeout","parameterTypes":[] }, {"name":"getInitializationFailTimeout","parameterTypes":[] }, {"name":"getJdbcUrl","parameterTypes":[] }, {"name":"getKeepaliveTime","parameterTypes":[] }, {"name":"getLeakDetectionThreshold","parameterTypes":[] }, {"name":"getMaxLifetime","parameterTypes":[] }, {"name":"getMaximumPoolSize","parameterTypes":[] }, {"name":"getMetricRegistry","parameterTypes":[] }, {"name":"getMetricsTrackerFactory","parameterTypes":[] }, {"name":"getMinimumIdle","parameterTypes":[] }, {"name":"getPassword","parameterTypes":[] }, {"name":"getPoolName","parameterTypes":[] }, {"name":"getScheduledExecutor","parameterTypes":[] }, {"name":"getSchema","parameterTypes":[] }, {"name":"getThreadFactory","parameterTypes":[] }, {"name":"getTransactionIsolation","parameterTypes":[] }, {"name":"getUsername","parameterTypes":[] }, {"name":"getValidationTimeout","parameterTypes":[] }, {"name":"isAllowPoolSuspension","parameterTypes":[] }, {"name":"isAutoCommit","parameterTypes":[] }, {"name":"isIsolateInternalQueries","parameterTypes":[] }, {"name":"isReadOnly","parameterTypes":[] }, {"name":"isRegisterMbeans","parameterTypes":[] }, {"name":"setAllowPoolSuspension","parameterTypes":["boolean"] }, {"name":"setAutoCommit","parameterTypes":["boolean"] }, {"name":"setCatalog","parameterTypes":["java.lang.String"] }, {"name":"setConnectionInitSql","parameterTypes":["java.lang.String"] }, {"name":"setConnectionTestQuery","parameterTypes":["java.lang.String"] }, {"name":"setConnectionTimeout","parameterTypes":["long"] }, {"name":"setDataSource","parameterTypes":["javax.sql.DataSource"] }, {"name":"setDataSourceClassName","parameterTypes":["java.lang.String"] }, {"name":"setDataSourceJNDI","parameterTypes":["java.lang.String"] }, {"name":"setDataSourceProperties","parameterTypes":["java.util.Properties"] }, {"name":"setDriverClassName","parameterTypes":["java.lang.String"] }, {"name":"setExceptionOverrideClassName","parameterTypes":["java.lang.String"] }, {"name":"setHealthCheckProperties","parameterTypes":["java.util.Properties"] }, {"name":"setHealthCheckRegistry","parameterTypes":["java.lang.Object"] }, {"name":"setIdleTimeout","parameterTypes":["long"] }, {"name":"setInitializationFailTimeout","parameterTypes":["long"] }, {"name":"setIsolateInternalQueries","parameterTypes":["boolean"] }, {"name":"setJdbcUrl","parameterTypes":["java.lang.String"] }, {"name":"setKeepaliveTime","parameterTypes":["long"] }, {"name":"setLeakDetectionThreshold","parameterTypes":["long"] }, {"name":"setMaxLifetime","parameterTypes":["long"] }, {"name":"setMaximumPoolSize","parameterTypes":["int"] }, {"name":"setMetricRegistry","parameterTypes":["java.lang.Object"] }, {"name":"setMetricsTrackerFactory","parameterTypes":["com.zaxxer.hikari.metrics.MetricsTrackerFactory"] }, {"name":"setMinimumIdle","parameterTypes":["int"] }, {"name":"setPassword","parameterTypes":["java.lang.String"] }, {"name":"setPoolName","parameterTypes":["java.lang.String"] }, {"name":"setReadOnly","parameterTypes":["boolean"] }, {"name":"setRegisterMbeans","parameterTypes":["boolean"] }, {"name":"setScheduledExecutor","parameterTypes":["java.util.concurrent.ScheduledExecutorService"] }, {"name":"setSchema","parameterTypes":["java.lang.String"] }, {"name":"setThreadFactory","parameterTypes":["java.util.concurrent.ThreadFactory"] }, {"name":"setTransactionIsolation","parameterTypes":["java.lang.String"] }, {"name":"setUsername","parameterTypes":["java.lang.String"] }, {"name":"setValidationTimeout","parameterTypes":["long"] }, {"name":"validate","parameterTypes":[] }]
},
{
  "name":"com.zaxxer.hikari.HikariConfigMXBean",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"com.zaxxer.hikari.HikariDataSource",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"getConnection","parameterTypes":[] }, {"name":"getConnection","parameterTypes":["java.lang.String","java.lang.String"] }, {"name":"getLogWriter","parameterTypes":[] }, {"name":"getLoginTimeout","parameterTypes":[] }, {"name":"getParentLogger","parameterTypes":[] }, {"name":"isWrapperFor","parameterTypes":["java.lang.Class"] }, {"name":"setHealthCheckRegistry","parameterTypes":["java.lang.Object"] }, {"name":"setLogWriter","parameterTypes":["java.io.PrintWriter"] }, {"name":"setLoginTimeout","parameterTypes":["int"] }, {"name":"setMetricRegistry","parameterTypes":["java.lang.Object"] }, {"name":"setMetricsTrackerFactory","parameterTypes":["com.zaxxer.hikari.metrics.MetricsTrackerFactory"] }, {"name":"toString","parameterTypes":[] }, {"name":"unwrap","parameterTypes":["java.lang.Class"] }]
},
{
  "name":"com.zaxxer.hikari.HikariPoolMXBean"
},
{
  "name":"com.zaxxer.hikari.metrics.MetricsTrackerFactory"
},
{
  "name":"com.zaxxer.hikari.pool.PoolBase",
  "fields":[{"name":"catalog"}]
},
{
  "name":"com.zaxxer.hikari.pool.PoolEntry",
  "fields":[{"name":"state"}]
},
{
  "name":"feign.AsyncClient"
},
{
  "name":"feign.AsyncContextSupplier"
},
{
  "name":"feign.AsyncResponseHandler"
},
{
  "name":"feign.BaseBuilder",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"dismiss404","parameterTypes":[] }, {"name":"responseInterceptor","parameterTypes":["feign.ResponseInterceptor"] }, {"name":"responseInterceptors","parameterTypes":["java.lang.Iterable"] }]
},
{
  "name":"feign.Capability",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"enrich","parameterTypes":["feign.AsyncClient"] }, {"name":"enrich","parameterTypes":["feign.AsyncContextSupplier"] }, {"name":"enrich","parameterTypes":["feign.AsyncResponseHandler"] }, {"name":"enrich","parameterTypes":["feign.Client"] }, {"name":"enrich","parameterTypes":["feign.Contract"] }, {"name":"enrich","parameterTypes":["feign.InvocationHandlerFactory"] }, {"name":"enrich","parameterTypes":["feign.Logger$Level"] }, {"name":"enrich","parameterTypes":["feign.Logger"] }, {"name":"enrich","parameterTypes":["feign.MethodInfoResolver"] }, {"name":"enrich","parameterTypes":["feign.QueryMapEncoder"] }, {"name":"enrich","parameterTypes":["feign.Request$Options"] }, {"name":"enrich","parameterTypes":["feign.RequestInterceptor"] }, {"name":"enrich","parameterTypes":["feign.ResponseInterceptor$Chain"] }, {"name":"enrich","parameterTypes":["feign.ResponseInterceptor"] }, {"name":"enrich","parameterTypes":["feign.Retryer"] }, {"name":"enrich","parameterTypes":["feign.codec.Decoder"] }, {"name":"enrich","parameterTypes":["feign.codec.Encoder"] }, {"name":"enrich","parameterTypes":["feign.codec.ErrorDecoder"] }]
},
{
  "name":"feign.Client"
},
{
  "name":"feign.Contract"
},
{
  "name":"feign.Feign$Builder",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"addCapability","parameterTypes":["feign.Capability"] }, {"name":"contract","parameterTypes":["feign.Contract"] }, {"name":"decode404","parameterTypes":[] }, {"name":"decodeVoid","parameterTypes":[] }, {"name":"decoder","parameterTypes":["feign.codec.Decoder"] }, {"name":"doNotCloseAfterDecode","parameterTypes":[] }, {"name":"encoder","parameterTypes":["feign.codec.Encoder"] }, {"name":"errorDecoder","parameterTypes":["feign.codec.ErrorDecoder"] }, {"name":"exceptionPropagationPolicy","parameterTypes":["feign.ExceptionPropagationPolicy"] }, {"name":"invocationHandlerFactory","parameterTypes":["feign.InvocationHandlerFactory"] }, {"name":"logLevel","parameterTypes":["feign.Logger$Level"] }, {"name":"logger","parameterTypes":["feign.Logger"] }, {"name":"mapAndDecode","parameterTypes":["feign.ResponseMapper","feign.codec.Decoder"] }, {"name":"options","parameterTypes":["feign.Request$Options"] }, {"name":"queryMapEncoder","parameterTypes":["feign.QueryMapEncoder"] }, {"name":"requestInterceptor","parameterTypes":["feign.RequestInterceptor"] }, {"name":"requestInterceptors","parameterTypes":["java.lang.Iterable"] }, {"name":"retryer","parameterTypes":["feign.Retryer"] }]
},
{
  "name":"feign.InvocationHandlerFactory"
},
{
  "name":"feign.Logger"
},
{
  "name":"feign.Logger$Level"
},
{
  "name":"feign.MethodInfoResolver"
},
{
  "name":"feign.QueryMapEncoder"
},
{
  "name":"feign.Request$Options"
},
{
  "name":"feign.RequestInterceptor",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"feign.RequestTemplate"
},
{
  "name":"feign.ResponseInterceptor"
},
{
  "name":"feign.ResponseInterceptor$Chain"
},
{
  "name":"feign.Retryer",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"feign.Retryer$1",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"clone","parameterTypes":[] }, {"name":"continueOrPropagate","parameterTypes":["feign.RetryableException"] }]
},
{
  "name":"feign.Target$HardCodedTarget"
},
{
  "name":"feign.codec.Decoder",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"feign.codec.Encoder"
},
{
  "name":"feign.codec.ErrorDecoder"
},
{
  "name":"feign.micrometer.MicrometerObservationCapability",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"enrich","parameterTypes":["feign.AsyncClient"] }, {"name":"enrich","parameterTypes":["feign.Client"] }]
},
{
  "name":"feign.optionals.OptionalDecoder",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"decode","parameterTypes":["feign.Response","java.lang.reflect.Type"] }]
},
{
  "name":"freemarker.template.Configuration"
},
{
  "name":"groovy.lang.GroovySystem"
},
{
  "name":"groovy.text.TemplateEngine"
},
{
  "name":"io.awspring.cloud.autoconfigure.AwsClientProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"getEndpoint","parameterTypes":[] }, {"name":"getRegion","parameterTypes":[] }, {"name":"setEndpoint","parameterTypes":["java.net.URI"] }, {"name":"setRegion","parameterTypes":["java.lang.String"] }]
},
{
  "name":"io.awspring.cloud.autoconfigure.config.parameterstore.ParameterStoreConfigDataLoader",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["org.springframework.boot.logging.DeferredLogFactory"] }]
},
{
  "name":"io.awspring.cloud.autoconfigure.config.parameterstore.ParameterStoreConfigDataLocationResolver",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["org.springframework.boot.logging.DeferredLogFactory"] }]
},
{
  "name":"io.awspring.cloud.autoconfigure.config.parameterstore.ParameterStorePropertySources",
  "allDeclaredFields":true
},
{
  "name":"io.awspring.cloud.autoconfigure.config.secretsmanager.SecretsManagerConfigDataLoader",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["org.springframework.boot.logging.DeferredLogFactory"] }]
},
{
  "name":"io.awspring.cloud.autoconfigure.config.secretsmanager.SecretsManagerConfigDataLocationResolver",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["org.springframework.boot.logging.DeferredLogFactory"] }]
},
{
  "name":"io.awspring.cloud.autoconfigure.config.secretsmanager.SecretsManagerPropertySources",
  "allDeclaredFields":true
},
{
  "name":"io.awspring.cloud.autoconfigure.core.AwsAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":["io.awspring.cloud.autoconfigure.core.AwsProperties"] }]
},
{
  "name":"io.awspring.cloud.autoconfigure.core.AwsClientBuilderConfigurer",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"io.awspring.cloud.autoconfigure.core.AwsClientCustomizer"
},
{
  "name":"io.awspring.cloud.autoconfigure.core.AwsConnectionDetails"
},
{
  "name":"io.awspring.cloud.autoconfigure.core.AwsProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"io.awspring.cloud.autoconfigure.core.CredentialsProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"getProfile","parameterTypes":[] }, {"name":"setInstanceProfile","parameterTypes":["boolean"] }, {"name":"setProfile","parameterTypes":["io.awspring.cloud.autoconfigure.core.Profile"] }]
},
{
  "name":"io.awspring.cloud.autoconfigure.core.CredentialsProviderAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":["io.awspring.cloud.autoconfigure.core.CredentialsProperties","software.amazon.awssdk.regions.providers.AwsRegionProvider","org.springframework.beans.factory.ObjectProvider"] }]
},
{
  "name":"io.awspring.cloud.autoconfigure.core.Profile",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"setName","parameterTypes":["java.lang.String"] }]
},
{
  "name":"io.awspring.cloud.autoconfigure.core.RegionProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"getProfile","parameterTypes":[] }, {"name":"setInstanceProfile","parameterTypes":["boolean"] }, {"name":"setProfile","parameterTypes":["io.awspring.cloud.autoconfigure.core.Profile"] }]
},
{
  "name":"io.awspring.cloud.autoconfigure.core.RegionProviderAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":["io.awspring.cloud.autoconfigure.core.RegionProperties"] }]
},
{
  "name":"io.awspring.cloud.autoconfigure.core.StsProperties"
},
{
  "name":"io.awspring.cloud.autoconfigure.metrics.CloudWatchExportAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"io.awspring.cloud.autoconfigure.metrics.CloudWatchProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.awspring.cloud.autoconfigure.metrics.CloudWatchPropertiesConfigAdapter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"batchSize","parameterTypes":[] }, {"name":"namespace","parameterTypes":[] }]
},
{
  "name":"io.awspring.cloud.autoconfigure.metrics.CloudWatchRegistryProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"setNamespace","parameterTypes":["java.lang.String"] }]
},
{
  "name":"io.awspring.cloud.autoconfigure.s3.S3AutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":["io.awspring.cloud.autoconfigure.s3.properties.S3Properties"] }]
},
{
  "name":"io.awspring.cloud.autoconfigure.s3.S3AutoConfiguration$Jackson2JsonS3ObjectConverterConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"setBeanFactory","parameterTypes":["org.springframework.beans.factory.BeanFactory"] }]
},
{
  "name":"io.awspring.cloud.autoconfigure.s3.S3AutoConfiguration$Jackson2JsonS3ObjectConverterConfiguration$$SpringCGLIB$$0",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "fields":[{"name":"CGLIB$FACTORY_DATA"}],
  "methods":[{"name":"CGLIB$SET_STATIC_CALLBACKS","parameterTypes":["org.springframework.cglib.proxy.Callback[]"] }, {"name":"CGLIB$SET_THREAD_CALLBACKS","parameterTypes":["org.springframework.cglib.proxy.Callback[]"] }]
},
{
  "name":"io.awspring.cloud.autoconfigure.s3.S3AutoConfiguration$Jackson2JsonS3ObjectConverterConfiguration$$SpringCGLIB$$FastClass$$0",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Class"] }]
},
{
  "name":"io.awspring.cloud.autoconfigure.s3.S3AutoConfiguration$Jackson2JsonS3ObjectConverterConfiguration$$SpringCGLIB$$FastClass$$1",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Class"] }]
},
{
  "name":"io.awspring.cloud.autoconfigure.s3.properties.S3CrtClientProperties"
},
{
  "name":"io.awspring.cloud.autoconfigure.s3.properties.S3Properties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.awspring.cloud.autoconfigure.s3.properties.S3TransferManagerProperties"
},
{
  "name":"io.awspring.cloud.parameterstore.ParameterStorePropertySource"
},
{
  "name":"io.awspring.cloud.s3.InMemoryBufferingS3OutputStreamProvider",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"create","parameterTypes":["java.lang.String","java.lang.String","io.awspring.cloud.s3.ObjectMetadata"] }]
},
{
  "name":"io.awspring.cloud.s3.Jackson2JsonS3ObjectConverter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"contentType","parameterTypes":[] }, {"name":"read","parameterTypes":["java.io.InputStream","java.lang.Class"] }, {"name":"write","parameterTypes":["java.lang.Object"] }]
},
{
  "name":"io.awspring.cloud.s3.Location"
},
{
  "name":"io.awspring.cloud.s3.ObjectMetadata"
},
{
  "name":"io.awspring.cloud.s3.S3ObjectConverter",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"io.awspring.cloud.s3.S3Operations",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"createSignedPutURL","parameterTypes":["java.lang.String","java.lang.String","java.time.Duration"] }, {"name":"upload","parameterTypes":["java.lang.String","java.lang.String","java.io.InputStream"] }]
},
{
  "name":"io.awspring.cloud.s3.S3OutputStream"
},
{
  "name":"io.awspring.cloud.s3.S3OutputStreamProvider",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"create","parameterTypes":["io.awspring.cloud.s3.Location","io.awspring.cloud.s3.ObjectMetadata"] }]
},
{
  "name":"io.awspring.cloud.s3.S3ProtocolResolver",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"postProcessBeanFactory","parameterTypes":["org.springframework.beans.factory.config.ConfigurableListableBeanFactory"] }, {"name":"resolve","parameterTypes":["java.lang.String","org.springframework.core.io.ResourceLoader"] }, {"name":"setResourceLoader","parameterTypes":["org.springframework.core.io.ResourceLoader"] }]
},
{
  "name":"io.awspring.cloud.s3.S3Resource"
},
{
  "name":"io.awspring.cloud.s3.S3Template",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"bucketExists","parameterTypes":["java.lang.String"] }, {"name":"createBucket","parameterTypes":["java.lang.String"] }, {"name":"createSignedGetURL","parameterTypes":["java.lang.String","java.lang.String","java.time.Duration"] }, {"name":"createSignedPutURL","parameterTypes":["java.lang.String","java.lang.String","java.time.Duration","io.awspring.cloud.s3.ObjectMetadata","java.lang.String"] }, {"name":"deleteBucket","parameterTypes":["java.lang.String"] }, {"name":"deleteObject","parameterTypes":["java.lang.String"] }, {"name":"deleteObject","parameterTypes":["java.lang.String","java.lang.String"] }, {"name":"download","parameterTypes":["java.lang.String","java.lang.String"] }, {"name":"listObjects","parameterTypes":["java.lang.String","java.lang.String"] }, {"name":"objectExists","parameterTypes":["java.lang.String","java.lang.String"] }, {"name":"read","parameterTypes":["java.lang.String","java.lang.String","java.lang.Class"] }, {"name":"store","parameterTypes":["java.lang.String","java.lang.String","java.lang.Object"] }, {"name":"upload","parameterTypes":["java.lang.String","java.lang.String","java.io.InputStream","io.awspring.cloud.s3.ObjectMetadata"] }]
},
{
  "name":"io.awspring.cloud.secretsmanager.SecretsManagerPropertySource"
},
{
  "name":"io.lettuce.core.AbstractRedisClient"
},
{
  "name":"io.lettuce.core.ClientOptions"
},
{
  "name":"io.lettuce.core.ClientOptions$Builder"
},
{
  "name":"io.lettuce.core.RedisClient"
},
{
  "name":"io.lettuce.core.RedisCredentialsProvider"
},
{
  "name":"io.lettuce.core.RedisURI"
},
{
  "name":"io.lettuce.core.RedisURI$Builder"
},
{
  "name":"io.lettuce.core.api.StatefulConnection"
},
{
  "name":"io.lettuce.core.api.StatefulRedisConnection"
},
{
  "name":"io.lettuce.core.cluster.ClusterClientOptions"
},
{
  "name":"io.lettuce.core.cluster.RedisClusterClient"
},
{
  "name":"io.lettuce.core.cluster.api.StatefulRedisClusterConnection"
},
{
  "name":"io.lettuce.core.codec.RedisCodec"
},
{
  "name":"io.lettuce.core.event.EventBus"
},
{
  "name":"io.lettuce.core.event.EventPublisherOptions"
},
{
  "name":"io.lettuce.core.metrics.CommandLatencyRecorder"
},
{
  "name":"io.lettuce.core.metrics.MicrometerOptions",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"io.lettuce.core.metrics.MicrometerOptions$Builder"
},
{
  "name":"io.lettuce.core.resource.ClientResources",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"io.lettuce.core.resource.ClientResources$Builder"
},
{
  "name":"io.lettuce.core.resource.DefaultClientResources",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"addressResolverGroup","parameterTypes":[] }, {"name":"commandLatencyPublisherOptions","parameterTypes":[] }, {"name":"commandLatencyRecorder","parameterTypes":[] }, {"name":"computationThreadPoolSize","parameterTypes":[] }, {"name":"dnsResolver","parameterTypes":[] }, {"name":"eventBus","parameterTypes":[] }, {"name":"eventExecutorGroup","parameterTypes":[] }, {"name":"eventLoopGroupProvider","parameterTypes":[] }, {"name":"ioThreadPoolSize","parameterTypes":[] }, {"name":"mutate","parameterTypes":[] }, {"name":"nettyCustomizer","parameterTypes":[] }, {"name":"reconnectDelay","parameterTypes":[] }, {"name":"shutdown","parameterTypes":[] }, {"name":"shutdown","parameterTypes":["long","long","java.util.concurrent.TimeUnit"] }, {"name":"socketAddressResolver","parameterTypes":[] }, {"name":"timer","parameterTypes":[] }, {"name":"tracing","parameterTypes":[] }]
},
{
  "name":"io.lettuce.core.resource.DefaultClientResources$Builder"
},
{
  "name":"io.lettuce.core.resource.Delay"
},
{
  "name":"io.lettuce.core.resource.DnsResolver"
},
{
  "name":"io.lettuce.core.resource.EventLoopGroupProvider"
},
{
  "name":"io.lettuce.core.resource.NettyCustomizer"
},
{
  "name":"io.lettuce.core.resource.SocketAddressResolver"
},
{
  "name":"io.lettuce.core.resource.ThreadFactoryProvider"
},
{
  "name":"io.lettuce.core.tracing.Tracing"
},
{
  "name":"io.micrometer.cloudwatch2.CloudWatchConfig",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"highResolution","parameterTypes":[] }, {"name":"prefix","parameterTypes":[] }, {"name":"validate","parameterTypes":[] }]
},
{
  "name":"io.micrometer.cloudwatch2.CloudWatchMeterRegistry",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"io.micrometer.cloudwatch2.CloudWatchMeterRegistry$Batch"
},
{
  "name":"io.micrometer.common.KeyValues"
},
{
  "name":"io.micrometer.common.lang.NonNullApi",
  "queryAllDeclaredMethods":true
},
{
  "name":"io.micrometer.common.lang.NonNullFields",
  "queryAllDeclaredMethods":true
},
{
  "name":"io.micrometer.common.lang.Nullable",
  "queryAllDeclaredMethods":true
},
{
  "name":"io.micrometer.common.util.internal.logging.WarnThenDebugLogger"
},
{
  "name":"io.micrometer.context.ContextRegistry"
},
{
  "name":"io.micrometer.context.ContextSnapshot"
},
{
  "name":"io.micrometer.context.ContextSnapshotFactory"
},
{
  "name":"io.micrometer.context.ThreadLocalAccessor",
  "methods":[{"name":"restore","parameterTypes":["java.lang.Object"] }]
},
{
  "name":"io.micrometer.core.instrument.Clock",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"io.micrometer.core.instrument.Clock$1",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"monotonicTime","parameterTypes":[] }, {"name":"wallTime","parameterTypes":[] }]
},
{
  "name":"io.micrometer.core.instrument.Counter"
},
{
  "name":"io.micrometer.core.instrument.DistributionSummary"
},
{
  "name":"io.micrometer.core.instrument.FunctionCounter"
},
{
  "name":"io.micrometer.core.instrument.FunctionTimer"
},
{
  "name":"io.micrometer.core.instrument.Gauge"
},
{
  "name":"io.micrometer.core.instrument.HighCardinalityTagsDetector"
},
{
  "name":"io.micrometer.core.instrument.LongTaskTimer"
},
{
  "name":"io.micrometer.core.instrument.Meter"
},
{
  "name":"io.micrometer.core.instrument.Meter$Id"
},
{
  "name":"io.micrometer.core.instrument.Meter$Type"
},
{
  "name":"io.micrometer.core.instrument.MeterRegistry",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"clear","parameterTypes":[] }, {"name":"config","parameterTypes":[] }, {"name":"counter","parameterTypes":["java.lang.String","java.lang.Iterable"] }, {"name":"counter","parameterTypes":["java.lang.String","java.lang.String[]"] }, {"name":"find","parameterTypes":["java.lang.String"] }, {"name":"forEachMeter","parameterTypes":["java.util.function.Consumer"] }, {"name":"gauge","parameterTypes":["java.lang.String","java.lang.Iterable","java.lang.Number"] }, {"name":"gauge","parameterTypes":["java.lang.String","java.lang.Iterable","java.lang.Object","java.util.function.ToDoubleFunction"] }, {"name":"gauge","parameterTypes":["java.lang.String","java.lang.Number"] }, {"name":"gauge","parameterTypes":["java.lang.String","java.lang.Object","java.util.function.ToDoubleFunction"] }, {"name":"gaugeCollectionSize","parameterTypes":["java.lang.String","java.lang.Iterable","java.util.Collection"] }, {"name":"gaugeMapSize","parameterTypes":["java.lang.String","java.lang.Iterable","java.util.Map"] }, {"name":"get","parameterTypes":["java.lang.String"] }, {"name":"getMeters","parameterTypes":[] }, {"name":"isClosed","parameterTypes":[] }, {"name":"more","parameterTypes":[] }, {"name":"remove","parameterTypes":["io.micrometer.core.instrument.Meter$Id"] }, {"name":"remove","parameterTypes":["io.micrometer.core.instrument.Meter"] }, {"name":"removeByPreFilterId","parameterTypes":["io.micrometer.core.instrument.Meter$Id"] }, {"name":"summary","parameterTypes":["java.lang.String","java.lang.Iterable"] }, {"name":"summary","parameterTypes":["java.lang.String","java.lang.String[]"] }, {"name":"timer","parameterTypes":["java.lang.String","java.lang.Iterable"] }, {"name":"timer","parameterTypes":["java.lang.String","java.lang.String[]"] }]
},
{
  "name":"io.micrometer.core.instrument.MeterRegistry$Config"
},
{
  "name":"io.micrometer.core.instrument.MeterRegistry$More"
},
{
  "name":"io.micrometer.core.instrument.Tag"
},
{
  "name":"io.micrometer.core.instrument.Tags"
},
{
  "name":"io.micrometer.core.instrument.TimeGauge"
},
{
  "name":"io.micrometer.core.instrument.Timer"
},
{
  "name":"io.micrometer.core.instrument.Timer$Builder"
},
{
  "name":"io.micrometer.core.instrument.binder.MeterBinder",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"io.micrometer.core.instrument.binder.jvm.ClassLoaderMetrics",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"bindTo","parameterTypes":["io.micrometer.core.instrument.MeterRegistry"] }]
},
{
  "name":"io.micrometer.core.instrument.binder.jvm.JvmCompilationMetrics",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"bindTo","parameterTypes":["io.micrometer.core.instrument.MeterRegistry"] }]
},
{
  "name":"io.micrometer.core.instrument.binder.jvm.JvmGcMetrics",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"bindTo","parameterTypes":["io.micrometer.core.instrument.MeterRegistry"] }, {"name":"close","parameterTypes":[] }]
},
{
  "name":"io.micrometer.core.instrument.binder.jvm.JvmHeapPressureMetrics",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"bindTo","parameterTypes":["io.micrometer.core.instrument.MeterRegistry"] }, {"name":"close","parameterTypes":[] }]
},
{
  "name":"io.micrometer.core.instrument.binder.jvm.JvmInfoMetrics",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"bindTo","parameterTypes":["io.micrometer.core.instrument.MeterRegistry"] }]
},
{
  "name":"io.micrometer.core.instrument.binder.jvm.JvmMemoryMetrics",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"bindTo","parameterTypes":["io.micrometer.core.instrument.MeterRegistry"] }]
},
{
  "name":"io.micrometer.core.instrument.binder.jvm.JvmThreadMetrics",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"bindTo","parameterTypes":["io.micrometer.core.instrument.MeterRegistry"] }]
},
{
  "name":"io.micrometer.core.instrument.binder.logging.LogbackMetrics",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"bindTo","parameterTypes":["io.micrometer.core.instrument.MeterRegistry"] }, {"name":"close","parameterTypes":[] }]
},
{
  "name":"io.micrometer.core.instrument.binder.system.FileDescriptorMetrics",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"bindTo","parameterTypes":["io.micrometer.core.instrument.MeterRegistry"] }]
},
{
  "name":"io.micrometer.core.instrument.binder.system.ProcessorMetrics",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"bindTo","parameterTypes":["io.micrometer.core.instrument.MeterRegistry"] }]
},
{
  "name":"io.micrometer.core.instrument.binder.system.UptimeMetrics",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"bindTo","parameterTypes":["io.micrometer.core.instrument.MeterRegistry"] }]
},
{
  "name":"io.micrometer.core.instrument.config.MeterFilter",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"map","parameterTypes":["io.micrometer.core.instrument.Meter$Id"] }]
},
{
  "name":"io.micrometer.core.instrument.config.MeterFilter$9",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"accept","parameterTypes":["io.micrometer.core.instrument.Meter$Id"] }, {"name":"configure","parameterTypes":["io.micrometer.core.instrument.Meter$Id","io.micrometer.core.instrument.distribution.DistributionStatisticConfig"] }]
},
{
  "name":"io.micrometer.core.instrument.config.MeterFilterReply"
},
{
  "name":"io.micrometer.core.instrument.config.MeterRegistryConfig",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"requireValid","parameterTypes":[] }]
},
{
  "name":"io.micrometer.core.instrument.config.NamingConvention"
},
{
  "name":"io.micrometer.core.instrument.config.validate.Validated"
},
{
  "name":"io.micrometer.core.instrument.config.validate.ValidationException"
},
{
  "name":"io.micrometer.core.instrument.distribution.DistributionStatisticConfig"
},
{
  "name":"io.micrometer.core.instrument.distribution.TimeWindowMax",
  "fields":[{"name":"rotating"}]
},
{
  "name":"io.micrometer.core.instrument.distribution.TimeWindowSum",
  "fields":[{"name":"rotating"}]
},
{
  "name":"io.micrometer.core.instrument.distribution.pause.PauseDetector"
},
{
  "name":"io.micrometer.core.instrument.observation.MeterObservationHandler",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"io.micrometer.core.instrument.push.PushMeterRegistry",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"io.micrometer.core.instrument.push.PushRegistryConfig",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"connectTimeout","parameterTypes":[] }, {"name":"numThreads","parameterTypes":[] }, {"name":"readTimeout","parameterTypes":[] }]
},
{
  "name":"io.micrometer.core.instrument.search.RequiredSearch"
},
{
  "name":"io.micrometer.core.instrument.search.Search"
},
{
  "name":"io.micrometer.core.instrument.step.StepMeterRegistry",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"start","parameterTypes":["java.util.concurrent.ThreadFactory"] }, {"name":"stop","parameterTypes":[] }]
},
{
  "name":"io.micrometer.core.instrument.step.StepRegistryConfig",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"io.micrometer.observation.Observation"
},
{
  "name":"io.micrometer.observation.Observation$Context"
},
{
  "name":"io.micrometer.observation.Observation$ContextView"
},
{
  "name":"io.micrometer.observation.Observation$Event"
},
{
  "name":"io.micrometer.observation.Observation$Scope"
},
{
  "name":"io.micrometer.observation.ObservationConvention"
},
{
  "name":"io.micrometer.observation.ObservationFilter",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"io.micrometer.observation.ObservationHandler",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"onError","parameterTypes":["io.micrometer.observation.Observation$Context"] }, {"name":"onEvent","parameterTypes":["io.micrometer.observation.Observation$Event","io.micrometer.observation.Observation$Context"] }, {"name":"onScopeClosed","parameterTypes":["io.micrometer.observation.Observation$Context"] }, {"name":"onScopeOpened","parameterTypes":["io.micrometer.observation.Observation$Context"] }, {"name":"onScopeReset","parameterTypes":["io.micrometer.observation.Observation$Context"] }, {"name":"onStart","parameterTypes":["io.micrometer.observation.Observation$Context"] }, {"name":"onStop","parameterTypes":["io.micrometer.observation.Observation$Context"] }]
},
{
  "name":"io.micrometer.observation.ObservationPredicate",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"io.micrometer.observation.ObservationRegistry",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"io.micrometer.observation.ObservationRegistry$ObservationConfig"
},
{
  "name":"io.micrometer.observation.SimpleObservationRegistry",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"getCurrentObservation","parameterTypes":[] }, {"name":"getCurrentObservationScope","parameterTypes":[] }, {"name":"isNoop","parameterTypes":[] }, {"name":"observationConfig","parameterTypes":[] }, {"name":"setCurrentObservationScope","parameterTypes":["io.micrometer.observation.Observation$Scope"] }]
},
{
  "name":"io.micrometer.observation.annotation.Observed"
},
{
  "name":"io.micrometer.observation.aop.ObservedAspect",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"io.micrometer.observation.contextpropagation.ObservationThreadLocalAccessor"
},
{
  "name":"io.micrometer.observation.transport.ReceiverContext"
},
{
  "name":"io.micrometer.observation.transport.SenderContext"
},
{
  "name":"io.micrometer.tracing.Baggage"
},
{
  "name":"io.micrometer.tracing.BaggageInScope"
},
{
  "name":"io.micrometer.tracing.BaggageManager",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"io.micrometer.tracing.CurrentTraceContext"
},
{
  "name":"io.micrometer.tracing.ScopedSpan"
},
{
  "name":"io.micrometer.tracing.Span"
},
{
  "name":"io.micrometer.tracing.Span$Builder"
},
{
  "name":"io.micrometer.tracing.SpanCustomizer",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"tag","parameterTypes":["java.lang.String","double"] }, {"name":"tag","parameterTypes":["java.lang.String","long"] }, {"name":"tag","parameterTypes":["java.lang.String","boolean"] }]
},
{
  "name":"io.micrometer.tracing.TraceContext"
},
{
  "name":"io.micrometer.tracing.TraceContext$Builder"
},
{
  "name":"io.micrometer.tracing.Tracer",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"io.micrometer.tracing.Tracer$SpanInScope"
},
{
  "name":"io.micrometer.tracing.brave.bridge.BraveBaggageFields"
},
{
  "name":"io.micrometer.tracing.brave.bridge.BravePropagator",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"extract","parameterTypes":["java.lang.Object","io.micrometer.tracing.propagation.Propagator$Getter"] }, {"name":"fields","parameterTypes":[] }, {"name":"inject","parameterTypes":["io.micrometer.tracing.TraceContext","java.lang.Object","io.micrometer.tracing.propagation.Propagator$Setter"] }]
},
{
  "name":"io.micrometer.tracing.brave.bridge.BraveSpanCustomizer",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"event","parameterTypes":["java.lang.String"] }, {"name":"name","parameterTypes":["java.lang.String"] }, {"name":"tag","parameterTypes":["java.lang.String","java.lang.String"] }]
},
{
  "name":"io.micrometer.tracing.brave.bridge.BraveTracer",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"createBaggage","parameterTypes":["java.lang.String"] }, {"name":"createBaggage","parameterTypes":["java.lang.String","java.lang.String"] }, {"name":"createBaggageInScope","parameterTypes":["io.micrometer.tracing.TraceContext","java.lang.String","java.lang.String"] }, {"name":"createBaggageInScope","parameterTypes":["java.lang.String","java.lang.String"] }, {"name":"currentSpan","parameterTypes":[] }, {"name":"currentSpanCustomizer","parameterTypes":[] }, {"name":"currentTraceContext","parameterTypes":[] }, {"name":"getAllBaggage","parameterTypes":[] }, {"name":"getAllBaggage","parameterTypes":["io.micrometer.tracing.TraceContext"] }, {"name":"getBaggage","parameterTypes":["io.micrometer.tracing.TraceContext","java.lang.String"] }, {"name":"getBaggage","parameterTypes":["java.lang.String"] }, {"name":"getBaggageFields","parameterTypes":[] }, {"name":"nextSpan","parameterTypes":[] }, {"name":"nextSpan","parameterTypes":["io.micrometer.tracing.Span"] }, {"name":"spanBuilder","parameterTypes":[] }, {"name":"startScopedSpan","parameterTypes":["java.lang.String"] }, {"name":"traceContextBuilder","parameterTypes":[] }, {"name":"withSpan","parameterTypes":["io.micrometer.tracing.Span"] }]
},
{
  "name":"io.micrometer.tracing.brave.bridge.CompositeSpanHandler",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"end","parameterTypes":["brave.propagation.TraceContext","brave.handler.MutableSpan","brave.handler.SpanHandler$Cause"] }]
},
{
  "name":"io.micrometer.tracing.handler.DefaultTracingObservationHandler",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"getTracer","parameterTypes":[] }, {"name":"onStart","parameterTypes":["io.micrometer.observation.Observation$Context"] }, {"name":"onStop","parameterTypes":["io.micrometer.observation.Observation$Context"] }]
},
{
  "name":"io.micrometer.tracing.handler.PropagatingReceiverTracingObservationHandler",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"getTracer","parameterTypes":[] }, {"name":"onError","parameterTypes":["io.micrometer.observation.Observation$Context"] }, {"name":"onStart","parameterTypes":["io.micrometer.observation.Observation$Context"] }, {"name":"onStop","parameterTypes":["io.micrometer.observation.Observation$Context"] }, {"name":"supportsContext","parameterTypes":["io.micrometer.observation.Observation$Context"] }]
},
{
  "name":"io.micrometer.tracing.handler.PropagatingSenderTracingObservationHandler",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"createSenderSpan","parameterTypes":["io.micrometer.observation.transport.SenderContext"] }, {"name":"customizeSenderSpan","parameterTypes":["io.micrometer.observation.transport.SenderContext","io.micrometer.tracing.Span"] }, {"name":"getTracer","parameterTypes":[] }, {"name":"onError","parameterTypes":["io.micrometer.observation.Observation$Context"] }, {"name":"onError","parameterTypes":["io.micrometer.observation.transport.SenderContext"] }, {"name":"onStart","parameterTypes":["io.micrometer.observation.Observation$Context"] }, {"name":"onStart","parameterTypes":["io.micrometer.observation.transport.SenderContext"] }, {"name":"onStop","parameterTypes":["io.micrometer.observation.Observation$Context"] }, {"name":"onStop","parameterTypes":["io.micrometer.observation.transport.SenderContext"] }, {"name":"supportsContext","parameterTypes":["io.micrometer.observation.Observation$Context"] }]
},
{
  "name":"io.micrometer.tracing.handler.TracingAwareMeterObservationHandler",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"onError","parameterTypes":["io.micrometer.observation.Observation$Context"] }, {"name":"onEvent","parameterTypes":["io.micrometer.observation.Observation$Event","io.micrometer.observation.Observation$Context"] }, {"name":"onScopeClosed","parameterTypes":["io.micrometer.observation.Observation$Context"] }, {"name":"onScopeOpened","parameterTypes":["io.micrometer.observation.Observation$Context"] }, {"name":"onStart","parameterTypes":["io.micrometer.observation.Observation$Context"] }, {"name":"onStop","parameterTypes":["io.micrometer.observation.Observation$Context"] }, {"name":"supportsContext","parameterTypes":["io.micrometer.observation.Observation$Context"] }]
},
{
  "name":"io.micrometer.tracing.handler.TracingObservationHandler",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"endSpan","parameterTypes":["io.micrometer.observation.Observation$Context","io.micrometer.tracing.Span"] }, {"name":"getParentSpan","parameterTypes":["io.micrometer.observation.Observation$ContextView"] }, {"name":"getRequiredSpan","parameterTypes":["io.micrometer.observation.Observation$Context"] }, {"name":"getSpanName","parameterTypes":["io.micrometer.observation.Observation$Context"] }, {"name":"getTracingContext","parameterTypes":["io.micrometer.observation.Observation$Context"] }, {"name":"onError","parameterTypes":["io.micrometer.observation.Observation$Context"] }, {"name":"onEvent","parameterTypes":["io.micrometer.observation.Observation$Event","io.micrometer.observation.Observation$Context"] }, {"name":"onScopeClosed","parameterTypes":["io.micrometer.observation.Observation$Context"] }, {"name":"onScopeOpened","parameterTypes":["io.micrometer.observation.Observation$Context"] }, {"name":"onScopeReset","parameterTypes":["io.micrometer.observation.Observation$Context"] }, {"name":"onStart","parameterTypes":["io.micrometer.observation.Observation$Context"] }, {"name":"onStop","parameterTypes":["io.micrometer.observation.Observation$Context"] }, {"name":"setMaybeScopeOnTracingContext","parameterTypes":["io.micrometer.tracing.handler.TracingObservationHandler$TracingContext","io.micrometer.tracing.Span"] }, {"name":"supportsContext","parameterTypes":["io.micrometer.observation.Observation$Context"] }, {"name":"tagSpan","parameterTypes":["io.micrometer.observation.Observation$Context","io.micrometer.tracing.Span"] }]
},
{
  "name":"io.micrometer.tracing.handler.TracingObservationHandler$TracingContext"
},
{
  "name":"io.micrometer.tracing.otel.bridge.OtelTracer"
},
{
  "name":"io.micrometer.tracing.propagation.Propagator",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"io.micrometer.tracing.propagation.Propagator$Getter"
},
{
  "name":"io.micrometer.tracing.propagation.Propagator$Setter"
},
{
  "name":"io.netty.buffer.ByteBuf"
},
{
  "name":"io.netty.internal.tcnative.SSLContext"
},
{
  "name":"io.netty.resolver.AddressResolverGroup"
},
{
  "name":"io.netty.resolver.dns$DnsAddressResolverGroup"
},
{
  "name":"io.netty.resolver.dns.DnsAddressResolverGroup"
},
{
  "name":"io.netty.util.HashedWheelTimer",
  "fields":[{"name":"workerState"}]
},
{
  "name":"io.netty.util.ResourceLeakDetector$DefaultResourceLeak",
  "fields":[{"name":"droppedRecords"}, {"name":"head"}]
},
{
  "name":"io.netty.util.Timer"
},
{
  "name":"io.netty.util.concurrent.DefaultPromise",
  "fields":[{"name":"result"}]
},
{
  "name":"io.netty.util.concurrent.EventExecutorGroup"
},
{
  "name":"io.netty.util.concurrent.Future"
},
{
  "name":"io.netty.util.concurrent.SingleThreadEventExecutor",
  "fields":[{"name":"state"}, {"name":"threadProperties"}]
},
{
  "name":"io.netty.util.internal.shaded.org.jctools.queues.BaseMpscLinkedArrayQueueColdProducerFields",
  "fields":[{"name":"producerLimit"}]
},
{
  "name":"io.netty.util.internal.shaded.org.jctools.queues.BaseMpscLinkedArrayQueueConsumerFields",
  "fields":[{"name":"consumerIndex"}]
},
{
  "name":"io.netty.util.internal.shaded.org.jctools.queues.BaseMpscLinkedArrayQueueProducerFields",
  "fields":[{"name":"producerIndex"}]
},
{
  "name":"io.netty5.buffer.Buffer"
},
{
  "name":"io.opentelemetry.context.ContextStorage"
},
{
  "name":"io.opentelemetry.sdk.autoconfigure.AutoConfiguredOpenTelemetrySdk"
},
{
  "name":"io.reactivex.rxjava3.core.Flowable"
},
{
  "name":"io.smallrye.mutiny.Multi"
},
{
  "name":"io.swagger.v3.core.converter.AnnotatedType"
},
{
  "name":"io.swagger.v3.core.converter.ModelConverter",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"isOpenapi31","parameterTypes":[] }]
},
{
  "name":"io.swagger.v3.core.converter.ModelConverterContext"
},
{
  "name":"io.swagger.v3.core.converter.ModelConverters",
  "fields":[{"name":"converters"}]
},
{
  "name":"io.swagger.v3.core.filter.OpenAPISpecFilter"
},
{
  "name":"io.swagger.v3.core.filter.SpecFilter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"filter","parameterTypes":["io.swagger.v3.oas.models.OpenAPI","io.swagger.v3.core.filter.OpenAPISpecFilter","java.util.Map","java.util.Map","java.util.Map"] }]
},
{
  "name":"io.swagger.v3.core.util.ObjectMapperFactory",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"io.swagger.v3.oas.annotations.ExternalDocumentation",
  "queryAllDeclaredMethods":true
},
{
  "name":"io.swagger.v3.oas.annotations.Hidden",
  "queryAllDeclaredMethods":true
},
{
  "name":"io.swagger.v3.oas.annotations.OpenAPI31",
  "queryAllDeclaredMethods":true
},
{
  "name":"io.swagger.v3.oas.annotations.OpenAPIDefinition"
},
{
  "name":"io.swagger.v3.oas.annotations.Operation",
  "queryAllDeclaredMethods":true
},
{
  "name":"io.swagger.v3.oas.annotations.Parameter",
  "queryAllDeclaredMethods":true
},
{
  "name":"io.swagger.v3.oas.annotations.Parameters"
},
{
  "name":"io.swagger.v3.oas.annotations.StringToClassMapItem",
  "queryAllDeclaredMethods":true
},
{
  "name":"io.swagger.v3.oas.annotations.Webhook"
},
{
  "name":"io.swagger.v3.oas.annotations.Webhooks"
},
{
  "name":"io.swagger.v3.oas.annotations.enums.SecuritySchemeIn"
},
{
  "name":"io.swagger.v3.oas.annotations.enums.SecuritySchemeType"
},
{
  "name":"io.swagger.v3.oas.annotations.extensions.Extension",
  "queryAllDeclaredMethods":true
},
{
  "name":"io.swagger.v3.oas.annotations.extensions.ExtensionProperty",
  "queryAllDeclaredMethods":true
},
{
  "name":"io.swagger.v3.oas.annotations.headers.Header",
  "queryAllDeclaredMethods":true
},
{
  "name":"io.swagger.v3.oas.annotations.links.Link",
  "queryAllDeclaredMethods":true
},
{
  "name":"io.swagger.v3.oas.annotations.links.LinkParameter",
  "queryAllDeclaredMethods":true
},
{
  "name":"io.swagger.v3.oas.annotations.media.ArraySchema",
  "queryAllDeclaredMethods":true
},
{
  "name":"io.swagger.v3.oas.annotations.media.Content",
  "queryAllDeclaredMethods":true
},
{
  "name":"io.swagger.v3.oas.annotations.media.DependentRequired",
  "queryAllDeclaredMethods":true
},
{
  "name":"io.swagger.v3.oas.annotations.media.DependentSchema",
  "queryAllDeclaredMethods":true
},
{
  "name":"io.swagger.v3.oas.annotations.media.DiscriminatorMapping",
  "queryAllDeclaredMethods":true
},
{
  "name":"io.swagger.v3.oas.annotations.media.Encoding",
  "queryAllDeclaredMethods":true
},
{
  "name":"io.swagger.v3.oas.annotations.media.ExampleObject",
  "queryAllDeclaredMethods":true
},
{
  "name":"io.swagger.v3.oas.annotations.media.Schema",
  "queryAllDeclaredMethods":true
},
{
  "name":"io.swagger.v3.oas.annotations.media.SchemaProperty",
  "queryAllDeclaredMethods":true
},
{
  "name":"io.swagger.v3.oas.annotations.parameters.RequestBody",
  "queryAllDeclaredMethods":true
},
{
  "name":"io.swagger.v3.oas.annotations.responses.ApiResponse",
  "queryAllDeclaredMethods":true
},
{
  "name":"io.swagger.v3.oas.annotations.responses.ApiResponses"
},
{
  "name":"io.swagger.v3.oas.annotations.security.OAuthFlow",
  "queryAllDeclaredMethods":true
},
{
  "name":"io.swagger.v3.oas.annotations.security.OAuthFlows",
  "queryAllDeclaredMethods":true
},
{
  "name":"io.swagger.v3.oas.annotations.security.OAuthScope",
  "queryAllDeclaredMethods":true
},
{
  "name":"io.swagger.v3.oas.annotations.security.SecurityRequirement",
  "queryAllDeclaredMethods":true
},
{
  "name":"io.swagger.v3.oas.annotations.security.SecurityScheme",
  "queryAllDeclaredMethods":true
},
{
  "name":"io.swagger.v3.oas.annotations.servers.Server",
  "queryAllDeclaredMethods":true
},
{
  "name":"io.swagger.v3.oas.annotations.servers.ServerVariable",
  "queryAllDeclaredMethods":true
},
{
  "name":"io.swagger.v3.oas.annotations.tags.Tag",
  "queryAllDeclaredMethods":true
},
{
  "name":"io.swagger.v3.oas.annotations.tags.Tags"
},
{
  "name":"io.swagger.v3.oas.models.Components"
},
{
  "name":"io.swagger.v3.oas.models.ExternalDocumentation"
},
{
  "name":"io.swagger.v3.oas.models.OpenAPI",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"addExtension","parameterTypes":["java.lang.String","java.lang.Object"] }, {"name":"addExtension31","parameterTypes":["java.lang.String","java.lang.Object"] }, {"name":"addSecurityItem","parameterTypes":["io.swagger.v3.oas.models.security.SecurityRequirement"] }, {"name":"addServersItem","parameterTypes":["io.swagger.v3.oas.models.servers.Server"] }, {"name":"addTagsItem","parameterTypes":["io.swagger.v3.oas.models.tags.Tag"] }, {"name":"addWebhooks","parameterTypes":["java.lang.String","io.swagger.v3.oas.models.PathItem"] }, {"name":"components","parameterTypes":["io.swagger.v3.oas.models.Components"] }, {"name":"equals","parameterTypes":["java.lang.Object"] }, {"name":"extensions","parameterTypes":["java.util.Map"] }, {"name":"externalDocs","parameterTypes":["io.swagger.v3.oas.models.ExternalDocumentation"] }, {"name":"getComponents","parameterTypes":[] }, {"name":"getExtensions","parameterTypes":[] }, {"name":"getExternalDocs","parameterTypes":[] }, {"name":"getInfo","parameterTypes":[] }, {"name":"getJsonSchemaDialect","parameterTypes":[] }, {"name":"getOpenapi","parameterTypes":[] }, {"name":"getPaths","parameterTypes":[] }, {"name":"getSecurity","parameterTypes":[] }, {"name":"getServers","parameterTypes":[] }, {"name":"getSpecVersion","parameterTypes":[] }, {"name":"getTags","parameterTypes":[] }, {"name":"getWebhooks","parameterTypes":[] }, {"name":"hashCode","parameterTypes":[] }, {"name":"info","parameterTypes":["io.swagger.v3.oas.models.info.Info"] }, {"name":"jsonSchemaDialect","parameterTypes":["java.lang.String"] }, {"name":"openapi","parameterTypes":["java.lang.String"] }, {"name":"path","parameterTypes":["java.lang.String","io.swagger.v3.oas.models.PathItem"] }, {"name":"paths","parameterTypes":["io.swagger.v3.oas.models.Paths"] }, {"name":"schema","parameterTypes":["java.lang.String","io.swagger.v3.oas.models.media.Schema"] }, {"name":"schemaRequirement","parameterTypes":["java.lang.String","io.swagger.v3.oas.models.security.SecurityScheme"] }, {"name":"security","parameterTypes":["java.util.List"] }, {"name":"servers","parameterTypes":["java.util.List"] }, {"name":"setComponents","parameterTypes":["io.swagger.v3.oas.models.Components"] }, {"name":"setExtensions","parameterTypes":["java.util.Map"] }, {"name":"setExternalDocs","parameterTypes":["io.swagger.v3.oas.models.ExternalDocumentation"] }, {"name":"setInfo","parameterTypes":["io.swagger.v3.oas.models.info.Info"] }, {"name":"setJsonSchemaDialect","parameterTypes":["java.lang.String"] }, {"name":"setOpenapi","parameterTypes":["java.lang.String"] }, {"name":"setPaths","parameterTypes":["io.swagger.v3.oas.models.Paths"] }, {"name":"setSecurity","parameterTypes":["java.util.List"] }, {"name":"setServers","parameterTypes":["java.util.List"] }, {"name":"setSpecVersion","parameterTypes":["io.swagger.v3.oas.models.SpecVersion"] }, {"name":"setTags","parameterTypes":["java.util.List"] }, {"name":"setWebhooks","parameterTypes":["java.util.Map"] }, {"name":"specVersion","parameterTypes":["io.swagger.v3.oas.models.SpecVersion"] }, {"name":"tags","parameterTypes":["java.util.List"] }, {"name":"toString","parameterTypes":[] }, {"name":"webhooks","parameterTypes":["java.util.Map"] }]
},
{
  "name":"io.swagger.v3.oas.models.Operation"
},
{
  "name":"io.swagger.v3.oas.models.PathItem"
},
{
  "name":"io.swagger.v3.oas.models.Paths"
},
{
  "name":"io.swagger.v3.oas.models.SpecVersion"
},
{
  "name":"io.swagger.v3.oas.models.examples.Example"
},
{
  "name":"io.swagger.v3.oas.models.info.Contact",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"setEmail","parameterTypes":["java.lang.String"] }, {"name":"setName","parameterTypes":["java.lang.String"] }, {"name":"setUrl","parameterTypes":["java.lang.String"] }]
},
{
  "name":"io.swagger.v3.oas.models.info.Info",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"getContact","parameterTypes":[] }, {"name":"getLicense","parameterTypes":[] }, {"name":"setContact","parameterTypes":["io.swagger.v3.oas.models.info.Contact"] }, {"name":"setDescription","parameterTypes":["java.lang.String"] }, {"name":"setLicense","parameterTypes":["io.swagger.v3.oas.models.info.License"] }, {"name":"setTitle","parameterTypes":["java.lang.String"] }, {"name":"setVersion","parameterTypes":["java.lang.String"] }]
},
{
  "name":"io.swagger.v3.oas.models.info.License",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"setName","parameterTypes":["java.lang.String"] }, {"name":"setUrl","parameterTypes":["java.lang.String"] }]
},
{
  "name":"io.swagger.v3.oas.models.media.ComposedSchema"
},
{
  "name":"io.swagger.v3.oas.models.media.Content"
},
{
  "name":"io.swagger.v3.oas.models.media.MediaType"
},
{
  "name":"io.swagger.v3.oas.models.media.Schema"
},
{
  "name":"io.swagger.v3.oas.models.parameters.Parameter"
},
{
  "name":"io.swagger.v3.oas.models.parameters.RequestBody"
},
{
  "name":"io.swagger.v3.oas.models.responses.ApiResponse"
},
{
  "name":"io.swagger.v3.oas.models.responses.ApiResponses"
},
{
  "name":"io.swagger.v3.oas.models.security.Scopes"
},
{
  "name":"io.swagger.v3.oas.models.security.SecurityRequirement",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.swagger.v3.oas.models.security.SecurityScheme"
},
{
  "name":"io.swagger.v3.oas.models.security.SecurityScheme$In"
},
{
  "name":"io.swagger.v3.oas.models.security.SecurityScheme$Type"
},
{
  "name":"io.swagger.v3.oas.models.servers.Server",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"setDescription","parameterTypes":["java.lang.String"] }, {"name":"setUrl","parameterTypes":["java.lang.String"] }]
},
{
  "name":"io.swagger.v3.oas.models.tags.Tag"
},
{
  "name":"io.vavr.control.Option"
},
{
  "name":"io.vavr.control.Try"
},
{
  "name":"jakarta.ejb.Asynchronous"
},
{
  "name":"jakarta.ejb.EJB"
},
{
  "name":"jakarta.ejb.TransactionAttribute"
},
{
  "name":"jakarta.enterprise.concurrent.Asynchronous"
},
{
  "name":"jakarta.faces.context.FacesContext"
},
{
  "name":"jakarta.inject.Provider"
},
{
  "name":"jakarta.inject.Qualifier"
},
{
  "name":"jakarta.json.bind.Jsonb"
},
{
  "name":"jakarta.json.spi.JsonProvider"
},
{
  "name":"jakarta.json.stream.JsonGenerator"
},
{
  "name":"jakarta.json.stream.JsonParser"
},
{
  "name":"jakarta.json.stream.JsonParser$Event"
},
{
  "name":"jakarta.persistence.Persistence"
},
{
  "name":"jakarta.persistence.PersistenceContext"
},
{
  "name":"jakarta.servlet.DispatcherType"
},
{
  "name":"jakarta.servlet.Filter",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"jakarta.servlet.FilterChain"
},
{
  "name":"jakarta.servlet.FilterConfig"
},
{
  "name":"jakarta.servlet.FilterRegistration$Dynamic"
},
{
  "name":"jakarta.servlet.GenericFilter",
  "queryAllDeclaredMethods":true
},
{
  "name":"jakarta.servlet.GenericServlet",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"getInitParameter","parameterTypes":["java.lang.String"] }, {"name":"getInitParameterNames","parameterTypes":[] }, {"name":"getServletConfig","parameterTypes":[] }, {"name":"getServletContext","parameterTypes":[] }, {"name":"getServletInfo","parameterTypes":[] }, {"name":"log","parameterTypes":["java.lang.String"] }, {"name":"log","parameterTypes":["java.lang.String","java.lang.Throwable"] }]
},
{
  "name":"jakarta.servlet.MultipartConfigElement",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"jakarta.servlet.Registration$Dynamic"
},
{
  "name":"jakarta.servlet.Servlet",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"jakarta.servlet.ServletConfig",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"jakarta.servlet.ServletContext",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"jakarta.servlet.ServletException"
},
{
  "name":"jakarta.servlet.ServletRegistration$Dynamic"
},
{
  "name":"jakarta.servlet.ServletRequest"
},
{
  "name":"jakarta.servlet.ServletResponse"
},
{
  "name":"jakarta.servlet.http.HttpServlet",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"init","parameterTypes":["jakarta.servlet.ServletConfig"] }, {"name":"service","parameterTypes":["jakarta.servlet.ServletRequest","jakarta.servlet.ServletResponse"] }]
},
{
  "name":"jakarta.servlet.http.HttpServletRequest"
},
{
  "name":"jakarta.servlet.http.HttpServletResponse"
},
{
  "name":"jakarta.servlet.jsp.jstl.core.Config"
},
{
  "name":"jakarta.transaction.Transactional"
},
{
  "name":"jakarta.validation.ClockProvider"
},
{
  "name":"jakarta.validation.Configuration"
},
{
  "name":"jakarta.validation.Constraint",
  "queryAllDeclaredMethods":true
},
{
  "name":"jakarta.validation.ConstraintValidatorFactory"
},
{
  "name":"jakarta.validation.ConstraintViolation"
},
{
  "name":"jakarta.validation.MessageInterpolator"
},
{
  "name":"jakarta.validation.ParameterNameProvider"
},
{
  "name":"jakarta.validation.TraversableResolver"
},
{
  "name":"jakarta.validation.Valid",
  "queryAllDeclaredMethods":true
},
{
  "name":"jakarta.validation.ValidationProviderResolver"
},
{
  "name":"jakarta.validation.Validator",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"jakarta.validation.ValidatorContext"
},
{
  "name":"jakarta.validation.ValidatorFactory",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"jakarta.validation.bootstrap.GenericBootstrap"
},
{
  "name":"jakarta.validation.executable.ExecutableValidator"
},
{
  "name":"jakarta.validation.metadata.BeanDescriptor"
},
{
  "name":"jakarta.validation.metadata.ConstraintDescriptor"
},
{
  "name":"jakarta.xml.bind.Binder"
},
{
  "name":"jakarta.xml.ws.WebServiceRef"
},
{
  "name":"java.beans.Introspector"
},
{
  "name":"java.beans.PropertyVetoException"
},
{
  "name":"java.io.Closeable",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"java.io.Console",
  "methods":[{"name":"charset","parameterTypes":[] }, {"name":"isTerminal","parameterTypes":[] }]
},
{
  "name":"java.io.DataInput"
},
{
  "name":"java.io.DataOutput"
},
{
  "name":"java.io.File"
},
{
  "name":"java.io.FilePermission"
},
{
  "name":"java.io.Flushable",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"java.io.IOException"
},
{
  "name":"java.io.InputStream"
},
{
  "name":"java.io.ObjectInputStream"
},
{
  "name":"java.io.ObjectOutputStream"
},
{
  "name":"java.io.ObjectStreamException"
},
{
  "name":"java.io.OutputStream"
},
{
  "name":"java.io.PrintWriter"
},
{
  "name":"java.io.Reader"
},
{
  "name":"java.io.Serializable",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"<init>","parameterTypes":["java.lang.String"] }, {"name":"containsKey","parameterTypes":["java.lang.String"] }, {"name":"containsValue","parameterTypes":["com.leijendary.config.properties.KafkaTopicProperties$KafkaTopic"] }, {"name":"from","parameterTypes":["java.lang.String"] }, {"name":"get","parameterTypes":["java.lang.String"] }, {"name":"getOrDefault","parameterTypes":["java.lang.String","com.leijendary.config.properties.KafkaTopicProperties$KafkaTopic"] }, {"name":"of","parameterTypes":["java.lang.String"] }, {"name":"remove","parameterTypes":["java.lang.String"] }, {"name":"remove","parameterTypes":["java.lang.String","com.leijendary.config.properties.KafkaTopicProperties$KafkaTopic"] }, {"name":"valueOf","parameterTypes":["java.lang.String"] }]
},
{
  "name":"java.io.Writer"
},
{
  "name":"java.lang.AutoCloseable",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"java.lang.Boolean",
  "queryAllDeclaredMethods":true,
  "fields":[{"name":"TYPE"}],
  "methods":[{"name":"toboolean","parameterTypes":[] }]
},
{
  "name":"java.lang.Byte",
  "fields":[{"name":"TYPE"}]
},
{
  "name":"java.lang.CharSequence"
},
{
  "name":"java.lang.Character",
  "fields":[{"name":"TYPE"}]
},
{
  "name":"java.lang.Class",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"<init>","parameterTypes":["java.lang.String"] }, {"name":"<init>","parameterTypes":["java.lang.String[]"] }, {"name":"accessFlags","parameterTypes":[] }, {"name":"from","parameterTypes":["java.lang.String"] }, {"name":"from","parameterTypes":["java.lang.String[]"] }, {"name":"getModule","parameterTypes":[] }, {"name":"getPermittedSubclasses","parameterTypes":[] }, {"name":"getRecordComponents","parameterTypes":[] }, {"name":"isRecord","parameterTypes":[] }, {"name":"isSealed","parameterTypes":[] }, {"name":"of","parameterTypes":["java.lang.String"] }, {"name":"of","parameterTypes":["java.lang.String[]"] }, {"name":"valueOf","parameterTypes":["java.lang.String"] }, {"name":"valueOf","parameterTypes":["java.lang.String[]"] }]
},
{
  "name":"java.lang.ClassLoader",
  "queryAllDeclaredMethods":true,
  "fields":[{"name":"classLoaderValueMap"}],
  "methods":[{"name":"defineClass","parameterTypes":["java.lang.String","byte[]","int","int","java.security.ProtectionDomain"] }]
},
{
  "name":"java.lang.ClassNotFoundException"
},
{
  "name":"java.lang.ClassValue"
},
{
  "name":"java.lang.CloneNotSupportedException"
},
{
  "name":"java.lang.Cloneable",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"containsKey","parameterTypes":["java.lang.String"] }, {"name":"containsValue","parameterTypes":["com.leijendary.config.properties.KafkaTopicProperties$KafkaTopic"] }, {"name":"get","parameterTypes":["java.lang.String"] }, {"name":"getOrDefault","parameterTypes":["java.lang.String","com.leijendary.config.properties.KafkaTopicProperties$KafkaTopic"] }, {"name":"remove","parameterTypes":["java.lang.String"] }, {"name":"remove","parameterTypes":["java.lang.String","com.leijendary.config.properties.KafkaTopicProperties$KafkaTopic"] }]
},
{
  "name":"java.lang.Comparable",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"<init>","parameterTypes":["java.lang.String"] }, {"name":"from","parameterTypes":["java.lang.String"] }, {"name":"of","parameterTypes":["java.lang.String"] }, {"name":"valueOf","parameterTypes":["java.lang.String"] }]
},
{
  "name":"java.lang.Deprecated",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"forRemoval","parameterTypes":[] }, {"name":"since","parameterTypes":[] }]
},
{
  "name":"java.lang.Double",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "fields":[{"name":"TYPE"}]
},
{
  "name":"java.lang.Enum",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"compareTo","parameterTypes":["java.lang.Object"] }, {"name":"describeConstable","parameterTypes":[] }, {"name":"equals","parameterTypes":["java.lang.Object"] }, {"name":"hashCode","parameterTypes":[] }, {"name":"toString","parameterTypes":[] }]
},
{
  "name":"java.lang.Enum$EnumDesc"
},
{
  "name":"java.lang.Exception"
},
{
  "name":"java.lang.Float",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "fields":[{"name":"TYPE"}]
},
{
  "name":"java.lang.FunctionalInterface"
},
{
  "name":"java.lang.IllegalArgumentException"
},
{
  "name":"java.lang.IllegalStateException"
},
{
  "name":"java.lang.Integer",
  "fields":[{"name":"TYPE"}]
},
{
  "name":"java.lang.InterruptedException"
},
{
  "name":"java.lang.Iterable",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"forEach","parameterTypes":["java.util.function.Consumer"] }, {"name":"spliterator","parameterTypes":[] }]
},
{
  "name":"java.lang.Long",
  "fields":[{"name":"TYPE"}]
},
{
  "name":"java.lang.Module",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"isNamed","parameterTypes":[] }]
},
{
  "name":"java.lang.Number",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"java.lang.Object",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"<init>","parameterTypes":["com.leijendary.domain.sample.SampleSearchCustomRepositoryImpl$$SpringCGLIB$$0"] }, {"name":"equals","parameterTypes":["java.lang.Object"] }, {"name":"from","parameterTypes":["com.leijendary.domain.sample.SampleSearchCustomRepositoryImpl$$SpringCGLIB$$0"] }, {"name":"hashCode","parameterTypes":[] }, {"name":"of","parameterTypes":["com.leijendary.domain.sample.SampleSearchCustomRepositoryImpl$$SpringCGLIB$$0"] }, {"name":"toString","parameterTypes":[] }, {"name":"valueOf","parameterTypes":["com.leijendary.domain.sample.SampleSearchCustomRepositoryImpl$$SpringCGLIB$$0"] }]
},
{
  "name":"java.lang.ObjectBeanInfo"
},
{
  "name":"java.lang.ObjectCustomizer"
},
{
  "name":"java.lang.Package"
},
{
  "name":"java.lang.Record",
  "allDeclaredFields":true,
  "allDeclaredClasses":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"java.lang.Runnable"
},
{
  "name":"java.lang.RuntimeException"
},
{
  "name":"java.lang.RuntimePermission"
},
{
  "name":"java.lang.SafeVarargs"
},
{
  "name":"java.lang.SecurityManager",
  "methods":[{"name":"checkPermission","parameterTypes":["java.security.Permission"] }]
},
{
  "name":"java.lang.Short",
  "fields":[{"name":"TYPE"}]
},
{
  "name":"java.lang.StackTraceElement",
  "queryAllPublicMethods":true
},
{
  "name":"java.lang.String",
  "queryAllDeclaredMethods":true,
  "fields":[{"name":"TYPE"}],
  "methods":[{"name":"<init>","parameterTypes":["java.io.Serializable"] }, {"name":"<init>","parameterTypes":["java.lang.Comparable"] }, {"name":"<init>","parameterTypes":["java.lang.constant.Constable"] }]
},
{
  "name":"java.lang.StringBuilder"
},
{
  "name":"java.lang.System",
  "methods":[{"name":"getSecurityManager","parameterTypes":[] }]
},
{
  "name":"java.lang.Thread",
  "fields":[{"name":"threadLocalRandomProbe"}],
  "methods":[{"name":"ofVirtual","parameterTypes":[] }]
},
{
  "name":"java.lang.Thread$Builder",
  "methods":[{"name":"name","parameterTypes":["java.lang.String","long"] }, {"name":"start","parameterTypes":["java.lang.Runnable"] }]
},
{
  "name":"java.lang.Thread$State"
},
{
  "name":"java.lang.ThreadGroup"
},
{
  "name":"java.lang.Throwable",
  "allDeclaredFields":true
},
{
  "name":"java.lang.Void",
  "fields":[{"name":"TYPE"}]
},
{
  "name":"java.lang.WrongThreadException"
},
{
  "name":"java.lang.annotation.Annotation"
},
{
  "name":"java.lang.annotation.Documented",
  "queryAllDeclaredMethods":true
},
{
  "name":"java.lang.annotation.Inherited"
},
{
  "name":"java.lang.annotation.Retention",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"value","parameterTypes":[] }]
},
{
  "name":"java.lang.annotation.Target",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"value","parameterTypes":[] }]
},
{
  "name":"java.lang.constant.ClassDesc"
},
{
  "name":"java.lang.constant.Constable",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"<init>","parameterTypes":["java.lang.String"] }, {"name":"from","parameterTypes":["java.lang.String"] }, {"name":"of","parameterTypes":["java.lang.String"] }, {"name":"valueOf","parameterTypes":["java.lang.String"] }]
},
{
  "name":"java.lang.constant.ConstantDesc",
  "queryAllDeclaredMethods":true
},
{
  "name":"java.lang.invoke.SerializedLambda"
},
{
  "name":"java.lang.invoke.TypeDescriptor$OfField",
  "queryAllPublicMethods":true
},
{
  "name":"java.lang.management.BufferPoolMXBean",
  "queryAllPublicMethods":true
},
{
  "name":"java.lang.management.ClassLoadingMXBean",
  "queryAllPublicMethods":true
},
{
  "name":"java.lang.management.CompilationMXBean",
  "queryAllPublicMethods":true
},
{
  "name":"java.lang.management.LockInfo",
  "queryAllPublicMethods":true
},
{
  "name":"java.lang.management.ManagementPermission",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.String"] }]
},
{
  "name":"java.lang.management.MemoryMXBean",
  "queryAllPublicMethods":true
},
{
  "name":"java.lang.management.MemoryManagerMXBean",
  "queryAllPublicMethods":true
},
{
  "name":"java.lang.management.MemoryPoolMXBean",
  "queryAllPublicMethods":true
},
{
  "name":"java.lang.management.MemoryUsage",
  "queryAllPublicMethods":true,
  "methods":[{"name":"from","parameterTypes":["javax.management.openmbean.CompositeData"] }]
},
{
  "name":"java.lang.management.MonitorInfo",
  "queryAllPublicMethods":true
},
{
  "name":"java.lang.management.OperatingSystemMXBean"
},
{
  "name":"java.lang.management.PlatformLoggingMXBean",
  "queryAllPublicMethods":true,
  "methods":[{"name":"getLoggerLevel","parameterTypes":["java.lang.String"] }, {"name":"getLoggerNames","parameterTypes":[] }, {"name":"getParentLoggerName","parameterTypes":["java.lang.String"] }, {"name":"setLoggerLevel","parameterTypes":["java.lang.String","java.lang.String"] }]
},
{
  "name":"java.lang.management.RuntimeMXBean",
  "queryAllPublicMethods":true
},
{
  "name":"java.lang.management.ThreadInfo",
  "queryAllPublicMethods":true
},
{
  "name":"java.lang.management.ThreadMXBean"
},
{
  "name":"java.lang.reflect.AnnotatedElement",
  "queryAllPublicMethods":true
},
{
  "name":"java.lang.reflect.Constructor"
},
{
  "name":"java.lang.reflect.Executable",
  "methods":[{"name":"getParameters","parameterTypes":[] }]
},
{
  "name":"java.lang.reflect.Field"
},
{
  "name":"java.lang.reflect.GenericArrayType",
  "methods":[{"name":"getGenericComponentType","parameterTypes":[] }]
},
{
  "name":"java.lang.reflect.GenericDeclaration",
  "queryAllPublicMethods":true
},
{
  "name":"java.lang.reflect.Method"
},
{
  "name":"java.lang.reflect.Parameter",
  "methods":[{"name":"getName","parameterTypes":[] }]
},
{
  "name":"java.lang.reflect.ParameterizedType",
  "methods":[{"name":"getActualTypeArguments","parameterTypes":[] }, {"name":"getOwnerType","parameterTypes":[] }, {"name":"getRawType","parameterTypes":[] }]
},
{
  "name":"java.lang.reflect.Proxy",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"java.lang.reflect.RecordComponent",
  "methods":[{"name":"getAccessor","parameterTypes":[] }, {"name":"getName","parameterTypes":[] }, {"name":"getType","parameterTypes":[] }]
},
{
  "name":"java.lang.reflect.Type",
  "queryAllPublicMethods":true
},
{
  "name":"java.lang.reflect.TypeVariable",
  "methods":[{"name":"getBounds","parameterTypes":[] }]
},
{
  "name":"java.lang.reflect.WildcardType",
  "methods":[{"name":"getLowerBounds","parameterTypes":[] }, {"name":"getUpperBounds","parameterTypes":[] }]
},
{
  "name":"java.math.BigDecimal"
},
{
  "name":"java.math.BigInteger"
},
{
  "name":"java.net.InetAddress"
},
{
  "name":"java.net.NetPermission"
},
{
  "name":"java.net.SocketAddress"
},
{
  "name":"java.net.SocketPermission"
},
{
  "name":"java.net.URI"
},
{
  "name":"java.net.URL"
},
{
  "name":"java.net.URLClassLoader",
  "queryAllDeclaredMethods":true
},
{
  "name":"java.net.URLPermission",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.String","java.lang.String"] }]
},
{
  "name":"java.net.UnixDomainSocketAddress",
  "methods":[{"name":"of","parameterTypes":["java.lang.String"] }]
},
{
  "name":"java.net.http.HttpClient"
},
{
  "name":"java.net.http.HttpClient$Builder"
},
{
  "name":"java.net.http.HttpClient$Redirect"
},
{
  "name":"java.net.http.HttpResponse"
},
{
  "name":"java.nio.Bits",
  "fields":[{"name":"MAX_MEMORY"}, {"name":"UNALIGNED"}]
},
{
  "name":"java.nio.Buffer",
  "fields":[{"name":"address"}]
},
{
  "name":"java.nio.ByteBuffer",
  "methods":[{"name":"alignedSlice","parameterTypes":["int"] }]
},
{
  "name":"java.nio.DirectByteBuffer",
  "methods":[{"name":"<init>","parameterTypes":["long","long"] }]
},
{
  "name":"java.nio.channels.ServerSocketChannel",
  "methods":[{"name":"open","parameterTypes":["java.net.ProtocolFamily"] }]
},
{
  "name":"java.nio.channels.SocketChannel",
  "methods":[{"name":"open","parameterTypes":["java.net.ProtocolFamily"] }]
},
{
  "name":"java.nio.charset.Charset"
},
{
  "name":"java.nio.file.Path"
},
{
  "name":"java.security.AccessController",
  "methods":[{"name":"doPrivileged","parameterTypes":["java.security.PrivilegedExceptionAction"] }]
},
{
  "name":"java.security.AlgorithmParametersSpi"
},
{
  "name":"java.security.AllPermission"
},
{
  "name":"java.security.KeyStoreSpi"
},
{
  "name":"java.security.SecureClassLoader",
  "queryAllDeclaredMethods":true
},
{
  "name":"java.security.SecurityPermission"
},
{
  "name":"java.security.cert.PKIXRevocationChecker"
},
{
  "name":"java.security.interfaces.RSAPrivateKey"
},
{
  "name":"java.sql.Array"
},
{
  "name":"java.sql.CallableStatement"
},
{
  "name":"java.sql.Connection",
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"commit","parameterTypes":[] }, {"name":"createStatement","parameterTypes":[] }, {"name":"getAutoCommit","parameterTypes":[] }, {"name":"getCatalog","parameterTypes":[] }, {"name":"getMetaData","parameterTypes":[] }, {"name":"isClosed","parameterTypes":[] }, {"name":"prepareCall","parameterTypes":["java.lang.String"] }, {"name":"prepareStatement","parameterTypes":["java.lang.String"] }, {"name":"rollback","parameterTypes":[] }, {"name":"setAutoCommit","parameterTypes":["boolean"] }]
},
{
  "name":"java.sql.ConnectionBuilder"
},
{
  "name":"java.sql.Date"
},
{
  "name":"java.sql.Driver"
},
{
  "name":"java.sql.DriverManager"
},
{
  "name":"java.sql.PreparedStatement",
  "methods":[{"name":"execute","parameterTypes":[] }, {"name":"executeQuery","parameterTypes":[] }]
},
{
  "name":"java.sql.ResultSet",
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"getInt","parameterTypes":["int"] }, {"name":"getMetaData","parameterTypes":[] }, {"name":"getObject","parameterTypes":["int"] }, {"name":"getStatement","parameterTypes":[] }, {"name":"getString","parameterTypes":["int"] }, {"name":"next","parameterTypes":[] }, {"name":"wasNull","parameterTypes":[] }]
},
{
  "name":"java.sql.SQLException",
  "fields":[{"name":"next"}]
},
{
  "name":"java.sql.SQLFeatureNotSupportedException"
},
{
  "name":"java.sql.SQLType"
},
{
  "name":"java.sql.SQLWarning"
},
{
  "name":"java.sql.ShardingKeyBuilder"
},
{
  "name":"java.sql.Statement",
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"execute","parameterTypes":["java.lang.String"] }, {"name":"executeQuery","parameterTypes":["java.lang.String"] }, {"name":"getWarnings","parameterTypes":[] }, {"name":"setFetchSize","parameterTypes":["int"] }]
},
{
  "name":"java.sql.Time"
},
{
  "name":"java.sql.Timestamp"
},
{
  "name":"java.sql.Types",
  "allPublicFields":true
},
{
  "name":"java.sql.Wrapper",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"java.text.DateFormat"
},
{
  "name":"java.text.ListFormat"
},
{
  "name":"java.text.MessageFormat"
},
{
  "name":"java.text.NumberFormat",
  "methods":[{"name":"isStrict","parameterTypes":[] }]
},
{
  "name":"java.time.Clock",
  "methods":[{"name":"tickMillis","parameterTypes":["java.time.ZoneId"] }]
},
{
  "name":"java.time.Duration",
  "methods":[{"name":"isPositive","parameterTypes":[] }]
},
{
  "name":"java.time.DurationEditor"
},
{
  "name":"java.time.Instant"
},
{
  "name":"java.time.ZoneId"
},
{
  "name":"java.time.temporal.TemporalAccessor"
},
{
  "name":"java.util.AbstractCollection",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"java.util.AbstractMap",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"containsKey","parameterTypes":["java.lang.String"] }, {"name":"containsValue","parameterTypes":["com.leijendary.config.properties.KafkaTopicProperties$KafkaTopic"] }, {"name":"equals","parameterTypes":["java.lang.Object"] }, {"name":"get","parameterTypes":["java.lang.String"] }, {"name":"getOrDefault","parameterTypes":["java.lang.String","com.leijendary.config.properties.KafkaTopicProperties$KafkaTopic"] }, {"name":"hashCode","parameterTypes":[] }, {"name":"remove","parameterTypes":["java.lang.String"] }, {"name":"remove","parameterTypes":["java.lang.String","com.leijendary.config.properties.KafkaTopicProperties$KafkaTopic"] }, {"name":"toString","parameterTypes":[] }]
},
{
  "name":"java.util.AbstractMap$SimpleEntry"
},
{
  "name":"java.util.ArrayList",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"java.util.Collection",
  "queryAllDeclaredMethods":true
},
{
  "name":"java.util.Comparator"
},
{
  "name":"java.util.Date"
},
{
  "name":"java.util.EnumMap"
},
{
  "name":"java.util.EnumSet"
},
{
  "name":"java.util.Enumeration"
},
{
  "name":"java.util.EventListener",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"java.util.HashMap",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"clear","parameterTypes":[] }, {"name":"clone","parameterTypes":[] }, {"name":"compute","parameterTypes":["java.lang.Object","java.util.function.BiFunction"] }, {"name":"computeIfAbsent","parameterTypes":["java.lang.Object","java.util.function.Function"] }, {"name":"computeIfPresent","parameterTypes":["java.lang.Object","java.util.function.BiFunction"] }, {"name":"containsKey","parameterTypes":["java.lang.String"] }, {"name":"containsValue","parameterTypes":["com.leijendary.config.properties.KafkaTopicProperties$KafkaTopic"] }, {"name":"forEach","parameterTypes":["java.util.function.BiConsumer"] }, {"name":"get","parameterTypes":["java.lang.String"] }, {"name":"getOrDefault","parameterTypes":["java.lang.Object","java.lang.Object"] }, {"name":"getOrDefault","parameterTypes":["java.lang.String","com.leijendary.config.properties.KafkaTopicProperties$KafkaTopic"] }, {"name":"isEmpty","parameterTypes":[] }, {"name":"merge","parameterTypes":["java.lang.Object","java.lang.Object","java.util.function.BiFunction"] }, {"name":"put","parameterTypes":["java.lang.Object","java.lang.Object"] }, {"name":"putAll","parameterTypes":["java.util.Map"] }, {"name":"putIfAbsent","parameterTypes":["java.lang.Object","java.lang.Object"] }, {"name":"remove","parameterTypes":["java.lang.String"] }, {"name":"remove","parameterTypes":["java.lang.String","com.leijendary.config.properties.KafkaTopicProperties$KafkaTopic"] }, {"name":"replace","parameterTypes":["java.lang.Object","java.lang.Object"] }, {"name":"replace","parameterTypes":["java.lang.Object","java.lang.Object","java.lang.Object"] }, {"name":"replaceAll","parameterTypes":["java.util.function.BiFunction"] }]
},
{
  "name":"java.util.HashMap$Node"
},
{
  "name":"java.util.HashMap$TreeNode"
},
{
  "name":"java.util.HashSet"
},
{
  "name":"java.util.ImmutableCollections$AbstractImmutableCollection",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"java.util.ImmutableCollections$AbstractImmutableList",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"java.util.ImmutableCollections$AbstractImmutableMap",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"java.util.ImmutableCollections$List12",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"java.util.ImmutableCollections$MapN",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"java.util.Iterator"
},
{
  "name":"java.util.LinkedHashMap"
},
{
  "name":"java.util.List",
  "queryAllDeclaredMethods":true
},
{
  "name":"java.util.Locale"
},
{
  "name":"java.util.Map",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"containsKey","parameterTypes":["java.lang.String"] }, {"name":"containsValue","parameterTypes":["com.leijendary.config.properties.KafkaTopicProperties$KafkaTopic"] }, {"name":"get","parameterTypes":["java.lang.String"] }, {"name":"getOrDefault","parameterTypes":["java.lang.String","com.leijendary.config.properties.KafkaTopicProperties$KafkaTopic"] }, {"name":"remove","parameterTypes":["java.lang.String"] }, {"name":"remove","parameterTypes":["java.lang.String","com.leijendary.config.properties.KafkaTopicProperties$KafkaTopic"] }]
},
{
  "name":"java.util.Map$Entry"
},
{
  "name":"java.util.MissingResourceException"
},
{
  "name":"java.util.Optional"
},
{
  "name":"java.util.Properties"
},
{
  "name":"java.util.PropertyPermission",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.String","java.lang.String"] }]
},
{
  "name":"java.util.RandomAccess",
  "queryAllDeclaredMethods":true
},
{
  "name":"java.util.ResourceBundle"
},
{
  "name":"java.util.ServiceLoader"
},
{
  "name":"java.util.Set"
},
{
  "name":"java.util.SortedSet",
  "methods":[{"name":"getFirst","parameterTypes":[] }]
},
{
  "name":"java.util.Spliterator"
},
{
  "name":"java.util.TimeZone"
},
{
  "name":"java.util.TreeMap"
},
{
  "name":"java.util.UUID"
},
{
  "name":"java.util.concurrent.BlockingQueue"
},
{
  "name":"java.util.concurrent.Callable"
},
{
  "name":"java.util.concurrent.CompletableFuture"
},
{
  "name":"java.util.concurrent.ConcurrentHashMap"
},
{
  "name":"java.util.concurrent.CountDownLatch"
},
{
  "name":"java.util.concurrent.ExecutionException"
},
{
  "name":"java.util.concurrent.Executor",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"java.util.concurrent.ExecutorService"
},
{
  "name":"java.util.concurrent.ForkJoinTask",
  "fields":[{"name":"aux"}, {"name":"status"}]
},
{
  "name":"java.util.concurrent.Future",
  "methods":[{"name":"state","parameterTypes":[] }]
},
{
  "name":"java.util.concurrent.ScheduledExecutorService"
},
{
  "name":"java.util.concurrent.ThreadFactory"
},
{
  "name":"java.util.concurrent.ThreadPoolExecutor"
},
{
  "name":"java.util.concurrent.TimeUnit"
},
{
  "name":"java.util.concurrent.TimeoutException"
},
{
  "name":"java.util.concurrent.atomic.AtomicBoolean",
  "fields":[{"name":"value"}]
},
{
  "name":"java.util.concurrent.atomic.AtomicInteger"
},
{
  "name":"java.util.concurrent.atomic.AtomicLong"
},
{
  "name":"java.util.concurrent.atomic.AtomicMarkableReference",
  "fields":[{"name":"pair"}]
},
{
  "name":"java.util.concurrent.atomic.AtomicReference",
  "fields":[{"name":"value"}]
},
{
  "name":"java.util.concurrent.atomic.Striped64",
  "fields":[{"name":"base"}, {"name":"cellsBusy"}]
},
{
  "name":"java.util.concurrent.atomic.Striped64$Cell",
  "fields":[{"name":"value"}]
},
{
  "name":"java.util.function.BiConsumer"
},
{
  "name":"java.util.function.BiFunction",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"java.util.function.BiPredicate",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"and","parameterTypes":["java.util.function.BiPredicate"] }, {"name":"negate","parameterTypes":[] }, {"name":"or","parameterTypes":["java.util.function.BiPredicate"] }]
},
{
  "name":"java.util.function.Consumer",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"accept","parameterTypes":["java.lang.Object"] }, {"name":"andThen","parameterTypes":["java.util.function.Consumer"] }]
},
{
  "name":"java.util.function.Function"
},
{
  "name":"java.util.function.ObjIntConsumer"
},
{
  "name":"java.util.function.Predicate"
},
{
  "name":"java.util.function.Supplier",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"java.util.function.ToDoubleFunction"
},
{
  "name":"java.util.function.ToLongFunction"
},
{
  "name":"java.util.logging.LogManager",
  "methods":[{"name":"getLoggingMXBean","parameterTypes":[] }]
},
{
  "name":"java.util.logging.Logger"
},
{
  "name":"java.util.logging.LoggingMXBean",
  "queryAllPublicMethods":true
},
{
  "name":"java.util.logging.SimpleFormatter",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"java.util.regex.Pattern"
},
{
  "name":"java.util.stream.Collector"
},
{
  "name":"java.util.stream.Stream"
},
{
  "name":"javafx.beans.value.ObservableValue"
},
{
  "name":"javax.annotation.CheckForNull",
  "queryAllDeclaredMethods":true
},
{
  "name":"javax.annotation.Nonnull",
  "queryAllDeclaredMethods":true
},
{
  "name":"javax.annotation.Nullable",
  "queryAllDeclaredMethods":true
},
{
  "name":"javax.annotation.meta.TypeQualifier",
  "queryAllDeclaredMethods":true
},
{
  "name":"javax.annotation.meta.TypeQualifierDefault",
  "queryAllDeclaredMethods":true
},
{
  "name":"javax.inject.Qualifier"
},
{
  "name":"javax.management.MBeanNotificationInfo"
},
{
  "name":"javax.management.MBeanOperationInfo",
  "queryAllPublicMethods":true,
  "methods":[{"name":"getSignature","parameterTypes":[] }]
},
{
  "name":"javax.management.MBeanServerBuilder",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"javax.management.Notification"
},
{
  "name":"javax.management.NotificationEmitter"
},
{
  "name":"javax.management.NotificationListener"
},
{
  "name":"javax.management.ObjectName"
},
{
  "name":"javax.management.StandardEmitterMBean",
  "methods":[{"name":"cacheMBeanInfo","parameterTypes":["javax.management.MBeanInfo"] }, {"name":"getCachedMBeanInfo","parameterTypes":[] }, {"name":"getMBeanInfo","parameterTypes":[] }]
},
{
  "name":"javax.management.openmbean.CompositeData"
},
{
  "name":"javax.management.openmbean.OpenMBeanOperationInfoSupport"
},
{
  "name":"javax.management.openmbean.TabularData"
},
{
  "name":"javax.money.MonetaryAmount"
},
{
  "name":"javax.naming.InitialContext"
},
{
  "name":"javax.net.ssl.SSLParameters"
},
{
  "name":"javax.security.auth.Subject",
  "methods":[{"name":"callAs","parameterTypes":["javax.security.auth.Subject","java.util.concurrent.Callable"] }]
},
{
  "name":"javax.security.auth.x500.X500Principal",
  "fields":[{"name":"thisX500Name"}],
  "methods":[{"name":"<init>","parameterTypes":["sun.security.x509.X500Name"] }]
},
{
  "name":"javax.smartcardio.CardPermission"
},
{
  "name":"javax.sql.CommonDataSource",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"createShardingKeyBuilder","parameterTypes":[] }]
},
{
  "name":"javax.sql.DataSource",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"createConnectionBuilder","parameterTypes":[] }, {"name":"getConnection","parameterTypes":[] }, {"name":"getConnection","parameterTypes":["java.lang.String","java.lang.String"] }]
},
{
  "name":"jdk.crac.management.CRaCMXBean"
},
{
  "name":"jdk.internal.ValueBased"
},
{
  "name":"jdk.internal.loader.ClassLoaders$AppClassLoader",
  "methods":[{"name":"clearCache","parameterTypes":[] }]
},
{
  "name":"jdk.internal.loader.ClassLoaders$PlatformClassLoader",
  "methods":[{"name":"clearCache","parameterTypes":[] }]
},
{
  "name":"jdk.internal.misc.Unsafe",
  "methods":[{"name":"getUnsafe","parameterTypes":[] }]
},
{
  "name":"jdk.internal.vm.annotation.IntrinsicCandidate"
},
{
  "name":"jdk.jfr.Event"
},
{
  "name":"jdk.management.jfr.ConfigurationInfo",
  "queryAllPublicMethods":true
},
{
  "name":"jdk.management.jfr.EventTypeInfo",
  "queryAllPublicMethods":true
},
{
  "name":"jdk.management.jfr.FlightRecorderMXBean",
  "queryAllPublicMethods":true
},
{
  "name":"jdk.management.jfr.FlightRecorderMXBeanImpl",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"cacheMBeanInfo","parameterTypes":["javax.management.MBeanInfo"] }, {"name":"getCachedMBeanInfo","parameterTypes":[] }, {"name":"getMBeanInfo","parameterTypes":[] }, {"name":"getNotificationInfo","parameterTypes":[] }]
},
{
  "name":"jdk.management.jfr.RecordingInfo",
  "queryAllPublicMethods":true
},
{
  "name":"jdk.management.jfr.SettingDescriptorInfo",
  "queryAllPublicMethods":true
},
{
  "name":"kotlin.Any"
},
{
  "name":"kotlin.Array"
},
{
  "name":"kotlin.Boolean"
},
{
  "name":"kotlin.Deprecated"
},
{
  "name":"kotlin.Double"
},
{
  "name":"kotlin.Float"
},
{
  "name":"kotlin.Int"
},
{
  "name":"kotlin.KotlinVersion",
  "fields":[{"name":"CURRENT"}]
},
{
  "name":"kotlin.Long"
},
{
  "name":"kotlin.Metadata",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"bv","parameterTypes":[] }, {"name":"d1","parameterTypes":[] }, {"name":"d2","parameterTypes":[] }, {"name":"k","parameterTypes":[] }, {"name":"mv","parameterTypes":[] }, {"name":"pn","parameterTypes":[] }, {"name":"xi","parameterTypes":[] }, {"name":"xs","parameterTypes":[] }]
},
{
  "name":"kotlin.Pair"
},
{
  "name":"kotlin.SafePublicationLazyImpl",
  "fields":[{"name":"_value"}]
},
{
  "name":"kotlin.String"
},
{
  "name":"kotlin.Unit"
},
{
  "name":"kotlin.annotation.AnnotationTarget"
},
{
  "name":"kotlin.annotation.MustBeDocumented",
  "queryAllDeclaredMethods":true
},
{
  "name":"kotlin.annotation.Retention",
  "queryAllDeclaredMethods":true
},
{
  "name":"kotlin.annotation.Target",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"allowedTargets","parameterTypes":[] }]
},
{
  "name":"kotlin.collections.Collection"
},
{
  "name":"kotlin.collections.Iterable"
},
{
  "name":"kotlin.collections.List"
},
{
  "name":"kotlin.collections.Map"
},
{
  "name":"kotlin.collections.MutableCollection"
},
{
  "name":"kotlin.collections.MutableIterable"
},
{
  "name":"kotlin.collections.MutableList"
},
{
  "name":"kotlin.collections.MutableMap"
},
{
  "name":"kotlin.collections.MutableSet"
},
{
  "name":"kotlin.collections.Set"
},
{
  "name":"kotlin.coroutines.Continuation"
},
{
  "name":"kotlin.jvm.JvmInline"
},
{
  "name":"kotlin.jvm.functions.Function1"
},
{
  "name":"kotlin.jvm.internal.DefaultConstructorMarker"
},
{
  "name":"kotlin.jvm.internal.SourceDebugExtension"
},
{
  "name":"kotlin.properties.ReadWriteProperty"
},
{
  "name":"kotlin.reflect.KParameter"
},
{
  "name":"kotlin.reflect.full.KClasses"
},
{
  "name":"kotlin.reflect.jvm.internal.ReflectionFactoryImpl",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"kotlin.reflect.jvm.internal.impl.load.java.ErasedOverridabilityCondition"
},
{
  "name":"kotlin.reflect.jvm.internal.impl.load.java.FieldOverridabilityCondition"
},
{
  "name":"kotlin.reflect.jvm.internal.impl.load.java.JavaIncompatibilityRulesOverridabilityCondition"
},
{
  "name":"kotlin.reflect.jvm.internal.impl.resolve.scopes.DescriptorKindFilter",
  "allPublicFields":true
},
{
  "name":"kotlinx.coroutines.flow.Flow"
},
{
  "name":"kotlinx.coroutines.reactor.MonoKt"
},
{
  "name":"kotlinx.serialization.cbor.Cbor"
},
{
  "name":"kotlinx.serialization.json.Json"
},
{
  "name":"kotlinx.serialization.protobuf.ProtoBuf"
},
{
  "name":"liquibase.AbstractExtensibleObject",
  "queryAllPublicMethods":true
},
{
  "name":"liquibase.AbstractExtensibleObjectBeanInfo"
},
{
  "name":"liquibase.AbstractExtensibleObjectCustomizer"
},
{
  "name":"liquibase.ExtensibleObject",
  "queryAllPublicMethods":true
},
{
  "name":"liquibase.GlobalConfiguration"
},
{
  "name":"liquibase.Liquibase"
},
{
  "name":"liquibase.UpdateSummaryEnum"
},
{
  "name":"liquibase.UpdateSummaryOutputEnum"
},
{
  "name":"liquibase.change.AbstractChange",
  "queryAllPublicMethods":true
},
{
  "name":"liquibase.change.AbstractChangeBeanInfo"
},
{
  "name":"liquibase.change.AbstractChangeCustomizer"
},
{
  "name":"liquibase.change.AbstractSQLChange",
  "queryAllPublicMethods":true,
  "methods":[{"name":"isIgnoreOriginalSplitStatements","parameterTypes":[] }, {"name":"isSplitStatements","parameterTypes":[] }, {"name":"isStripComments","parameterTypes":[] }]
},
{
  "name":"liquibase.change.AbstractSQLChangeBeanInfo"
},
{
  "name":"liquibase.change.AbstractSQLChangeCustomizer"
},
{
  "name":"liquibase.change.AbstractTableChange",
  "queryAllPublicMethods":true
},
{
  "name":"liquibase.change.AbstractTableChangeBeanInfo"
},
{
  "name":"liquibase.change.AbstractTableChangeCustomizer"
},
{
  "name":"liquibase.change.Change",
  "queryAllPublicMethods":true
},
{
  "name":"liquibase.change.ChangeFactory",
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"<init>","parameterTypes":["liquibase.Scope"] }]
},
{
  "name":"liquibase.change.ChangeWithColumns",
  "queryAllPublicMethods":true
},
{
  "name":"liquibase.change.DbmsTargetedChange",
  "queryAllPublicMethods":true
},
{
  "name":"liquibase.change.ReplaceIfExists",
  "queryAllPublicMethods":true
},
{
  "name":"liquibase.change.core.AbstractModifyDataChange",
  "queryAllPublicMethods":true
},
{
  "name":"liquibase.change.core.AbstractModifyDataChangeBeanInfo"
},
{
  "name":"liquibase.change.core.AbstractModifyDataChangeCustomizer"
},
{
  "name":"liquibase.change.core.AddAutoIncrementChange",
  "queryAllPublicMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"liquibase.change.core.AddAutoIncrementChangeBeanInfo"
},
{
  "name":"liquibase.change.core.AddAutoIncrementChangeCustomizer"
},
{
  "name":"liquibase.change.core.AddColumnChange",
  "queryAllPublicMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"liquibase.change.core.AddColumnChangeBeanInfo"
},
{
  "name":"liquibase.change.core.AddColumnChangeCustomizer"
},
{
  "name":"liquibase.change.core.AddDefaultValueChange",
  "queryAllPublicMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"liquibase.change.core.AddDefaultValueChangeBeanInfo"
},
{
  "name":"liquibase.change.core.AddDefaultValueChangeCustomizer"
},
{
  "name":"liquibase.change.core.AddForeignKeyConstraintChange",
  "queryAllPublicMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"liquibase.change.core.AddForeignKeyConstraintChangeBeanInfo"
},
{
  "name":"liquibase.change.core.AddForeignKeyConstraintChangeCustomizer"
},
{
  "name":"liquibase.change.core.AddLookupTableChange",
  "queryAllPublicMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"liquibase.change.core.AddLookupTableChangeBeanInfo"
},
{
  "name":"liquibase.change.core.AddLookupTableChangeCustomizer"
},
{
  "name":"liquibase.change.core.AddNotNullConstraintChange",
  "queryAllPublicMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"liquibase.change.core.AddNotNullConstraintChangeBeanInfo"
},
{
  "name":"liquibase.change.core.AddNotNullConstraintChangeCustomizer"
},
{
  "name":"liquibase.change.core.AddPrimaryKeyChange",
  "queryAllPublicMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"liquibase.change.core.AddPrimaryKeyChangeBeanInfo"
},
{
  "name":"liquibase.change.core.AddPrimaryKeyChangeCustomizer"
},
{
  "name":"liquibase.change.core.AddUniqueConstraintChange",
  "queryAllPublicMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"liquibase.change.core.AddUniqueConstraintChangeBeanInfo"
},
{
  "name":"liquibase.change.core.AddUniqueConstraintChangeCustomizer"
},
{
  "name":"liquibase.change.core.AlterSequenceChange",
  "queryAllPublicMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"isOrdered","parameterTypes":[] }]
},
{
  "name":"liquibase.change.core.AlterSequenceChangeBeanInfo"
},
{
  "name":"liquibase.change.core.AlterSequenceChangeCustomizer"
},
{
  "name":"liquibase.change.core.CreateIndexChange",
  "queryAllPublicMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"isUnique","parameterTypes":[] }]
},
{
  "name":"liquibase.change.core.CreateIndexChangeBeanInfo"
},
{
  "name":"liquibase.change.core.CreateIndexChangeCustomizer"
},
{
  "name":"liquibase.change.core.CreateProcedureChange",
  "queryAllPublicMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"isRelativeToChangelogFile","parameterTypes":[] }]
},
{
  "name":"liquibase.change.core.CreateProcedureChangeBeanInfo"
},
{
  "name":"liquibase.change.core.CreateProcedureChangeCustomizer"
},
{
  "name":"liquibase.change.core.CreateSequenceChange",
  "queryAllPublicMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"isOrdered","parameterTypes":[] }]
},
{
  "name":"liquibase.change.core.CreateSequenceChangeBeanInfo"
},
{
  "name":"liquibase.change.core.CreateSequenceChangeCustomizer"
},
{
  "name":"liquibase.change.core.CreateTableChange",
  "queryAllPublicMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"liquibase.change.core.CreateTableChangeBeanInfo"
},
{
  "name":"liquibase.change.core.CreateTableChangeCustomizer"
},
{
  "name":"liquibase.change.core.CreateViewChange",
  "queryAllPublicMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"liquibase.change.core.CreateViewChangeBeanInfo"
},
{
  "name":"liquibase.change.core.CreateViewChangeCustomizer"
},
{
  "name":"liquibase.change.core.DeleteDataChange",
  "queryAllPublicMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"liquibase.change.core.DeleteDataChangeBeanInfo"
},
{
  "name":"liquibase.change.core.DeleteDataChangeCustomizer"
},
{
  "name":"liquibase.change.core.DropAllForeignKeyConstraintsChange",
  "queryAllPublicMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"liquibase.change.core.DropAllForeignKeyConstraintsChangeBeanInfo"
},
{
  "name":"liquibase.change.core.DropAllForeignKeyConstraintsChangeCustomizer"
},
{
  "name":"liquibase.change.core.DropColumnChange",
  "queryAllPublicMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"liquibase.change.core.DropColumnChangeBeanInfo"
},
{
  "name":"liquibase.change.core.DropColumnChangeCustomizer"
},
{
  "name":"liquibase.change.core.DropDefaultValueChange",
  "queryAllPublicMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"liquibase.change.core.DropDefaultValueChangeBeanInfo"
},
{
  "name":"liquibase.change.core.DropDefaultValueChangeCustomizer"
},
{
  "name":"liquibase.change.core.DropForeignKeyConstraintChange",
  "queryAllPublicMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"liquibase.change.core.DropForeignKeyConstraintChangeBeanInfo"
},
{
  "name":"liquibase.change.core.DropForeignKeyConstraintChangeCustomizer"
},
{
  "name":"liquibase.change.core.DropIndexChange",
  "queryAllPublicMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"liquibase.change.core.DropIndexChangeBeanInfo"
},
{
  "name":"liquibase.change.core.DropIndexChangeCustomizer"
},
{
  "name":"liquibase.change.core.DropNotNullConstraintChange",
  "queryAllPublicMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"liquibase.change.core.DropNotNullConstraintChangeBeanInfo"
},
{
  "name":"liquibase.change.core.DropNotNullConstraintChangeCustomizer"
},
{
  "name":"liquibase.change.core.DropPrimaryKeyChange",
  "queryAllPublicMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"liquibase.change.core.DropPrimaryKeyChangeBeanInfo"
},
{
  "name":"liquibase.change.core.DropPrimaryKeyChangeCustomizer"
},
{
  "name":"liquibase.change.core.DropProcedureChange",
  "queryAllPublicMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"liquibase.change.core.DropProcedureChangeBeanInfo"
},
{
  "name":"liquibase.change.core.DropProcedureChangeCustomizer"
},
{
  "name":"liquibase.change.core.DropSequenceChange",
  "queryAllPublicMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"liquibase.change.core.DropSequenceChangeBeanInfo"
},
{
  "name":"liquibase.change.core.DropSequenceChangeCustomizer"
},
{
  "name":"liquibase.change.core.DropTableChange",
  "queryAllPublicMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"isCascadeConstraints","parameterTypes":[] }]
},
{
  "name":"liquibase.change.core.DropTableChangeBeanInfo"
},
{
  "name":"liquibase.change.core.DropTableChangeCustomizer"
},
{
  "name":"liquibase.change.core.DropUniqueConstraintChange",
  "queryAllPublicMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"liquibase.change.core.DropUniqueConstraintChangeBeanInfo"
},
{
  "name":"liquibase.change.core.DropUniqueConstraintChangeCustomizer"
},
{
  "name":"liquibase.change.core.DropViewChange",
  "queryAllPublicMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"isIfExists","parameterTypes":[] }]
},
{
  "name":"liquibase.change.core.DropViewChangeBeanInfo"
},
{
  "name":"liquibase.change.core.DropViewChangeCustomizer"
},
{
  "name":"liquibase.change.core.EmptyChange",
  "queryAllPublicMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"liquibase.change.core.EmptyChangeBeanInfo"
},
{
  "name":"liquibase.change.core.EmptyChangeCustomizer"
},
{
  "name":"liquibase.change.core.ExecuteShellCommandChange",
  "queryAllPublicMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"liquibase.change.core.ExecuteShellCommandChangeBeanInfo"
},
{
  "name":"liquibase.change.core.ExecuteShellCommandChangeCustomizer"
},
{
  "name":"liquibase.change.core.InsertDataChange",
  "queryAllPublicMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"liquibase.change.core.InsertDataChangeBeanInfo"
},
{
  "name":"liquibase.change.core.InsertDataChangeCustomizer"
},
{
  "name":"liquibase.change.core.LoadDataChange",
  "queryAllPublicMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"isRelativeToChangelogFile","parameterTypes":[] }]
},
{
  "name":"liquibase.change.core.LoadDataChangeBeanInfo"
},
{
  "name":"liquibase.change.core.LoadDataChangeCustomizer"
},
{
  "name":"liquibase.change.core.LoadUpdateDataChange",
  "queryAllPublicMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"liquibase.change.core.LoadUpdateDataChangeBeanInfo"
},
{
  "name":"liquibase.change.core.LoadUpdateDataChangeCustomizer"
},
{
  "name":"liquibase.change.core.MergeColumnChange",
  "queryAllPublicMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"liquibase.change.core.MergeColumnChangeBeanInfo"
},
{
  "name":"liquibase.change.core.MergeColumnChangeCustomizer"
},
{
  "name":"liquibase.change.core.ModifyDataTypeChange",
  "queryAllPublicMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"liquibase.change.core.ModifyDataTypeChangeBeanInfo"
},
{
  "name":"liquibase.change.core.ModifyDataTypeChangeCustomizer"
},
{
  "name":"liquibase.change.core.OutputChange",
  "queryAllPublicMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"liquibase.change.core.OutputChangeBeanInfo"
},
{
  "name":"liquibase.change.core.OutputChangeCustomizer"
},
{
  "name":"liquibase.change.core.RawSQLChange",
  "queryAllPublicMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"isOriginalSplitStatements","parameterTypes":[] }]
},
{
  "name":"liquibase.change.core.RawSQLChangeBeanInfo"
},
{
  "name":"liquibase.change.core.RawSQLChangeCustomizer"
},
{
  "name":"liquibase.change.core.RenameColumnChange",
  "queryAllPublicMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"liquibase.change.core.RenameColumnChangeBeanInfo"
},
{
  "name":"liquibase.change.core.RenameColumnChangeCustomizer"
},
{
  "name":"liquibase.change.core.RenameSequenceChange",
  "queryAllPublicMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"liquibase.change.core.RenameSequenceChangeBeanInfo"
},
{
  "name":"liquibase.change.core.RenameSequenceChangeCustomizer"
},
{
  "name":"liquibase.change.core.RenameTableChange",
  "queryAllPublicMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"liquibase.change.core.RenameTableChangeBeanInfo"
},
{
  "name":"liquibase.change.core.RenameTableChangeCustomizer"
},
{
  "name":"liquibase.change.core.RenameViewChange",
  "queryAllPublicMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"liquibase.change.core.RenameViewChangeBeanInfo"
},
{
  "name":"liquibase.change.core.RenameViewChangeCustomizer"
},
{
  "name":"liquibase.change.core.SQLFileChange",
  "queryAllPublicMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"isDoExpandExpressionsInGenerateChecksum","parameterTypes":[] }, {"name":"isOriginalSplitStatements","parameterTypes":[] }, {"name":"isRelativeToChangelogFile","parameterTypes":[] }]
},
{
  "name":"liquibase.change.core.SQLFileChangeBeanInfo"
},
{
  "name":"liquibase.change.core.SQLFileChangeCustomizer"
},
{
  "name":"liquibase.change.core.SetColumnRemarksChange",
  "queryAllPublicMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"liquibase.change.core.SetColumnRemarksChangeBeanInfo"
},
{
  "name":"liquibase.change.core.SetColumnRemarksChangeCustomizer"
},
{
  "name":"liquibase.change.core.SetTableRemarksChange",
  "queryAllPublicMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"liquibase.change.core.SetTableRemarksChangeBeanInfo"
},
{
  "name":"liquibase.change.core.SetTableRemarksChangeCustomizer"
},
{
  "name":"liquibase.change.core.StopChange",
  "queryAllPublicMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"liquibase.change.core.StopChangeBeanInfo"
},
{
  "name":"liquibase.change.core.StopChangeCustomizer"
},
{
  "name":"liquibase.change.core.TagDatabaseChange",
  "queryAllPublicMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"liquibase.change.core.TagDatabaseChangeBeanInfo"
},
{
  "name":"liquibase.change.core.TagDatabaseChangeCustomizer"
},
{
  "name":"liquibase.change.core.UpdateDataChange",
  "queryAllPublicMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"liquibase.change.core.UpdateDataChangeBeanInfo"
},
{
  "name":"liquibase.change.core.UpdateDataChangeCustomizer"
},
{
  "name":"liquibase.change.custom.CustomChangeWrapper",
  "queryAllPublicMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"liquibase.change.custom.CustomChangeWrapperBeanInfo"
},
{
  "name":"liquibase.change.custom.CustomChangeWrapperCustomizer"
},
{
  "name":"liquibase.changelog.ChangeLogHistoryServiceFactory",
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"<init>","parameterTypes":["liquibase.Scope"] }]
},
{
  "name":"liquibase.changelog.FastCheckService",
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"<init>","parameterTypes":["liquibase.Scope"] }]
},
{
  "name":"liquibase.changelog.MockChangeLogHistoryService"
},
{
  "name":"liquibase.changelog.StandardChangeLogHistoryService",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"liquibase.changelog.visitor.StandardValidatingVisitorGenerator"
},
{
  "name":"liquibase.changelog.visitor.ValidatingVisitorGeneratorFactory",
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"<init>","parameterTypes":["liquibase.Scope"] }]
},
{
  "name":"liquibase.changeset.StandardChangeSetService"
},
{
  "name":"liquibase.command.CommandFactory",
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"<init>","parameterTypes":["liquibase.Scope"] }]
},
{
  "name":"liquibase.command.core.CalculateChecksumCommandStep"
},
{
  "name":"liquibase.command.core.ChangelogSyncCommandStep"
},
{
  "name":"liquibase.command.core.ChangelogSyncSqlCommandStep"
},
{
  "name":"liquibase.command.core.ChangelogSyncToTagCommandStep"
},
{
  "name":"liquibase.command.core.ChangelogSyncToTagSqlCommandStep"
},
{
  "name":"liquibase.command.core.ClearChecksumsCommandStep"
},
{
  "name":"liquibase.command.core.DbDocCommandStep"
},
{
  "name":"liquibase.command.core.DiffChangelogCommandStep"
},
{
  "name":"liquibase.command.core.DiffCommandStep"
},
{
  "name":"liquibase.command.core.DropAllCommandStep"
},
{
  "name":"liquibase.command.core.ExecuteSqlCommandStep"
},
{
  "name":"liquibase.command.core.FutureRollbackCountSqlCommandStep"
},
{
  "name":"liquibase.command.core.FutureRollbackFromTagSqlCommandStep"
},
{
  "name":"liquibase.command.core.FutureRollbackSqlCommandStep"
},
{
  "name":"liquibase.command.core.GenerateChangelogCommandStep"
},
{
  "name":"liquibase.command.core.HistoryCommandStep"
},
{
  "name":"liquibase.command.core.InternalSnapshotCommandStep"
},
{
  "name":"liquibase.command.core.ListLocksCommandStep"
},
{
  "name":"liquibase.command.core.MarkNextChangesetRanCommandStep"
},
{
  "name":"liquibase.command.core.MarkNextChangesetRanSqlCommandStep"
},
{
  "name":"liquibase.command.core.ReleaseLocksCommandStep"
},
{
  "name":"liquibase.command.core.RollbackCommandStep"
},
{
  "name":"liquibase.command.core.RollbackCountCommandStep"
},
{
  "name":"liquibase.command.core.RollbackCountSqlCommandStep"
},
{
  "name":"liquibase.command.core.RollbackSqlCommandStep"
},
{
  "name":"liquibase.command.core.RollbackToDateCommandStep"
},
{
  "name":"liquibase.command.core.RollbackToDateSqlCommandStep"
},
{
  "name":"liquibase.command.core.SnapshotCommandStep"
},
{
  "name":"liquibase.command.core.SnapshotReferenceCommandStep"
},
{
  "name":"liquibase.command.core.StartH2CommandStep"
},
{
  "name":"liquibase.command.core.StatusCommandStep"
},
{
  "name":"liquibase.command.core.StopH2CommandStep"
},
{
  "name":"liquibase.command.core.TagCommandStep"
},
{
  "name":"liquibase.command.core.TagExistsCommandStep"
},
{
  "name":"liquibase.command.core.UnexpectedChangesetsCommandStep"
},
{
  "name":"liquibase.command.core.UpdateCommandStep",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"liquibase.command.core.UpdateCountCommandStep"
},
{
  "name":"liquibase.command.core.UpdateCountSqlCommandStep"
},
{
  "name":"liquibase.command.core.UpdateSqlCommandStep"
},
{
  "name":"liquibase.command.core.UpdateTestingRollbackCommandStep"
},
{
  "name":"liquibase.command.core.UpdateToTagCommandStep"
},
{
  "name":"liquibase.command.core.UpdateToTagSqlCommandStep"
},
{
  "name":"liquibase.command.core.ValidateCommandStep"
},
{
  "name":"liquibase.command.core.helpers.ChangeExecListenerCommandStep",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"liquibase.command.core.helpers.DatabaseChangelogCommandStep",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"liquibase.command.core.helpers.DbUrlConnectionArgumentsCommandStep",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"liquibase.command.core.helpers.DbUrlConnectionCommandStep",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"liquibase.command.core.helpers.DiffOutputControlCommandStep"
},
{
  "name":"liquibase.command.core.helpers.LockServiceCommandStep"
},
{
  "name":"liquibase.command.core.helpers.OutputWriterCommandStep"
},
{
  "name":"liquibase.command.core.helpers.PreCompareCommandStep"
},
{
  "name":"liquibase.command.core.helpers.ReferenceDatabaseOutputWriterCommandStep"
},
{
  "name":"liquibase.command.core.helpers.ReferenceDbUrlConnectionCommandStep"
},
{
  "name":"liquibase.command.core.helpers.ShowSummaryArgument",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"liquibase.configuration.ConfiguredValueModifierFactory",
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"<init>","parameterTypes":["liquibase.Scope"] }]
},
{
  "name":"liquibase.configuration.LiquibaseConfiguration",
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"<init>","parameterTypes":["liquibase.Scope"] }]
},
{
  "name":"liquibase.configuration.core.DeprecatedConfigurationValueProvider"
},
{
  "name":"liquibase.configuration.core.EnvironmentValueProvider"
},
{
  "name":"liquibase.configuration.core.ScopeValueProvider"
},
{
  "name":"liquibase.configuration.core.SystemPropertyValueProvider"
},
{
  "name":"liquibase.database.Database"
},
{
  "name":"liquibase.database.LiquibaseTableNamesFactory",
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"<init>","parameterTypes":["liquibase.Scope"] }]
},
{
  "name":"liquibase.database.StandardLiquibaseTableNames"
},
{
  "name":"liquibase.database.core.CockroachDatabase"
},
{
  "name":"liquibase.database.core.DB2Database"
},
{
  "name":"liquibase.database.core.Db2zDatabase"
},
{
  "name":"liquibase.database.core.DerbyDatabase"
},
{
  "name":"liquibase.database.core.EnterpriseDBDatabase"
},
{
  "name":"liquibase.database.core.FirebirdDatabase"
},
{
  "name":"liquibase.database.core.H2Database"
},
{
  "name":"liquibase.database.core.HsqlDatabase"
},
{
  "name":"liquibase.database.core.InformixDatabase"
},
{
  "name":"liquibase.database.core.Ingres9Database"
},
{
  "name":"liquibase.database.core.MSSQLDatabase"
},
{
  "name":"liquibase.database.core.MariaDBDatabase"
},
{
  "name":"liquibase.database.core.MockDatabase"
},
{
  "name":"liquibase.database.core.MySQLDatabase"
},
{
  "name":"liquibase.database.core.OracleDatabase"
},
{
  "name":"liquibase.database.core.PostgresDatabase",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"liquibase.database.core.SQLiteDatabase"
},
{
  "name":"liquibase.database.core.SnowflakeDatabase"
},
{
  "name":"liquibase.database.core.SybaseASADatabase"
},
{
  "name":"liquibase.database.core.SybaseDatabase"
},
{
  "name":"liquibase.database.core.UnsupportedDatabase"
},
{
  "name":"liquibase.database.jvm.JdbcConnectionPatterns"
},
{
  "name":"liquibase.diff.compare.core.CatalogComparator"
},
{
  "name":"liquibase.diff.compare.core.ColumnComparator"
},
{
  "name":"liquibase.diff.compare.core.DefaultDatabaseObjectComparator"
},
{
  "name":"liquibase.diff.compare.core.ForeignKeyComparator"
},
{
  "name":"liquibase.diff.compare.core.IndexComparator"
},
{
  "name":"liquibase.diff.compare.core.PrimaryKeyComparator"
},
{
  "name":"liquibase.diff.compare.core.SchemaComparator"
},
{
  "name":"liquibase.diff.compare.core.TableComparator"
},
{
  "name":"liquibase.diff.compare.core.UniqueConstraintComparator"
},
{
  "name":"liquibase.exception.DatabaseException"
},
{
  "name":"liquibase.exception.LiquibaseException"
},
{
  "name":"liquibase.executor.ExecutorService",
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"<init>","parameterTypes":["liquibase.Scope"] }]
},
{
  "name":"liquibase.executor.jvm.JdbcExecutor",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"liquibase.executor.jvm.SnowflakeJdbcExecutor"
},
{
  "name":"liquibase.integration.commandline.LiquibaseCommandLineConfiguration"
},
{
  "name":"liquibase.integration.spring.Customizer"
},
{
  "name":"liquibase.integration.spring.SpringLiquibase",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"afterPropertiesSet","parameterTypes":[] }, {"name":"setBeanName","parameterTypes":["java.lang.String"] }, {"name":"setResourceLoader","parameterTypes":["org.springframework.core.io.ResourceLoader"] }, {"name":"toString","parameterTypes":[] }]
},
{
  "name":"liquibase.integration.spring.SpringResourceAccessor"
},
{
  "name":"liquibase.lockservice.LockServiceImpl"
},
{
  "name":"liquibase.lockservice.MockLockService"
},
{
  "name":"liquibase.lockservice.OfflineLockService"
},
{
  "name":"liquibase.lockservice.StandardLockService",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"liquibase.logging.core.BufferedLogService"
},
{
  "name":"liquibase.logging.core.CompositeLogService"
},
{
  "name":"liquibase.logging.core.DefaultLoggerConfiguration"
},
{
  "name":"liquibase.logging.core.JavaLogService"
},
{
  "name":"liquibase.logging.core.LogServiceFactory",
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"<init>","parameterTypes":["liquibase.Scope"] }]
},
{
  "name":"liquibase.logging.mdc.MdcManagerFactory",
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"<init>","parameterTypes":["liquibase.Scope"] }]
},
{
  "name":"liquibase.logging.mdc.NoOpMdcManager"
},
{
  "name":"liquibase.parser.ChangeLogParserConfiguration"
},
{
  "name":"liquibase.parser.core.formattedsql.FormattedSqlChangeLogParser"
},
{
  "name":"liquibase.parser.core.json.JsonChangeLogParser"
},
{
  "name":"liquibase.parser.core.sql.SqlChangeLogParser"
},
{
  "name":"liquibase.parser.core.xml.XMLChangeLogSAXParser"
},
{
  "name":"liquibase.parser.core.yaml.YamlChangeLogParser"
},
{
  "name":"liquibase.plugin.AbstractPlugin",
  "queryAllPublicMethods":true
},
{
  "name":"liquibase.plugin.AbstractPluginBeanInfo"
},
{
  "name":"liquibase.plugin.AbstractPluginCustomizer"
},
{
  "name":"liquibase.plugin.Plugin",
  "queryAllPublicMethods":true
},
{
  "name":"liquibase.report.ShowSummaryGeneratorFactory",
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"<init>","parameterTypes":["liquibase.Scope"] }]
},
{
  "name":"liquibase.report.StandardShowSummaryGenerator"
},
{
  "name":"liquibase.resource.ResourceAccessor"
},
{
  "name":"liquibase.servicelocator.StandardServiceLocator"
},
{
  "name":"liquibase.snapshot.jvm.CatalogSnapshotGenerator"
},
{
  "name":"liquibase.snapshot.jvm.ColumnSnapshotGenerator"
},
{
  "name":"liquibase.snapshot.jvm.ColumnSnapshotGeneratorH2"
},
{
  "name":"liquibase.snapshot.jvm.ColumnSnapshotGeneratorInformix"
},
{
  "name":"liquibase.snapshot.jvm.ColumnSnapshotGeneratorOracle"
},
{
  "name":"liquibase.snapshot.jvm.DataSnapshotGenerator"
},
{
  "name":"liquibase.snapshot.jvm.ForeignKeySnapshotGenerator"
},
{
  "name":"liquibase.snapshot.jvm.IndexSnapshotGenerator"
},
{
  "name":"liquibase.snapshot.jvm.PrimaryKeySnapshotGenerator"
},
{
  "name":"liquibase.snapshot.jvm.SchemaSnapshotGenerator"
},
{
  "name":"liquibase.snapshot.jvm.SchemaSnapshotGeneratorSnowflake"
},
{
  "name":"liquibase.snapshot.jvm.SequenceSnapshotGenerator"
},
{
  "name":"liquibase.snapshot.jvm.SequenceSnapshotGeneratorSnowflake"
},
{
  "name":"liquibase.snapshot.jvm.TableSnapshotGenerator"
},
{
  "name":"liquibase.snapshot.jvm.UniqueConstraintSnapshotGenerator"
},
{
  "name":"liquibase.snapshot.jvm.UniqueConstraintSnapshotGeneratorSnowflake"
},
{
  "name":"liquibase.snapshot.jvm.ViewSnapshotGenerator"
},
{
  "name":"liquibase.sql.SqlConfiguration"
},
{
  "name":"liquibase.sqlgenerator.core.AddAutoIncrementGenerator"
},
{
  "name":"liquibase.sqlgenerator.core.AddAutoIncrementGeneratorDB2"
},
{
  "name":"liquibase.sqlgenerator.core.AddAutoIncrementGeneratorHsqlH2"
},
{
  "name":"liquibase.sqlgenerator.core.AddAutoIncrementGeneratorInformix"
},
{
  "name":"liquibase.sqlgenerator.core.AddAutoIncrementGeneratorMySQL"
},
{
  "name":"liquibase.sqlgenerator.core.AddAutoIncrementGeneratorSQLite"
},
{
  "name":"liquibase.sqlgenerator.core.AddColumnGenerator"
},
{
  "name":"liquibase.sqlgenerator.core.AddColumnGeneratorDefaultClauseBeforeNotNull"
},
{
  "name":"liquibase.sqlgenerator.core.AddColumnGeneratorSQLite"
},
{
  "name":"liquibase.sqlgenerator.core.AddDefaultValueGenerator"
},
{
  "name":"liquibase.sqlgenerator.core.AddDefaultValueGeneratorDerby"
},
{
  "name":"liquibase.sqlgenerator.core.AddDefaultValueGeneratorInformix"
},
{
  "name":"liquibase.sqlgenerator.core.AddDefaultValueGeneratorMSSQL"
},
{
  "name":"liquibase.sqlgenerator.core.AddDefaultValueGeneratorMySQL"
},
{
  "name":"liquibase.sqlgenerator.core.AddDefaultValueGeneratorOracle"
},
{
  "name":"liquibase.sqlgenerator.core.AddDefaultValueGeneratorPostgres"
},
{
  "name":"liquibase.sqlgenerator.core.AddDefaultValueGeneratorSQLite"
},
{
  "name":"liquibase.sqlgenerator.core.AddDefaultValueGeneratorSybase"
},
{
  "name":"liquibase.sqlgenerator.core.AddDefaultValueGeneratorSybaseASA"
},
{
  "name":"liquibase.sqlgenerator.core.AddForeignKeyConstraintGenerator"
},
{
  "name":"liquibase.sqlgenerator.core.AddPrimaryKeyGenerator"
},
{
  "name":"liquibase.sqlgenerator.core.AddPrimaryKeyGeneratorInformix"
},
{
  "name":"liquibase.sqlgenerator.core.AddUniqueConstraintGenerator"
},
{
  "name":"liquibase.sqlgenerator.core.AddUniqueConstraintGeneratorInformix"
},
{
  "name":"liquibase.sqlgenerator.core.AddUniqueConstraintGeneratorTDS"
},
{
  "name":"liquibase.sqlgenerator.core.AlterSequenceGenerator"
},
{
  "name":"liquibase.sqlgenerator.core.BatchDmlExecutablePreparedStatementGenerator"
},
{
  "name":"liquibase.sqlgenerator.core.ClearDatabaseChangeLogTableGenerator"
},
{
  "name":"liquibase.sqlgenerator.core.CommentGenerator"
},
{
  "name":"liquibase.sqlgenerator.core.CopyRowsGenerator"
},
{
  "name":"liquibase.sqlgenerator.core.CreateDatabaseChangeLogLockTableGenerator"
},
{
  "name":"liquibase.sqlgenerator.core.CreateDatabaseChangeLogTableGenerator"
},
{
  "name":"liquibase.sqlgenerator.core.CreateDatabaseChangeLogTableGeneratorSybase"
},
{
  "name":"liquibase.sqlgenerator.core.CreateIndexGenerator"
},
{
  "name":"liquibase.sqlgenerator.core.CreateIndexGeneratorFirebird"
},
{
  "name":"liquibase.sqlgenerator.core.CreateIndexGeneratorPostgres"
},
{
  "name":"liquibase.sqlgenerator.core.CreateProcedureGenerator"
},
{
  "name":"liquibase.sqlgenerator.core.CreateSequenceGenerator"
},
{
  "name":"liquibase.sqlgenerator.core.CreateSequenceGeneratorSnowflake"
},
{
  "name":"liquibase.sqlgenerator.core.CreateTableGenerator"
},
{
  "name":"liquibase.sqlgenerator.core.CreateTableGeneratorInformix"
},
{
  "name":"liquibase.sqlgenerator.core.CreateViewGenerator"
},
{
  "name":"liquibase.sqlgenerator.core.CreateViewGeneratorInformix"
},
{
  "name":"liquibase.sqlgenerator.core.DeleteGenerator"
},
{
  "name":"liquibase.sqlgenerator.core.DropColumnGenerator"
},
{
  "name":"liquibase.sqlgenerator.core.DropDefaultValueGenerator"
},
{
  "name":"liquibase.sqlgenerator.core.DropDefaultValueGeneratorSnowflake"
},
{
  "name":"liquibase.sqlgenerator.core.DropForeignKeyConstraintGenerator"
},
{
  "name":"liquibase.sqlgenerator.core.DropIndexGenerator"
},
{
  "name":"liquibase.sqlgenerator.core.DropPrimaryKeyGenerator"
},
{
  "name":"liquibase.sqlgenerator.core.DropProcedureGenerator"
},
{
  "name":"liquibase.sqlgenerator.core.DropProcedureGeneratorSnowflake"
},
{
  "name":"liquibase.sqlgenerator.core.DropSequenceGenerator"
},
{
  "name":"liquibase.sqlgenerator.core.DropTableGenerator"
},
{
  "name":"liquibase.sqlgenerator.core.DropUniqueConstraintGenerator"
},
{
  "name":"liquibase.sqlgenerator.core.DropViewGenerator"
},
{
  "name":"liquibase.sqlgenerator.core.GetNextChangeSetSequenceValueGenerator"
},
{
  "name":"liquibase.sqlgenerator.core.GetViewDefinitionGenerator"
},
{
  "name":"liquibase.sqlgenerator.core.GetViewDefinitionGeneratorDB2"
},
{
  "name":"liquibase.sqlgenerator.core.GetViewDefinitionGeneratorDerby"
},
{
  "name":"liquibase.sqlgenerator.core.GetViewDefinitionGeneratorFirebird"
},
{
  "name":"liquibase.sqlgenerator.core.GetViewDefinitionGeneratorHsql"
},
{
  "name":"liquibase.sqlgenerator.core.GetViewDefinitionGeneratorInformix"
},
{
  "name":"liquibase.sqlgenerator.core.GetViewDefinitionGeneratorMSSQL"
},
{
  "name":"liquibase.sqlgenerator.core.GetViewDefinitionGeneratorOracle"
},
{
  "name":"liquibase.sqlgenerator.core.GetViewDefinitionGeneratorPostgres"
},
{
  "name":"liquibase.sqlgenerator.core.GetViewDefinitionGeneratorSnowflake"
},
{
  "name":"liquibase.sqlgenerator.core.GetViewDefinitionGeneratorSybase"
},
{
  "name":"liquibase.sqlgenerator.core.GetViewDefinitionGeneratorSybaseASA"
},
{
  "name":"liquibase.sqlgenerator.core.InitializeDatabaseChangeLogLockTableGenerator"
},
{
  "name":"liquibase.sqlgenerator.core.InsertDataChangeGenerator"
},
{
  "name":"liquibase.sqlgenerator.core.InsertGenerator"
},
{
  "name":"liquibase.sqlgenerator.core.InsertOrUpdateGeneratorDB2"
},
{
  "name":"liquibase.sqlgenerator.core.InsertOrUpdateGeneratorH2"
},
{
  "name":"liquibase.sqlgenerator.core.InsertOrUpdateGeneratorHsql"
},
{
  "name":"liquibase.sqlgenerator.core.InsertOrUpdateGeneratorInformix"
},
{
  "name":"liquibase.sqlgenerator.core.InsertOrUpdateGeneratorMSSQL"
},
{
  "name":"liquibase.sqlgenerator.core.InsertOrUpdateGeneratorMySQL"
},
{
  "name":"liquibase.sqlgenerator.core.InsertOrUpdateGeneratorOracle"
},
{
  "name":"liquibase.sqlgenerator.core.InsertOrUpdateGeneratorPostgres"
},
{
  "name":"liquibase.sqlgenerator.core.InsertOrUpdateGeneratorSQLite"
},
{
  "name":"liquibase.sqlgenerator.core.InsertOrUpdateGeneratorSnowflake"
},
{
  "name":"liquibase.sqlgenerator.core.InsertOrUpdateGeneratorSybaseASA"
},
{
  "name":"liquibase.sqlgenerator.core.InsertSetGenerator"
},
{
  "name":"liquibase.sqlgenerator.core.LockDatabaseChangeLogGenerator"
},
{
  "name":"liquibase.sqlgenerator.core.MarkChangeSetRanGenerator"
},
{
  "name":"liquibase.sqlgenerator.core.ModifyDataTypeGenerator"
},
{
  "name":"liquibase.sqlgenerator.core.RawParameterizedSqlGenerator"
},
{
  "name":"liquibase.sqlgenerator.core.RawSqlGenerator"
},
{
  "name":"liquibase.sqlgenerator.core.ReindexGeneratorSQLite"
},
{
  "name":"liquibase.sqlgenerator.core.RemoveChangeSetRanStatusGenerator"
},
{
  "name":"liquibase.sqlgenerator.core.RenameColumnGenerator"
},
{
  "name":"liquibase.sqlgenerator.core.RenameSequenceGenerator"
},
{
  "name":"liquibase.sqlgenerator.core.RenameTableGenerator"
},
{
  "name":"liquibase.sqlgenerator.core.RenameTableGeneratorSnowflake"
},
{
  "name":"liquibase.sqlgenerator.core.RenameViewGenerator"
},
{
  "name":"liquibase.sqlgenerator.core.RenameViewGeneratorSnowflake"
},
{
  "name":"liquibase.sqlgenerator.core.ReorganizeTableGeneratorDB2"
},
{
  "name":"liquibase.sqlgenerator.core.RuntimeGenerator"
},
{
  "name":"liquibase.sqlgenerator.core.SelectFromDatabaseChangeLogGenerator"
},
{
  "name":"liquibase.sqlgenerator.core.SelectFromDatabaseChangeLogLockGenerator"
},
{
  "name":"liquibase.sqlgenerator.core.SetColumnRemarksGenerator"
},
{
  "name":"liquibase.sqlgenerator.core.SetColumnRemarksGeneratorSnowflake"
},
{
  "name":"liquibase.sqlgenerator.core.SetNullableGenerator"
},
{
  "name":"liquibase.sqlgenerator.core.SetTableRemarksGenerator"
},
{
  "name":"liquibase.sqlgenerator.core.SetTableRemarksGeneratorSnowflake"
},
{
  "name":"liquibase.sqlgenerator.core.SetViewRemarksGenerator"
},
{
  "name":"liquibase.sqlgenerator.core.StoredProcedureGenerator"
},
{
  "name":"liquibase.sqlgenerator.core.TableIsEmptyGenerator"
},
{
  "name":"liquibase.sqlgenerator.core.TableRowCountGenerator"
},
{
  "name":"liquibase.sqlgenerator.core.TagDatabaseGenerator"
},
{
  "name":"liquibase.sqlgenerator.core.UnlockDatabaseChangeLogGenerator"
},
{
  "name":"liquibase.sqlgenerator.core.UpdateChangeSetChecksumGenerator"
},
{
  "name":"liquibase.sqlgenerator.core.UpdateDataChangeGenerator"
},
{
  "name":"liquibase.sqlgenerator.core.UpdateGenerator"
},
{
  "name":"liquibase.ui.LoggerUIService",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"liquibase.ui.UIServiceEnum"
},
{
  "name":"net.ttddyy.dsproxy.ExecutionInfo"
},
{
  "name":"net.ttddyy.dsproxy.listener.MethodExecutionContext"
},
{
  "name":"net.ttddyy.dsproxy.listener.MethodExecutionListener",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"net.ttddyy.dsproxy.listener.QueryExecutionListener",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"net.ttddyy.dsproxy.proxy.ProxyLogicSupport",
  "queryAllDeclaredMethods":true
},
{
  "name":"net.ttddyy.dsproxy.support.ProxyDataSource",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"getConnection","parameterTypes":[] }, {"name":"getConnection","parameterTypes":["java.lang.String","java.lang.String"] }, {"name":"getLogWriter","parameterTypes":[] }, {"name":"getLoginTimeout","parameterTypes":[] }, {"name":"getParentLogger","parameterTypes":[] }, {"name":"isWrapperFor","parameterTypes":["java.lang.Class"] }, {"name":"setLogWriter","parameterTypes":["java.io.PrintWriter"] }, {"name":"setLoginTimeout","parameterTypes":["int"] }, {"name":"unwrap","parameterTypes":["java.lang.Class"] }]
},
{
  "name":"net.ttddyy.dsproxy.support.ProxyDataSourceBuilder"
},
{
  "name":"net.ttddyy.observation.boot.autoconfigure.DataSourceNameResolver",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"net.ttddyy.observation.boot.autoconfigure.DataSourceObservationAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"net.ttddyy.observation.boot.autoconfigure.DataSourceObservationAutoConfiguration$ConditionalOnTraceType",
  "queryAllDeclaredMethods":true
},
{
  "name":"net.ttddyy.observation.boot.autoconfigure.DataSourceObservationAutoConfiguration$DataSourceTracing",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"net.ttddyy.observation.boot.autoconfigure.DataSourceObservationAutoConfiguration$Hikari",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"net.ttddyy.observation.boot.autoconfigure.DataSourceObservationBeanPostProcessor",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"postProcessAfterInitialization","parameterTypes":["java.lang.Object","java.lang.String"] }]
},
{
  "name":"net.ttddyy.observation.boot.autoconfigure.DataSourceProxyBuilderConfigurer"
},
{
  "name":"net.ttddyy.observation.boot.autoconfigure.DataSourceProxyConnectionIdManagerProvider",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"net.ttddyy.observation.boot.autoconfigure.DefaultDataSourceNameResolver",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"resolve","parameterTypes":["java.lang.String","javax.sql.DataSource"] }]
},
{
  "name":"net.ttddyy.observation.boot.autoconfigure.JdbcProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"net.ttddyy.observation.boot.autoconfigure.JdbcProperties$DataSourceProxy"
},
{
  "name":"net.ttddyy.observation.boot.autoconfigure.JdbcProperties$TraceType"
},
{
  "name":"net.ttddyy.observation.boot.autoconfigure.ProxyDataSourceBuilderCustomizer"
},
{
  "name":"net.ttddyy.observation.tracing.ConnectionAttributesManager"
},
{
  "name":"net.ttddyy.observation.tracing.ConnectionObservationConvention"
},
{
  "name":"net.ttddyy.observation.tracing.ConnectionTracingObservationHandler",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"customizeSenderSpan","parameterTypes":["io.micrometer.observation.transport.SenderContext","io.micrometer.tracing.Span"] }, {"name":"customizeSenderSpan","parameterTypes":["net.ttddyy.observation.tracing.DataSourceBaseContext","io.micrometer.tracing.Span"] }, {"name":"supportsContext","parameterTypes":["io.micrometer.observation.Observation$Context"] }]
},
{
  "name":"net.ttddyy.observation.tracing.DataSourceBaseContext"
},
{
  "name":"net.ttddyy.observation.tracing.DataSourceBaseObservationHandler",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"customizeSenderSpan","parameterTypes":["io.micrometer.observation.transport.SenderContext","io.micrometer.tracing.Span"] }, {"name":"customizeSenderSpan","parameterTypes":["net.ttddyy.observation.tracing.DataSourceBaseContext","io.micrometer.tracing.Span"] }]
},
{
  "name":"net.ttddyy.observation.tracing.DataSourceObservationListener",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"afterMethod","parameterTypes":["net.ttddyy.dsproxy.listener.MethodExecutionContext"] }, {"name":"afterQuery","parameterTypes":["net.ttddyy.dsproxy.ExecutionInfo","java.util.List"] }, {"name":"beforeMethod","parameterTypes":["net.ttddyy.dsproxy.listener.MethodExecutionContext"] }, {"name":"beforeQuery","parameterTypes":["net.ttddyy.dsproxy.ExecutionInfo","java.util.List"] }]
},
{
  "name":"net.ttddyy.observation.tracing.HikariJdbcObservationFilter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"map","parameterTypes":["io.micrometer.observation.Observation$Context"] }]
},
{
  "name":"net.ttddyy.observation.tracing.JdbcObservationDocumentation"
},
{
  "name":"net.ttddyy.observation.tracing.QueryContext"
},
{
  "name":"net.ttddyy.observation.tracing.QueryObservationConvention"
},
{
  "name":"net.ttddyy.observation.tracing.QueryParametersSpanTagProvider"
},
{
  "name":"net.ttddyy.observation.tracing.QueryTracingObservationHandler",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"supportsContext","parameterTypes":["io.micrometer.observation.Observation$Context"] }]
},
{
  "name":"net.ttddyy.observation.tracing.ResultSetObservationConvention"
},
{
  "name":"net.ttddyy.observation.tracing.ResultSetTracingObservationHandler",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"supportsContext","parameterTypes":["io.micrometer.observation.Observation$Context"] }]
},
{
  "name":"org.aopalliance.aop.Advice",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.aopalliance.intercept.Interceptor",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.aopalliance.intercept.MethodInterceptor",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.apache.catalina.Context"
},
{
  "name":"org.apache.catalina.Engine"
},
{
  "name":"org.apache.catalina.Host"
},
{
  "name":"org.apache.catalina.LifecycleEvent"
},
{
  "name":"org.apache.catalina.LifecycleListener"
},
{
  "name":"org.apache.catalina.Manager"
},
{
  "name":"org.apache.catalina.Valve"
},
{
  "name":"org.apache.catalina.connector.Connector"
},
{
  "name":"org.apache.catalina.core.ApplicationContextFacade",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"addFilter","parameterTypes":["java.lang.String","jakarta.servlet.Filter"] }, {"name":"addFilter","parameterTypes":["java.lang.String","java.lang.Class"] }, {"name":"addFilter","parameterTypes":["java.lang.String","java.lang.String"] }, {"name":"addJspFile","parameterTypes":["java.lang.String","java.lang.String"] }, {"name":"addListener","parameterTypes":["java.lang.Class"] }, {"name":"addListener","parameterTypes":["java.lang.String"] }, {"name":"addListener","parameterTypes":["java.util.EventListener"] }, {"name":"addServlet","parameterTypes":["java.lang.String","jakarta.servlet.Servlet"] }, {"name":"addServlet","parameterTypes":["java.lang.String","java.lang.Class"] }, {"name":"addServlet","parameterTypes":["java.lang.String","java.lang.String"] }, {"name":"createFilter","parameterTypes":["java.lang.Class"] }, {"name":"createListener","parameterTypes":["java.lang.Class"] }, {"name":"createServlet","parameterTypes":["java.lang.Class"] }, {"name":"declareRoles","parameterTypes":["java.lang.String[]"] }, {"name":"getAttribute","parameterTypes":["java.lang.String"] }, {"name":"getAttributeNames","parameterTypes":[] }, {"name":"getClassLoader","parameterTypes":[] }, {"name":"getContext","parameterTypes":["java.lang.String"] }, {"name":"getContextPath","parameterTypes":[] }, {"name":"getDefaultSessionTrackingModes","parameterTypes":[] }, {"name":"getEffectiveMajorVersion","parameterTypes":[] }, {"name":"getEffectiveMinorVersion","parameterTypes":[] }, {"name":"getEffectiveSessionTrackingModes","parameterTypes":[] }, {"name":"getFilterRegistration","parameterTypes":["java.lang.String"] }, {"name":"getFilterRegistrations","parameterTypes":[] }, {"name":"getInitParameter","parameterTypes":["java.lang.String"] }, {"name":"getInitParameterNames","parameterTypes":[] }, {"name":"getJspConfigDescriptor","parameterTypes":[] }, {"name":"getMajorVersion","parameterTypes":[] }, {"name":"getMimeType","parameterTypes":["java.lang.String"] }, {"name":"getMinorVersion","parameterTypes":[] }, {"name":"getNamedDispatcher","parameterTypes":["java.lang.String"] }, {"name":"getRealPath","parameterTypes":["java.lang.String"] }, {"name":"getRequestCharacterEncoding","parameterTypes":[] }, {"name":"getRequestDispatcher","parameterTypes":["java.lang.String"] }, {"name":"getResource","parameterTypes":["java.lang.String"] }, {"name":"getResourceAsStream","parameterTypes":["java.lang.String"] }, {"name":"getResourcePaths","parameterTypes":["java.lang.String"] }, {"name":"getResponseCharacterEncoding","parameterTypes":[] }, {"name":"getServerInfo","parameterTypes":[] }, {"name":"getServletContextName","parameterTypes":[] }, {"name":"getServletRegistration","parameterTypes":["java.lang.String"] }, {"name":"getServletRegistrations","parameterTypes":[] }, {"name":"getSessionCookieConfig","parameterTypes":[] }, {"name":"getSessionTimeout","parameterTypes":[] }, {"name":"getVirtualServerName","parameterTypes":[] }, {"name":"log","parameterTypes":["java.lang.String"] }, {"name":"log","parameterTypes":["java.lang.String","java.lang.Throwable"] }, {"name":"removeAttribute","parameterTypes":["java.lang.String"] }, {"name":"setAttribute","parameterTypes":["java.lang.String","java.lang.Object"] }, {"name":"setInitParameter","parameterTypes":["java.lang.String","java.lang.String"] }, {"name":"setRequestCharacterEncoding","parameterTypes":["java.lang.String"] }, {"name":"setResponseCharacterEncoding","parameterTypes":["java.lang.String"] }, {"name":"setSessionTimeout","parameterTypes":["int"] }, {"name":"setSessionTrackingModes","parameterTypes":["java.util.Set"] }]
},
{
  "name":"org.apache.catalina.loader.JdbcLeakPrevention",
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"clearJdbcDriverRegistrations","parameterTypes":[] }]
},
{
  "name":"org.apache.catalina.startup.Tomcat"
},
{
  "name":"org.apache.catalina.util.CharsetMapper",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.commons.logging.Log"
},
{
  "name":"org.apache.commons.pool2.ObjectPool"
},
{
  "name":"org.apache.coyote.AbstractProtocol",
  "methods":[{"name":"getAddress","parameterTypes":[] }, {"name":"getLocalPort","parameterTypes":[] }, {"name":"getProperty","parameterTypes":["java.lang.String"] }, {"name":"setPort","parameterTypes":["int"] }, {"name":"setProperty","parameterTypes":["java.lang.String","java.lang.String"] }]
},
{
  "name":"org.apache.coyote.ProtocolHandler"
},
{
  "name":"org.apache.coyote.http11.AbstractHttp11Protocol",
  "methods":[{"name":"isSSLEnabled","parameterTypes":[] }]
},
{
  "name":"org.apache.coyote.http11.Http11NioProtocol",
  "queryAllPublicMethods":true
},
{
  "name":"org.apache.derby.jdbc.EmbeddedDriver"
},
{
  "name":"org.apache.el.ExpressionFactoryImpl",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.hc.client5.http.classic.HttpClient"
},
{
  "name":"org.apache.hc.client5.http.impl.async.CloseableHttpAsyncClient"
},
{
  "name":"org.apache.hc.client5.http.impl.classic.HttpClients"
},
{
  "name":"org.apache.http.Header"
},
{
  "name":"org.apache.http.HttpEntity"
},
{
  "name":"org.apache.http.HttpHost"
},
{
  "name":"org.apache.http.HttpResponse"
},
{
  "name":"org.apache.http.client.config.RequestConfig$Builder"
},
{
  "name":"org.apache.http.client.methods.HttpRequestBase"
},
{
  "name":"org.apache.http.impl.nio.client.CloseableHttpAsyncClient"
},
{
  "name":"org.apache.http.impl.nio.client.HttpAsyncClientBuilder"
},
{
  "name":"org.apache.http.nio.client.HttpAsyncClient"
},
{
  "name":"org.apache.http.util.VersionInfo"
},
{
  "name":"org.apache.jasper.compiler.JspConfig"
},
{
  "name":"org.apache.jasper.servlet.JspServlet"
},
{
  "name":"org.apache.kafka.clients.admin.Admin"
},
{
  "name":"org.apache.kafka.clients.admin.DescribeTopicsResult"
},
{
  "name":"org.apache.kafka.clients.admin.NewTopic"
},
{
  "name":"org.apache.kafka.clients.admin.TopicDescription"
},
{
  "name":"org.apache.kafka.clients.consumer.Consumer"
},
{
  "name":"org.apache.kafka.clients.consumer.ConsumerGroupMetadata"
},
{
  "name":"org.apache.kafka.clients.consumer.ConsumerRecord"
},
{
  "name":"org.apache.kafka.clients.consumer.ConsumerRecords"
},
{
  "name":"org.apache.kafka.clients.consumer.CooperativeStickyAssignor",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.kafka.clients.producer.Callback"
},
{
  "name":"org.apache.kafka.clients.producer.Producer"
},
{
  "name":"org.apache.kafka.clients.producer.ProducerInterceptor",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.apache.kafka.clients.producer.ProducerRecord"
},
{
  "name":"org.apache.kafka.clients.producer.RecordMetadata"
},
{
  "name":"org.apache.kafka.common.Configurable",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.apache.kafka.common.KafkaFuture"
},
{
  "name":"org.apache.kafka.common.TopicPartition"
},
{
  "name":"org.apache.kafka.common.config.ConfigResource"
},
{
  "name":"org.apache.kafka.common.metrics.stats.CumulativeCount"
},
{
  "name":"org.apache.kafka.common.metrics.stats.CumulativeSum"
},
{
  "name":"org.apache.kafka.common.serialization.Deserializer"
},
{
  "name":"org.apache.kafka.common.serialization.Serializer"
},
{
  "name":"org.apache.kafka.common.serialization.StringDeserializer",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.kafka.common.utils.AppInfoParser$AppInfo",
  "queryAllPublicConstructors":true
},
{
  "name":"org.apache.kafka.common.utils.AppInfoParser$AppInfoMBean",
  "queryAllPublicMethods":true
},
{
  "name":"org.apache.kafka.shaded.com.google.protobuf.ExtensionRegistry",
  "methods":[{"name":"getEmptyRegistry","parameterTypes":[] }]
},
{
  "name":"org.apache.logging.log4j.core.impl.Log4jContextFactory"
},
{
  "name":"org.apache.logging.log4j.spi.ExtendedLogger"
},
{
  "name":"org.apache.logging.slf4j.SLF4JProvider"
},
{
  "name":"org.apache.tomcat.util.net.AbstractEndpoint",
  "methods":[{"name":"setBindOnInit","parameterTypes":["boolean"] }]
},
{
  "name":"org.apache.tomcat.util.net.NioEndpoint",
  "queryAllPublicMethods":true
},
{
  "name":"org.apache.tomcat.websocket.server.WsFilter",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.aspectj.lang.annotation.Around",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.aspectj.lang.annotation.Aspect",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.aspectj.weaver.reflect.Java15AnnotationFinder",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.aspectj.weaver.reflect.Java15GenericSignatureInformationProvider",
  "methods":[{"name":"<init>","parameterTypes":["org.aspectj.weaver.World"] }]
},
{
  "name":"org.aspectj.weaver.reflect.Java15ReflectionBasedReferenceTypeDelegate",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.aspectj.weaver.tools.Jdk14TraceFactory",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.asn1.ASN1Sequence"
},
{
  "name":"org.bouncycastle.jcajce.provider.asymmetric.COMPOSITE$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.asymmetric.CompositeSignatures$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.asymmetric.DH$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.asymmetric.DSA$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.asymmetric.DSTU4145$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.asymmetric.Dilithium$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.asymmetric.EC$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.asymmetric.ECGOST$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.asymmetric.EXTERNAL$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.asymmetric.EdEC$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.asymmetric.ElGamal$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.asymmetric.Falcon$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.asymmetric.GM$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.asymmetric.GOST$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.asymmetric.IES$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.asymmetric.LMS$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.asymmetric.NTRU$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.asymmetric.RSA$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.asymmetric.SPHINCSPlus$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.asymmetric.X509$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.asymmetric.rsa.KeyFactorySpi",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.digest.Blake2b$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.digest.Blake2s$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.digest.Blake3$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.digest.DSTU7564$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.digest.GOST3411$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.digest.Haraka$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.digest.Keccak$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.digest.MD2$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.digest.MD4$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.digest.MD5$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.digest.RIPEMD128$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.digest.RIPEMD160$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.digest.RIPEMD256$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.digest.RIPEMD320$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.digest.SHA1$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.digest.SHA224$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.digest.SHA256$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.digest.SHA3$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.digest.SHA384$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.digest.SHA512$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.digest.SM3$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.digest.Skein$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.digest.Tiger$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.digest.Whirlpool$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.drbg.DRBG$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.keystore.BC$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.keystore.BCFKS$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.keystore.PKCS12$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.symmetric.AES$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.symmetric.ARC4$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.symmetric.ARIA$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.symmetric.Blowfish$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.symmetric.CAST5$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.symmetric.CAST6$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.symmetric.Camellia$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.symmetric.ChaCha$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.symmetric.DES$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.symmetric.DESede$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.symmetric.DSTU7624$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.symmetric.GOST28147$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.symmetric.GOST3412_2015$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.symmetric.Grain128$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.symmetric.Grainv1$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.symmetric.HC128$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.symmetric.HC256$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.symmetric.IDEA$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.symmetric.Noekeon$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.symmetric.OpenSSLPBKDF$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.symmetric.PBEPBKDF1$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.symmetric.PBEPBKDF2$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.symmetric.PBEPKCS12$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.symmetric.Poly1305$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.symmetric.RC2$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.symmetric.RC5$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.symmetric.RC6$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.symmetric.Rijndael$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.symmetric.SCRYPT$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.symmetric.SEED$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.symmetric.SM4$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.symmetric.Salsa20$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.symmetric.Serpent$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.symmetric.Shacal2$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.symmetric.SipHash$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.symmetric.SipHash128$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.symmetric.Skipjack$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.symmetric.TEA$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.symmetric.TLSKDF$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.symmetric.Threefish$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.symmetric.Twofish$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.symmetric.VMPC$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.symmetric.VMPCKSA3$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.symmetric.XSalsa20$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.symmetric.XTEA$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.symmetric.Zuc$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.crac.Core"
},
{
  "name":"org.eclipse.collections.api.list.ImmutableList"
},
{
  "name":"org.eclipse.core.runtime.FileLocator"
},
{
  "name":"org.eclipse.jetty.client.HttpClient"
},
{
  "name":"org.elasticsearch.client.Cancellable"
},
{
  "name":"org.elasticsearch.client.Node"
},
{
  "name":"org.elasticsearch.client.NodeSelector"
},
{
  "name":"org.elasticsearch.client.Request"
},
{
  "name":"org.elasticsearch.client.Response"
},
{
  "name":"org.elasticsearch.client.ResponseListener"
},
{
  "name":"org.elasticsearch.client.RestClient",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"close","parameterTypes":[] }]
},
{
  "name":"org.elasticsearch.client.RestClient$FailureListener"
},
{
  "name":"org.elasticsearch.client.RestClient$FailureTrackingResponseListener"
},
{
  "name":"org.elasticsearch.client.RestClient$InternalRequest"
},
{
  "name":"org.elasticsearch.client.RestClient$NodeTuple"
},
{
  "name":"org.elasticsearch.client.RestClient$ResponseOrResponseException"
},
{
  "name":"org.elasticsearch.client.RestClientBuilder",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.elasticsearch.client.RestClientBuilder$HttpClientConfigCallback"
},
{
  "name":"org.elasticsearch.client.RestClientBuilder$RequestConfigCallback"
},
{
  "name":"org.elasticsearch.client.WarningsHandler"
},
{
  "name":"org.graalvm.nativeimage.ImageInfo",
  "methods":[{"name":"inImageCode","parameterTypes":[] }]
},
{
  "name":"org.h2.Driver"
},
{
  "name":"org.hibernate.validator.HibernateValidator"
},
{
  "name":"org.hibernate.validator.internal.engine.AbstractConfigurationImpl",
  "methods":[{"name":"externalClassLoader","parameterTypes":["java.lang.ClassLoader"] }]
},
{
  "name":"org.hibernate.validator.internal.engine.ConfigurationImpl"
},
{
  "name":"org.hibernate.validator.internal.util.logging.Log_$logger",
  "methods":[{"name":"<init>","parameterTypes":["org.jboss.logging.Logger"] }]
},
{
  "name":"org.hibernate.validator.internal.util.logging.Log_$logger_nl"
},
{
  "name":"org.hibernate.validator.internal.util.logging.Log_$logger_nl_NL"
},
{
  "name":"org.hibernate.validator.internal.util.logging.Messages_$bundle",
  "fields":[{"name":"INSTANCE"}]
},
{
  "name":"org.hibernate.validator.internal.util.logging.Messages_$bundle_nl"
},
{
  "name":"org.hibernate.validator.internal.util.logging.Messages_$bundle_nl_NL"
},
{
  "name":"org.hsqldb.jdbc.JDBCDriver"
},
{
  "name":"org.jboss.logging.Logger"
},
{
  "name":"org.jmolecules.ddd.annotation.Identity"
},
{
  "name":"org.jmolecules.ddd.types.Association"
},
{
  "name":"org.jmolecules.spring.IdentifierToPrimitivesConverter"
},
{
  "name":"org.joda.time.ReadableInstant"
},
{
  "name":"org.jruby.runtime.Constants"
},
{
  "name":"org.openapi.petstore.v2.model.Pet"
},
{
  "name":"org.openapi.petstore.v2.model.Pet$Status"
},
{
  "name":"org.postgresql.Driver"
},
{
  "name":"org.postgresql.core.QueryExecutorCloseAction",
  "fields":[{"name":"pgStream"}]
},
{
  "name":"org.postgresql.geometric.PGBox"
},
{
  "name":"org.postgresql.geometric.PGbox"
},
{
  "name":"org.postgresql.geometric.PGcircle"
},
{
  "name":"org.postgresql.geometric.PGline"
},
{
  "name":"org.postgresql.geometric.PGlseg"
},
{
  "name":"org.postgresql.geometric.PGpath"
},
{
  "name":"org.postgresql.geometric.PGpoint"
},
{
  "name":"org.postgresql.geometric.PGpolygon"
},
{
  "name":"org.postgresql.jdbc.PgStatement",
  "fields":[{"name":"cancelTimerTask"}, {"name":"isClosed"}, {"name":"statementState"}]
},
{
  "name":"org.postgresql.jdbc.TypeInfoCache"
},
{
  "name":"org.postgresql.util.PGobject"
},
{
  "name":"org.postgresql.util.PSQLException"
},
{
  "name":"org.reactivestreams.Publisher"
},
{
  "name":"org.slf4j.Logger"
},
{
  "name":"org.slf4j.bridge.SLF4JBridgeHandler"
},
{
  "name":"org.slf4j.spi.LocationAwareLogger",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springdoc.api.AbstractOpenApiResource",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springdoc.api.AbstractOpenApiResource$ConditionType"
},
{
  "name":"org.springdoc.api.OpenApiResourceNotFoundException"
},
{
  "name":"org.springdoc.core.annotations.RouterOperation"
},
{
  "name":"org.springdoc.core.configuration.SpringDocConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springdoc.core.configuration.SpringDocConfiguration$OpenApiResourceAdvice",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":["org.springdoc.core.configuration.SpringDocConfiguration"] }]
},
{
  "name":"org.springdoc.core.configuration.SpringDocConfiguration$QuerydslProvider",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springdoc.core.configuration.SpringDocConfiguration$SpringDocSpringDataWebPropertiesProvider",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springdoc.core.configuration.SpringDocConfiguration$SpringDocWebFluxSupportConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springdoc.core.configuration.SpringDocConfiguration$WebConversionServiceConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springdoc.core.configuration.SpringDocJacksonKotlinModuleConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springdoc.core.configuration.SpringDocKotlinConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"nullableKotlinRequestParameterCustomizer","parameterTypes":[] }]
},
{
  "name":"org.springdoc.core.configuration.SpringDocPageableConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springdoc.core.configuration.SpringDocSortConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springdoc.core.configuration.SpringDocUIConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":["java.util.Optional"] }, {"name":"afterPropertiesSet","parameterTypes":[] }]
},
{
  "name":"org.springdoc.core.converters.AdditionalModelsConverter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"resolve","parameterTypes":["io.swagger.v3.core.converter.AnnotatedType","io.swagger.v3.core.converter.ModelConverterContext","java.util.Iterator"] }]
},
{
  "name":"org.springdoc.core.converters.FileSupportConverter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"resolve","parameterTypes":["io.swagger.v3.core.converter.AnnotatedType","io.swagger.v3.core.converter.ModelConverterContext","java.util.Iterator"] }]
},
{
  "name":"org.springdoc.core.converters.ModelConverterRegistrar",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springdoc.core.converters.PageOpenAPIConverter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"resolve","parameterTypes":["io.swagger.v3.core.converter.AnnotatedType","io.swagger.v3.core.converter.ModelConverterContext","java.util.Iterator"] }]
},
{
  "name":"org.springdoc.core.converters.PageableOpenAPIConverter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"resolve","parameterTypes":["io.swagger.v3.core.converter.AnnotatedType","io.swagger.v3.core.converter.ModelConverterContext","java.util.Iterator"] }]
},
{
  "name":"org.springdoc.core.converters.PolymorphicModelConverter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"resolve","parameterTypes":["io.swagger.v3.core.converter.AnnotatedType","io.swagger.v3.core.converter.ModelConverterContext","java.util.Iterator"] }]
},
{
  "name":"org.springdoc.core.converters.PropertyCustomizingConverter"
},
{
  "name":"org.springdoc.core.converters.ResponseSupportConverter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"resolve","parameterTypes":["io.swagger.v3.core.converter.AnnotatedType","io.swagger.v3.core.converter.ModelConverterContext","java.util.Iterator"] }]
},
{
  "name":"org.springdoc.core.converters.SchemaPropertyDeprecatingConverter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"resolve","parameterTypes":["io.swagger.v3.core.converter.AnnotatedType","io.swagger.v3.core.converter.ModelConverterContext","java.util.Iterator"] }]
},
{
  "name":"org.springdoc.core.converters.SortOpenAPIConverter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"resolve","parameterTypes":["io.swagger.v3.core.converter.AnnotatedType","io.swagger.v3.core.converter.ModelConverterContext","java.util.Iterator"] }]
},
{
  "name":"org.springdoc.core.converters.WebFluxSupportConverter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"resolve","parameterTypes":["io.swagger.v3.core.converter.AnnotatedType","io.swagger.v3.core.converter.ModelConverterContext","java.util.Iterator"] }]
},
{
  "name":"org.springdoc.core.customizers.DataRestDelegatingMethodParameterCustomizer",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"customize","parameterTypes":["org.springframework.core.MethodParameter","org.springframework.core.MethodParameter"] }]
},
{
  "name":"org.springdoc.core.customizers.DataRestDelegatingMethodParameterCustomizer$DefaultSort"
},
{
  "name":"org.springdoc.core.customizers.DelegatingMethodParameterCustomizer",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springdoc.core.customizers.GlobalOpenApiCustomizer",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springdoc.core.customizers.GlobalOperationCustomizer",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springdoc.core.customizers.OpenApiBuilderCustomizer"
},
{
  "name":"org.springdoc.core.customizers.OpenApiCustomizer",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springdoc.core.customizers.OpenApiLocaleCustomizer"
},
{
  "name":"org.springdoc.core.customizers.OperationCustomizer",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springdoc.core.customizers.OperationIdCustomizer",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"customise","parameterTypes":["io.swagger.v3.oas.models.OpenAPI"] }]
},
{
  "name":"org.springdoc.core.customizers.ParameterCustomizer",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springdoc.core.customizers.ParameterObjectNamingStrategyCustomizer",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"customize","parameterTypes":["org.springframework.core.MethodParameter","org.springframework.core.MethodParameter"] }]
},
{
  "name":"org.springdoc.core.customizers.QuerydslPredicateOperationCustomizer",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"customize","parameterTypes":["io.swagger.v3.oas.models.Operation","org.springframework.web.method.HandlerMethod"] }]
},
{
  "name":"org.springdoc.core.customizers.SpringDocCustomizers",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"afterPropertiesSet","parameterTypes":[] }, {"name":"setApplicationContext","parameterTypes":["org.springframework.context.ApplicationContext"] }]
},
{
  "name":"org.springdoc.core.discoverer.SpringDocParameterNameDiscoverer",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"getParameterNames","parameterTypes":["java.lang.reflect.Method"] }]
},
{
  "name":"org.springdoc.core.filters.OpenApiMethodFilter"
},
{
  "name":"org.springdoc.core.fn.AbstractRouterFunctionVisitor"
},
{
  "name":"org.springdoc.core.fn.RouterFunctionData"
},
{
  "name":"org.springdoc.core.fn.RouterOperation"
},
{
  "name":"org.springdoc.core.models.ControllerAdviceInfo"
},
{
  "name":"org.springdoc.core.models.MethodAttributes"
},
{
  "name":"org.springdoc.core.models.ParameterId"
},
{
  "name":"org.springdoc.core.models.ParameterInfo"
},
{
  "name":"org.springdoc.core.models.RequestBodyInfo"
},
{
  "name":"org.springdoc.core.properties.AbstractSwaggerUiConfigProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"getConfigUrl","parameterTypes":[] }, {"name":"getDeepLinking","parameterTypes":[] }, {"name":"getDefaultModelExpandDepth","parameterTypes":[] }, {"name":"getDefaultModelRendering","parameterTypes":[] }, {"name":"getDefaultModelsExpandDepth","parameterTypes":[] }, {"name":"getDisplayOperationId","parameterTypes":[] }, {"name":"getDisplayRequestDuration","parameterTypes":[] }, {"name":"getDocExpansion","parameterTypes":[] }, {"name":"getFilter","parameterTypes":[] }, {"name":"getGroupsOrder","parameterTypes":[] }, {"name":"getLayout","parameterTypes":[] }, {"name":"getMaxDisplayedTags","parameterTypes":[] }, {"name":"getOauth2RedirectUrl","parameterTypes":[] }, {"name":"getOperationsSorter","parameterTypes":[] }, {"name":"getPath","parameterTypes":[] }, {"name":"getPersistAuthorization","parameterTypes":[] }, {"name":"getQueryConfigEnabled","parameterTypes":[] }, {"name":"getShowCommonExtensions","parameterTypes":[] }, {"name":"getShowExtensions","parameterTypes":[] }, {"name":"getSupportedSubmitMethods","parameterTypes":[] }, {"name":"getTagsSorter","parameterTypes":[] }, {"name":"getTryItOutEnabled","parameterTypes":[] }, {"name":"getUrl","parameterTypes":[] }, {"name":"getUrls","parameterTypes":[] }, {"name":"getUrlsPrimaryName","parameterTypes":[] }, {"name":"getValidatorUrl","parameterTypes":[] }, {"name":"getWithCredentials","parameterTypes":[] }, {"name":"setConfigUrl","parameterTypes":["java.lang.String"] }, {"name":"setDeepLinking","parameterTypes":["java.lang.Boolean"] }, {"name":"setDefaultModelExpandDepth","parameterTypes":["java.lang.Integer"] }, {"name":"setDefaultModelRendering","parameterTypes":["java.lang.String"] }, {"name":"setDefaultModelsExpandDepth","parameterTypes":["java.lang.Integer"] }, {"name":"setDisplayOperationId","parameterTypes":["java.lang.Boolean"] }, {"name":"setDisplayRequestDuration","parameterTypes":["java.lang.Boolean"] }, {"name":"setDocExpansion","parameterTypes":["java.lang.String"] }, {"name":"setFilter","parameterTypes":["java.lang.String"] }, {"name":"setGroupsOrder","parameterTypes":["org.springdoc.core.properties.AbstractSwaggerUiConfigProperties$Direction"] }, {"name":"setLayout","parameterTypes":["java.lang.String"] }, {"name":"setMaxDisplayedTags","parameterTypes":["java.lang.Integer"] }, {"name":"setOauth2RedirectUrl","parameterTypes":["java.lang.String"] }, {"name":"setOperationsSorter","parameterTypes":["java.lang.String"] }, {"name":"setPath","parameterTypes":["java.lang.String"] }, {"name":"setPersistAuthorization","parameterTypes":["java.lang.Boolean"] }, {"name":"setQueryConfigEnabled","parameterTypes":["java.lang.Boolean"] }, {"name":"setShowCommonExtensions","parameterTypes":["java.lang.Boolean"] }, {"name":"setShowExtensions","parameterTypes":["java.lang.Boolean"] }, {"name":"setSupportedSubmitMethods","parameterTypes":["java.util.List"] }, {"name":"setTagsSorter","parameterTypes":["java.lang.String"] }, {"name":"setTryItOutEnabled","parameterTypes":["java.lang.Boolean"] }, {"name":"setUrl","parameterTypes":["java.lang.String"] }, {"name":"setUrls","parameterTypes":["java.util.Set"] }, {"name":"setUrlsPrimaryName","parameterTypes":["java.lang.String"] }, {"name":"setValidatorUrl","parameterTypes":["java.lang.String"] }, {"name":"setWithCredentials","parameterTypes":["java.lang.Boolean"] }]
},
{
  "name":"org.springdoc.core.properties.AbstractSwaggerUiConfigProperties$Direction"
},
{
  "name":"org.springdoc.core.properties.AbstractSwaggerUiConfigProperties$SwaggerUrl"
},
{
  "name":"org.springdoc.core.properties.SpringDocConfigProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"getPathsToMatch","parameterTypes":[] }, {"name":"setPathsToMatch","parameterTypes":["java.util.List"] }]
},
{
  "name":"org.springdoc.core.properties.SpringDocConfigProperties$ApiDocs"
},
{
  "name":"org.springdoc.core.properties.SpringDocConfigProperties$Cache"
},
{
  "name":"org.springdoc.core.properties.SpringDocConfigProperties$GroupConfig"
},
{
  "name":"org.springdoc.core.properties.SpringDocConfigProperties$ModelConverters"
},
{
  "name":"org.springdoc.core.properties.SpringDocConfigProperties$SortConverter"
},
{
  "name":"org.springdoc.core.properties.SpringDocConfigProperties$Webjars"
},
{
  "name":"org.springdoc.core.properties.SwaggerUiConfigParameters"
},
{
  "name":"org.springdoc.core.properties.SwaggerUiConfigProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"setDisableSwaggerDefaultUrl","parameterTypes":["boolean"] }]
},
{
  "name":"org.springdoc.core.properties.SwaggerUiConfigProperties$Csrf"
},
{
  "name":"org.springdoc.core.properties.SwaggerUiConfigProperties$SyntaxHighlight"
},
{
  "name":"org.springdoc.core.properties.SwaggerUiOAuthProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springdoc.core.providers.ActuatorProvider"
},
{
  "name":"org.springdoc.core.providers.CloudFunctionProvider"
},
{
  "name":"org.springdoc.core.providers.JavadocProvider"
},
{
  "name":"org.springdoc.core.providers.ObjectMapperProvider",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springdoc.core.providers.RepositoryRestResourceProvider"
},
{
  "name":"org.springdoc.core.providers.RouterFunctionProvider",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springdoc.core.providers.SpringDataWebPropertiesProvider",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springdoc.core.providers.SpringDocProviders",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springdoc.core.providers.SpringWebProvider",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"setApplicationContext","parameterTypes":["org.springframework.context.ApplicationContext"] }]
},
{
  "name":"org.springdoc.core.providers.WebConversionServiceProvider",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"afterPropertiesSet","parameterTypes":[] }, {"name":"setApplicationContext","parameterTypes":["org.springframework.context.ApplicationContext"] }]
},
{
  "name":"org.springdoc.core.service.AbstractRequestService",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"applyBeanValidatorAnnotations","parameterTypes":["io.swagger.v3.oas.models.parameters.Parameter","java.util.List"] }, {"name":"applyBeanValidatorAnnotations","parameterTypes":["io.swagger.v3.oas.models.parameters.RequestBody","java.util.List","boolean"] }, {"name":"build","parameterTypes":["org.springframework.web.method.HandlerMethod","org.springframework.web.bind.annotation.RequestMethod","io.swagger.v3.oas.models.Operation","org.springdoc.core.models.MethodAttributes","io.swagger.v3.oas.models.OpenAPI"] }, {"name":"buildParam","parameterTypes":["org.springdoc.core.models.ParameterInfo","io.swagger.v3.oas.models.Components","com.fasterxml.jackson.annotation.JsonView"] }, {"name":"buildParams","parameterTypes":["org.springdoc.core.models.ParameterInfo","io.swagger.v3.oas.models.Components","org.springframework.web.bind.annotation.RequestMethod","org.springdoc.core.models.MethodAttributes","java.lang.String"] }, {"name":"getParameterBuilder","parameterTypes":[] }, {"name":"getRequestBodyBuilder","parameterTypes":[] }, {"name":"isDefaultFlatParamObject","parameterTypes":[] }, {"name":"isParamToIgnore","parameterTypes":["org.springframework.core.MethodParameter"] }, {"name":"isValidParameter","parameterTypes":["io.swagger.v3.oas.models.parameters.Parameter"] }]
},
{
  "name":"org.springdoc.core.service.GenericParameterService",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springdoc.core.service.GenericResponseService",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"setApplicationContext","parameterTypes":["org.springframework.context.ApplicationContext"] }]
},
{
  "name":"org.springdoc.core.service.OpenAPIService",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"setApplicationContext","parameterTypes":["org.springframework.context.ApplicationContext"] }]
},
{
  "name":"org.springdoc.core.service.OperationService",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springdoc.core.service.RequestBodyService",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springdoc.core.service.SecurityService",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springdoc.core.utils.Constants",
  "allPublicFields":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springdoc.core.utils.PropertyResolverUtils",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springdoc.ui.AbstractSwaggerIndexTransformer",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springdoc.ui.AbstractSwaggerWelcome",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springdoc.webmvc.api.OpenApiActuatorResource"
},
{
  "name":"org.springdoc.webmvc.api.OpenApiResource",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springdoc.webmvc.api.OpenApiWebMvcResource",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"openapiJson","parameterTypes":["jakarta.servlet.http.HttpServletRequest","java.lang.String","java.util.Locale"] }, {"name":"openapiYaml","parameterTypes":["jakarta.servlet.http.HttpServletRequest","java.lang.String","java.util.Locale"] }]
},
{
  "name":"org.springdoc.webmvc.core.configuration.SpringDocWebMvcConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springdoc.webmvc.core.configuration.SpringDocWebMvcConfiguration$SpringDocWebMvcActuatorConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springdoc.webmvc.core.configuration.SpringDocWebMvcConfiguration$SpringDocWebMvcRouterConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springdoc.webmvc.core.providers.RouterFunctionWebMvcProvider",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"getRouterFunctionPaths","parameterTypes":[] }, {"name":"setApplicationContext","parameterTypes":["org.springframework.context.ApplicationContext"] }]
},
{
  "name":"org.springdoc.webmvc.core.providers.SpringWebMvcProvider",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"findPathPrefix","parameterTypes":["org.springdoc.core.properties.SpringDocConfigProperties"] }, {"name":"getActivePatterns","parameterTypes":["java.lang.Object"] }, {"name":"getHandlerMethods","parameterTypes":[] }]
},
{
  "name":"org.springdoc.webmvc.core.service.RequestService",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springdoc.webmvc.ui.SwaggerConfig",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springdoc.webmvc.ui.SwaggerConfigResource",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springdoc.webmvc.ui.SwaggerIndexPageTransformer",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"transform","parameterTypes":["jakarta.servlet.http.HttpServletRequest","org.springframework.core.io.Resource","org.springframework.web.servlet.resource.ResourceTransformerChain"] }]
},
{
  "name":"org.springdoc.webmvc.ui.SwaggerIndexTransformer",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springdoc.webmvc.ui.SwaggerResourceResolver",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springdoc.webmvc.ui.SwaggerUiHome"
},
{
  "name":"org.springdoc.webmvc.ui.SwaggerWebMvcConfigurer",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"addArgumentResolvers","parameterTypes":["java.util.List"] }, {"name":"addCorsMappings","parameterTypes":["org.springframework.web.servlet.config.annotation.CorsRegistry"] }, {"name":"addFormatters","parameterTypes":["org.springframework.format.FormatterRegistry"] }, {"name":"addInterceptors","parameterTypes":["org.springframework.web.servlet.config.annotation.InterceptorRegistry"] }, {"name":"addResourceHandlers","parameterTypes":["org.springframework.web.servlet.config.annotation.ResourceHandlerRegistry"] }, {"name":"addReturnValueHandlers","parameterTypes":["java.util.List"] }, {"name":"addViewControllers","parameterTypes":["org.springframework.web.servlet.config.annotation.ViewControllerRegistry"] }, {"name":"configureAsyncSupport","parameterTypes":["org.springframework.web.servlet.config.annotation.AsyncSupportConfigurer"] }, {"name":"configureContentNegotiation","parameterTypes":["org.springframework.web.servlet.config.annotation.ContentNegotiationConfigurer"] }, {"name":"configureDefaultServletHandling","parameterTypes":["org.springframework.web.servlet.config.annotation.DefaultServletHandlerConfigurer"] }, {"name":"configureHandlerExceptionResolvers","parameterTypes":["java.util.List"] }, {"name":"configureMessageConverters","parameterTypes":["java.util.List"] }, {"name":"configurePathMatch","parameterTypes":["org.springframework.web.servlet.config.annotation.PathMatchConfigurer"] }, {"name":"configureViewResolvers","parameterTypes":["org.springframework.web.servlet.config.annotation.ViewResolverRegistry"] }, {"name":"extendHandlerExceptionResolvers","parameterTypes":["java.util.List"] }, {"name":"extendMessageConverters","parameterTypes":["java.util.List"] }, {"name":"getMessageCodesResolver","parameterTypes":[] }, {"name":"getValidator","parameterTypes":[] }]
},
{
  "name":"org.springdoc.webmvc.ui.SwaggerWelcomeCommon",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springdoc.webmvc.ui.SwaggerWelcomeWebMvc",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.ai.autoconfigure.chat.client.ChatClientAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.ai.autoconfigure.chat.client.ChatClientBuilderConfigurer",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.ai.autoconfigure.chat.client.ChatClientBuilderProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.ai.autoconfigure.chat.client.ChatClientBuilderProperties$Observations"
},
{
  "name":"org.springframework.ai.autoconfigure.chat.observation.ChatObservationAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.ai.autoconfigure.chat.observation.ChatObservationAutoConfiguration$FallbackChatContentObservationConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.ai.autoconfigure.chat.observation.ChatObservationAutoConfiguration$TracingChatContentObservationConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.ai.autoconfigure.chat.observation.ChatObservationProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.ai.autoconfigure.embedding.observation.EmbeddingObservationAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.ai.autoconfigure.image.observation.ImageObservationAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.ai.autoconfigure.image.observation.ImageObservationProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.ai.autoconfigure.ollama.OllamaAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.ai.autoconfigure.ollama.OllamaAutoConfiguration$PropertiesOllamaConnectionDetails",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"getBaseUrl","parameterTypes":[] }]
},
{
  "name":"org.springframework.ai.autoconfigure.ollama.OllamaChatProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"setModel","parameterTypes":["java.lang.String"] }]
},
{
  "name":"org.springframework.ai.autoconfigure.ollama.OllamaConnectionDetails",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.ai.autoconfigure.ollama.OllamaConnectionProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"setBaseUrl","parameterTypes":["java.lang.String"] }]
},
{
  "name":"org.springframework.ai.autoconfigure.ollama.OllamaEmbeddingProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"setModel","parameterTypes":["java.lang.String"] }]
},
{
  "name":"org.springframework.ai.autoconfigure.ollama.OllamaInitializationProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.ai.autoconfigure.ollama.OllamaInitializationProperties$ModelTypeInit"
},
{
  "name":"org.springframework.ai.autoconfigure.retry.SpringAiRetryAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.ai.autoconfigure.retry.SpringAiRetryAutoConfiguration$2",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"handleError","parameterTypes":["org.springframework.http.client.ClientHttpResponse"] }, {"name":"hasError","parameterTypes":["org.springframework.http.client.ClientHttpResponse"] }]
},
{
  "name":"org.springframework.ai.autoconfigure.retry.SpringAiRetryProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.ai.autoconfigure.retry.SpringAiRetryProperties$Backoff"
},
{
  "name":"org.springframework.ai.autoconfigure.vectorstore.CommonVectorStoreProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"isInitializeSchema","parameterTypes":[] }, {"name":"setInitializeSchema","parameterTypes":["boolean"] }]
},
{
  "name":"org.springframework.ai.autoconfigure.vectorstore.observation.VectorStoreObservationAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.ai.autoconfigure.vectorstore.observation.VectorStoreObservationAutoConfiguration$FallbackVectorStoreQueryResponseContentObservationConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.ai.autoconfigure.vectorstore.observation.VectorStoreObservationProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.ai.autoconfigure.vectorstore.pgvector.PgVectorStoreAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.ai.autoconfigure.vectorstore.pgvector.PgVectorStoreProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.ai.chat.client.ChatClient",
  "allDeclaredClasses":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.ai.chat.client.ChatClient$AdvisorSpec"
},
{
  "name":"org.springframework.ai.chat.client.ChatClient$Builder",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.ai.chat.client.ChatClient$ChatClientRequestSpec"
},
{
  "name":"org.springframework.ai.chat.client.DefaultChatClient",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"mutate","parameterTypes":[] }, {"name":"prompt","parameterTypes":[] }, {"name":"prompt","parameterTypes":["java.lang.String"] }, {"name":"prompt","parameterTypes":["org.springframework.ai.chat.prompt.Prompt"] }]
},
{
  "name":"org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec"
},
{
  "name":"org.springframework.ai.chat.client.DefaultChatClientBuilder",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"build","parameterTypes":[] }, {"name":"clone","parameterTypes":[] }, {"name":"defaultAdvisors","parameterTypes":["java.util.List"] }, {"name":"defaultAdvisors","parameterTypes":["java.util.function.Consumer"] }, {"name":"defaultAdvisors","parameterTypes":["org.springframework.ai.chat.client.advisor.api.Advisor[]"] }, {"name":"defaultFunction","parameterTypes":["java.lang.String","java.lang.String","java.util.function.BiFunction"] }, {"name":"defaultFunction","parameterTypes":["java.lang.String","java.lang.String","java.util.function.Function"] }, {"name":"defaultFunctions","parameterTypes":["java.lang.String[]"] }, {"name":"defaultFunctions","parameterTypes":["org.springframework.ai.model.function.FunctionCallback[]"] }, {"name":"defaultOptions","parameterTypes":["org.springframework.ai.chat.prompt.ChatOptions"] }, {"name":"defaultSystem","parameterTypes":["java.lang.String"] }, {"name":"defaultSystem","parameterTypes":["java.util.function.Consumer"] }, {"name":"defaultSystem","parameterTypes":["org.springframework.core.io.Resource"] }, {"name":"defaultSystem","parameterTypes":["org.springframework.core.io.Resource","java.nio.charset.Charset"] }, {"name":"defaultToolContext","parameterTypes":["java.util.Map"] }, {"name":"defaultUser","parameterTypes":["java.lang.String"] }, {"name":"defaultUser","parameterTypes":["java.util.function.Consumer"] }, {"name":"defaultUser","parameterTypes":["org.springframework.core.io.Resource"] }, {"name":"defaultUser","parameterTypes":["org.springframework.core.io.Resource","java.nio.charset.Charset"] }]
},
{
  "name":"org.springframework.ai.chat.client.advisor.api.AdvisedRequest"
},
{
  "name":"org.springframework.ai.chat.client.advisor.api.Advisor"
},
{
  "name":"org.springframework.ai.chat.client.observation.ChatClientInputContentObservationFilter"
},
{
  "name":"org.springframework.ai.chat.client.observation.ChatClientObservationConvention"
},
{
  "name":"org.springframework.ai.chat.memory.ChatMemory",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"add","parameterTypes":["java.lang.String","org.springframework.ai.chat.messages.Message"] }]
},
{
  "name":"org.springframework.ai.chat.messages.AssistantMessage"
},
{
  "name":"org.springframework.ai.chat.messages.AssistantMessage$ToolCall"
},
{
  "name":"org.springframework.ai.chat.messages.Message"
},
{
  "name":"org.springframework.ai.chat.messages.MessageType"
},
{
  "name":"org.springframework.ai.chat.messages.ToolResponseMessage"
},
{
  "name":"org.springframework.ai.chat.messages.ToolResponseMessage$ToolResponse"
},
{
  "name":"org.springframework.ai.chat.metadata.ChatResponseMetadata"
},
{
  "name":"org.springframework.ai.chat.model.AbstractToolCallSupport",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"call","parameterTypes":["org.springframework.ai.model.ModelRequest"] }, {"name":"getFunctionCallbackRegister","parameterTypes":[] }, {"name":"stream","parameterTypes":["org.springframework.ai.model.ModelRequest"] }]
},
{
  "name":"org.springframework.ai.chat.model.ChatModel",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"call","parameterTypes":["java.lang.String"] }, {"name":"call","parameterTypes":["org.springframework.ai.model.ModelRequest"] }, {"name":"call","parameterTypes":["org.springframework.ai.chat.messages.Message[]"] }, {"name":"stream","parameterTypes":["org.springframework.ai.model.ModelRequest"] }]
},
{
  "name":"org.springframework.ai.chat.model.ChatResponse"
},
{
  "name":"org.springframework.ai.chat.model.Generation"
},
{
  "name":"org.springframework.ai.chat.model.StreamingChatModel",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"stream","parameterTypes":["java.lang.String"] }, {"name":"stream","parameterTypes":["org.springframework.ai.model.ModelRequest"] }, {"name":"stream","parameterTypes":["org.springframework.ai.chat.messages.Message[]"] }]
},
{
  "name":"org.springframework.ai.chat.model.ToolContext"
},
{
  "name":"org.springframework.ai.chat.observation.ChatModelCompletionObservationFilter"
},
{
  "name":"org.springframework.ai.chat.observation.ChatModelMeterObservationHandler",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"onStop","parameterTypes":["io.micrometer.observation.Observation$Context"] }, {"name":"supportsContext","parameterTypes":["io.micrometer.observation.Observation$Context"] }]
},
{
  "name":"org.springframework.ai.chat.observation.ChatModelObservationContext"
},
{
  "name":"org.springframework.ai.chat.observation.ChatModelObservationConvention"
},
{
  "name":"org.springframework.ai.chat.observation.ChatModelPromptContentObservationFilter"
},
{
  "name":"org.springframework.ai.chat.prompt.ChatOptions",
  "allDeclaredFields":true,
  "allDeclaredClasses":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.ai.chat.prompt.Prompt"
},
{
  "name":"org.springframework.ai.document.Document"
},
{
  "name":"org.springframework.ai.document.DocumentWriter",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"accept","parameterTypes":["java.lang.Object"] }, {"name":"write","parameterTypes":["java.util.List"] }]
},
{
  "name":"org.springframework.ai.embedding.AbstractEmbeddingModel",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"dimensions","parameterTypes":[] }]
},
{
  "name":"org.springframework.ai.embedding.BatchingStrategy",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.ai.embedding.Embedding"
},
{
  "name":"org.springframework.ai.embedding.EmbeddingModel",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"call","parameterTypes":["org.springframework.ai.model.ModelRequest"] }, {"name":"embed","parameterTypes":["java.lang.String"] }, {"name":"embed","parameterTypes":["java.util.List"] }, {"name":"embed","parameterTypes":["java.util.List","org.springframework.ai.embedding.EmbeddingOptions","org.springframework.ai.embedding.BatchingStrategy"] }, {"name":"embedForResponse","parameterTypes":["java.util.List"] }]
},
{
  "name":"org.springframework.ai.embedding.EmbeddingOptions",
  "allDeclaredFields":true,
  "allDeclaredClasses":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.ai.embedding.EmbeddingRequest"
},
{
  "name":"org.springframework.ai.embedding.EmbeddingResponse"
},
{
  "name":"org.springframework.ai.embedding.TokenCountBatchingStrategy",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"batch","parameterTypes":["java.util.List"] }]
},
{
  "name":"org.springframework.ai.embedding.observation.EmbeddingModelMeterObservationHandler",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"onStop","parameterTypes":["io.micrometer.observation.Observation$Context"] }, {"name":"supportsContext","parameterTypes":["io.micrometer.observation.Observation$Context"] }]
},
{
  "name":"org.springframework.ai.embedding.observation.EmbeddingModelObservationContext"
},
{
  "name":"org.springframework.ai.embedding.observation.EmbeddingModelObservationConvention"
},
{
  "name":"org.springframework.ai.image.observation.ImageModelPromptContentObservationFilter"
},
{
  "name":"org.springframework.ai.model.Media"
},
{
  "name":"org.springframework.ai.model.Model",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"call","parameterTypes":["org.springframework.ai.model.ModelRequest"] }, {"name":"stream","parameterTypes":["org.springframework.ai.model.ModelRequest"] }]
},
{
  "name":"org.springframework.ai.model.ModelOptions",
  "allDeclaredFields":true,
  "allDeclaredClasses":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.ai.model.StreamingModel",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"stream","parameterTypes":["org.springframework.ai.model.ModelRequest"] }]
},
{
  "name":"org.springframework.ai.model.function.DefaultFunctionCallbackResolver",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"resolve","parameterTypes":["java.lang.String"] }, {"name":"setApplicationContext","parameterTypes":["org.springframework.context.ApplicationContext"] }]
},
{
  "name":"org.springframework.ai.model.function.FunctionCallback"
},
{
  "name":"org.springframework.ai.model.function.FunctionCallback$SchemaType"
},
{
  "name":"org.springframework.ai.model.function.FunctionCallbackResolver",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.ai.model.function.FunctionCallingOptions",
  "allDeclaredFields":true,
  "allDeclaredClasses":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.ai.model.observation.ErrorLoggingObservationHandler"
},
{
  "name":"org.springframework.ai.ollama.OllamaChatModel",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"call","parameterTypes":["org.springframework.ai.chat.prompt.Prompt"] }, {"name":"call","parameterTypes":["org.springframework.ai.model.ModelRequest"] }, {"name":"getDefaultOptions","parameterTypes":[] }, {"name":"stream","parameterTypes":["org.springframework.ai.chat.prompt.Prompt"] }, {"name":"stream","parameterTypes":["org.springframework.ai.model.ModelRequest"] }]
},
{
  "name":"org.springframework.ai.ollama.OllamaChatModel$Builder"
},
{
  "name":"org.springframework.ai.ollama.OllamaEmbeddingModel",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"call","parameterTypes":["org.springframework.ai.embedding.EmbeddingRequest"] }, {"name":"call","parameterTypes":["org.springframework.ai.model.ModelRequest"] }, {"name":"embed","parameterTypes":["org.springframework.ai.document.Document"] }]
},
{
  "name":"org.springframework.ai.ollama.OllamaEmbeddingModel$Builder"
},
{
  "name":"org.springframework.ai.ollama.api.OllamaApi",
  "allDeclaredFields":true,
  "allDeclaredClasses":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.ai.ollama.api.OllamaApi$ChatRequest"
},
{
  "name":"org.springframework.ai.ollama.api.OllamaApi$ChatRequest$Tool"
},
{
  "name":"org.springframework.ai.ollama.api.OllamaApi$ChatResponse"
},
{
  "name":"org.springframework.ai.ollama.api.OllamaApi$CopyModelRequest"
},
{
  "name":"org.springframework.ai.ollama.api.OllamaApi$DeleteModelRequest"
},
{
  "name":"org.springframework.ai.ollama.api.OllamaApi$EmbeddingsRequest",
  "allDeclaredFields":true,
  "allDeclaredClasses":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"input","parameterTypes":[] }, {"name":"keepAlive","parameterTypes":[] }, {"name":"model","parameterTypes":[] }, {"name":"options","parameterTypes":[] }, {"name":"truncate","parameterTypes":[] }]
},
{
  "name":"org.springframework.ai.ollama.api.OllamaApi$EmbeddingsResponse",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["java.lang.String","java.util.List","java.lang.Long","java.lang.Long","java.lang.Integer"] }]
},
{
  "name":"org.springframework.ai.ollama.api.OllamaApi$ListModelResponse"
},
{
  "name":"org.springframework.ai.ollama.api.OllamaApi$Message"
},
{
  "name":"org.springframework.ai.ollama.api.OllamaApi$Message$ToolCall"
},
{
  "name":"org.springframework.ai.ollama.api.OllamaApi$PullModelRequest"
},
{
  "name":"org.springframework.ai.ollama.api.OllamaApi$ShowModelRequest"
},
{
  "name":"org.springframework.ai.ollama.api.OllamaApi$ShowModelResponse"
},
{
  "name":"org.springframework.ai.ollama.api.OllamaModel"
},
{
  "name":"org.springframework.ai.ollama.api.OllamaOptions",
  "allDeclaredFields":true,
  "allDeclaredClasses":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"getF16KV","parameterTypes":[] }, {"name":"getFormat","parameterTypes":[] }, {"name":"getFrequencyPenalty","parameterTypes":[] }, {"name":"getKeepAlive","parameterTypes":[] }, {"name":"getLogitsAll","parameterTypes":[] }, {"name":"getLowVRAM","parameterTypes":[] }, {"name":"getMainGPU","parameterTypes":[] }, {"name":"getMirostat","parameterTypes":[] }, {"name":"getMirostatEta","parameterTypes":[] }, {"name":"getMirostatTau","parameterTypes":[] }, {"name":"getModel","parameterTypes":[] }, {"name":"getNumBatch","parameterTypes":[] }, {"name":"getNumCtx","parameterTypes":[] }, {"name":"getNumGPU","parameterTypes":[] }, {"name":"getNumKeep","parameterTypes":[] }, {"name":"getNumPredict","parameterTypes":[] }, {"name":"getNumThread","parameterTypes":[] }, {"name":"getPenalizeNewline","parameterTypes":[] }, {"name":"getPresencePenalty","parameterTypes":[] }, {"name":"getRepeatLastN","parameterTypes":[] }, {"name":"getRepeatPenalty","parameterTypes":[] }, {"name":"getSeed","parameterTypes":[] }, {"name":"getStop","parameterTypes":[] }, {"name":"getTemperature","parameterTypes":[] }, {"name":"getTfsZ","parameterTypes":[] }, {"name":"getTopK","parameterTypes":[] }, {"name":"getTopP","parameterTypes":[] }, {"name":"getTruncate","parameterTypes":[] }, {"name":"getTypicalP","parameterTypes":[] }, {"name":"getUseMLock","parameterTypes":[] }, {"name":"getUseMMap","parameterTypes":[] }, {"name":"getUseNUMA","parameterTypes":[] }, {"name":"getVocabOnly","parameterTypes":[] }, {"name":"setModel","parameterTypes":["java.lang.String"] }]
},
{
  "name":"org.springframework.ai.ollama.api.OllamaOptions$Builder"
},
{
  "name":"org.springframework.ai.ollama.management.PullModelStrategy"
},
{
  "name":"org.springframework.ai.vectorstore.SearchRequest"
},
{
  "name":"org.springframework.ai.vectorstore.VectorStore",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"accept","parameterTypes":["java.lang.Object"] }, {"name":"accept","parameterTypes":["java.util.List"] }, {"name":"getName","parameterTypes":[] }, {"name":"similaritySearch","parameterTypes":["java.lang.String"] }]
},
{
  "name":"org.springframework.ai.vectorstore.observation.AbstractObservationVectorStore",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"add","parameterTypes":["java.util.List"] }, {"name":"delete","parameterTypes":["java.util.List"] }, {"name":"similaritySearch","parameterTypes":["org.springframework.ai.vectorstore.SearchRequest"] }]
},
{
  "name":"org.springframework.ai.vectorstore.observation.VectorStoreObservationContext"
},
{
  "name":"org.springframework.ai.vectorstore.observation.VectorStoreObservationContext$Builder"
},
{
  "name":"org.springframework.ai.vectorstore.observation.VectorStoreObservationConvention"
},
{
  "name":"org.springframework.ai.vectorstore.observation.VectorStoreQueryResponseObservationFilter"
},
{
  "name":"org.springframework.ai.vectorstore.pgvector.PgVectorStore",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"afterPropertiesSet","parameterTypes":[] }, {"name":"createObservationContextBuilder","parameterTypes":["java.lang.String"] }, {"name":"doAdd","parameterTypes":["java.util.List"] }, {"name":"doDelete","parameterTypes":["java.util.List"] }, {"name":"doSimilaritySearch","parameterTypes":["org.springframework.ai.vectorstore.SearchRequest"] }]
},
{
  "name":"org.springframework.ai.vectorstore.pgvector.PgVectorStore$PgDistanceType"
},
{
  "name":"org.springframework.ai.vectorstore.pgvector.PgVectorStore$PgIndexType"
},
{
  "name":"org.springframework.ai.vectorstore.pgvector.PgVectorStore$PgVectorStoreBuilder"
},
{
  "name":"org.springframework.aop.Advisor",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"isPerInstance","parameterTypes":[] }]
},
{
  "name":"org.springframework.aop.IntroductionAdvisor",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.aop.IntroductionInfo",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.aop.PointcutAdvisor",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.aop.SpringProxy",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.aop.TargetClassAware",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"getTargetClass","parameterTypes":[] }]
},
{
  "name":"org.springframework.aop.TargetSource",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"<init>","parameterTypes":["org.springframework.aop.target.LazyInitTargetSource"] }, {"name":"from","parameterTypes":["org.springframework.aop.target.LazyInitTargetSource"] }, {"name":"isStatic","parameterTypes":[] }, {"name":"of","parameterTypes":["org.springframework.aop.target.LazyInitTargetSource"] }, {"name":"releaseTarget","parameterTypes":["java.lang.Object"] }, {"name":"valueOf","parameterTypes":["org.springframework.aop.target.LazyInitTargetSource"] }]
},
{
  "name":"org.springframework.aop.aspectj.annotation.AnnotationAwareAspectJAutoProxyCreator",
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.aop.framework.Advised",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"isFrozen","parameterTypes":[] }]
},
{
  "name":"org.springframework.aop.framework.AdvisedSupport",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"addAdvice","parameterTypes":["int","org.aopalliance.aop.Advice"] }, {"name":"addAdvice","parameterTypes":["org.aopalliance.aop.Advice"] }, {"name":"addAdvisor","parameterTypes":["int","org.springframework.aop.Advisor"] }, {"name":"addAdvisor","parameterTypes":["org.springframework.aop.Advisor"] }, {"name":"addAdvisors","parameterTypes":["java.util.Collection"] }, {"name":"addAdvisors","parameterTypes":["org.springframework.aop.Advisor[]"] }, {"name":"addInterface","parameterTypes":["java.lang.Class"] }, {"name":"adviceIncluded","parameterTypes":["org.aopalliance.aop.Advice"] }, {"name":"countAdvicesOfType","parameterTypes":["java.lang.Class"] }, {"name":"getAdvisorChainFactory","parameterTypes":[] }, {"name":"getAdvisorCount","parameterTypes":[] }, {"name":"getAdvisors","parameterTypes":[] }, {"name":"getInterceptorsAndDynamicInterceptionAdvice","parameterTypes":["java.lang.reflect.Method","java.lang.Class"] }, {"name":"getProxiedInterfaces","parameterTypes":[] }, {"name":"getTargetClass","parameterTypes":[] }, {"name":"getTargetSource","parameterTypes":[] }, {"name":"indexOf","parameterTypes":["org.aopalliance.aop.Advice"] }, {"name":"indexOf","parameterTypes":["org.springframework.aop.Advisor"] }, {"name":"isInterfaceProxied","parameterTypes":["java.lang.Class"] }, {"name":"isPreFiltered","parameterTypes":[] }, {"name":"removeAdvice","parameterTypes":["org.aopalliance.aop.Advice"] }, {"name":"removeAdvisor","parameterTypes":["int"] }, {"name":"removeAdvisor","parameterTypes":["org.springframework.aop.Advisor"] }, {"name":"removeInterface","parameterTypes":["java.lang.Class"] }, {"name":"replaceAdvisor","parameterTypes":["org.springframework.aop.Advisor","org.springframework.aop.Advisor"] }, {"name":"setAdvisorChainFactory","parameterTypes":["org.springframework.aop.framework.AdvisorChainFactory"] }, {"name":"setInterfaces","parameterTypes":["java.lang.Class[]"] }, {"name":"setPreFiltered","parameterTypes":["boolean"] }, {"name":"setTarget","parameterTypes":["java.lang.Object"] }, {"name":"setTargetClass","parameterTypes":["java.lang.Class"] }, {"name":"setTargetSource","parameterTypes":["org.springframework.aop.TargetSource"] }, {"name":"toProxyConfigString","parameterTypes":[] }, {"name":"toString","parameterTypes":[] }]
},
{
  "name":"org.springframework.aop.framework.AdvisedSupportListener"
},
{
  "name":"org.springframework.aop.framework.AdvisorChainFactory"
},
{
  "name":"org.springframework.aop.framework.AopConfigException"
},
{
  "name":"org.springframework.aop.framework.AopInfrastructureBean",
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.aop.framework.AopProxy"
},
{
  "name":"org.springframework.aop.framework.AopProxyFactory"
},
{
  "name":"org.springframework.aop.framework.ProxyConfig",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"copyFrom","parameterTypes":["org.springframework.aop.framework.ProxyConfig"] }, {"name":"isExposeProxy","parameterTypes":[] }, {"name":"isFrozen","parameterTypes":[] }, {"name":"isOpaque","parameterTypes":[] }, {"name":"isOptimize","parameterTypes":[] }, {"name":"isProxyTargetClass","parameterTypes":[] }, {"name":"setExposeProxy","parameterTypes":["boolean"] }, {"name":"setOpaque","parameterTypes":["boolean"] }, {"name":"setOptimize","parameterTypes":["boolean"] }, {"name":"setProxyTargetClass","parameterTypes":["boolean"] }]
},
{
  "name":"org.springframework.aop.framework.ProxyCreatorSupport",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"addListener","parameterTypes":["org.springframework.aop.framework.AdvisedSupportListener"] }, {"name":"getAopProxyFactory","parameterTypes":[] }, {"name":"removeListener","parameterTypes":["org.springframework.aop.framework.AdvisedSupportListener"] }, {"name":"setAopProxyFactory","parameterTypes":["org.springframework.aop.framework.AopProxyFactory"] }]
},
{
  "name":"org.springframework.aop.framework.ProxyFactoryBean",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"getObject","parameterTypes":[] }, {"name":"getObjectType","parameterTypes":[] }, {"name":"isSingleton","parameterTypes":[] }, {"name":"setBeanClassLoader","parameterTypes":["java.lang.ClassLoader"] }, {"name":"setBeanFactory","parameterTypes":["org.springframework.beans.factory.BeanFactory"] }, {"name":"setFrozen","parameterTypes":["boolean"] }]
},
{
  "name":"org.springframework.aop.framework.ProxyProcessorSupport",
  "allDeclaredFields":true,
  "methods":[{"name":"setOrder","parameterTypes":["int"] }]
},
{
  "name":"org.springframework.aop.framework.adapter.AdvisorAdapterRegistry"
},
{
  "name":"org.springframework.aop.scope.ScopedObject"
},
{
  "name":"org.springframework.aop.support.AbstractBeanFactoryPointcutAdvisor",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"getAdvice","parameterTypes":[] }, {"name":"getAdviceBeanName","parameterTypes":[] }, {"name":"setAdvice","parameterTypes":["org.aopalliance.aop.Advice"] }, {"name":"setAdviceBeanName","parameterTypes":["java.lang.String"] }, {"name":"setBeanFactory","parameterTypes":["org.springframework.beans.factory.BeanFactory"] }, {"name":"toString","parameterTypes":[] }]
},
{
  "name":"org.springframework.aop.support.AbstractPointcutAdvisor",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"equals","parameterTypes":["java.lang.Object"] }, {"name":"getOrder","parameterTypes":[] }, {"name":"hashCode","parameterTypes":[] }, {"name":"setOrder","parameterTypes":["int"] }]
},
{
  "name":"org.springframework.aop.target.AbstractBeanFactoryBasedTargetSource",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"equals","parameterTypes":["java.lang.Object"] }, {"name":"getBeanFactory","parameterTypes":[] }, {"name":"getTargetBeanName","parameterTypes":[] }, {"name":"getTargetClass","parameterTypes":[] }, {"name":"hashCode","parameterTypes":[] }, {"name":"setBeanFactory","parameterTypes":["org.springframework.beans.factory.BeanFactory"] }, {"name":"setTargetBeanName","parameterTypes":["java.lang.String"] }, {"name":"setTargetClass","parameterTypes":["java.lang.Class"] }, {"name":"toString","parameterTypes":[] }]
},
{
  "name":"org.springframework.aop.target.LazyInitTargetSource",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"getTarget","parameterTypes":[] }, {"name":"toTargetSource","parameterTypes":[] }]
},
{
  "name":"org.springframework.aot.generate.Generated",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.aot.hint.annotation.Reflective",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.aot.hint.annotation.RegisterReflection",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.aot.hint.annotation.RegisterReflectionForBinding",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.beans.BeanWrapper"
},
{
  "name":"org.springframework.beans.BeansException"
},
{
  "name":"org.springframework.beans.TypeConverter"
},
{
  "name":"org.springframework.beans.factory.Aware",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.beans.factory.BeanClassLoaderAware",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.beans.factory.BeanFactory"
},
{
  "name":"org.springframework.beans.factory.BeanFactoryAware",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"setApplicationContext","parameterTypes":["org.springframework.context.ApplicationContext"] }, {"name":"setBeanFactory","parameterTypes":["org.springframework.beans.factory.BeanFactory"] }, {"name":"setContextId","parameterTypes":["java.lang.String"] }, {"name":"setDismiss404","parameterTypes":["boolean"] }, {"name":"setFallback","parameterTypes":["java.lang.Class"] }, {"name":"setFallbackFactory","parameterTypes":["java.lang.Class"] }, {"name":"setInheritParentContext","parameterTypes":["boolean"] }, {"name":"setName","parameterTypes":["java.lang.String"] }, {"name":"setPath","parameterTypes":["java.lang.String"] }, {"name":"setQualifiers","parameterTypes":["java.lang.String[]"] }, {"name":"setRefreshableClient","parameterTypes":["boolean"] }, {"name":"setType","parameterTypes":["java.lang.Class"] }, {"name":"setUrl","parameterTypes":["java.lang.String"] }]
},
{
  "name":"org.springframework.beans.factory.BeanNameAware",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.beans.factory.DisposableBean",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.beans.factory.FactoryBean",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"isSingleton","parameterTypes":[] }]
},
{
  "name":"org.springframework.beans.factory.InitializingBean",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.beans.factory.ListableBeanFactory"
},
{
  "name":"org.springframework.beans.factory.NoSuchBeanDefinitionException"
},
{
  "name":"org.springframework.beans.factory.ObjectFactory",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"<init>","parameterTypes":["org.springframework.beans.factory.config.ObjectFactoryCreatingFactoryBean$TargetBeanObjectFactory"] }, {"name":"from","parameterTypes":["org.springframework.beans.factory.config.ObjectFactoryCreatingFactoryBean$TargetBeanObjectFactory"] }, {"name":"of","parameterTypes":["org.springframework.beans.factory.config.ObjectFactoryCreatingFactoryBean$TargetBeanObjectFactory"] }, {"name":"valueOf","parameterTypes":["org.springframework.beans.factory.config.ObjectFactoryCreatingFactoryBean$TargetBeanObjectFactory"] }]
},
{
  "name":"org.springframework.beans.factory.ObjectProvider"
},
{
  "name":"org.springframework.beans.factory.SmartInitializingSingleton",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.beans.factory.annotation.Autowired",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.beans.factory.annotation.Qualifier",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.beans.factory.annotation.Value",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.beans.factory.config.AbstractFactoryBean",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"destroy","parameterTypes":[] }, {"name":"getObject","parameterTypes":[] }, {"name":"isSingleton","parameterTypes":[] }, {"name":"setBeanClassLoader","parameterTypes":["java.lang.ClassLoader"] }, {"name":"setBeanFactory","parameterTypes":["org.springframework.beans.factory.BeanFactory"] }, {"name":"setSingleton","parameterTypes":["boolean"] }]
},
{
  "name":"org.springframework.beans.factory.config.BeanDefinition"
},
{
  "name":"org.springframework.beans.factory.config.BeanFactoryPostProcessor",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.beans.factory.config.BeanPostProcessor",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"postProcessAfterInitialization","parameterTypes":["java.lang.Object","java.lang.String"] }, {"name":"postProcessBeforeInitialization","parameterTypes":["java.lang.Object","java.lang.String"] }]
},
{
  "name":"org.springframework.beans.factory.config.ConfigurableBeanFactory"
},
{
  "name":"org.springframework.beans.factory.config.ConfigurableListableBeanFactory"
},
{
  "name":"org.springframework.beans.factory.config.InstantiationAwareBeanPostProcessor",
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.beans.factory.config.ObjectFactoryCreatingFactoryBean",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"afterPropertiesSet","parameterTypes":[] }, {"name":"getObjectType","parameterTypes":[] }, {"name":"setTargetBeanName","parameterTypes":["java.lang.String"] }]
},
{
  "name":"org.springframework.beans.factory.config.ObjectFactoryCreatingFactoryBean$TargetBeanObjectFactory",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"getObject","parameterTypes":[] }, {"name":"toObjectFactory","parameterTypes":[] }]
},
{
  "name":"org.springframework.beans.factory.config.SmartInstantiationAwareBeanPostProcessor",
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.beans.factory.support.BeanDefinitionRegistry"
},
{
  "name":"org.springframework.beans.factory.support.NullBean",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"equals","parameterTypes":["java.lang.Object"] }, {"name":"hashCode","parameterTypes":[] }, {"name":"toString","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.ApplicationProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"setBannerMode","parameterTypes":["org.springframework.boot.Banner$Mode"] }]
},
{
  "name":"org.springframework.boot.Banner$ModeEditor"
},
{
  "name":"org.springframework.boot.ClearCachesApplicationListener",
  "queryAllDeclaredConstructors":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.LazyInitializationExcludeFilter",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.boot.SpringApplication"
},
{
  "name":"org.springframework.boot.SpringBootConfiguration",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.availability.AvailabilityHealthContributorAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.data.elasticsearch.ElasticsearchReactiveHealthContributorAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.data.redis.RedisHealthContributorAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.data.redis.RedisReactiveHealthContributorAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":["java.util.Map"] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.elasticsearch.ElasticsearchRestHealthContributorAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.endpoint.EndpointAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.endpoint.PropertiesEndpointAccessResolver",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"accessFor","parameterTypes":["org.springframework.boot.actuate.endpoint.EndpointId","org.springframework.boot.actuate.endpoint.Access"] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.endpoint.condition.ConditionalOnAvailableEndpoint",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.endpoint.expose.IncludeExcludeEndpointFilter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"match","parameterTypes":["org.springframework.boot.actuate.endpoint.ExposableEndpoint"] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.endpoint.jackson.JacksonEndpointAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.endpoint.web.CorsEndpointProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.endpoint.web.MappingWebEndpointPathMapper",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"getRootPath","parameterTypes":["org.springframework.boot.actuate.endpoint.EndpointId"] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.endpoint.web.ServletEndpointManagementContextConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.endpoint.web.ServletEndpointManagementContextConfiguration$WebMvcServletEndpointManagementContextConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":["org.springframework.context.ApplicationContext","org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointProperties"] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointAutoConfiguration$WebEndpointServletConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"getExposure","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointProperties$Discovery"
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointProperties$Exposure",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"getInclude","parameterTypes":[] }, {"name":"setInclude","parameterTypes":["java.util.Set"] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.endpoint.web.servlet.WebMvcEndpointManagementContextConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.endpoint.web.servlet.WebMvcEndpointManagementContextConfiguration$EndpointObjectMapperWebMvcConfigurer",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"configureMessageConverters","parameterTypes":["java.util.List"] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.health.AbstractCompositeHealthContributorConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.health.AutoConfiguredHealthContributorRegistry",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"registerContributor","parameterTypes":["java.lang.String","java.lang.Object"] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.health.AutoConfiguredHealthEndpointGroups",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"get","parameterTypes":["java.lang.String"] }, {"name":"getAdditionalPaths","parameterTypes":["org.springframework.boot.actuate.endpoint.EndpointId","org.springframework.boot.actuate.endpoint.web.WebServerNamespace"] }, {"name":"getNames","parameterTypes":[] }, {"name":"getPrimary","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.health.AutoConfiguredReactiveHealthContributorRegistry",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"registerContributor","parameterTypes":["java.lang.String","java.lang.Object"] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.health.CompositeHealthContributorConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.health.CompositeReactiveHealthContributorConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.health.ConditionalOnEnabledHealthIndicator",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.health.HealthContributorAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.health.HealthEndpointAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.health.HealthEndpointConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.health.HealthEndpointConfiguration$HealthEndpointGroupMembershipValidator",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"afterSingletonsInstantiated","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.health.HealthEndpointConfiguration$HealthEndpointGroupsBeanPostProcessor",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"postProcessAfterInitialization","parameterTypes":["java.lang.Object","java.lang.String"] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.health.HealthEndpointProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"getShowDetails","parameterTypes":[] }, {"name":"setShowDetails","parameterTypes":["org.springframework.boot.actuate.endpoint.Show"] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.health.HealthEndpointProperties$Group"
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.health.HealthEndpointProperties$Logging"
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.health.HealthEndpointWebExtensionConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.health.HealthEndpointWebExtensionConfiguration$MvcAdditionalHealthEndpointPathsConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.health.HealthProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"getRoles","parameterTypes":[] }, {"name":"getShowComponents","parameterTypes":[] }, {"name":"getStatus","parameterTypes":[] }, {"name":"setRoles","parameterTypes":["java.util.Set"] }, {"name":"setShowComponents","parameterTypes":["org.springframework.boot.actuate.endpoint.Show"] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.health.HealthProperties$Status"
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.health.ReactiveHealthEndpointConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.info.ConditionalOnEnabledInfoContributor",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.info.InfoContributorAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.info.InfoContributorProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.info.InfoContributorProperties$Git"
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.jdbc.DataSourceHealthContributorAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":["org.springframework.beans.factory.ObjectProvider"] }, {"name":"afterPropertiesSet","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.jdbc.DataSourceHealthIndicatorProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.metrics.CompositeMeterRegistryAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.metrics.JvmMetricsAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.metrics.KafkaMetricsAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.metrics.KafkaMetricsAutoConfiguration$KafkaStreamsMetricsConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.metrics.LogbackMetricsAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.metrics.MeterRegistryCustomizer"
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.metrics.MeterRegistryPostProcessor",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"afterSingletonsInstantiated","parameterTypes":[] }, {"name":"postProcessAfterInitialization","parameterTypes":["java.lang.Object","java.lang.String"] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.metrics.MetricsAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.metrics.MetricsAutoConfiguration$MeterRegistryCloser",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"onApplicationEvent","parameterTypes":["org.springframework.context.ApplicationEvent"] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties$Data"
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties$Distribution"
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties$System"
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties$Web"
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.metrics.PropertiesMeterFilter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"accept","parameterTypes":["io.micrometer.core.instrument.Meter$Id"] }, {"name":"configure","parameterTypes":["io.micrometer.core.instrument.Meter$Id","io.micrometer.core.instrument.distribution.DistributionStatisticConfig"] }, {"name":"map","parameterTypes":["io.micrometer.core.instrument.Meter$Id"] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.metrics.ServiceLevelObjectiveBoundary"
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.metrics.SystemMetricsAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.metrics.cache.CacheMeterBinderProvidersConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.metrics.cache.CacheMeterBinderProvidersConfiguration$RedisCacheMeterBinderProviderConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.metrics.cache.CacheMetricsAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.metrics.cache.CacheMetricsRegistrarConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":["io.micrometer.core.instrument.MeterRegistry","java.util.Collection","java.util.Map"] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.metrics.data.MetricsRepositoryMethodInvocationListenerBeanPostProcessor",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"postProcessBeforeInitialization","parameterTypes":["java.lang.Object","java.lang.String"] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.metrics.data.RepositoryMetricsAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":["org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties"] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.metrics.export.properties.PropertiesConfigAdapter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.metrics.export.properties.PushRegistryProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"getBatchSize","parameterTypes":[] }, {"name":"getConnectTimeout","parameterTypes":[] }, {"name":"getReadTimeout","parameterTypes":[] }, {"name":"getStep","parameterTypes":[] }, {"name":"isEnabled","parameterTypes":[] }, {"name":"setBatchSize","parameterTypes":["java.lang.Integer"] }, {"name":"setConnectTimeout","parameterTypes":["java.time.Duration"] }, {"name":"setEnabled","parameterTypes":["boolean"] }, {"name":"setReadTimeout","parameterTypes":["java.time.Duration"] }, {"name":"setStep","parameterTypes":["java.time.Duration"] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.metrics.export.properties.PushRegistryPropertiesConfigAdapter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"enabled","parameterTypes":[] }, {"name":"get","parameterTypes":["java.lang.String"] }, {"name":"step","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.metrics.export.properties.StepRegistryProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.metrics.export.properties.StepRegistryPropertiesConfigAdapter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.metrics.integration.IntegrationMetricsAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.metrics.jdbc.DataSourcePoolMetricsAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.metrics.jdbc.DataSourcePoolMetricsAutoConfiguration$DataSourcePoolMetadataMetricsConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.metrics.jdbc.DataSourcePoolMetricsAutoConfiguration$DataSourcePoolMetadataMetricsConfiguration$DataSourcePoolMetadataMeterBinder",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"bindTo","parameterTypes":["io.micrometer.core.instrument.MeterRegistry"] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.metrics.jdbc.DataSourcePoolMetricsAutoConfiguration$HikariDataSourceMetricsConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.metrics.jdbc.DataSourcePoolMetricsAutoConfiguration$HikariDataSourceMetricsConfiguration$HikariDataSourceMeterBinder",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"bindTo","parameterTypes":["io.micrometer.core.instrument.MeterRegistry"] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.metrics.redis.LettuceMetricsAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.metrics.startup.StartupTimeMetricsListenerAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.metrics.task.TaskExecutorMetricsAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.metrics.web.tomcat.TomcatMetricsAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.observation.ObservationAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.observation.ObservationAutoConfiguration$MeterObservationHandlerConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.observation.ObservationAutoConfiguration$MeterObservationHandlerConfiguration$TracingAndMetricsObservationHandlerConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.observation.ObservationAutoConfiguration$MetricsWithTracingConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.observation.ObservationAutoConfiguration$ObservedAspectConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.observation.ObservationHandlerGrouping",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.observation.ObservationProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.observation.ObservationProperties$Http"
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.observation.ObservationProperties$LongTaskTimer"
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.observation.ObservationRegistryConfigurer"
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.observation.ObservationRegistryCustomizer",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.observation.ObservationRegistryPostProcessor",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"postProcessAfterInitialization","parameterTypes":["java.lang.Object","java.lang.String"] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.observation.PropertiesObservationFilterPredicate",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"map","parameterTypes":["io.micrometer.observation.Observation$Context"] }, {"name":"test","parameterTypes":["java.lang.Object","java.lang.Object"] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.observation.web.client.HttpClientObservationsAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.observation.web.client.HttpClientObservationsAutoConfiguration$MeterFilterConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.observation.web.client.RestClientObservationConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.observation.web.client.RestTemplateObservationConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.observation.web.client.WebClientObservationConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.observation.web.servlet.WebMvcObservationAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.observation.web.servlet.WebMvcObservationAutoConfiguration$MeterFilterConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.scheduling.ScheduledTasksObservabilityAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.scheduling.ScheduledTasksObservabilityAutoConfiguration$ObservabilitySchedulingConfigurer",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"configureTasks","parameterTypes":["org.springframework.scheduling.config.ScheduledTaskRegistrar"] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.ssl.SslHealthContributorAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.ssl.SslHealthIndicatorProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.system.DiskSpaceHealthContributorAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.system.DiskSpaceHealthIndicatorProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.tracing.BraveAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":["org.springframework.boot.actuate.autoconfigure.tracing.TracingProperties"] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.tracing.BravePropagationConfigurations$NoPropagation",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.tracing.BravePropagationConfigurations$PropagationWithBaggage",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":["org.springframework.boot.actuate.autoconfigure.tracing.TracingProperties"] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.tracing.CompositePropagationFactory",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"decorate","parameterTypes":["brave.propagation.TraceContext"] }, {"name":"get","parameterTypes":[] }, {"name":"requires128BitTraceId","parameterTypes":[] }, {"name":"supportsJoin","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.tracing.ConditionalOnEnabledTracing",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.tracing.LocalBaggageFields"
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.tracing.LogCorrelationEnvironmentPostProcessor",
  "queryAllDeclaredConstructors":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.tracing.MicrometerTracingAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.tracing.OpenTelemetryEventPublisherBeansApplicationListener",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.tracing.TracingProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"getSampling","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.tracing.TracingProperties$Baggage"
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.tracing.TracingProperties$Brave"
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.tracing.TracingProperties$Propagation"
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.tracing.TracingProperties$Sampling",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"setProbability","parameterTypes":["float"] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.tracing.zipkin.HttpSender",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.tracing.zipkin.PropertiesZipkinConnectionDetails",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"getSpanEndpoint","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.tracing.zipkin.ZipkinAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.tracing.zipkin.ZipkinConfigurations$BraveConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.tracing.zipkin.ZipkinConfigurations$HttpClientSenderConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.tracing.zipkin.ZipkinConfigurations$RestTemplateSenderConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.tracing.zipkin.ZipkinConfigurations$SenderConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.tracing.zipkin.ZipkinConfigurations$WebClientSenderConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.tracing.zipkin.ZipkinConnectionDetails",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.tracing.zipkin.ZipkinHttpClientBuilderCustomizer"
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.tracing.zipkin.ZipkinHttpClientSender"
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.tracing.zipkin.ZipkinProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"setEndpoint","parameterTypes":["java.lang.String"] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.tracing.zipkin.ZipkinProperties$Encoding"
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.tracing.zipkin.ZipkinRestTemplateSender"
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.tracing.zipkin.ZipkinWebClientBuilderCustomizer"
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.tracing.zipkin.ZipkinWebClientSender",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.web.ManagementContextConfiguration",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.web.ManagementContextFactory",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.web.server.ConditionalOnManagementPort",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.web.server.EnableManagementContext",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.web.server.ManagementContextAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.web.server.ManagementContextAutoConfiguration$SameManagementContextConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":["org.springframework.core.env.Environment"] }, {"name":"afterSingletonsInstantiated","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.web.server.ManagementContextAutoConfiguration$SameManagementContextConfiguration$EnableSameManagementContextConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.web.server.ManagementServerProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.web.servlet.ManagementServletContext",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.web.servlet.ServletManagementContextAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.availability.LivenessStateHealthIndicator"
},
{
  "name":"org.springframework.boot.actuate.availability.ReadinessStateHealthIndicator"
},
{
  "name":"org.springframework.boot.actuate.data.elasticsearch.ElasticsearchReactiveHealthIndicator",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.data.redis.RedisHealthIndicator"
},
{
  "name":"org.springframework.boot.actuate.data.redis.RedisReactiveHealthIndicator",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.elasticsearch.ElasticsearchRestClientHealthIndicator"
},
{
  "name":"org.springframework.boot.actuate.endpoint.Access"
},
{
  "name":"org.springframework.boot.actuate.endpoint.ApiVersion"
},
{
  "name":"org.springframework.boot.actuate.endpoint.EndpointAccessResolver",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.boot.actuate.endpoint.EndpointFilter",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.boot.actuate.endpoint.EndpointId"
},
{
  "name":"org.springframework.boot.actuate.endpoint.EndpointsSupplier",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.boot.actuate.endpoint.ExposableEndpoint"
},
{
  "name":"org.springframework.boot.actuate.endpoint.Operation"
},
{
  "name":"org.springframework.boot.actuate.endpoint.OperationFilter",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.boot.actuate.endpoint.OperationType"
},
{
  "name":"org.springframework.boot.actuate.endpoint.SecurityContext"
},
{
  "name":"org.springframework.boot.actuate.endpoint.Show"
},
{
  "name":"org.springframework.boot.actuate.endpoint.ShowEditor"
},
{
  "name":"org.springframework.boot.actuate.endpoint.annotation.DiscoveredOperationMethod"
},
{
  "name":"org.springframework.boot.actuate.endpoint.annotation.DiscoveredOperationsFactory"
},
{
  "name":"org.springframework.boot.actuate.endpoint.annotation.Endpoint",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.endpoint.annotation.EndpointConverter",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"createOperationKey","parameterTypes":["org.springframework.boot.actuate.endpoint.Operation"] }, {"name":"getEndpoints","parameterTypes":[] }, {"name":"isInvocable","parameterTypes":["org.springframework.boot.actuate.endpoint.ExposableEndpoint"] }]
},
{
  "name":"org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$EndpointBean"
},
{
  "name":"org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$ExtensionBean"
},
{
  "name":"org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$OperationKey"
},
{
  "name":"org.springframework.boot.actuate.endpoint.annotation.EndpointExtension",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.endpoint.annotation.ReadOperation",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.endpoint.annotation.Selector",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.endpoint.invoke.OperationInvoker"
},
{
  "name":"org.springframework.boot.actuate.endpoint.invoke.OperationInvokerAdvisor",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.boot.actuate.endpoint.invoke.OperationParameter"
},
{
  "name":"org.springframework.boot.actuate.endpoint.invoke.OperationParameters"
},
{
  "name":"org.springframework.boot.actuate.endpoint.invoke.ParameterMappingException"
},
{
  "name":"org.springframework.boot.actuate.endpoint.invoke.ParameterValueMapper",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.boot.actuate.endpoint.invoke.convert.ConversionServiceParameterValueMapper",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"mapParameterValue","parameterTypes":["org.springframework.boot.actuate.endpoint.invoke.OperationParameter","java.lang.Object"] }]
},
{
  "name":"org.springframework.boot.actuate.endpoint.invoker.cache.CachingOperationInvokerAdvisor",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"apply","parameterTypes":["org.springframework.boot.actuate.endpoint.EndpointId","org.springframework.boot.actuate.endpoint.OperationType","org.springframework.boot.actuate.endpoint.invoke.OperationParameters","org.springframework.boot.actuate.endpoint.invoke.OperationInvoker"] }]
},
{
  "name":"org.springframework.boot.actuate.endpoint.jackson.EndpointObjectMapper",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.boot.actuate.endpoint.web.AdditionalPathsMapper",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.boot.actuate.endpoint.web.EndpointMediaTypes",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.endpoint.web.ExposableServletEndpoint"
},
{
  "name":"org.springframework.boot.actuate.endpoint.web.ExposableWebEndpoint"
},
{
  "name":"org.springframework.boot.actuate.endpoint.web.PathMappedEndpoint"
},
{
  "name":"org.springframework.boot.actuate.endpoint.web.PathMappedEndpoints",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"iterator","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.endpoint.web.PathMapper",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.boot.actuate.endpoint.web.ServletEndpointRegistrar",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"onStartup","parameterTypes":["jakarta.servlet.ServletContext"] }]
},
{
  "name":"org.springframework.boot.actuate.endpoint.web.WebEndpointResponse"
},
{
  "name":"org.springframework.boot.actuate.endpoint.web.WebEndpointsSupplier",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.boot.actuate.endpoint.web.WebOperation"
},
{
  "name":"org.springframework.boot.actuate.endpoint.web.WebOperationRequestPredicate"
},
{
  "name":"org.springframework.boot.actuate.endpoint.web.WebServerNamespace"
},
{
  "name":"org.springframework.boot.actuate.endpoint.web.annotation.ControllerEndpointDiscoverer",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.endpoint.web.annotation.ControllerEndpointsSupplier",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.boot.actuate.endpoint.web.annotation.EndpointWebExtension",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.endpoint.web.annotation.ExposableControllerEndpoint"
},
{
  "name":"org.springframework.boot.actuate.endpoint.web.annotation.ServletEndpointDiscoverer",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.endpoint.web.annotation.ServletEndpointsSupplier",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.boot.actuate.endpoint.web.annotation.WebEndpointDiscoverer",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.endpoint.web.annotation.WebEndpointFilter",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"afterPropertiesSet","parameterTypes":[] }, {"name":"getEndpoints","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$LinksHandler",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$ServletWebOperation"
},
{
  "name":"org.springframework.boot.actuate.endpoint.web.servlet.AdditionalHealthEndpointPathsWebMvcHandlerMapping",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.endpoint.web.servlet.ControllerEndpointHandlerMapping",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping$WebMvcLinksHandler",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.health.AbstractHealthIndicator",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"health","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.health.AbstractReactiveHealthIndicator",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"health","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.health.AdditionalHealthEndpointPath"
},
{
  "name":"org.springframework.boot.actuate.health.CompositeHealth"
},
{
  "name":"org.springframework.boot.actuate.health.CompositeHealthContributor",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.boot.actuate.health.CompositeHealthContributorMapAdapter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.health.CompositeReactiveHealthContributor",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.boot.actuate.health.ContributorRegistry",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.boot.actuate.health.DefaultContributorRegistry",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"registerContributor","parameterTypes":["java.lang.String","java.lang.Object"] }]
},
{
  "name":"org.springframework.boot.actuate.health.DefaultHealthContributorRegistry",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"getContributor","parameterTypes":["java.lang.String"] }, {"name":"iterator","parameterTypes":[] }, {"name":"registerContributor","parameterTypes":["java.lang.String","java.lang.Object"] }, {"name":"unregisterContributor","parameterTypes":["java.lang.String"] }]
},
{
  "name":"org.springframework.boot.actuate.health.DefaultReactiveHealthContributorRegistry",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"getContributor","parameterTypes":["java.lang.String"] }, {"name":"iterator","parameterTypes":[] }, {"name":"registerContributor","parameterTypes":["java.lang.String","java.lang.Object"] }, {"name":"unregisterContributor","parameterTypes":["java.lang.String"] }]
},
{
  "name":"org.springframework.boot.actuate.health.Health"
},
{
  "name":"org.springframework.boot.actuate.health.Health$Builder"
},
{
  "name":"org.springframework.boot.actuate.health.HealthComponent"
},
{
  "name":"org.springframework.boot.actuate.health.HealthContributor",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.boot.actuate.health.HealthContributorRegistry",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.boot.actuate.health.HealthEndpoint",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.health.HealthEndpointGroup"
},
{
  "name":"org.springframework.boot.actuate.health.HealthEndpointGroups",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"get","parameterTypes":["org.springframework.boot.actuate.health.AdditionalHealthEndpointPath"] }, {"name":"getAllWithAdditionalPath","parameterTypes":["org.springframework.boot.actuate.endpoint.web.WebServerNamespace"] }]
},
{
  "name":"org.springframework.boot.actuate.health.HealthEndpointGroupsPostProcessor"
},
{
  "name":"org.springframework.boot.actuate.health.HealthEndpointSupport",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"getHealth","parameterTypes":["java.lang.Object","boolean"] }]
},
{
  "name":"org.springframework.boot.actuate.health.HealthEndpointSupport$HealthResult"
},
{
  "name":"org.springframework.boot.actuate.health.HealthEndpointWebExtension",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.health.HealthIndicator",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"getHealth","parameterTypes":["boolean"] }]
},
{
  "name":"org.springframework.boot.actuate.health.HttpCodeStatusMapper",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.boot.actuate.health.NamedContributor"
},
{
  "name":"org.springframework.boot.actuate.health.NamedContributors",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"stream","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.health.NamedContributorsMapAdapter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"getContributor","parameterTypes":["java.lang.String"] }, {"name":"iterator","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.health.PingHealthIndicator",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.health.ReactiveHealthContributor",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.boot.actuate.health.ReactiveHealthContributorRegistry",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.boot.actuate.health.ReactiveHealthIndicator",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"getHealth","parameterTypes":["boolean"] }]
},
{
  "name":"org.springframework.boot.actuate.health.SimpleHttpCodeStatusMapper",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"getStatusCode","parameterTypes":["org.springframework.boot.actuate.health.Status"] }]
},
{
  "name":"org.springframework.boot.actuate.health.SimpleStatusAggregator",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"getAggregateStatus","parameterTypes":["java.util.Set"] }]
},
{
  "name":"org.springframework.boot.actuate.health.Status"
},
{
  "name":"org.springframework.boot.actuate.health.StatusAggregator",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"getAggregateStatus","parameterTypes":["org.springframework.boot.actuate.health.Status[]"] }]
},
{
  "name":"org.springframework.boot.actuate.info.EnvironmentInfoContributor"
},
{
  "name":"org.springframework.boot.actuate.info.GitInfoContributor"
},
{
  "name":"org.springframework.boot.actuate.info.InfoContributor"
},
{
  "name":"org.springframework.boot.actuate.info.JavaInfoContributor"
},
{
  "name":"org.springframework.boot.actuate.info.OsInfoContributor"
},
{
  "name":"org.springframework.boot.actuate.info.ProcessInfoContributor"
},
{
  "name":"org.springframework.boot.actuate.info.SslInfoContributor"
},
{
  "name":"org.springframework.boot.actuate.metrics.cache.CacheMeterBinderProvider",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.boot.actuate.metrics.cache.CacheMetricsRegistrar",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.metrics.cache.RedisCacheMeterBinderProvider",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"getMeterBinder","parameterTypes":["org.springframework.cache.Cache","java.lang.Iterable"] }]
},
{
  "name":"org.springframework.boot.actuate.metrics.data.DefaultRepositoryTagsProvider",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"repositoryTags","parameterTypes":["org.springframework.data.repository.core.support.RepositoryMethodInvocationListener$RepositoryMethodInvocation"] }]
},
{
  "name":"org.springframework.boot.actuate.metrics.data.MetricsRepositoryMethodInvocationListener",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"afterInvocation","parameterTypes":["org.springframework.data.repository.core.support.RepositoryMethodInvocationListener$RepositoryMethodInvocation"] }]
},
{
  "name":"org.springframework.boot.actuate.metrics.data.RepositoryTagsProvider",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.boot.actuate.metrics.startup.StartupTimeMetricsListener",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"onApplicationEvent","parameterTypes":["org.springframework.context.ApplicationEvent"] }, {"name":"supportsEventType","parameterTypes":["java.lang.Class"] }]
},
{
  "name":"org.springframework.boot.actuate.metrics.system.DiskSpaceMetricsBinder",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"bindTo","parameterTypes":["io.micrometer.core.instrument.MeterRegistry"] }]
},
{
  "name":"org.springframework.boot.actuate.metrics.web.client.ObservationRestClientCustomizer",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"customize","parameterTypes":["org.springframework.web.client.RestClient$Builder"] }]
},
{
  "name":"org.springframework.boot.actuate.metrics.web.client.ObservationRestTemplateCustomizer",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"customize","parameterTypes":["org.springframework.web.client.RestTemplate"] }]
},
{
  "name":"org.springframework.boot.actuate.metrics.web.reactive.client.ObservationWebClientCustomizer",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"customize","parameterTypes":["org.springframework.web.reactive.function.client.WebClient$Builder"] }]
},
{
  "name":"org.springframework.boot.actuate.metrics.web.tomcat.TomcatMetricsBinder",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"destroy","parameterTypes":[] }, {"name":"onApplicationEvent","parameterTypes":["org.springframework.context.ApplicationEvent"] }]
},
{
  "name":"org.springframework.boot.actuate.ssl.SslHealthIndicator",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.system.DiskSpaceHealthIndicator",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.ansi.AnsiOutput$Enabled",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.AutoConfiguration",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.AutoConfigurationPackage",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.AutoConfigurationPackages$BasePackages",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":["java.lang.String[]"] }]
},
{
  "name":"org.springframework.boot.autoconfigure.AutoConfigureAfter",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.AutoConfigureBefore",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.AutoConfigureOrder",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.BackgroundPreinitializer",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.EnableAutoConfiguration",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.ImportAutoConfiguration",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.SharedMetadataReaderFactoryContextInitializer",
  "queryAllDeclaredConstructors":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.SpringBootApplication",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.aop.AopAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.aop.AopAutoConfiguration$AspectJAutoProxyingConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.aop.AopAutoConfiguration$AspectJAutoProxyingConfiguration$CglibAutoProxyConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.availability.ApplicationAvailabilityAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration$CacheManagerValidator",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"afterPropertiesSet","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.cache.CacheManagerCustomizer",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.cache.CacheManagerCustomizers",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.cache.CacheProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"getRedis","parameterTypes":[] }, {"name":"setType","parameterTypes":["org.springframework.boot.autoconfigure.cache.CacheType"] }]
},
{
  "name":"org.springframework.boot.autoconfigure.cache.CacheProperties$Caffeine"
},
{
  "name":"org.springframework.boot.autoconfigure.cache.CacheProperties$Couchbase"
},
{
  "name":"org.springframework.boot.autoconfigure.cache.CacheProperties$Infinispan"
},
{
  "name":"org.springframework.boot.autoconfigure.cache.CacheProperties$JCache"
},
{
  "name":"org.springframework.boot.autoconfigure.cache.CacheProperties$Redis",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"setTimeToLive","parameterTypes":["java.time.Duration"] }]
},
{
  "name":"org.springframework.boot.autoconfigure.cache.CacheType"
},
{
  "name":"org.springframework.boot.autoconfigure.cache.CacheTypeEditor"
},
{
  "name":"org.springframework.boot.autoconfigure.cache.RedisCacheConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.cache.RedisCacheManagerBuilderCustomizer"
},
{
  "name":"org.springframework.boot.autoconfigure.codec.CodecProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.condition.ConditionalOnBean",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.condition.ConditionalOnClass",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.condition.ConditionalOnExpression",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.condition.ConditionalOnMissingBean",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.condition.ConditionalOnMissingClass",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.condition.ConditionalOnNotWarDeployment",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.condition.ConditionalOnProperty",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.condition.ConditionalOnResource",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.condition.ConditionalOnSingleCandidate",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.condition.ConditionalOnThreading",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.condition.ConditionalOnWebApplication",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.context.ConfigurationPropertiesAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.context.LifecycleAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.context.LifecycleProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.context.MessageSourceAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.context.MessageSourceProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"getBasename","parameterTypes":[] }, {"name":"setBasename","parameterTypes":["java.util.List"] }]
},
{
  "name":"org.springframework.boot.autoconfigure.context.PropertyPlaceholderAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.dao.PersistenceExceptionTranslationAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.data.elasticsearch.ElasticsearchDataAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.data.elasticsearch.ElasticsearchDataConfiguration$BaseConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.data.elasticsearch.ElasticsearchDataConfiguration$JavaClientConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.data.elasticsearch.ElasticsearchDataConfiguration$ReactiveRestClientConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.data.elasticsearch.ElasticsearchRepositoriesAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.data.jdbc.JdbcDataProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.data.jdbc.JdbcDatabaseDialect"
},
{
  "name":"org.springframework.boot.autoconfigure.data.jdbc.JdbcRepositoriesAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.data.jdbc.JdbcRepositoriesAutoConfiguration$JdbcRepositoriesConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.data.jdbc.JdbcRepositoriesAutoConfiguration$SpringBootJdbcConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":["org.springframework.context.ApplicationContext","org.springframework.boot.autoconfigure.data.jdbc.JdbcDataProperties"] }, {"name":"dataAccessStrategyBean","parameterTypes":["org.springframework.jdbc.core.namedparam.NamedParameterJdbcOperations","org.springframework.data.jdbc.core.convert.JdbcConverter","org.springframework.data.jdbc.core.mapping.JdbcMappingContext","org.springframework.data.relational.core.dialect.Dialect"] }, {"name":"jdbcAggregateTemplate","parameterTypes":["org.springframework.context.ApplicationContext","org.springframework.data.jdbc.core.mapping.JdbcMappingContext","org.springframework.data.jdbc.core.convert.JdbcConverter","org.springframework.data.jdbc.core.convert.DataAccessStrategy"] }, {"name":"jdbcConverter","parameterTypes":["org.springframework.data.jdbc.core.mapping.JdbcMappingContext","org.springframework.jdbc.core.namedparam.NamedParameterJdbcOperations","org.springframework.data.jdbc.core.convert.RelationResolver","org.springframework.data.jdbc.core.convert.JdbcCustomConversions","org.springframework.data.relational.core.dialect.Dialect"] }, {"name":"jdbcCustomConversions","parameterTypes":[] }, {"name":"jdbcDialect","parameterTypes":["org.springframework.jdbc.core.namedparam.NamedParameterJdbcOperations"] }, {"name":"jdbcManagedTypes","parameterTypes":[] }, {"name":"jdbcMappingContext","parameterTypes":["java.util.Optional","org.springframework.data.jdbc.core.convert.JdbcCustomConversions","org.springframework.data.relational.RelationalManagedTypes"] }]
},
{
  "name":"org.springframework.boot.autoconfigure.data.redis.ClientResourcesBuilderCustomizer",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.data.redis.LettuceClientConfigurationBuilderCustomizer"
},
{
  "name":"org.springframework.boot.autoconfigure.data.redis.LettuceClientOptionsBuilderCustomizer"
},
{
  "name":"org.springframework.boot.autoconfigure.data.redis.LettuceConnectionConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":["org.springframework.boot.autoconfigure.data.redis.RedisProperties","org.springframework.beans.factory.ObjectProvider","org.springframework.beans.factory.ObjectProvider","org.springframework.beans.factory.ObjectProvider","org.springframework.boot.autoconfigure.data.redis.RedisConnectionDetails","org.springframework.beans.factory.ObjectProvider"] }]
},
{
  "name":"org.springframework.boot.autoconfigure.data.redis.PropertiesRedisConnectionDetails",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"getCluster","parameterTypes":[] }, {"name":"getPassword","parameterTypes":[] }, {"name":"getSentinel","parameterTypes":[] }, {"name":"getStandalone","parameterTypes":[] }, {"name":"getUsername","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.data.redis.RedisAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.data.redis.RedisConnectionConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.data.redis.RedisConnectionConfiguration$ConnectionInfo"
},
{
  "name":"org.springframework.boot.autoconfigure.data.redis.RedisConnectionDetails",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.data.redis.RedisConnectionDetails$Cluster"
},
{
  "name":"org.springframework.boot.autoconfigure.data.redis.RedisConnectionDetails$Node"
},
{
  "name":"org.springframework.boot.autoconfigure.data.redis.RedisConnectionDetails$Sentinel"
},
{
  "name":"org.springframework.boot.autoconfigure.data.redis.RedisConnectionDetails$Standalone"
},
{
  "name":"org.springframework.boot.autoconfigure.data.redis.RedisProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"getSsl","parameterTypes":[] }, {"name":"setHost","parameterTypes":["java.lang.String"] }, {"name":"setPassword","parameterTypes":["java.lang.String"] }, {"name":"setPort","parameterTypes":["int"] }, {"name":"setUsername","parameterTypes":["java.lang.String"] }]
},
{
  "name":"org.springframework.boot.autoconfigure.data.redis.RedisProperties$ClientType"
},
{
  "name":"org.springframework.boot.autoconfigure.data.redis.RedisProperties$Cluster"
},
{
  "name":"org.springframework.boot.autoconfigure.data.redis.RedisProperties$Jedis"
},
{
  "name":"org.springframework.boot.autoconfigure.data.redis.RedisProperties$Lettuce"
},
{
  "name":"org.springframework.boot.autoconfigure.data.redis.RedisProperties$Pool"
},
{
  "name":"org.springframework.boot.autoconfigure.data.redis.RedisProperties$Sentinel"
},
{
  "name":"org.springframework.boot.autoconfigure.data.redis.RedisProperties$Ssl",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"setEnabled","parameterTypes":["boolean"] }]
},
{
  "name":"org.springframework.boot.autoconfigure.data.redis.RedisReactiveAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.data.web.SpringDataWebProperties"
},
{
  "name":"org.springframework.boot.autoconfigure.elasticsearch.ElasticsearchClientAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.elasticsearch.ElasticsearchClientConfigurations$ElasticsearchClientConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.elasticsearch.ElasticsearchClientConfigurations$ElasticsearchTransportConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.elasticsearch.ElasticsearchClientConfigurations$JacksonJsonpMapperConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.elasticsearch.ElasticsearchClientConfigurations$JsonpMapperConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.elasticsearch.ElasticsearchConnectionDetails",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.elasticsearch.ElasticsearchConnectionDetails$Node"
},
{
  "name":"org.springframework.boot.autoconfigure.elasticsearch.ElasticsearchProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"getUris","parameterTypes":[] }, {"name":"setPassword","parameterTypes":["java.lang.String"] }, {"name":"setUris","parameterTypes":["java.util.List"] }, {"name":"setUsername","parameterTypes":["java.lang.String"] }]
},
{
  "name":"org.springframework.boot.autoconfigure.elasticsearch.ElasticsearchProperties$Restclient"
},
{
  "name":"org.springframework.boot.autoconfigure.elasticsearch.ElasticsearchRestClientAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.elasticsearch.ElasticsearchRestClientConfigurations$DefaultRestClientBuilderCustomizer",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"customize","parameterTypes":["org.apache.http.client.config.RequestConfig$Builder"] }, {"name":"customize","parameterTypes":["org.apache.http.impl.nio.client.HttpAsyncClientBuilder"] }, {"name":"customize","parameterTypes":["org.elasticsearch.client.RestClientBuilder"] }]
},
{
  "name":"org.springframework.boot.autoconfigure.elasticsearch.ElasticsearchRestClientConfigurations$PropertiesElasticsearchConnectionDetails",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"getNodes","parameterTypes":[] }, {"name":"getPassword","parameterTypes":[] }, {"name":"getPathPrefix","parameterTypes":[] }, {"name":"getUsername","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.elasticsearch.ElasticsearchRestClientConfigurations$RestClientBuilderConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":["org.springframework.boot.autoconfigure.elasticsearch.ElasticsearchProperties"] }]
},
{
  "name":"org.springframework.boot.autoconfigure.elasticsearch.ElasticsearchRestClientConfigurations$RestClientConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.elasticsearch.ReactiveElasticsearchClientAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.elasticsearch.RestClientBuilderCustomizer",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.freemarker.FreeMarkerTemplateAvailabilityProvider",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.groovy.template.GroovyTemplateAvailabilityProvider",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.http.HttpMessageConverters",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"iterator","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration$StringHttpMessageConverterConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.http.JacksonHttpMessageConvertersConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.http.JacksonHttpMessageConvertersConfiguration$MappingJackson2HttpMessageConverterConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.http.client.HttpClientAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.http.client.HttpClientProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.http.client.HttpClientProperties$Factory"
},
{
  "name":"org.springframework.boot.autoconfigure.http.client.HttpClientProperties$Ssl"
},
{
  "name":"org.springframework.boot.autoconfigure.http.codec.CodecsAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.http.codec.CodecsAutoConfiguration$DefaultCodecsConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.http.codec.CodecsAutoConfiguration$JacksonCodecConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":["org.springframework.boot.autoconfigure.info.ProjectInfoProperties"] }]
},
{
  "name":"org.springframework.boot.autoconfigure.info.ProjectInfoProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.info.ProjectInfoProperties$Build"
},
{
  "name":"org.springframework.boot.autoconfigure.info.ProjectInfoProperties$Git"
},
{
  "name":"org.springframework.boot.autoconfigure.integration.IntegrationPropertiesEnvironmentPostProcessor",
  "queryAllDeclaredConstructors":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.jackson.Jackson2ObjectMapperBuilderCustomizer",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$StandardJackson2ObjectMapperBuilderCustomizer",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"customize","parameterTypes":["org.springframework.http.converter.json.Jackson2ObjectMapperBuilder"] }, {"name":"getOrder","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonMixinConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.jackson.JacksonProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"setDefaultPropertyInclusion","parameterTypes":["com.fasterxml.jackson.annotation.JsonInclude$Include"] }]
},
{
  "name":"org.springframework.boot.autoconfigure.jackson.JacksonProperties$ConstructorDetectorStrategy"
},
{
  "name":"org.springframework.boot.autoconfigure.jackson.JacksonProperties$Datatype"
},
{
  "name":"org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.jdbc.DataSourceProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"afterPropertiesSet","parameterTypes":[] }, {"name":"setBeanClassLoader","parameterTypes":["java.lang.ClassLoader"] }, {"name":"setPassword","parameterTypes":["java.lang.String"] }, {"name":"setUsername","parameterTypes":["java.lang.String"] }]
},
{
  "name":"org.springframework.boot.autoconfigure.jdbc.DataSourceProperties$Xa"
},
{
  "name":"org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration$JdbcTransactionManagerConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.jdbc.JdbcClientAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.jdbc.JdbcProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.jdbc.JdbcProperties$Template"
},
{
  "name":"org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.jdbc.JdbcTemplateConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.jdbc.NamedParameterJdbcTemplateConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.jdbc.metadata.DataSourcePoolMetadataProvidersConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.jdbc.metadata.DataSourcePoolMetadataProvidersConfiguration$HikariPoolDataSourceMetadataProviderConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.kafka.ConcurrentKafkaListenerContainerFactoryConfigurer",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.kafka.DefaultKafkaConsumerFactoryCustomizer",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.kafka.DefaultKafkaProducerFactoryCustomizer",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.kafka.KafkaAnnotationDrivenConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":["org.springframework.boot.autoconfigure.kafka.KafkaProperties","org.springframework.beans.factory.ObjectProvider","org.springframework.beans.factory.ObjectProvider","org.springframework.beans.factory.ObjectProvider","org.springframework.beans.factory.ObjectProvider","org.springframework.beans.factory.ObjectProvider","org.springframework.beans.factory.ObjectProvider","org.springframework.beans.factory.ObjectProvider","org.springframework.beans.factory.ObjectProvider","org.springframework.beans.factory.ObjectProvider","org.springframework.beans.factory.ObjectProvider","org.springframework.beans.factory.ObjectProvider"] }]
},
{
  "name":"org.springframework.boot.autoconfigure.kafka.KafkaAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":["org.springframework.boot.autoconfigure.kafka.KafkaProperties"] }]
},
{
  "name":"org.springframework.boot.autoconfigure.kafka.KafkaConnectionDetails",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"getAdminBootstrapServers","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.kafka.KafkaProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"getBootstrapServers","parameterTypes":[] }, {"name":"getConsumer","parameterTypes":[] }, {"name":"getJaas","parameterTypes":[] }, {"name":"getListener","parameterTypes":[] }, {"name":"getProducer","parameterTypes":[] }, {"name":"getProperties","parameterTypes":[] }, {"name":"getSecurity","parameterTypes":[] }, {"name":"getTemplate","parameterTypes":[] }, {"name":"setBootstrapServers","parameterTypes":["java.util.List"] }, {"name":"setClientId","parameterTypes":["java.lang.String"] }]
},
{
  "name":"org.springframework.boot.autoconfigure.kafka.KafkaProperties$Admin"
},
{
  "name":"org.springframework.boot.autoconfigure.kafka.KafkaProperties$Consumer",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"getProperties","parameterTypes":[] }, {"name":"setGroupId","parameterTypes":["java.lang.String"] }]
},
{
  "name":"org.springframework.boot.autoconfigure.kafka.KafkaProperties$Jaas",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"getOptions","parameterTypes":[] }, {"name":"setEnabled","parameterTypes":["boolean"] }, {"name":"setLoginModule","parameterTypes":["java.lang.String"] }, {"name":"setOptions","parameterTypes":["java.util.Map"] }]
},
{
  "name":"org.springframework.boot.autoconfigure.kafka.KafkaProperties$Listener",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"setAckMode","parameterTypes":["org.springframework.kafka.listener.ContainerProperties$AckMode"] }, {"name":"setObservationEnabled","parameterTypes":["boolean"] }]
},
{
  "name":"org.springframework.boot.autoconfigure.kafka.KafkaProperties$Producer",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"setAcks","parameterTypes":["java.lang.String"] }]
},
{
  "name":"org.springframework.boot.autoconfigure.kafka.KafkaProperties$Retry"
},
{
  "name":"org.springframework.boot.autoconfigure.kafka.KafkaProperties$Retry$Topic$Backoff"
},
{
  "name":"org.springframework.boot.autoconfigure.kafka.KafkaProperties$Security",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"setProtocol","parameterTypes":["java.lang.String"] }]
},
{
  "name":"org.springframework.boot.autoconfigure.kafka.KafkaProperties$Ssl"
},
{
  "name":"org.springframework.boot.autoconfigure.kafka.KafkaProperties$Streams"
},
{
  "name":"org.springframework.boot.autoconfigure.kafka.KafkaProperties$Template",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"setObservationEnabled","parameterTypes":["boolean"] }]
},
{
  "name":"org.springframework.boot.autoconfigure.kafka.PropertiesKafkaConnectionDetails",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"getBootstrapServers","parameterTypes":[] }, {"name":"getConsumerBootstrapServers","parameterTypes":[] }, {"name":"getProducerBootstrapServers","parameterTypes":[] }, {"name":"getStreamsBootstrapServers","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.kafka.StreamsBuilderFactoryBeanCustomizer",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration$CustomizerConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration$LiquibaseConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"liquibase","parameterTypes":["org.springframework.beans.factory.ObjectProvider","org.springframework.beans.factory.ObjectProvider","org.springframework.boot.autoconfigure.liquibase.LiquibaseProperties","org.springframework.beans.factory.ObjectProvider","org.springframework.boot.autoconfigure.liquibase.LiquibaseConnectionDetails"] }]
},
{
  "name":"org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration$PropertiesLiquibaseConnectionDetails",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"getDriverClassName","parameterTypes":[] }, {"name":"getJdbcUrl","parameterTypes":[] }, {"name":"getPassword","parameterTypes":[] }, {"name":"getUsername","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration$SpringLiquibaseCustomizer"
},
{
  "name":"org.springframework.boot.autoconfigure.liquibase.LiquibaseConnectionDetails",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.liquibase.LiquibaseDataSource",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.liquibase.LiquibaseProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.liquibase.LiquibaseProperties$ShowSummary"
},
{
  "name":"org.springframework.boot.autoconfigure.liquibase.LiquibaseProperties$ShowSummaryOutput"
},
{
  "name":"org.springframework.boot.autoconfigure.liquibase.LiquibaseProperties$UiService"
},
{
  "name":"org.springframework.boot.autoconfigure.liquibase.LiquibaseSchemaManagementProvider",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"getSchemaManagement","parameterTypes":["javax.sql.DataSource"] }]
},
{
  "name":"org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLoggingListener",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.mustache.MustacheTemplateAvailabilityProvider",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.netty.NettyAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":["org.springframework.boot.autoconfigure.netty.NettyProperties"] }]
},
{
  "name":"org.springframework.boot.autoconfigure.netty.NettyProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.netty.NettyProperties$LeakDetection"
},
{
  "name":"org.springframework.boot.autoconfigure.reactor.ReactorAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":["org.springframework.boot.autoconfigure.reactor.ReactorProperties"] }]
},
{
  "name":"org.springframework.boot.autoconfigure.reactor.ReactorProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.reactor.ReactorProperties$ContextPropagationMode"
},
{
  "name":"org.springframework.boot.autoconfigure.service.connection.ConnectionDetails",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.sql.init.DataSourceInitializationConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.sql.init.SqlDataSourceScriptDatabaseInitializer",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.sql.init.SqlInitializationAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.sql.init.SqlInitializationProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.ssl.BundleContentProperty"
},
{
  "name":"org.springframework.boot.autoconfigure.ssl.FileWatcher",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"close","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.ssl.SslAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":["org.springframework.core.io.ResourceLoader","org.springframework.boot.autoconfigure.ssl.SslProperties"] }]
},
{
  "name":"org.springframework.boot.autoconfigure.ssl.SslBundleProperties"
},
{
  "name":"org.springframework.boot.autoconfigure.ssl.SslBundleRegistrar",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.ssl.SslProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.ssl.SslProperties$Bundles"
},
{
  "name":"org.springframework.boot.autoconfigure.ssl.SslPropertiesBundleRegistrar",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"registerBundles","parameterTypes":["org.springframework.boot.ssl.SslBundleRegistry"] }]
},
{
  "name":"org.springframework.boot.autoconfigure.ssl.SslPropertiesBundleRegistrar$Bundle"
},
{
  "name":"org.springframework.boot.autoconfigure.task.TaskExecutionAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.task.TaskExecutionProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.task.TaskExecutionProperties$Pool"
},
{
  "name":"org.springframework.boot.autoconfigure.task.TaskExecutionProperties$Shutdown"
},
{
  "name":"org.springframework.boot.autoconfigure.task.TaskExecutionProperties$Simple"
},
{
  "name":"org.springframework.boot.autoconfigure.task.TaskExecutorConfigurations$SimpleAsyncTaskExecutorBuilderConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":["org.springframework.boot.autoconfigure.task.TaskExecutionProperties","org.springframework.beans.factory.ObjectProvider","org.springframework.beans.factory.ObjectProvider"] }]
},
{
  "name":"org.springframework.boot.autoconfigure.task.TaskExecutorConfigurations$TaskExecutorConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.task.TaskExecutorConfigurations$ThreadPoolTaskExecutorBuilderConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.task.TaskSchedulingAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.task.TaskSchedulingConfigurations$SimpleAsyncTaskSchedulerBuilderConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":["org.springframework.boot.autoconfigure.task.TaskSchedulingProperties","org.springframework.beans.factory.ObjectProvider"] }]
},
{
  "name":"org.springframework.boot.autoconfigure.task.TaskSchedulingConfigurations$ThreadPoolTaskSchedulerBuilderConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.task.TaskSchedulingProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.task.TaskSchedulingProperties$Pool"
},
{
  "name":"org.springframework.boot.autoconfigure.task.TaskSchedulingProperties$Shutdown"
},
{
  "name":"org.springframework.boot.autoconfigure.task.TaskSchedulingProperties$Simple"
},
{
  "name":"org.springframework.boot.autoconfigure.thymeleaf.ThymeleafTemplateAvailabilityProvider",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.transaction.ExecutionListenersTransactionManagerCustomizer",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"customize","parameterTypes":["org.springframework.transaction.TransactionManager"] }]
},
{
  "name":"org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration$EnableTransactionManagementConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration$EnableTransactionManagementConfiguration$CglibAutoProxyConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration$TransactionTemplateConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.transaction.TransactionManagerCustomizationAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.transaction.TransactionManagerCustomizer",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.transaction.TransactionManagerCustomizers",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.transaction.TransactionProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"customize","parameterTypes":["org.springframework.transaction.TransactionManager"] }]
},
{
  "name":"org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.validation.ValidationConfigurationCustomizer"
},
{
  "name":"org.springframework.boot.autoconfigure.validation.ValidatorAdapter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"afterPropertiesSet","parameterTypes":[] }, {"name":"destroy","parameterTypes":[] }, {"name":"setApplicationContext","parameterTypes":["org.springframework.context.ApplicationContext"] }, {"name":"supports","parameterTypes":["java.lang.Class"] }, {"name":"unwrap","parameterTypes":["java.lang.Class"] }, {"name":"validate","parameterTypes":["java.lang.Object","org.springframework.validation.Errors"] }, {"name":"validate","parameterTypes":["java.lang.Object","org.springframework.validation.Errors","java.lang.Object[]"] }]
},
{
  "name":"org.springframework.boot.autoconfigure.web.ConditionalOnEnabledResourceChain",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.web.ErrorProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"getWhitelabel","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.web.ErrorProperties$Whitelabel",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"setEnabled","parameterTypes":["boolean"] }]
},
{
  "name":"org.springframework.boot.autoconfigure.web.ServerProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"getError","parameterTypes":[] }, {"name":"getHttp2","parameterTypes":[] }, {"name":"setPort","parameterTypes":["java.lang.Integer"] }]
},
{
  "name":"org.springframework.boot.autoconfigure.web.ServerProperties$ForwardHeadersStrategy"
},
{
  "name":"org.springframework.boot.autoconfigure.web.ServerProperties$Jetty"
},
{
  "name":"org.springframework.boot.autoconfigure.web.ServerProperties$Netty"
},
{
  "name":"org.springframework.boot.autoconfigure.web.ServerProperties$Reactive"
},
{
  "name":"org.springframework.boot.autoconfigure.web.ServerProperties$Servlet"
},
{
  "name":"org.springframework.boot.autoconfigure.web.ServerProperties$Tomcat"
},
{
  "name":"org.springframework.boot.autoconfigure.web.ServerProperties$Tomcat$Accesslog"
},
{
  "name":"org.springframework.boot.autoconfigure.web.ServerProperties$Tomcat$Resource"
},
{
  "name":"org.springframework.boot.autoconfigure.web.ServerProperties$Undertow"
},
{
  "name":"org.springframework.boot.autoconfigure.web.WebProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.web.WebProperties$LocaleResolver"
},
{
  "name":"org.springframework.boot.autoconfigure.web.WebProperties$Resources"
},
{
  "name":"org.springframework.boot.autoconfigure.web.WebProperties$Resources$Chain"
},
{
  "name":"org.springframework.boot.autoconfigure.web.WebProperties$Resources$Chain$Strategy"
},
{
  "name":"org.springframework.boot.autoconfigure.web.client.AutoConfiguredRestClientSsl",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"fromBundle","parameterTypes":["java.lang.String"] }, {"name":"fromBundle","parameterTypes":["org.springframework.boot.ssl.SslBundle"] }]
},
{
  "name":"org.springframework.boot.autoconfigure.web.client.HttpMessageConvertersRestClientCustomizer",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"customize","parameterTypes":["org.springframework.web.client.RestClient$Builder"] }]
},
{
  "name":"org.springframework.boot.autoconfigure.web.client.RestClientAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.web.client.RestClientBuilderConfigurer",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.web.client.RestClientSsl",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.web.client.RestTemplateAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.web.client.RestTemplateBuilderConfigurer"
},
{
  "name":"org.springframework.boot.autoconfigure.web.embedded.EmbeddedWebServerFactoryCustomizerAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.web.embedded.EmbeddedWebServerFactoryCustomizerAutoConfiguration$TomcatWebServerFactoryCustomizerConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.web.embedded.TomcatVirtualThreadsWebServerFactoryCustomizer",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"customize","parameterTypes":["org.springframework.boot.web.server.WebServerFactory"] }, {"name":"getOrder","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.web.embedded.TomcatWebServerFactoryCustomizer",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"customize","parameterTypes":["org.springframework.boot.web.server.WebServerFactory"] }, {"name":"getOrder","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.web.format.DateTimeFormatters"
},
{
  "name":"org.springframework.boot.autoconfigure.web.format.WebConversionService",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.web.reactive.function.client.AutoConfiguredWebClientSsl",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"fromBundle","parameterTypes":["java.lang.String"] }, {"name":"fromBundle","parameterTypes":["org.springframework.boot.ssl.SslBundle"] }]
},
{
  "name":"org.springframework.boot.autoconfigure.web.reactive.function.client.ClientHttpConnectorAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.web.reactive.function.client.ClientHttpConnectorFactory",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"createClientHttpConnector","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.web.reactive.function.client.ClientHttpConnectorFactoryConfiguration$JdkClient",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.web.reactive.function.client.JdkClientHttpConnectorFactory",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"createClientHttpConnector","parameterTypes":["org.springframework.boot.ssl.SslBundle"] }]
},
{
  "name":"org.springframework.boot.autoconfigure.web.reactive.function.client.WebClientAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.web.reactive.function.client.WebClientAutoConfiguration$WebClientCodecsConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.web.reactive.function.client.WebClientCodecCustomizer",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"customize","parameterTypes":["org.springframework.web.reactive.function.client.WebClient$Builder"] }]
},
{
  "name":"org.springframework.boot.autoconfigure.web.reactive.function.client.WebClientSsl",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.web.servlet.ConditionalOnMissingFilterBean",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration$DispatcherServletConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration$DispatcherServletRegistrationConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.web.servlet.DispatcherServletPath",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"getPrefix","parameterTypes":[] }, {"name":"getRelativePath","parameterTypes":["java.lang.String"] }, {"name":"getServletUrlMapping","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.web.servlet.DispatcherServletRegistrationBean",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"addUrlMappings","parameterTypes":["java.lang.String[]"] }, {"name":"getPath","parameterTypes":[] }, {"name":"setUrlMappings","parameterTypes":["java.util.Collection"] }]
},
{
  "name":"org.springframework.boot.autoconfigure.web.servlet.HttpEncodingAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":["org.springframework.boot.autoconfigure.web.ServerProperties"] }]
},
{
  "name":"org.springframework.boot.autoconfigure.web.servlet.HttpEncodingAutoConfiguration$LocaleCharsetMappingsCustomizer",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"customize","parameterTypes":["org.springframework.boot.web.server.WebServerFactory"] }, {"name":"getOrder","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.web.servlet.JspTemplateAvailabilityProvider",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.web.servlet.MultipartAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":["org.springframework.boot.autoconfigure.web.servlet.MultipartProperties"] }]
},
{
  "name":"org.springframework.boot.autoconfigure.web.servlet.MultipartProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryConfiguration$EmbeddedTomcat",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryCustomizer",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"customize","parameterTypes":["org.springframework.boot.web.server.WebServerFactory"] }, {"name":"getOrder","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.web.servlet.TomcatServletWebServerFactoryCustomizer",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"customize","parameterTypes":["org.springframework.boot.web.server.WebServerFactory"] }, {"name":"getOrder","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":["org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties","org.springframework.boot.autoconfigure.web.WebProperties","org.springframework.beans.factory.ObjectProvider","org.springframework.beans.factory.ObjectProvider","org.springframework.beans.factory.ListableBeanFactory"] }, {"name":"flashMapManager","parameterTypes":[] }, {"name":"localeResolver","parameterTypes":[] }, {"name":"mvcContentNegotiationManager","parameterTypes":[] }, {"name":"mvcConversionService","parameterTypes":[] }, {"name":"mvcValidator","parameterTypes":[] }, {"name":"setResourceLoader","parameterTypes":["org.springframework.core.io.ResourceLoader"] }, {"name":"themeResolver","parameterTypes":[] }, {"name":"viewNameTranslator","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$ResourceChainCustomizerConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$ResourceChainResourceHandlerRegistrationCustomizer",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"customize","parameterTypes":["org.springframework.web.servlet.config.annotation.ResourceHandlerRegistration"] }]
},
{
  "name":"org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$ResourceHandlerRegistrationCustomizer",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":["org.springframework.boot.autoconfigure.web.WebProperties","org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties","org.springframework.beans.factory.ListableBeanFactory","org.springframework.beans.factory.ObjectProvider","org.springframework.beans.factory.ObjectProvider","org.springframework.beans.factory.ObjectProvider","org.springframework.beans.factory.ObjectProvider"] }, {"name":"addFormatters","parameterTypes":["org.springframework.format.FormatterRegistry"] }, {"name":"addResourceHandlers","parameterTypes":["org.springframework.web.servlet.config.annotation.ResourceHandlerRegistry"] }, {"name":"configureAsyncSupport","parameterTypes":["org.springframework.web.servlet.config.annotation.AsyncSupportConfigurer"] }, {"name":"configureContentNegotiation","parameterTypes":["org.springframework.web.servlet.config.annotation.ContentNegotiationConfigurer"] }, {"name":"configureMessageConverters","parameterTypes":["java.util.List"] }, {"name":"configurePathMatch","parameterTypes":["org.springframework.web.servlet.config.annotation.PathMatchConfigurer"] }, {"name":"getMessageCodesResolver","parameterTypes":[] }, {"name":"setServletContext","parameterTypes":["jakarta.servlet.ServletContext"] }]
},
{
  "name":"org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$WelcomePageHandlerMappingFactory"
},
{
  "name":"org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"getAsync","parameterTypes":[] }, {"name":"setLogResolvedException","parameterTypes":["boolean"] }]
},
{
  "name":"org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties$Async",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"setRequestTimeout","parameterTypes":["java.time.Duration"] }]
},
{
  "name":"org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties$Contentnegotiation"
},
{
  "name":"org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties$Format"
},
{
  "name":"org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties$Pathmatch"
},
{
  "name":"org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties$Problemdetails"
},
{
  "name":"org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties$Servlet"
},
{
  "name":"org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties$View"
},
{
  "name":"org.springframework.boot.autoconfigure.web.servlet.WelcomePage"
},
{
  "name":"org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.web.servlet.WelcomePageNotAcceptableHandlerMapping",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.web.servlet.error.AbstractErrorController",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.web.servlet.error.DefaultErrorViewResolver",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"getOrder","parameterTypes":[] }, {"name":"resolveErrorView","parameterTypes":["jakarta.servlet.http.HttpServletRequest","org.springframework.http.HttpStatus","java.util.Map"] }]
},
{
  "name":"org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":["org.springframework.boot.autoconfigure.web.ServerProperties"] }]
},
{
  "name":"org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$DefaultErrorViewResolverConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":["org.springframework.context.ApplicationContext","org.springframework.boot.autoconfigure.web.WebProperties"] }]
},
{
  "name":"org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$ErrorPageCustomizer",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"getOrder","parameterTypes":[] }, {"name":"registerErrorPages","parameterTypes":["org.springframework.boot.web.server.ErrorPageRegistry"] }]
},
{
  "name":"org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$PreserveErrorControllerTargetClassPostProcessor"
},
{
  "name":"org.springframework.boot.autoconfigure.web.servlet.error.ErrorViewResolver",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.websocket.servlet.TomcatWebSocketServletWebServerCustomizer",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"customize","parameterTypes":["org.springframework.boot.web.server.WebServerFactory"] }, {"name":"getOrder","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.websocket.servlet.WebSocketServletAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.websocket.servlet.WebSocketServletAutoConfiguration$TomcatWebSocketConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.availability.ApplicationAvailability",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"getLivenessState","parameterTypes":[] }, {"name":"getReadinessState","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.availability.ApplicationAvailabilityBean",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"getLastChangeEvent","parameterTypes":["java.lang.Class"] }, {"name":"getState","parameterTypes":["java.lang.Class"] }, {"name":"getState","parameterTypes":["java.lang.Class","org.springframework.boot.availability.AvailabilityState"] }, {"name":"onApplicationEvent","parameterTypes":["org.springframework.context.ApplicationEvent"] }]
},
{
  "name":"org.springframework.boot.availability.AvailabilityChangeEvent"
},
{
  "name":"org.springframework.boot.availability.AvailabilityState"
},
{
  "name":"org.springframework.boot.availability.LivenessState"
},
{
  "name":"org.springframework.boot.availability.ReadinessState"
},
{
  "name":"org.springframework.boot.builder.ParentContextCloserApplicationListener",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.cloud.CloudFoundryVcapEnvironmentPostProcessor",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["org.springframework.boot.logging.DeferredLogFactory"] }]
},
{
  "name":"org.springframework.boot.context.ConfigurationWarningsApplicationContextInitializer",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.context.ContextIdApplicationContextInitializer",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.context.FileEncodingApplicationListener",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.context.config.AnsiOutputApplicationListener",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.context.config.ConfigDataEnvironmentPostProcessor",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["org.springframework.boot.logging.DeferredLogFactory","org.springframework.boot.ConfigurableBootstrapContext"] }]
},
{
  "name":"org.springframework.boot.context.config.ConfigDataNotFoundAction",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.context.config.ConfigDataProperties",
  "queryAllDeclaredConstructors":true,
  "fields":[{"name":"this$0"}],
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.context.config.ConfigTreeConfigDataLoader",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.context.config.ConfigTreeConfigDataLocationResolver",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["org.springframework.core.io.ResourceLoader"] }]
},
{
  "name":"org.springframework.boot.context.config.StandardConfigDataLoader",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.context.config.StandardConfigDataLocationResolver",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["org.springframework.boot.logging.DeferredLogFactory","org.springframework.boot.context.properties.bind.Binder","org.springframework.core.io.ResourceLoader"] }]
},
{
  "name":"org.springframework.boot.context.event.ApplicationReadyEvent"
},
{
  "name":"org.springframework.boot.context.event.ApplicationStartedEvent"
},
{
  "name":"org.springframework.boot.context.event.EventPublishingRunListener",
  "queryAllDeclaredConstructors":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["org.springframework.boot.SpringApplication","java.lang.String[]"] }]
},
{
  "name":"org.springframework.boot.context.logging.LoggingApplicationListener",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.context.properties.BoundConfigurationProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.context.properties.ConfigurationProperties",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.context.properties.ConfigurationPropertiesBindHandlerAdvisor",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.boot.context.properties.EnableConfigurationProperties",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.context.properties.bind.BindHandler"
},
{
  "name":"org.springframework.boot.context.properties.bind.Binder"
},
{
  "name":"org.springframework.boot.context.properties.bind.Name",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.context.properties.source.ConfigurationProperty"
},
{
  "name":"org.springframework.boot.context.properties.source.ConfigurationPropertyName"
},
{
  "name":"org.springframework.boot.env.EnvironmentPostProcessorApplicationListener",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.env.PropertiesPropertySourceLoader",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.env.RandomValuePropertySourceEnvironmentPostProcessor",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["org.springframework.boot.logging.DeferredLogFactory"] }]
},
{
  "name":"org.springframework.boot.env.SpringApplicationJsonEnvironmentPostProcessor",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.env.YamlPropertySourceLoader",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.http.client.AbstractClientHttpRequestFactoryBuilder",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"build","parameterTypes":["org.springframework.boot.http.client.ClientHttpRequestFactorySettings"] }]
},
{
  "name":"org.springframework.boot.http.client.ClientHttpRequestFactoryBuilder",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"build","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.http.client.ClientHttpRequestFactorySettings",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"equals","parameterTypes":["java.lang.Object"] }, {"name":"hashCode","parameterTypes":[] }, {"name":"toString","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.http.client.ClientHttpRequestFactorySettings$Redirects"
},
{
  "name":"org.springframework.boot.http.client.HttpComponentsClientHttpRequestFactoryBuilder"
},
{
  "name":"org.springframework.boot.http.client.JdkClientHttpRequestFactoryBuilder",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"withCustomizer","parameterTypes":["java.util.function.Consumer"] }, {"name":"withCustomizers","parameterTypes":["java.util.Collection"] }]
},
{
  "name":"org.springframework.boot.http.client.JettyClientHttpRequestFactoryBuilder"
},
{
  "name":"org.springframework.boot.http.client.ReactorClientHttpRequestFactoryBuilder"
},
{
  "name":"org.springframework.boot.http.client.SimpleClientHttpRequestFactoryBuilder"
},
{
  "name":"org.springframework.boot.info.BuildProperties"
},
{
  "name":"org.springframework.boot.info.GitProperties"
},
{
  "name":"org.springframework.boot.info.SslInfo",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.info.SslInfo$BundleInfo"
},
{
  "name":"org.springframework.boot.info.SslInfo$CertificateChainInfo"
},
{
  "name":"org.springframework.boot.info.SslInfo$CertificateInfo"
},
{
  "name":"org.springframework.boot.io.Base64ProtocolResolver",
  "queryAllDeclaredConstructors":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.io.ProtocolResolverApplicationContextInitializer",
  "queryAllDeclaredConstructors":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.jackson.JsonComponent$Scope"
},
{
  "name":"org.springframework.boot.jackson.JsonComponentModule",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"afterPropertiesSet","parameterTypes":[] }, {"name":"setBeanFactory","parameterTypes":["org.springframework.beans.factory.BeanFactory"] }]
},
{
  "name":"org.springframework.boot.jackson.JsonMixinModule",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.jackson.JsonMixinModuleEntries",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.jackson.JsonMixinModuleEntries$Builder"
},
{
  "name":"org.springframework.boot.jdbc.DataSourceBuilder"
},
{
  "name":"org.springframework.boot.jdbc.EmbeddedDatabaseConnection"
},
{
  "name":"org.springframework.boot.jdbc.SchemaManagement"
},
{
  "name":"org.springframework.boot.jdbc.SchemaManagementProvider",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.boot.jdbc.init.DataSourceScriptDatabaseInitializer",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.jdbc.metadata.DataSourcePoolMetadata"
},
{
  "name":"org.springframework.boot.jdbc.metadata.DataSourcePoolMetadataProvider",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.boot.loader.launch.LaunchedClassLoader",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"clearCache","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.loader.net.protocol.jar.JarUrlClassLoader",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.logging.LogLevelEditor"
},
{
  "name":"org.springframework.boot.logging.java.JavaLoggingSystem$Factory",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.logging.java.JavaLoggingSystem.Factory"
},
{
  "name":"org.springframework.boot.logging.log4j2.Log4J2LoggingSystem$Factory",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.logging.log4j2.Log4J2LoggingSystem.Factory"
},
{
  "name":"org.springframework.boot.logging.logback.ColorConverter",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.logging.logback.CorrelationIdConverter",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.logging.logback.EnclosedInSquareBracketsConverter",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.logging.logback.ExtendedWhitespaceThrowableProxyConverter",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.logging.logback.LogbackLoggingSystem$Factory",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.logging.logback.LogbackLoggingSystem.Factory"
},
{
  "name":"org.springframework.boot.logging.logback.RootLogLevelConfigurator"
},
{
  "name":"org.springframework.boot.reactor.ReactorEnvironmentPostProcessor",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.rsocket.context.RSocketPortInfoApplicationContextInitializer",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"afterPropertiesSet","parameterTypes":[] }, {"name":"initializeDatabase","parameterTypes":[] }, {"name":"setResourceLoader","parameterTypes":["org.springframework.core.io.ResourceLoader"] }]
},
{
  "name":"org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer$ScriptLocationResolver"
},
{
  "name":"org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer$Scripts"
},
{
  "name":"org.springframework.boot.sql.init.DatabaseInitializationMode"
},
{
  "name":"org.springframework.boot.sql.init.DatabaseInitializationSettings"
},
{
  "name":"org.springframework.boot.ssl.DefaultSslBundleRegistry",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"addBundleUpdateHandler","parameterTypes":["java.lang.String","java.util.function.Consumer"] }, {"name":"getBundle","parameterTypes":["java.lang.String"] }, {"name":"getBundleNames","parameterTypes":[] }, {"name":"registerBundle","parameterTypes":["java.lang.String","org.springframework.boot.ssl.SslBundle"] }, {"name":"updateBundle","parameterTypes":["java.lang.String","org.springframework.boot.ssl.SslBundle"] }]
},
{
  "name":"org.springframework.boot.ssl.DefaultSslBundleRegistry$RegisteredSslBundle"
},
{
  "name":"org.springframework.boot.ssl.NoSuchSslBundleException"
},
{
  "name":"org.springframework.boot.ssl.SslBundle"
},
{
  "name":"org.springframework.boot.ssl.SslBundleRegistry",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.boot.ssl.SslBundles",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.boot.task.SimpleAsyncTaskExecutorBuilder",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.task.SimpleAsyncTaskExecutorCustomizer"
},
{
  "name":"org.springframework.boot.task.SimpleAsyncTaskSchedulerBuilder",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.task.SimpleAsyncTaskSchedulerCustomizer"
},
{
  "name":"org.springframework.boot.task.ThreadPoolTaskExecutorBuilder",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.task.ThreadPoolTaskExecutorCustomizer"
},
{
  "name":"org.springframework.boot.task.ThreadPoolTaskSchedulerBuilder",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.task.ThreadPoolTaskSchedulerCustomizer"
},
{
  "name":"org.springframework.boot.validation.beanvalidation.MethodValidationExcludeFilter",
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.boot.web.client.RestClientCustomizer",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.boot.web.client.RestTemplateBuilder"
},
{
  "name":"org.springframework.boot.web.client.RestTemplateCustomizer",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.boot.web.codec.CodecCustomizer",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.boot.web.context.ServerPortInfoApplicationContextInitializer",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.web.context.WebServerInitializedEvent"
},
{
  "name":"org.springframework.boot.web.embedded.tomcat.ConfigurableTomcatWebServerFactory",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.boot.web.embedded.tomcat.SslConnectorCustomizer"
},
{
  "name":"org.springframework.boot.web.embedded.tomcat.TomcatConnectorCustomizer"
},
{
  "name":"org.springframework.boot.web.embedded.tomcat.TomcatContextCustomizer"
},
{
  "name":"org.springframework.boot.web.embedded.tomcat.TomcatEmbeddedContext"
},
{
  "name":"org.springframework.boot.web.embedded.tomcat.TomcatProtocolHandlerCustomizer"
},
{
  "name":"org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"addConnectorCustomizers","parameterTypes":["org.springframework.boot.web.embedded.tomcat.TomcatConnectorCustomizer[]"] }, {"name":"addContextCustomizers","parameterTypes":["org.springframework.boot.web.embedded.tomcat.TomcatContextCustomizer[]"] }, {"name":"addEngineValves","parameterTypes":["org.apache.catalina.Valve[]"] }, {"name":"addProtocolHandlerCustomizers","parameterTypes":["org.springframework.boot.web.embedded.tomcat.TomcatProtocolHandlerCustomizer[]"] }, {"name":"getWebServer","parameterTypes":["org.springframework.boot.web.servlet.ServletContextInitializer[]"] }, {"name":"setBackgroundProcessorDelay","parameterTypes":["int"] }, {"name":"setBaseDirectory","parameterTypes":["java.io.File"] }, {"name":"setResourceLoader","parameterTypes":["org.springframework.core.io.ResourceLoader"] }, {"name":"setUriEncoding","parameterTypes":["java.nio.charset.Charset"] }]
},
{
  "name":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer"
},
{
  "name":"org.springframework.boot.web.error.ErrorAttributeOptions"
},
{
  "name":"org.springframework.boot.web.reactive.context.ReactiveWebServerApplicationContextFactory",
  "queryAllDeclaredConstructors":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.web.reactive.function.client.WebClientCustomizer",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.boot.web.server.AbstractConfigurableWebServerFactory",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"addErrorPages","parameterTypes":["org.springframework.boot.web.server.ErrorPage[]"] }, {"name":"getAddress","parameterTypes":[] }, {"name":"getCompression","parameterTypes":[] }, {"name":"getErrorPages","parameterTypes":[] }, {"name":"getHttp2","parameterTypes":[] }, {"name":"getPort","parameterTypes":[] }, {"name":"getServerHeader","parameterTypes":[] }, {"name":"getShutdown","parameterTypes":[] }, {"name":"getSsl","parameterTypes":[] }, {"name":"getSslBundles","parameterTypes":[] }, {"name":"setAddress","parameterTypes":["java.net.InetAddress"] }, {"name":"setCompression","parameterTypes":["org.springframework.boot.web.server.Compression"] }, {"name":"setErrorPages","parameterTypes":["java.util.Set"] }, {"name":"setHttp2","parameterTypes":["org.springframework.boot.web.server.Http2"] }, {"name":"setPort","parameterTypes":["int"] }, {"name":"setServerHeader","parameterTypes":["java.lang.String"] }, {"name":"setShutdown","parameterTypes":["org.springframework.boot.web.server.Shutdown"] }, {"name":"setSsl","parameterTypes":["org.springframework.boot.web.server.Ssl"] }, {"name":"setSslBundles","parameterTypes":["org.springframework.boot.ssl.SslBundles"] }]
},
{
  "name":"org.springframework.boot.web.server.Compression"
},
{
  "name":"org.springframework.boot.web.server.ConfigurableWebServerFactory",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.boot.web.server.ErrorPage"
},
{
  "name":"org.springframework.boot.web.server.ErrorPageRegistrar",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.boot.web.server.ErrorPageRegistry",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.boot.web.server.Http2",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"setEnabled","parameterTypes":["boolean"] }]
},
{
  "name":"org.springframework.boot.web.server.MimeMappings"
},
{
  "name":"org.springframework.boot.web.server.MimeMappings$Mapping"
},
{
  "name":"org.springframework.boot.web.server.Shutdown"
},
{
  "name":"org.springframework.boot.web.server.Ssl"
},
{
  "name":"org.springframework.boot.web.server.Ssl$ServerNameSslBundle"
},
{
  "name":"org.springframework.boot.web.server.WebServer"
},
{
  "name":"org.springframework.boot.web.server.WebServerFactory",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.boot.web.server.WebServerFactoryCustomizer",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.boot.web.servlet.AbstractFilterRegistrationBean",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"addServletNames","parameterTypes":["java.lang.String[]"] }, {"name":"addServletRegistrationBeans","parameterTypes":["org.springframework.boot.web.servlet.ServletRegistrationBean[]"] }, {"name":"addUrlPatterns","parameterTypes":["java.lang.String[]"] }, {"name":"determineDispatcherTypes","parameterTypes":[] }, {"name":"getFilterName","parameterTypes":[] }, {"name":"getServletNames","parameterTypes":[] }, {"name":"getServletRegistrationBeans","parameterTypes":[] }, {"name":"getUrlPatterns","parameterTypes":[] }, {"name":"isMatchAfter","parameterTypes":[] }, {"name":"setDispatcherTypes","parameterTypes":["jakarta.servlet.DispatcherType","jakarta.servlet.DispatcherType[]"] }, {"name":"setDispatcherTypes","parameterTypes":["java.util.EnumSet"] }, {"name":"setMatchAfter","parameterTypes":["boolean"] }, {"name":"setServletNames","parameterTypes":["java.util.Collection"] }, {"name":"setServletRegistrationBeans","parameterTypes":["java.util.Collection"] }, {"name":"setUrlPatterns","parameterTypes":["java.util.Collection"] }, {"name":"toString","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.web.servlet.DynamicRegistrationBean",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"addInitParameter","parameterTypes":["java.lang.String","java.lang.String"] }, {"name":"configure","parameterTypes":["jakarta.servlet.Registration$Dynamic"] }, {"name":"getInitParameters","parameterTypes":[] }, {"name":"isAsyncSupported","parameterTypes":[] }, {"name":"setAsyncSupported","parameterTypes":["boolean"] }, {"name":"setBeanName","parameterTypes":["java.lang.String"] }, {"name":"setIgnoreRegistrationFailure","parameterTypes":["boolean"] }, {"name":"setInitParameters","parameterTypes":["java.util.Map"] }, {"name":"setName","parameterTypes":["java.lang.String"] }]
},
{
  "name":"org.springframework.boot.web.servlet.FilterRegistrationBean",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"getFilter","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.web.servlet.RegistrationBean",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"getOrder","parameterTypes":[] }, {"name":"isEnabled","parameterTypes":[] }, {"name":"onStartup","parameterTypes":["jakarta.servlet.ServletContext"] }, {"name":"setEnabled","parameterTypes":["boolean"] }, {"name":"setOrder","parameterTypes":["int"] }]
},
{
  "name":"org.springframework.boot.web.servlet.ServletContextInitializer",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.boot.web.servlet.ServletRegistrationBean",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"getMultipartConfig","parameterTypes":[] }, {"name":"getServlet","parameterTypes":[] }, {"name":"getServletName","parameterTypes":[] }, {"name":"getUrlMappings","parameterTypes":[] }, {"name":"setLoadOnStartup","parameterTypes":["int"] }, {"name":"setMultipartConfig","parameterTypes":["jakarta.servlet.MultipartConfigElement"] }, {"name":"setServlet","parameterTypes":["jakarta.servlet.Servlet"] }, {"name":"toString","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.web.servlet.WebListenerRegistrar"
},
{
  "name":"org.springframework.boot.web.servlet.WebListenerRegistry",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.boot.web.servlet.context.ServletWebServerApplicationContextFactory",
  "queryAllDeclaredConstructors":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.web.servlet.error.DefaultErrorAttributes",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"getError","parameterTypes":["org.springframework.web.context.request.WebRequest"] }, {"name":"getErrorAttributes","parameterTypes":["org.springframework.web.context.request.WebRequest","org.springframework.boot.web.error.ErrorAttributeOptions"] }, {"name":"getOrder","parameterTypes":[] }, {"name":"resolveException","parameterTypes":["jakarta.servlet.http.HttpServletRequest","jakarta.servlet.http.HttpServletResponse","java.lang.Object","java.lang.Exception"] }]
},
{
  "name":"org.springframework.boot.web.servlet.error.ErrorAttributes",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.boot.web.servlet.error.ErrorController",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.boot.web.servlet.filter.OrderedCharacterEncodingFilter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"getOrder","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.web.servlet.filter.OrderedFilter",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.boot.web.servlet.filter.OrderedFormContentFilter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"getOrder","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.web.servlet.filter.OrderedHiddenHttpMethodFilter"
},
{
  "name":"org.springframework.boot.web.servlet.filter.OrderedRequestContextFilter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"getOrder","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.web.servlet.server.AbstractServletWebServerFactory",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"addCookieSameSiteSuppliers","parameterTypes":["org.springframework.boot.web.servlet.server.CookieSameSiteSupplier[]"] }, {"name":"addInitializers","parameterTypes":["org.springframework.boot.web.servlet.ServletContextInitializer[]"] }, {"name":"addMimeMappings","parameterTypes":["org.springframework.boot.web.server.MimeMappings"] }, {"name":"addWebListeners","parameterTypes":["java.lang.String[]"] }, {"name":"getContextPath","parameterTypes":[] }, {"name":"getCookieSameSiteSuppliers","parameterTypes":[] }, {"name":"getDisplayName","parameterTypes":[] }, {"name":"getDocumentRoot","parameterTypes":[] }, {"name":"getInitParameters","parameterTypes":[] }, {"name":"getJsp","parameterTypes":[] }, {"name":"getLocaleCharsetMappings","parameterTypes":[] }, {"name":"getMimeMappings","parameterTypes":[] }, {"name":"getSession","parameterTypes":[] }, {"name":"isRegisterDefaultServlet","parameterTypes":[] }, {"name":"setContextPath","parameterTypes":["java.lang.String"] }, {"name":"setCookieSameSiteSuppliers","parameterTypes":["java.util.List"] }, {"name":"setDisplayName","parameterTypes":["java.lang.String"] }, {"name":"setDocumentRoot","parameterTypes":["java.io.File"] }, {"name":"setInitParameters","parameterTypes":["java.util.Map"] }, {"name":"setInitializers","parameterTypes":["java.util.List"] }, {"name":"setJsp","parameterTypes":["org.springframework.boot.web.servlet.server.Jsp"] }, {"name":"setLocaleCharsetMappings","parameterTypes":["java.util.Map"] }, {"name":"setMimeMappings","parameterTypes":["org.springframework.boot.web.server.MimeMappings"] }, {"name":"setRegisterDefaultServlet","parameterTypes":["boolean"] }, {"name":"setSession","parameterTypes":["org.springframework.boot.web.servlet.server.Session"] }]
},
{
  "name":"org.springframework.boot.web.servlet.server.ConfigurableServletWebServerFactory",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.boot.web.servlet.server.CookieSameSiteSupplier"
},
{
  "name":"org.springframework.boot.web.servlet.server.Encoding",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.web.servlet.server.Jsp"
},
{
  "name":"org.springframework.boot.web.servlet.server.ServletWebServerFactory",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.boot.web.servlet.server.Session"
},
{
  "name":"org.springframework.cache.Cache"
},
{
  "name":"org.springframework.cache.CacheManager",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.cache.annotation.AbstractCachingConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"setImportMetadata","parameterTypes":["org.springframework.core.type.AnnotationMetadata"] }]
},
{
  "name":"org.springframework.cache.annotation.AbstractCachingConfiguration$CachingConfigurerSupplier"
},
{
  "name":"org.springframework.cache.annotation.AnnotationCacheOperationSource",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"equals","parameterTypes":["java.lang.Object"] }, {"name":"hashCode","parameterTypes":[] }, {"name":"isCandidateClass","parameterTypes":["java.lang.Class"] }]
},
{
  "name":"org.springframework.cache.annotation.AnnotationCacheOperationSource$CacheOperationProvider"
},
{
  "name":"org.springframework.cache.annotation.CacheAnnotationParser"
},
{
  "name":"org.springframework.cache.annotation.CachingConfigurer"
},
{
  "name":"org.springframework.cache.annotation.EnableCaching",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.cache.annotation.ProxyCachingConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.cache.interceptor.AbstractCacheInvoker",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"getErrorHandler","parameterTypes":[] }, {"name":"setErrorHandler","parameterTypes":["org.springframework.cache.interceptor.CacheErrorHandler"] }]
},
{
  "name":"org.springframework.cache.interceptor.AbstractFallbackCacheOperationSource",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"getCacheOperations","parameterTypes":["java.lang.reflect.Method","java.lang.Class"] }, {"name":"hasCacheOperations","parameterTypes":["java.lang.reflect.Method","java.lang.Class"] }]
},
{
  "name":"org.springframework.cache.interceptor.BeanFactoryCacheOperationSourceAdvisor",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"getPointcut","parameterTypes":[] }]
},
{
  "name":"org.springframework.cache.interceptor.CacheAspectSupport",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"afterPropertiesSet","parameterTypes":[] }, {"name":"afterSingletonsInstantiated","parameterTypes":[] }, {"name":"configure","parameterTypes":["java.util.function.Supplier","java.util.function.Supplier","java.util.function.Supplier","java.util.function.Supplier"] }, {"name":"getCacheOperationSource","parameterTypes":[] }, {"name":"getCacheResolver","parameterTypes":[] }, {"name":"getKeyGenerator","parameterTypes":[] }, {"name":"setBeanFactory","parameterTypes":["org.springframework.beans.factory.BeanFactory"] }, {"name":"setCacheManager","parameterTypes":["org.springframework.cache.CacheManager"] }, {"name":"setCacheOperationSource","parameterTypes":["org.springframework.cache.interceptor.CacheOperationSource"] }, {"name":"setCacheOperationSources","parameterTypes":["org.springframework.cache.interceptor.CacheOperationSource[]"] }, {"name":"setCacheResolver","parameterTypes":["org.springframework.cache.interceptor.CacheResolver"] }, {"name":"setKeyGenerator","parameterTypes":["org.springframework.cache.interceptor.KeyGenerator"] }]
},
{
  "name":"org.springframework.cache.interceptor.CacheInterceptor",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"invoke","parameterTypes":["org.aopalliance.intercept.MethodInvocation"] }]
},
{
  "name":"org.springframework.cache.interceptor.CacheOperationSource",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.cache.support.AbstractCacheManager",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"afterPropertiesSet","parameterTypes":[] }, {"name":"getCache","parameterTypes":["java.lang.String"] }, {"name":"getCacheNames","parameterTypes":[] }, {"name":"initializeCaches","parameterTypes":[] }]
},
{
  "name":"org.springframework.cache.transaction.AbstractTransactionSupportingCacheManager",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"isTransactionAware","parameterTypes":[] }, {"name":"setTransactionAware","parameterTypes":["boolean"] }]
},
{
  "name":"org.springframework.cglib.proxy.Factory",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"afterSingletonsInstantiated","parameterTypes":[] }, {"name":"setApplicationContext","parameterTypes":["org.springframework.context.ApplicationContext"] }]
},
{
  "name":"org.springframework.cloud.autoconfigure.LifecycleMvcEndpointAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.cloud.autoconfigure.PauseResumeEndpointsConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.cloud.autoconfigure.RefreshEndpointAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.cloud.autoconfigure.RefreshEndpointAutoConfiguration$RefreshEndpointConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.cloud.autoconfigure.RestartEndpointWithoutIntegrationConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.cloud.bootstrap.BootstrapApplicationListener",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.cloud.bootstrap.BootstrapConfigFileApplicationListener",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.cloud.bootstrap.LoggingSystemShutdownListener",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.cloud.bootstrap.RefreshBootstrapRegistryInitializer",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.cloud.bootstrap.TextEncryptorConfigBootstrapper",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.cloud.bootstrap.encrypt.DecryptEnvironmentPostProcessor",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.cloud.bootstrap.encrypt.KeyProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"setKey","parameterTypes":["java.lang.String"] }, {"name":"setSalt","parameterTypes":["java.lang.String"] }]
},
{
  "name":"org.springframework.cloud.bootstrap.encrypt.KeyProperties$KeyStore",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.cloud.bootstrap.encrypt.RsaProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.cloud.bootstrap.marker.Marker"
},
{
  "name":"org.springframework.cloud.client.CommonsClientAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.cloud.client.CommonsClientAutoConfiguration$ActuatorConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.cloud.client.CommonsClientAutoConfiguration$DiscoveryLoadBalancerConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.cloud.client.ConditionalOnBlockingDiscoveryEnabled",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.cloud.client.ConditionalOnDiscoveryEnabled",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.cloud.client.ConditionalOnDiscoveryHealthIndicatorEnabled",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.cloud.client.ConditionalOnReactiveDiscoveryEnabled",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.cloud.client.DefaultServiceInstance"
},
{
  "name":"org.springframework.cloud.client.HostInfoEnvironmentPostProcessor",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.cloud.client.ReactiveCommonsClientAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.cloud.client.ReactiveCommonsClientAutoConfiguration$ReactiveDiscoveryLoadBalancerConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.cloud.client.actuator.FeaturesEndpoint"
},
{
  "name":"org.springframework.cloud.client.actuator.HasFeatures",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.cloud.client.actuator.NamedFeature"
},
{
  "name":"org.springframework.cloud.client.discovery.DiscoveryClient",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"getOrder","parameterTypes":[] }, {"name":"probe","parameterTypes":[] }]
},
{
  "name":"org.springframework.cloud.client.discovery.ReactiveDiscoveryClient",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"getOrder","parameterTypes":[] }, {"name":"probe","parameterTypes":[] }, {"name":"reactiveProbe","parameterTypes":[] }]
},
{
  "name":"org.springframework.cloud.client.discovery.composite.CompositeDiscoveryClient",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"description","parameterTypes":[] }, {"name":"getInstances","parameterTypes":["java.lang.String"] }, {"name":"getServices","parameterTypes":[] }, {"name":"probe","parameterTypes":[] }]
},
{
  "name":"org.springframework.cloud.client.discovery.composite.CompositeDiscoveryClientAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.cloud.client.discovery.composite.reactive.ReactiveCompositeDiscoveryClient",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"description","parameterTypes":[] }, {"name":"getInstances","parameterTypes":["java.lang.String"] }, {"name":"getServices","parameterTypes":[] }]
},
{
  "name":"org.springframework.cloud.client.discovery.composite.reactive.ReactiveCompositeDiscoveryClientAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.cloud.client.discovery.event.InstanceRegisteredEvent"
},
{
  "name":"org.springframework.cloud.client.discovery.health.DiscoveryClientHealthIndicator",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"getName","parameterTypes":[] }, {"name":"getOrder","parameterTypes":[] }, {"name":"health","parameterTypes":[] }, {"name":"onApplicationEvent","parameterTypes":["org.springframework.context.ApplicationEvent"] }]
},
{
  "name":"org.springframework.cloud.client.discovery.health.DiscoveryClientHealthIndicatorProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"toString","parameterTypes":[] }]
},
{
  "name":"org.springframework.cloud.client.discovery.health.DiscoveryCompositeHealthContributor",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"getContributor","parameterTypes":["java.lang.String"] }, {"name":"iterator","parameterTypes":[] }]
},
{
  "name":"org.springframework.cloud.client.discovery.health.DiscoveryHealthIndicator",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.cloud.client.discovery.health.reactive.ReactiveDiscoveryClientHealthIndicator",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"getName","parameterTypes":[] }, {"name":"getOrder","parameterTypes":[] }, {"name":"health","parameterTypes":[] }, {"name":"onApplicationEvent","parameterTypes":["org.springframework.context.ApplicationEvent"] }]
},
{
  "name":"org.springframework.cloud.client.discovery.health.reactive.ReactiveDiscoveryCompositeHealthContributor",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"getContributor","parameterTypes":["java.lang.String"] }, {"name":"iterator","parameterTypes":[] }]
},
{
  "name":"org.springframework.cloud.client.discovery.health.reactive.ReactiveDiscoveryHealthIndicator",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.cloud.client.discovery.simple.SimpleDiscoveryClient",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"description","parameterTypes":[] }, {"name":"getInstances","parameterTypes":["java.lang.String"] }, {"name":"getOrder","parameterTypes":[] }, {"name":"getServices","parameterTypes":[] }]
},
{
  "name":"org.springframework.cloud.client.discovery.simple.SimpleDiscoveryClientAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"onApplicationEvent","parameterTypes":["org.springframework.context.ApplicationEvent"] }]
},
{
  "name":"org.springframework.cloud.client.discovery.simple.SimpleDiscoveryProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"afterPropertiesSet","parameterTypes":[] }]
},
{
  "name":"org.springframework.cloud.client.discovery.simple.reactive.SimpleReactiveDiscoveryClient",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"description","parameterTypes":[] }, {"name":"getInstances","parameterTypes":["java.lang.String"] }, {"name":"getOrder","parameterTypes":[] }, {"name":"getServices","parameterTypes":[] }]
},
{
  "name":"org.springframework.cloud.client.discovery.simple.reactive.SimpleReactiveDiscoveryClientAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"onApplicationEvent","parameterTypes":["org.springframework.context.ApplicationEvent"] }]
},
{
  "name":"org.springframework.cloud.client.discovery.simple.reactive.SimpleReactiveDiscoveryClientAutoConfiguration$HealthConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.cloud.client.discovery.simple.reactive.SimpleReactiveDiscoveryProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"afterPropertiesSet","parameterTypes":[] }]
},
{
  "name":"org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.cloud.client.serviceregistry.AutoServiceRegistrationAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"afterPropertiesSet","parameterTypes":[] }]
},
{
  "name":"org.springframework.cloud.client.serviceregistry.AutoServiceRegistrationConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.cloud.client.serviceregistry.AutoServiceRegistrationProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.cloud.client.serviceregistry.ServiceRegistryAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.cloud.commons.config.DefaultsBindHandlerAdvisor",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"apply","parameterTypes":["org.springframework.boot.context.properties.bind.BindHandler"] }]
},
{
  "name":"org.springframework.cloud.commons.config.DefaultsBindHandlerAdvisor$MappingsProvider",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"<init>","parameterTypes":["org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration$$Lambda/0x00001ff001635a28"] }, {"name":"from","parameterTypes":["org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration$$Lambda/0x00001ff001635a28"] }, {"name":"of","parameterTypes":["org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration$$Lambda/0x00001ff001635a28"] }, {"name":"valueOf","parameterTypes":["org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration$$Lambda/0x00001ff001635a28"] }]
},
{
  "name":"org.springframework.cloud.commons.security.ResourceServerTokenRelayAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.cloud.commons.security.ResourceServerTokenRelayAutoConfiguration$ResourceServerTokenRelayRegistrationAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"addInterceptors","parameterTypes":["org.springframework.web.servlet.config.annotation.InterceptorRegistry"] }]
},
{
  "name":"org.springframework.cloud.commons.util.InetUtils",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"close","parameterTypes":[] }]
},
{
  "name":"org.springframework.cloud.commons.util.InetUtils$HostInfo"
},
{
  "name":"org.springframework.cloud.commons.util.InetUtilsProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.cloud.commons.util.UtilAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.cloud.configuration.CompatibilityPredicate"
},
{
  "name":"org.springframework.cloud.configuration.CompatibilityVerifier",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.cloud.configuration.CompatibilityVerifierAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.cloud.configuration.CompatibilityVerifierProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.cloud.configuration.CompositeCompatibilityVerifier",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.cloud.configuration.SleuthPresentVerifier",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"verify","parameterTypes":[] }]
},
{
  "name":"org.springframework.cloud.configuration.SpringBootVersionVerifier",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"verify","parameterTypes":[] }]
},
{
  "name":"org.springframework.cloud.configuration.VerificationResult"
},
{
  "name":"org.springframework.cloud.context.environment.EnvironmentChangeEvent"
},
{
  "name":"org.springframework.cloud.context.environment.EnvironmentManager",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"setApplicationEventPublisher","parameterTypes":["org.springframework.context.ApplicationEventPublisher"] }]
},
{
  "name":"org.springframework.cloud.context.named.NamedContextFactory",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"buildContext","parameterTypes":["java.lang.String"] }, {"name":"createContext","parameterTypes":["java.lang.String"] }, {"name":"destroy","parameterTypes":[] }, {"name":"getAnnotatedInstance","parameterTypes":["java.lang.String","org.springframework.core.ResolvableType","java.lang.Class"] }, {"name":"getConfigurations","parameterTypes":[] }, {"name":"getContextNames","parameterTypes":[] }, {"name":"getInstance","parameterTypes":["java.lang.String","java.lang.Class"] }, {"name":"getInstance","parameterTypes":["java.lang.String","java.lang.Class","java.lang.Class[]"] }, {"name":"getInstance","parameterTypes":["java.lang.String","org.springframework.core.ResolvableType"] }, {"name":"getInstances","parameterTypes":["java.lang.String","java.lang.Class"] }, {"name":"getLazyProvider","parameterTypes":["java.lang.String","java.lang.Class"] }, {"name":"getParent","parameterTypes":[] }, {"name":"getProvider","parameterTypes":["java.lang.String","java.lang.Class"] }, {"name":"registerBeans","parameterTypes":["java.lang.String","org.springframework.context.support.GenericApplicationContext"] }, {"name":"setApplicationContext","parameterTypes":["org.springframework.context.ApplicationContext"] }, {"name":"setConfigurations","parameterTypes":["java.util.List"] }]
},
{
  "name":"org.springframework.cloud.context.named.NamedContextFactory$Specification",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.cloud.context.properties.ConfigurationPropertiesBeans",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"postProcessAfterInitialization","parameterTypes":["java.lang.Object","java.lang.String"] }, {"name":"postProcessBeforeInitialization","parameterTypes":["java.lang.Object","java.lang.String"] }, {"name":"setApplicationContext","parameterTypes":["org.springframework.context.ApplicationContext"] }]
},
{
  "name":"org.springframework.cloud.context.properties.ConfigurationPropertiesRebinder",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"onApplicationEvent","parameterTypes":["org.springframework.context.ApplicationEvent"] }, {"name":"setApplicationContext","parameterTypes":["org.springframework.context.ApplicationContext"] }]
},
{
  "name":"org.springframework.cloud.context.refresh.ContextRefresher"
},
{
  "name":"org.springframework.cloud.context.restart.RestartEndpoint"
},
{
  "name":"org.springframework.cloud.context.restart.RestartEndpoint$PauseEndpoint"
},
{
  "name":"org.springframework.cloud.context.restart.RestartEndpoint$ResumeEndpoint"
},
{
  "name":"org.springframework.cloud.context.restart.RestartListener",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.cloud.endpoint.RefreshEndpoint"
},
{
  "name":"org.springframework.cloud.health.RefreshScopeHealthIndicator",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.cloud.openfeign.CachingCapability",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"enrich","parameterTypes":["feign.InvocationHandlerFactory"] }]
},
{
  "name":"org.springframework.cloud.openfeign.DefaultTargeter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"target","parameterTypes":["org.springframework.cloud.openfeign.FeignClientFactoryBean","feign.Feign$Builder","org.springframework.cloud.openfeign.FeignClientFactory","feign.Target$HardCodedTarget"] }]
},
{
  "name":"org.springframework.cloud.openfeign.EnableFeignClients",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.cloud.openfeign.FeignAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.cloud.openfeign.FeignAutoConfiguration$DefaultFeignTargeterConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.cloud.openfeign.FeignAutoConfiguration$FeignJacksonConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.cloud.openfeign.FeignBuilderCustomizer"
},
{
  "name":"org.springframework.cloud.openfeign.FeignClient",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.cloud.openfeign.FeignClientFactory",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.cloud.openfeign.FeignClientFactoryBean",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"afterPropertiesSet","parameterTypes":[] }, {"name":"equals","parameterTypes":["java.lang.Object"] }, {"name":"getObject","parameterTypes":[] }, {"name":"getObjectType","parameterTypes":[] }, {"name":"hashCode","parameterTypes":[] }, {"name":"isSingleton","parameterTypes":[] }, {"name":"setApplicationContext","parameterTypes":["org.springframework.context.ApplicationContext"] }, {"name":"setBeanFactory","parameterTypes":["org.springframework.beans.factory.BeanFactory"] }, {"name":"setContextId","parameterTypes":["java.lang.String"] }, {"name":"setDismiss404","parameterTypes":["boolean"] }, {"name":"setFallback","parameterTypes":["java.lang.Class"] }, {"name":"setFallbackFactory","parameterTypes":["java.lang.Class"] }, {"name":"setName","parameterTypes":["java.lang.String"] }, {"name":"setPath","parameterTypes":["java.lang.String"] }, {"name":"setType","parameterTypes":["java.lang.Class"] }, {"name":"setUrl","parameterTypes":["java.lang.String"] }, {"name":"toString","parameterTypes":[] }]
},
{
  "name":"org.springframework.cloud.openfeign.FeignClientProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"equals","parameterTypes":["java.lang.Object"] }, {"name":"getConfig","parameterTypes":[] }, {"name":"hashCode","parameterTypes":[] }, {"name":"setConfig","parameterTypes":["java.util.Map"] }]
},
{
  "name":"org.springframework.cloud.openfeign.FeignClientProperties$FeignClientConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"setUrl","parameterTypes":["java.lang.String"] }]
},
{
  "name":"org.springframework.cloud.openfeign.FeignClientSpecification",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":["java.lang.String","java.lang.String","java.lang.Class[]"] }, {"name":"equals","parameterTypes":["java.lang.Object"] }, {"name":"getConfiguration","parameterTypes":[] }, {"name":"getName","parameterTypes":[] }, {"name":"hashCode","parameterTypes":[] }, {"name":"toString","parameterTypes":[] }]
},
{
  "name":"org.springframework.cloud.openfeign.FeignClientsConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.cloud.openfeign.FeignClientsConfiguration$DefaultFeignBuilderConfiguration",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.cloud.openfeign.FeignClientsConfiguration$MicrometerConfiguration",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.cloud.openfeign.Targeter",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.cloud.openfeign.aot.FeignChildContextInitializer"
},
{
  "name":"org.springframework.cloud.openfeign.aot.FeignClientBeanFactoryInitializationAotProcessor"
},
{
  "name":"org.springframework.cloud.openfeign.support.FeignEncoderProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.cloud.openfeign.support.FeignHttpClientProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.cloud.openfeign.support.FeignHttpClientProperties$Hc5Properties"
},
{
  "name":"org.springframework.cloud.openfeign.support.FeignHttpClientProperties$Http2Properties"
},
{
  "name":"org.springframework.cloud.openfeign.support.FeignHttpClientProperties$OkHttp"
},
{
  "name":"org.springframework.cloud.openfeign.support.PageJacksonModule",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"getModuleName","parameterTypes":[] }, {"name":"setupModule","parameterTypes":["com.fasterxml.jackson.databind.Module$SetupContext"] }, {"name":"version","parameterTypes":[] }]
},
{
  "name":"org.springframework.cloud.openfeign.support.SortJacksonModule",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"getModuleName","parameterTypes":[] }, {"name":"setupModule","parameterTypes":["com.fasterxml.jackson.databind.Module$SetupContext"] }, {"name":"version","parameterTypes":[] }]
},
{
  "name":"org.springframework.cloud.sleuth.Tracer"
},
{
  "name":"org.springframework.cloud.util.random.CachedRandomPropertySourceEnvironmentPostProcessor",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.context.ApplicationContext"
},
{
  "name":"org.springframework.context.ApplicationContextAware",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"setApplicationContext","parameterTypes":["org.springframework.context.ApplicationContext"] }, {"name":"setContextId","parameterTypes":["java.lang.String"] }, {"name":"setDismiss404","parameterTypes":["boolean"] }, {"name":"setFallback","parameterTypes":["java.lang.Class"] }, {"name":"setFallbackFactory","parameterTypes":["java.lang.Class"] }, {"name":"setInheritParentContext","parameterTypes":["boolean"] }, {"name":"setName","parameterTypes":["java.lang.String"] }, {"name":"setPath","parameterTypes":["java.lang.String"] }, {"name":"setQualifiers","parameterTypes":["java.lang.String[]"] }, {"name":"setRefreshableClient","parameterTypes":["boolean"] }, {"name":"setType","parameterTypes":["java.lang.Class"] }, {"name":"setUrl","parameterTypes":["java.lang.String"] }]
},
{
  "name":"org.springframework.context.ApplicationContextException"
},
{
  "name":"org.springframework.context.ApplicationContextInitializer"
},
{
  "name":"org.springframework.context.ApplicationEvent"
},
{
  "name":"org.springframework.context.ApplicationEventPublisher"
},
{
  "name":"org.springframework.context.ApplicationEventPublisherAware",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.context.ApplicationListener",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"supportsAsyncExecution","parameterTypes":[] }]
},
{
  "name":"org.springframework.context.ConfigurableApplicationContext"
},
{
  "name":"org.springframework.context.EmbeddedValueResolverAware",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.context.EnvironmentAware",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.context.HierarchicalMessageSource",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.context.Lifecycle",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.context.LifecycleProcessor",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.context.MessageSource",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.context.MessageSourceResolvable"
},
{
  "name":"org.springframework.context.NoSuchMessageException"
},
{
  "name":"org.springframework.context.PayloadApplicationEvent"
},
{
  "name":"org.springframework.context.Phased",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.context.ResourceLoaderAware",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.context.SmartLifecycle",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"isAutoStartup","parameterTypes":[] }, {"name":"stop","parameterTypes":["java.lang.Runnable"] }]
},
{
  "name":"org.springframework.context.annotation.AnnotationConfigRegistry"
},
{
  "name":"org.springframework.context.annotation.Bean",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider"
},
{
  "name":"org.springframework.context.annotation.ComponentScan",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.context.annotation.Conditional",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.context.annotation.Configuration",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.context.annotation.ConfigurationClassEnhancer$EnhancedConfiguration",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.context.annotation.EnableAspectJAutoProxy",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.context.annotation.Import",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.context.annotation.ImportAware",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.context.annotation.ImportRuntimeHints",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.context.annotation.Lazy",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.context.annotation.Primary",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.context.annotation.Role",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.context.annotation.Scope",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.context.event.ContextClosedEvent"
},
{
  "name":"org.springframework.context.event.ContextRefreshedEvent"
},
{
  "name":"org.springframework.context.event.ContextStoppedEvent"
},
{
  "name":"org.springframework.context.event.SmartApplicationListener",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"getListenerId","parameterTypes":[] }, {"name":"getOrder","parameterTypes":[] }, {"name":"supportsSourceType","parameterTypes":["java.lang.Class"] }]
},
{
  "name":"org.springframework.context.i18n.LocaleContext"
},
{
  "name":"org.springframework.context.support.AbstractMessageSource",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"getMessage","parameterTypes":["java.lang.String","java.lang.Object[]","java.lang.String","java.util.Locale"] }, {"name":"getMessage","parameterTypes":["java.lang.String","java.lang.Object[]","java.util.Locale"] }, {"name":"getMessage","parameterTypes":["org.springframework.context.MessageSourceResolvable","java.util.Locale"] }, {"name":"getParentMessageSource","parameterTypes":[] }, {"name":"setCommonMessages","parameterTypes":["java.util.Properties"] }, {"name":"setParentMessageSource","parameterTypes":["org.springframework.context.MessageSource"] }, {"name":"setUseCodeAsDefaultMessage","parameterTypes":["boolean"] }]
},
{
  "name":"org.springframework.context.support.AbstractResourceBasedMessageSource",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"addBasenames","parameterTypes":["java.lang.String[]"] }, {"name":"getBasenameSet","parameterTypes":[] }, {"name":"setBasename","parameterTypes":["java.lang.String"] }, {"name":"setBasenames","parameterTypes":["java.lang.String[]"] }, {"name":"setCacheMillis","parameterTypes":["long"] }, {"name":"setCacheSeconds","parameterTypes":["int"] }, {"name":"setDefaultEncoding","parameterTypes":["java.lang.String"] }, {"name":"setDefaultLocale","parameterTypes":["java.util.Locale"] }, {"name":"setFallbackToSystemLocale","parameterTypes":["boolean"] }]
},
{
  "name":"org.springframework.context.support.ApplicationObjectSupport",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"setApplicationContext","parameterTypes":["org.springframework.context.ApplicationContext"] }]
},
{
  "name":"org.springframework.context.support.DefaultLifecycleProcessor",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"isRunning","parameterTypes":[] }, {"name":"onClose","parameterTypes":[] }, {"name":"onRefresh","parameterTypes":[] }, {"name":"setBeanFactory","parameterTypes":["org.springframework.beans.factory.BeanFactory"] }, {"name":"start","parameterTypes":[] }, {"name":"stop","parameterTypes":[] }]
},
{
  "name":"org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup"
},
{
  "name":"org.springframework.context.support.GenericApplicationContext"
},
{
  "name":"org.springframework.context.support.MessageSourceAccessor"
},
{
  "name":"org.springframework.context.support.MessageSourceSupport",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"setAlwaysUseMessageFormat","parameterTypes":["boolean"] }]
},
{
  "name":"org.springframework.context.support.PropertySourcesPlaceholderConfigurer"
},
{
  "name":"org.springframework.context.support.ResourceBundleMessageSource",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"setBeanClassLoader","parameterTypes":["java.lang.ClassLoader"] }, {"name":"toString","parameterTypes":[] }]
},
{
  "name":"org.springframework.core.DecoratingProxy",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.core.DefaultParameterNameDiscoverer",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.core.MethodParameter"
},
{
  "name":"org.springframework.core.Ordered",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.core.ParameterNameDiscoverer",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.core.PrioritizedParameterNameDiscoverer",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"addDiscoverer","parameterTypes":["org.springframework.core.ParameterNameDiscoverer"] }, {"name":"getParameterNames","parameterTypes":["java.lang.reflect.Constructor"] }]
},
{
  "name":"org.springframework.core.ReactiveAdapterRegistry"
},
{
  "name":"org.springframework.core.ResolvableType"
},
{
  "name":"org.springframework.core.annotation.AliasFor",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.core.annotation.MergedAnnotation"
},
{
  "name":"org.springframework.core.annotation.Order",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.core.convert.ConversionService",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"convert","parameterTypes":["java.lang.Object","org.springframework.core.convert.TypeDescriptor"] }]
},
{
  "name":"org.springframework.core.convert.TypeDescriptor"
},
{
  "name":"org.springframework.core.convert.converter.Converter"
},
{
  "name":"org.springframework.core.convert.converter.ConverterFactory"
},
{
  "name":"org.springframework.core.convert.converter.ConverterRegistry",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.core.convert.converter.GenericConverter"
},
{
  "name":"org.springframework.core.convert.converter.GenericConverter$ConvertiblePair"
},
{
  "name":"org.springframework.core.convert.support.ConfigurableConversionService",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.core.convert.support.DefaultConversionService"
},
{
  "name":"org.springframework.core.convert.support.GenericConversionService",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"addConverter","parameterTypes":["java.lang.Class","java.lang.Class","org.springframework.core.convert.converter.Converter"] }, {"name":"addConverter","parameterTypes":["org.springframework.core.convert.converter.Converter"] }, {"name":"addConverter","parameterTypes":["org.springframework.core.convert.converter.GenericConverter"] }, {"name":"addConverterFactory","parameterTypes":["org.springframework.core.convert.converter.ConverterFactory"] }, {"name":"canBypassConvert","parameterTypes":["org.springframework.core.convert.TypeDescriptor","org.springframework.core.convert.TypeDescriptor"] }, {"name":"canConvert","parameterTypes":["java.lang.Class","java.lang.Class"] }, {"name":"canConvert","parameterTypes":["org.springframework.core.convert.TypeDescriptor","org.springframework.core.convert.TypeDescriptor"] }, {"name":"convert","parameterTypes":["java.lang.Object","java.lang.Class"] }, {"name":"convert","parameterTypes":["java.lang.Object","org.springframework.core.convert.TypeDescriptor","org.springframework.core.convert.TypeDescriptor"] }, {"name":"removeConvertible","parameterTypes":["java.lang.Class","java.lang.Class"] }, {"name":"toString","parameterTypes":[] }]
},
{
  "name":"org.springframework.core.env.ConfigurableEnvironment"
},
{
  "name":"org.springframework.core.env.Environment"
},
{
  "name":"org.springframework.core.env.EnvironmentCapable",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.core.env.PropertyResolver"
},
{
  "name":"org.springframework.core.io.ProtocolResolver",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.core.io.Resource",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":["java.lang.String"] }, {"name":"from","parameterTypes":["java.lang.String"] }, {"name":"of","parameterTypes":["java.lang.String"] }, {"name":"valueOf","parameterTypes":["java.lang.String"] }]
},
{
  "name":"org.springframework.core.io.ResourceLoader"
},
{
  "name":"org.springframework.core.io.buffer.DataBufferFactory"
},
{
  "name":"org.springframework.core.io.support.PropertiesLoaderSupport",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"setFileEncoding","parameterTypes":["java.lang.String"] }, {"name":"setIgnoreResourceNotFound","parameterTypes":["boolean"] }, {"name":"setLocalOverride","parameterTypes":["boolean"] }, {"name":"setLocation","parameterTypes":["org.springframework.core.io.Resource"] }, {"name":"setLocations","parameterTypes":["org.springframework.core.io.Resource[]"] }, {"name":"setProperties","parameterTypes":["java.util.Properties"] }, {"name":"setPropertiesArray","parameterTypes":["java.util.Properties[]"] }, {"name":"setPropertiesPersister","parameterTypes":["org.springframework.util.PropertiesPersister"] }]
},
{
  "name":"org.springframework.core.task.AsyncListenableTaskExecutor",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.core.task.AsyncTaskExecutor",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"submitCompletable","parameterTypes":["java.lang.Runnable"] }, {"name":"submitCompletable","parameterTypes":["java.util.concurrent.Callable"] }]
},
{
  "name":"org.springframework.core.task.SimpleAsyncTaskExecutor",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"execute","parameterTypes":["java.lang.Runnable"] }, {"name":"execute","parameterTypes":["java.lang.Runnable","long"] }, {"name":"submit","parameterTypes":["java.lang.Runnable"] }, {"name":"submit","parameterTypes":["java.util.concurrent.Callable"] }, {"name":"submitListenable","parameterTypes":["java.lang.Runnable"] }, {"name":"submitListenable","parameterTypes":["java.util.concurrent.Callable"] }]
},
{
  "name":"org.springframework.core.task.TaskDecorator"
},
{
  "name":"org.springframework.core.task.TaskExecutor",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.core.type.AnnotationMetadata"
},
{
  "name":"org.springframework.dao.DataAccessException"
},
{
  "name":"org.springframework.dao.OptimisticLockingFailureException"
},
{
  "name":"org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor"
},
{
  "name":"org.springframework.dao.support.PersistenceExceptionTranslator",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.data.annotation.CreatedBy",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.data.annotation.CreatedDate",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.data.annotation.Id",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.data.annotation.LastModifiedBy",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.data.annotation.LastModifiedDate",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.data.annotation.Persistent",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.data.annotation.QueryAnnotation",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.data.annotation.Version",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.data.auditing.AuditableBeanWrapper"
},
{
  "name":"org.springframework.data.auditing.AuditingHandler",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"afterPropertiesSet","parameterTypes":[] }, {"name":"markCreated","parameterTypes":["java.lang.Object"] }, {"name":"markModified","parameterTypes":["java.lang.Object"] }, {"name":"setAuditorAware","parameterTypes":["org.springframework.data.domain.AuditorAware"] }]
},
{
  "name":"org.springframework.data.auditing.AuditingHandlerSupport",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"setDateTimeForNow","parameterTypes":["boolean"] }, {"name":"setDateTimeProvider","parameterTypes":["org.springframework.data.auditing.DateTimeProvider"] }, {"name":"setModifyOnCreation","parameterTypes":["boolean"] }]
},
{
  "name":"org.springframework.data.auditing.Auditor"
},
{
  "name":"org.springframework.data.auditing.CurrentDateTimeProvider",
  "methods":[{"name":"toDateTimeProvider","parameterTypes":[] }]
},
{
  "name":"org.springframework.data.auditing.DateTimeProvider",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":["org.springframework.data.auditing.CurrentDateTimeProvider"] }, {"name":"from","parameterTypes":["org.springframework.data.auditing.CurrentDateTimeProvider"] }, {"name":"of","parameterTypes":["org.springframework.data.auditing.CurrentDateTimeProvider"] }, {"name":"valueOf","parameterTypes":["org.springframework.data.auditing.CurrentDateTimeProvider"] }]
},
{
  "name":"org.springframework.data.auditing.IsNewAwareAuditingHandler",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.data.convert.CustomConversions",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"getCustomWriteTarget","parameterTypes":["java.lang.Class"] }, {"name":"getCustomWriteTarget","parameterTypes":["java.lang.Class","java.lang.Class"] }, {"name":"getPropertyValueConversions","parameterTypes":[] }, {"name":"getSimpleTypeHolder","parameterTypes":[] }, {"name":"hasCustomReadTarget","parameterTypes":["java.lang.Class","java.lang.Class"] }, {"name":"hasCustomWriteTarget","parameterTypes":["java.lang.Class"] }, {"name":"hasCustomWriteTarget","parameterTypes":["java.lang.Class","java.lang.Class"] }, {"name":"hasValueConverter","parameterTypes":["org.springframework.data.mapping.PersistentProperty"] }, {"name":"isSimpleType","parameterTypes":["java.lang.Class"] }, {"name":"registerConvertersIn","parameterTypes":["org.springframework.core.convert.converter.ConverterRegistry"] }]
},
{
  "name":"org.springframework.data.convert.CustomConversions$ConverterConfiguration"
},
{
  "name":"org.springframework.data.convert.CustomConversions$ConverterRegistration"
},
{
  "name":"org.springframework.data.convert.CustomConversions$ConverterRegistrationIntent"
},
{
  "name":"org.springframework.data.convert.CustomConversions$StoreConversions"
},
{
  "name":"org.springframework.data.convert.EntityConverter",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.data.convert.EntityReader",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.data.convert.EntityWriter",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.data.convert.PropertyValueConversions"
},
{
  "name":"org.springframework.data.convert.ReadingConverter",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.data.convert.WritingConverter",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.data.domain.AuditorAware",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"<init>","parameterTypes":["jdk.proxy2.$Proxy189"] }, {"name":"from","parameterTypes":["jdk.proxy2.$Proxy189"] }, {"name":"of","parameterTypes":["jdk.proxy2.$Proxy189"] }, {"name":"valueOf","parameterTypes":["jdk.proxy2.$Proxy189"] }]
},
{
  "name":"org.springframework.data.domain.ManagedTypes",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"toList","parameterTypes":[] }]
},
{
  "name":"org.springframework.data.domain.OffsetScrollPosition"
},
{
  "name":"org.springframework.data.domain.Page"
},
{
  "name":"org.springframework.data.domain.PageRequest"
},
{
  "name":"org.springframework.data.domain.Pageable"
},
{
  "name":"org.springframework.data.domain.Persistable",
  "allDeclaredFields":true,
  "allDeclaredClasses":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.data.domain.Sort"
},
{
  "name":"org.springframework.data.domain.Sort$Order"
},
{
  "name":"org.springframework.data.domain.Unpaged"
},
{
  "name":"org.springframework.data.elasticsearch.NoSuchIndexException"
},
{
  "name":"org.springframework.data.elasticsearch.annotations.Alias",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.data.elasticsearch.annotations.CompletionContext",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.data.elasticsearch.annotations.CompletionField",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.data.elasticsearch.annotations.Document",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.data.elasticsearch.annotations.Field",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.data.elasticsearch.annotations.MultiField",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.data.elasticsearch.annotations.Query",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.data.elasticsearch.client.elc.ClusterTemplate"
},
{
  "name":"org.springframework.data.elasticsearch.client.elc.ElasticsearchTemplate",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"bulkUpdate","parameterTypes":["java.util.List","org.springframework.data.elasticsearch.core.query.BulkOptions","org.springframework.data.elasticsearch.core.mapping.IndexCoordinates"] }, {"name":"closePointInTime","parameterTypes":["java.lang.String"] }, {"name":"cluster","parameterTypes":[] }, {"name":"count","parameterTypes":["org.springframework.data.elasticsearch.core.query.Query","java.lang.Class","org.springframework.data.elasticsearch.core.mapping.IndexCoordinates"] }, {"name":"delete","parameterTypes":["org.springframework.data.elasticsearch.core.query.DeleteQuery","java.lang.Class"] }, {"name":"delete","parameterTypes":["org.springframework.data.elasticsearch.core.query.DeleteQuery","java.lang.Class","org.springframework.data.elasticsearch.core.mapping.IndexCoordinates"] }, {"name":"delete","parameterTypes":["org.springframework.data.elasticsearch.core.query.Query","java.lang.Class","org.springframework.data.elasticsearch.core.mapping.IndexCoordinates"] }, {"name":"deleteScript","parameterTypes":["java.lang.String"] }, {"name":"doBulkOperation","parameterTypes":["java.util.List","org.springframework.data.elasticsearch.core.query.BulkOptions","org.springframework.data.elasticsearch.core.mapping.IndexCoordinates"] }, {"name":"doIndex","parameterTypes":["org.springframework.data.elasticsearch.core.query.IndexQuery","org.springframework.data.elasticsearch.core.mapping.IndexCoordinates"] }, {"name":"get","parameterTypes":["java.lang.String","java.lang.Class","org.springframework.data.elasticsearch.core.mapping.IndexCoordinates"] }, {"name":"getClusterVersion","parameterTypes":[] }, {"name":"getRuntimeLibraryVersion","parameterTypes":[] }, {"name":"getScript","parameterTypes":["java.lang.String"] }, {"name":"getVendor","parameterTypes":[] }, {"name":"idsQuery","parameterTypes":["java.util.List"] }, {"name":"indexOps","parameterTypes":["java.lang.Class"] }, {"name":"indexOps","parameterTypes":["org.springframework.data.elasticsearch.core.mapping.IndexCoordinates"] }, {"name":"matchAllQuery","parameterTypes":[] }, {"name":"multiGet","parameterTypes":["org.springframework.data.elasticsearch.core.query.Query","java.lang.Class","org.springframework.data.elasticsearch.core.mapping.IndexCoordinates"] }, {"name":"multiSearch","parameterTypes":["java.util.List","java.lang.Class","org.springframework.data.elasticsearch.core.mapping.IndexCoordinates"] }, {"name":"multiSearch","parameterTypes":["java.util.List","java.util.List"] }, {"name":"multiSearch","parameterTypes":["java.util.List","java.util.List","java.util.List"] }, {"name":"multiSearch","parameterTypes":["java.util.List","java.util.List","org.springframework.data.elasticsearch.core.mapping.IndexCoordinates"] }, {"name":"openPointInTime","parameterTypes":["org.springframework.data.elasticsearch.core.mapping.IndexCoordinates","java.time.Duration","java.lang.Boolean"] }, {"name":"putScript","parameterTypes":["org.springframework.data.elasticsearch.core.script.Script"] }, {"name":"queryBuilderWithIds","parameterTypes":["java.util.List"] }, {"name":"reindex","parameterTypes":["org.springframework.data.elasticsearch.core.reindex.ReindexRequest"] }, {"name":"search","parameterTypes":["org.springframework.data.elasticsearch.core.query.Query","java.lang.Class","org.springframework.data.elasticsearch.core.mapping.IndexCoordinates"] }, {"name":"search","parameterTypes":["org.springframework.data.elasticsearch.core.query.SqlQuery"] }, {"name":"searchScrollClear","parameterTypes":["java.util.List"] }, {"name":"searchScrollContinue","parameterTypes":["java.lang.String","long","java.lang.Class","org.springframework.data.elasticsearch.core.mapping.IndexCoordinates"] }, {"name":"searchScrollStart","parameterTypes":["long","org.springframework.data.elasticsearch.core.query.Query","java.lang.Class","org.springframework.data.elasticsearch.core.mapping.IndexCoordinates"] }, {"name":"submitReindex","parameterTypes":["org.springframework.data.elasticsearch.core.reindex.ReindexRequest"] }, {"name":"toElasticsearchOperations","parameterTypes":[] }, {"name":"update","parameterTypes":["org.springframework.data.elasticsearch.core.query.UpdateQuery","org.springframework.data.elasticsearch.core.mapping.IndexCoordinates"] }, {"name":"updateByQuery","parameterTypes":["org.springframework.data.elasticsearch.core.query.UpdateQuery","org.springframework.data.elasticsearch.core.mapping.IndexCoordinates"] }]
},
{
  "name":"org.springframework.data.elasticsearch.client.elc.ElasticsearchTemplate$ClientCallback"
},
{
  "name":"org.springframework.data.elasticsearch.client.elc.ElasticsearchTemplate$MultiSearchQueryParameter"
},
{
  "name":"org.springframework.data.elasticsearch.client.elc.ElasticsearchTemplate$MultiSearchTemplateQueryParameter"
},
{
  "name":"org.springframework.data.elasticsearch.client.elc.ReactiveClusterTemplate"
},
{
  "name":"org.springframework.data.elasticsearch.client.elc.ReactiveElasticsearchClient",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"withTransportOptions","parameterTypes":["co.elastic.clients.transport.TransportOptions"] }]
},
{
  "name":"org.springframework.data.elasticsearch.client.elc.ReactiveElasticsearchClusterClient"
},
{
  "name":"org.springframework.data.elasticsearch.client.elc.ReactiveElasticsearchIndicesClient"
},
{
  "name":"org.springframework.data.elasticsearch.client.elc.ReactiveElasticsearchSqlClient"
},
{
  "name":"org.springframework.data.elasticsearch.client.elc.ReactiveElasticsearchTemplate",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"aggregate","parameterTypes":["org.springframework.data.elasticsearch.core.query.Query","java.lang.Class","org.springframework.data.elasticsearch.core.mapping.IndexCoordinates"] }, {"name":"bulkUpdate","parameterTypes":["java.util.List","org.springframework.data.elasticsearch.core.query.BulkOptions","org.springframework.data.elasticsearch.core.mapping.IndexCoordinates"] }, {"name":"closePointInTime","parameterTypes":["java.lang.String"] }, {"name":"cluster","parameterTypes":[] }, {"name":"delete","parameterTypes":["org.springframework.data.elasticsearch.core.query.DeleteQuery","java.lang.Class","org.springframework.data.elasticsearch.core.mapping.IndexCoordinates"] }, {"name":"delete","parameterTypes":["org.springframework.data.elasticsearch.core.query.Query","java.lang.Class","org.springframework.data.elasticsearch.core.mapping.IndexCoordinates"] }, {"name":"deleteScript","parameterTypes":["java.lang.String"] }, {"name":"get","parameterTypes":["java.lang.String","java.lang.Class","org.springframework.data.elasticsearch.core.mapping.IndexCoordinates"] }, {"name":"getClusterVersion","parameterTypes":[] }, {"name":"getRuntimeLibraryVersion","parameterTypes":[] }, {"name":"getScript","parameterTypes":["java.lang.String"] }, {"name":"getVendor","parameterTypes":[] }, {"name":"idsQuery","parameterTypes":["java.util.List"] }, {"name":"indexOps","parameterTypes":["java.lang.Class"] }, {"name":"indexOps","parameterTypes":["org.springframework.data.elasticsearch.core.mapping.IndexCoordinates"] }, {"name":"matchAllQuery","parameterTypes":[] }, {"name":"multiGet","parameterTypes":["org.springframework.data.elasticsearch.core.query.Query","java.lang.Class","org.springframework.data.elasticsearch.core.mapping.IndexCoordinates"] }, {"name":"openPointInTime","parameterTypes":["org.springframework.data.elasticsearch.core.mapping.IndexCoordinates","java.time.Duration","java.lang.Boolean"] }, {"name":"putScript","parameterTypes":["org.springframework.data.elasticsearch.core.script.Script"] }, {"name":"queryBuilderWithIds","parameterTypes":["java.util.List"] }, {"name":"reindex","parameterTypes":["org.springframework.data.elasticsearch.core.reindex.ReindexRequest"] }, {"name":"saveAll","parameterTypes":["reactor.core.publisher.Mono","org.springframework.data.elasticsearch.core.mapping.IndexCoordinates"] }, {"name":"search","parameterTypes":["org.springframework.data.elasticsearch.core.query.SqlQuery"] }, {"name":"submitReindex","parameterTypes":["org.springframework.data.elasticsearch.core.reindex.ReindexRequest"] }, {"name":"update","parameterTypes":["org.springframework.data.elasticsearch.core.query.UpdateQuery","org.springframework.data.elasticsearch.core.mapping.IndexCoordinates"] }, {"name":"updateByQuery","parameterTypes":["org.springframework.data.elasticsearch.core.query.UpdateQuery","org.springframework.data.elasticsearch.core.mapping.IndexCoordinates"] }]
},
{
  "name":"org.springframework.data.elasticsearch.client.elc.ReactiveElasticsearchTemplate$ClientCallback"
},
{
  "name":"org.springframework.data.elasticsearch.client.elc.ReactiveElasticsearchTemplate$PitSearchAfter"
},
{
  "name":"org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"bulkIndex","parameterTypes":["java.util.List","java.lang.Class"] }, {"name":"bulkIndex","parameterTypes":["java.util.List","org.springframework.data.elasticsearch.core.query.BulkOptions","java.lang.Class"] }, {"name":"bulkIndex","parameterTypes":["java.util.List","org.springframework.data.elasticsearch.core.query.BulkOptions","org.springframework.data.elasticsearch.core.mapping.IndexCoordinates"] }, {"name":"bulkOperation","parameterTypes":["java.util.List","org.springframework.data.elasticsearch.core.query.BulkOptions","org.springframework.data.elasticsearch.core.mapping.IndexCoordinates"] }, {"name":"bulkUpdate","parameterTypes":["java.util.List","java.lang.Class"] }, {"name":"count","parameterTypes":["org.springframework.data.elasticsearch.core.query.Query","java.lang.Class"] }, {"name":"delete","parameterTypes":["java.lang.Object"] }, {"name":"delete","parameterTypes":["java.lang.Object","org.springframework.data.elasticsearch.core.mapping.IndexCoordinates"] }, {"name":"delete","parameterTypes":["java.lang.String","java.lang.Class"] }, {"name":"delete","parameterTypes":["java.lang.String","org.springframework.data.elasticsearch.core.mapping.IndexCoordinates"] }, {"name":"delete","parameterTypes":["org.springframework.data.elasticsearch.core.query.Query","java.lang.Class"] }, {"name":"exists","parameterTypes":["java.lang.String","java.lang.Class"] }, {"name":"exists","parameterTypes":["java.lang.String","org.springframework.data.elasticsearch.core.mapping.IndexCoordinates"] }, {"name":"get","parameterTypes":["java.lang.String","java.lang.Class"] }, {"name":"getElasticsearchConverter","parameterTypes":[] }, {"name":"getEntityRouting","parameterTypes":["java.lang.Object"] }, {"name":"getIndexCoordinatesFor","parameterTypes":["java.lang.Class"] }, {"name":"getRefreshPolicy","parameterTypes":[] }, {"name":"index","parameterTypes":["org.springframework.data.elasticsearch.core.query.IndexQuery","org.springframework.data.elasticsearch.core.mapping.IndexCoordinates"] }, {"name":"logVersions","parameterTypes":[] }, {"name":"multiGet","parameterTypes":["org.springframework.data.elasticsearch.core.query.Query","java.lang.Class"] }, {"name":"multiSearch","parameterTypes":["java.util.List","java.lang.Class"] }, {"name":"save","parameterTypes":["java.lang.Iterable"] }, {"name":"save","parameterTypes":["java.lang.Iterable","org.springframework.data.elasticsearch.core.mapping.IndexCoordinates"] }, {"name":"save","parameterTypes":["java.lang.Object"] }, {"name":"save","parameterTypes":["java.lang.Object","org.springframework.data.elasticsearch.core.mapping.IndexCoordinates"] }, {"name":"save","parameterTypes":["java.lang.Object[]"] }, {"name":"search","parameterTypes":["org.springframework.data.elasticsearch.core.query.MoreLikeThisQuery","java.lang.Class"] }, {"name":"search","parameterTypes":["org.springframework.data.elasticsearch.core.query.MoreLikeThisQuery","java.lang.Class","org.springframework.data.elasticsearch.core.mapping.IndexCoordinates"] }, {"name":"search","parameterTypes":["org.springframework.data.elasticsearch.core.query.Query","java.lang.Class"] }, {"name":"searchForStream","parameterTypes":["org.springframework.data.elasticsearch.core.query.Query","java.lang.Class"] }, {"name":"searchForStream","parameterTypes":["org.springframework.data.elasticsearch.core.query.Query","java.lang.Class","org.springframework.data.elasticsearch.core.mapping.IndexCoordinates"] }, {"name":"searchScrollClear","parameterTypes":["java.lang.String"] }, {"name":"setApplicationContext","parameterTypes":["org.springframework.context.ApplicationContext"] }, {"name":"setEntityCallbacks","parameterTypes":["org.springframework.data.mapping.callback.EntityCallbacks"] }, {"name":"setRefreshPolicy","parameterTypes":["org.springframework.data.elasticsearch.core.RefreshPolicy"] }, {"name":"update","parameterTypes":["java.lang.Object"] }, {"name":"update","parameterTypes":["java.lang.Object","org.springframework.data.elasticsearch.core.mapping.IndexCoordinates"] }, {"name":"withRefreshPolicy","parameterTypes":["org.springframework.data.elasticsearch.core.RefreshPolicy"] }, {"name":"withRouting","parameterTypes":["org.springframework.data.elasticsearch.core.routing.RoutingResolver"] }]
},
{
  "name":"org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate$ReadDocumentCallback"
},
{
  "name":"org.springframework.data.elasticsearch.core.AbstractReactiveElasticsearchTemplate",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"aggregate","parameterTypes":["org.springframework.data.elasticsearch.core.query.Query","java.lang.Class"] }, {"name":"count","parameterTypes":["org.springframework.data.elasticsearch.core.query.Query","java.lang.Class"] }, {"name":"count","parameterTypes":["org.springframework.data.elasticsearch.core.query.Query","java.lang.Class","org.springframework.data.elasticsearch.core.mapping.IndexCoordinates"] }, {"name":"delete","parameterTypes":["java.lang.Object"] }, {"name":"delete","parameterTypes":["java.lang.Object","org.springframework.data.elasticsearch.core.mapping.IndexCoordinates"] }, {"name":"delete","parameterTypes":["java.lang.String","java.lang.Class"] }, {"name":"delete","parameterTypes":["java.lang.String","org.springframework.data.elasticsearch.core.mapping.IndexCoordinates"] }, {"name":"delete","parameterTypes":["org.springframework.data.elasticsearch.core.query.DeleteQuery","java.lang.Class"] }, {"name":"delete","parameterTypes":["org.springframework.data.elasticsearch.core.query.Query","java.lang.Class"] }, {"name":"exists","parameterTypes":["java.lang.String","java.lang.Class"] }, {"name":"exists","parameterTypes":["java.lang.String","org.springframework.data.elasticsearch.core.mapping.IndexCoordinates"] }, {"name":"get","parameterTypes":["java.lang.String","java.lang.Class"] }, {"name":"getElasticsearchConverter","parameterTypes":[] }, {"name":"getEntityRouting","parameterTypes":["java.lang.Object"] }, {"name":"getIndexCoordinatesFor","parameterTypes":["java.lang.Class"] }, {"name":"getPersistentEntityFor","parameterTypes":["java.lang.Class"] }, {"name":"getRefreshPolicy","parameterTypes":[] }, {"name":"logVersions","parameterTypes":[] }, {"name":"multiGet","parameterTypes":["org.springframework.data.elasticsearch.core.query.Query","java.lang.Class"] }, {"name":"save","parameterTypes":["java.lang.Object"] }, {"name":"save","parameterTypes":["java.lang.Object","org.springframework.data.elasticsearch.core.mapping.IndexCoordinates"] }, {"name":"save","parameterTypes":["reactor.core.publisher.Flux","java.lang.Class","int"] }, {"name":"save","parameterTypes":["reactor.core.publisher.Flux","org.springframework.data.elasticsearch.core.mapping.IndexCoordinates","int"] }, {"name":"saveAll","parameterTypes":["reactor.core.publisher.Mono","java.lang.Class"] }, {"name":"search","parameterTypes":["org.springframework.data.elasticsearch.core.query.Query","java.lang.Class","java.lang.Class"] }, {"name":"search","parameterTypes":["org.springframework.data.elasticsearch.core.query.Query","java.lang.Class","java.lang.Class","org.springframework.data.elasticsearch.core.mapping.IndexCoordinates"] }, {"name":"searchForHits","parameterTypes":["org.springframework.data.elasticsearch.core.query.Query","java.lang.Class","java.lang.Class"] }, {"name":"searchForHits","parameterTypes":["org.springframework.data.elasticsearch.core.query.Query","java.lang.Class","java.lang.Class","org.springframework.data.elasticsearch.core.mapping.IndexCoordinates"] }, {"name":"searchForPage","parameterTypes":["org.springframework.data.elasticsearch.core.query.Query","java.lang.Class","java.lang.Class"] }, {"name":"searchForPage","parameterTypes":["org.springframework.data.elasticsearch.core.query.Query","java.lang.Class","java.lang.Class","org.springframework.data.elasticsearch.core.mapping.IndexCoordinates"] }, {"name":"setApplicationContext","parameterTypes":["org.springframework.context.ApplicationContext"] }, {"name":"setEntityCallbacks","parameterTypes":["org.springframework.data.mapping.callback.ReactiveEntityCallbacks"] }, {"name":"setRefreshPolicy","parameterTypes":["org.springframework.data.elasticsearch.core.RefreshPolicy"] }, {"name":"suggest","parameterTypes":["org.springframework.data.elasticsearch.core.query.Query","java.lang.Class"] }, {"name":"suggest","parameterTypes":["org.springframework.data.elasticsearch.core.query.Query","java.lang.Class","org.springframework.data.elasticsearch.core.mapping.IndexCoordinates"] }, {"name":"withRefreshPolicy","parameterTypes":["org.springframework.data.elasticsearch.core.RefreshPolicy"] }, {"name":"withRouting","parameterTypes":["org.springframework.data.elasticsearch.core.routing.RoutingResolver"] }]
},
{
  "name":"org.springframework.data.elasticsearch.core.AbstractReactiveElasticsearchTemplate$Entities"
},
{
  "name":"org.springframework.data.elasticsearch.core.AbstractReactiveElasticsearchTemplate$IndexResponseMetaData"
},
{
  "name":"org.springframework.data.elasticsearch.core.AbstractReactiveElasticsearchTemplate$ReadDocumentCallback"
},
{
  "name":"org.springframework.data.elasticsearch.core.AbstractReactiveElasticsearchTemplate$SearchDocumentCallback"
},
{
  "name":"org.springframework.data.elasticsearch.core.DocumentOperations",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"bulkIndex","parameterTypes":["java.util.List","org.springframework.data.elasticsearch.core.mapping.IndexCoordinates"] }, {"name":"bulkUpdate","parameterTypes":["java.util.List","org.springframework.data.elasticsearch.core.mapping.IndexCoordinates"] }]
},
{
  "name":"org.springframework.data.elasticsearch.core.ElasticsearchOperations",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"<init>","parameterTypes":["org.springframework.data.elasticsearch.client.elc.ElasticsearchTemplate"] }, {"name":"convertId","parameterTypes":["java.lang.Object"] }, {"name":"from","parameterTypes":["org.springframework.data.elasticsearch.client.elc.ElasticsearchTemplate"] }, {"name":"of","parameterTypes":["org.springframework.data.elasticsearch.client.elc.ElasticsearchTemplate"] }, {"name":"valueOf","parameterTypes":["org.springframework.data.elasticsearch.client.elc.ElasticsearchTemplate"] }]
},
{
  "name":"org.springframework.data.elasticsearch.core.EntityOperations$AdaptableEntity"
},
{
  "name":"org.springframework.data.elasticsearch.core.IndexOperations"
},
{
  "name":"org.springframework.data.elasticsearch.core.IndexedObjectInformation"
},
{
  "name":"org.springframework.data.elasticsearch.core.MultiGetItem"
},
{
  "name":"org.springframework.data.elasticsearch.core.ReactiveDocumentOperations",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"bulkUpdate","parameterTypes":["java.util.List","org.springframework.data.elasticsearch.core.mapping.IndexCoordinates"] }, {"name":"save","parameterTypes":["reactor.core.publisher.Flux","java.lang.Class"] }, {"name":"save","parameterTypes":["reactor.core.publisher.Flux","org.springframework.data.elasticsearch.core.mapping.IndexCoordinates"] }, {"name":"save","parameterTypes":["reactor.core.publisher.Mono"] }, {"name":"save","parameterTypes":["reactor.core.publisher.Mono","org.springframework.data.elasticsearch.core.mapping.IndexCoordinates"] }, {"name":"saveAll","parameterTypes":["java.lang.Iterable","java.lang.Class"] }, {"name":"saveAll","parameterTypes":["java.lang.Iterable","org.springframework.data.elasticsearch.core.mapping.IndexCoordinates"] }]
},
{
  "name":"org.springframework.data.elasticsearch.core.ReactiveElasticsearchOperations",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.data.elasticsearch.core.ReactiveIndexOperations"
},
{
  "name":"org.springframework.data.elasticsearch.core.ReactiveSearchOperations",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"count","parameterTypes":["java.lang.Class"] }, {"name":"openPointInTime","parameterTypes":["org.springframework.data.elasticsearch.core.mapping.IndexCoordinates","java.time.Duration"] }, {"name":"search","parameterTypes":["org.springframework.data.elasticsearch.core.query.Query","java.lang.Class"] }, {"name":"search","parameterTypes":["org.springframework.data.elasticsearch.core.query.Query","java.lang.Class","org.springframework.data.elasticsearch.core.mapping.IndexCoordinates"] }, {"name":"searchForHits","parameterTypes":["org.springframework.data.elasticsearch.core.query.Query","java.lang.Class"] }, {"name":"searchForHits","parameterTypes":["org.springframework.data.elasticsearch.core.query.Query","java.lang.Class","org.springframework.data.elasticsearch.core.mapping.IndexCoordinates"] }, {"name":"searchForPage","parameterTypes":["org.springframework.data.elasticsearch.core.query.Query","java.lang.Class"] }, {"name":"searchForPage","parameterTypes":["org.springframework.data.elasticsearch.core.query.Query","java.lang.Class","org.springframework.data.elasticsearch.core.mapping.IndexCoordinates"] }]
},
{
  "name":"org.springframework.data.elasticsearch.core.RefreshPolicy"
},
{
  "name":"org.springframework.data.elasticsearch.core.SearchHit"
},
{
  "name":"org.springframework.data.elasticsearch.core.SearchHits"
},
{
  "name":"org.springframework.data.elasticsearch.core.SearchHitsIterator"
},
{
  "name":"org.springframework.data.elasticsearch.core.SearchOperations",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"count","parameterTypes":["org.springframework.data.elasticsearch.core.query.Query","org.springframework.data.elasticsearch.core.mapping.IndexCoordinates"] }, {"name":"openPointInTime","parameterTypes":["org.springframework.data.elasticsearch.core.mapping.IndexCoordinates","java.time.Duration"] }, {"name":"searchOne","parameterTypes":["org.springframework.data.elasticsearch.core.query.Query","java.lang.Class"] }, {"name":"searchOne","parameterTypes":["org.springframework.data.elasticsearch.core.query.Query","java.lang.Class","org.springframework.data.elasticsearch.core.mapping.IndexCoordinates"] }]
},
{
  "name":"org.springframework.data.elasticsearch.core.SearchPage"
},
{
  "name":"org.springframework.data.elasticsearch.core.SearchScrollHits"
},
{
  "name":"org.springframework.data.elasticsearch.core.cluster.ClusterOperations"
},
{
  "name":"org.springframework.data.elasticsearch.core.cluster.ReactiveClusterOperations"
},
{
  "name":"org.springframework.data.elasticsearch.core.convert.ElasticsearchConverter",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"convertId","parameterTypes":["java.lang.Object"] }, {"name":"getProjectionFactory","parameterTypes":[] }, {"name":"mapObject","parameterTypes":["java.lang.Object"] }]
},
{
  "name":"org.springframework.data.elasticsearch.core.convert.ElasticsearchCustomConversions",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.data.elasticsearch.core.convert.ElasticsearchTypeMapper"
},
{
  "name":"org.springframework.data.elasticsearch.core.convert.MappingElasticsearchConverter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"afterPropertiesSet","parameterTypes":[] }, {"name":"getConversionService","parameterTypes":[] }, {"name":"getEnvironment","parameterTypes":[] }, {"name":"getMappingContext","parameterTypes":[] }, {"name":"read","parameterTypes":["java.lang.Class","java.lang.Object"] }, {"name":"setApplicationContext","parameterTypes":["org.springframework.context.ApplicationContext"] }, {"name":"updateFieldNames","parameterTypes":["java.lang.String","org.springframework.data.elasticsearch.core.mapping.ElasticsearchPersistentEntity"] }, {"name":"updateQuery","parameterTypes":["org.springframework.data.elasticsearch.core.query.Query","java.lang.Class"] }, {"name":"write","parameterTypes":["java.lang.Object","java.lang.Object"] }]
},
{
  "name":"org.springframework.data.elasticsearch.core.document.Document"
},
{
  "name":"org.springframework.data.elasticsearch.core.document.SearchDocument"
},
{
  "name":"org.springframework.data.elasticsearch.core.document.SearchDocumentResponse"
},
{
  "name":"org.springframework.data.elasticsearch.core.document.SearchDocumentResponse$EntityCreator"
},
{
  "name":"org.springframework.data.elasticsearch.core.mapping.ElasticsearchPersistentEntity"
},
{
  "name":"org.springframework.data.elasticsearch.core.mapping.ElasticsearchPersistentProperty"
},
{
  "name":"org.springframework.data.elasticsearch.core.mapping.IndexCoordinates"
},
{
  "name":"org.springframework.data.elasticsearch.core.mapping.PropertyValueConverter"
},
{
  "name":"org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchMappingContext",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity"
},
{
  "name":"org.springframework.data.elasticsearch.core.query.BaseQuery"
},
{
  "name":"org.springframework.data.elasticsearch.core.query.BaseQueryBuilder"
},
{
  "name":"org.springframework.data.elasticsearch.core.query.BulkOptions"
},
{
  "name":"org.springframework.data.elasticsearch.core.query.ByQueryResponse"
},
{
  "name":"org.springframework.data.elasticsearch.core.query.Criteria"
},
{
  "name":"org.springframework.data.elasticsearch.core.query.Criteria$CriteriaEntry"
},
{
  "name":"org.springframework.data.elasticsearch.core.query.CriteriaQuery"
},
{
  "name":"org.springframework.data.elasticsearch.core.query.DeleteQuery"
},
{
  "name":"org.springframework.data.elasticsearch.core.query.IndexQuery"
},
{
  "name":"org.springframework.data.elasticsearch.core.query.MoreLikeThisQuery"
},
{
  "name":"org.springframework.data.elasticsearch.core.query.Query"
},
{
  "name":"org.springframework.data.elasticsearch.core.query.SearchTemplateQuery"
},
{
  "name":"org.springframework.data.elasticsearch.core.query.SeqNoPrimaryTerm"
},
{
  "name":"org.springframework.data.elasticsearch.core.query.SqlQuery"
},
{
  "name":"org.springframework.data.elasticsearch.core.query.UpdateQuery"
},
{
  "name":"org.springframework.data.elasticsearch.core.query.UpdateResponse"
},
{
  "name":"org.springframework.data.elasticsearch.core.reindex.ReindexRequest"
},
{
  "name":"org.springframework.data.elasticsearch.core.reindex.ReindexResponse"
},
{
  "name":"org.springframework.data.elasticsearch.core.routing.RoutingResolver"
},
{
  "name":"org.springframework.data.elasticsearch.core.script.ReactiveScriptOperations",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.data.elasticsearch.core.script.Script"
},
{
  "name":"org.springframework.data.elasticsearch.core.script.ScriptOperations",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.data.elasticsearch.core.sql.ReactiveSqlOperations",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.data.elasticsearch.core.sql.SqlOperations",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.data.elasticsearch.core.sql.SqlResponse"
},
{
  "name":"org.springframework.data.elasticsearch.core.suggest.Completion",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.data.elasticsearch.core.suggest.response.Suggest"
},
{
  "name":"org.springframework.data.elasticsearch.repository.ElasticsearchRepository",
  "allDeclaredFields":true,
  "allDeclaredClasses":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"delete","parameterTypes":["java.lang.Object","org.springframework.data.elasticsearch.core.RefreshPolicy"] }, {"name":"deleteAll","parameterTypes":["java.lang.Iterable","org.springframework.data.elasticsearch.core.RefreshPolicy"] }, {"name":"deleteAll","parameterTypes":["org.springframework.data.elasticsearch.core.RefreshPolicy"] }, {"name":"deleteAllById","parameterTypes":["java.lang.Iterable","org.springframework.data.elasticsearch.core.RefreshPolicy"] }, {"name":"deleteById","parameterTypes":["java.lang.Object","org.springframework.data.elasticsearch.core.RefreshPolicy"] }, {"name":"save","parameterTypes":["java.lang.Object","org.springframework.data.elasticsearch.core.RefreshPolicy"] }, {"name":"saveAll","parameterTypes":["java.lang.Iterable","org.springframework.data.elasticsearch.core.RefreshPolicy"] }, {"name":"searchSimilar","parameterTypes":["java.lang.Object","java.lang.String[]","org.springframework.data.domain.Pageable"] }]
},
{
  "name":"org.springframework.data.elasticsearch.repository.support.ElasticsearchRepositoryFactoryBean",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Class"] }, {"name":"afterPropertiesSet","parameterTypes":[] }, {"name":"setElasticsearchOperations","parameterTypes":["org.springframework.data.elasticsearch.core.ElasticsearchOperations"] }]
},
{
  "name":"org.springframework.data.elasticsearch.repository.support.SimpleElasticsearchRepository",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["org.springframework.data.elasticsearch.repository.support.ElasticsearchEntityInformation","org.springframework.data.elasticsearch.core.ElasticsearchOperations"] }, {"name":"count","parameterTypes":[] }, {"name":"delete","parameterTypes":["java.lang.Object"] }, {"name":"delete","parameterTypes":["java.lang.Object","org.springframework.data.elasticsearch.core.RefreshPolicy"] }, {"name":"deleteAll","parameterTypes":[] }, {"name":"deleteAll","parameterTypes":["java.lang.Iterable"] }, {"name":"deleteAll","parameterTypes":["java.lang.Iterable","org.springframework.data.elasticsearch.core.RefreshPolicy"] }, {"name":"deleteAll","parameterTypes":["org.springframework.data.elasticsearch.core.RefreshPolicy"] }, {"name":"deleteAllById","parameterTypes":["java.lang.Iterable"] }, {"name":"deleteAllById","parameterTypes":["java.lang.Iterable","org.springframework.data.elasticsearch.core.RefreshPolicy"] }, {"name":"deleteById","parameterTypes":["java.lang.Object"] }, {"name":"deleteById","parameterTypes":["java.lang.Object","org.springframework.data.elasticsearch.core.RefreshPolicy"] }, {"name":"existsById","parameterTypes":["java.lang.Object"] }, {"name":"findAll","parameterTypes":[] }, {"name":"findAll","parameterTypes":["org.springframework.data.domain.Pageable"] }, {"name":"findAll","parameterTypes":["org.springframework.data.domain.Sort"] }, {"name":"findAllById","parameterTypes":["java.lang.Iterable"] }, {"name":"findById","parameterTypes":["java.lang.Object"] }, {"name":"save","parameterTypes":["java.lang.Object"] }, {"name":"save","parameterTypes":["java.lang.Object","org.springframework.data.elasticsearch.core.RefreshPolicy"] }, {"name":"saveAll","parameterTypes":["java.lang.Iterable"] }, {"name":"saveAll","parameterTypes":["java.lang.Iterable","org.springframework.data.elasticsearch.core.RefreshPolicy"] }, {"name":"searchSimilar","parameterTypes":["java.lang.Object","java.lang.String[]","org.springframework.data.domain.Pageable"] }]
},
{
  "name":"org.springframework.data.geo.GeoModule",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.data.jdbc.core.JdbcAggregateOperations",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.data.jdbc.core.JdbcAggregateTemplate",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"count","parameterTypes":["java.lang.Class"] }, {"name":"count","parameterTypes":["org.springframework.data.relational.core.query.Query","java.lang.Class"] }, {"name":"delete","parameterTypes":["java.lang.Object"] }, {"name":"deleteAll","parameterTypes":["java.lang.Class"] }, {"name":"deleteAll","parameterTypes":["java.lang.Iterable"] }, {"name":"deleteAllById","parameterTypes":["java.lang.Iterable","java.lang.Class"] }, {"name":"deleteById","parameterTypes":["java.lang.Object","java.lang.Class"] }, {"name":"exists","parameterTypes":["org.springframework.data.relational.core.query.Query","java.lang.Class"] }, {"name":"existsById","parameterTypes":["java.lang.Object","java.lang.Class"] }, {"name":"findAll","parameterTypes":["java.lang.Class"] }, {"name":"findAll","parameterTypes":["java.lang.Class","org.springframework.data.domain.Pageable"] }, {"name":"findAll","parameterTypes":["java.lang.Class","org.springframework.data.domain.Sort"] }, {"name":"findAll","parameterTypes":["org.springframework.data.relational.core.query.Query","java.lang.Class"] }, {"name":"findAll","parameterTypes":["org.springframework.data.relational.core.query.Query","java.lang.Class","org.springframework.data.domain.Pageable"] }, {"name":"findAllById","parameterTypes":["java.lang.Iterable","java.lang.Class"] }, {"name":"findById","parameterTypes":["java.lang.Object","java.lang.Class"] }, {"name":"findOne","parameterTypes":["org.springframework.data.relational.core.query.Query","java.lang.Class"] }, {"name":"insert","parameterTypes":["java.lang.Object"] }, {"name":"insertAll","parameterTypes":["java.lang.Iterable"] }, {"name":"save","parameterTypes":["java.lang.Object"] }, {"name":"saveAll","parameterTypes":["java.lang.Iterable"] }, {"name":"update","parameterTypes":["java.lang.Object"] }, {"name":"updateAll","parameterTypes":["java.lang.Iterable"] }]
},
{
  "name":"org.springframework.data.jdbc.core.JdbcAggregateTemplate$EntityAndChangeCreator"
},
{
  "name":"org.springframework.data.jdbc.core.JdbcAggregateTemplate$EntityAndPreviousVersion"
},
{
  "name":"org.springframework.data.jdbc.core.convert.DataAccessStrategy",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"findAll","parameterTypes":["java.lang.Class","org.springframework.data.domain.Sort"] }, {"name":"findAll","parameterTypes":["org.springframework.data.relational.core.query.Query","java.lang.Class"] }]
},
{
  "name":"org.springframework.data.jdbc.core.convert.DefaultDataAccessStrategy",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"acquireLockAll","parameterTypes":["org.springframework.data.relational.core.sql.LockMode","java.lang.Class"] }, {"name":"acquireLockById","parameterTypes":["java.lang.Object","org.springframework.data.relational.core.sql.LockMode","java.lang.Class"] }, {"name":"count","parameterTypes":["java.lang.Class"] }, {"name":"count","parameterTypes":["org.springframework.data.relational.core.query.Query","java.lang.Class"] }, {"name":"delete","parameterTypes":["java.lang.Iterable","java.lang.Class"] }, {"name":"delete","parameterTypes":["java.lang.Iterable","org.springframework.data.mapping.PersistentPropertyPath"] }, {"name":"delete","parameterTypes":["java.lang.Object","java.lang.Class"] }, {"name":"delete","parameterTypes":["java.lang.Object","org.springframework.data.mapping.PersistentPropertyPath"] }, {"name":"deleteAll","parameterTypes":["java.lang.Class"] }, {"name":"deleteAll","parameterTypes":["org.springframework.data.mapping.PersistentPropertyPath"] }, {"name":"deleteWithVersion","parameterTypes":["java.lang.Object","java.lang.Class","java.lang.Number"] }, {"name":"exists","parameterTypes":["org.springframework.data.relational.core.query.Query","java.lang.Class"] }, {"name":"existsById","parameterTypes":["java.lang.Object","java.lang.Class"] }, {"name":"findAll","parameterTypes":["java.lang.Class"] }, {"name":"findAll","parameterTypes":["java.lang.Class","org.springframework.data.domain.Pageable"] }, {"name":"findAll","parameterTypes":["java.lang.Class","org.springframework.data.domain.Sort"] }, {"name":"findAll","parameterTypes":["org.springframework.data.relational.core.query.Query","java.lang.Class"] }, {"name":"findAll","parameterTypes":["org.springframework.data.relational.core.query.Query","java.lang.Class","org.springframework.data.domain.Pageable"] }, {"name":"findAllById","parameterTypes":["java.lang.Iterable","java.lang.Class"] }, {"name":"findAllByPath","parameterTypes":["org.springframework.data.jdbc.core.convert.Identifier","org.springframework.data.mapping.PersistentPropertyPath"] }, {"name":"findById","parameterTypes":["java.lang.Object","java.lang.Class"] }, {"name":"findOne","parameterTypes":["org.springframework.data.relational.core.query.Query","java.lang.Class"] }, {"name":"insert","parameterTypes":["java.lang.Object","java.lang.Class","org.springframework.data.jdbc.core.convert.Identifier","org.springframework.data.relational.core.conversion.IdValueSource"] }, {"name":"insert","parameterTypes":["java.util.List","java.lang.Class","org.springframework.data.relational.core.conversion.IdValueSource"] }, {"name":"update","parameterTypes":["java.lang.Object","java.lang.Class"] }, {"name":"updateWithVersion","parameterTypes":["java.lang.Object","java.lang.Class","java.lang.Number"] }]
},
{
  "name":"org.springframework.data.jdbc.core.convert.EntityRowMapper"
},
{
  "name":"org.springframework.data.jdbc.core.convert.Identifier"
},
{
  "name":"org.springframework.data.jdbc.core.convert.InsertSubject"
},
{
  "name":"org.springframework.data.jdbc.core.convert.JdbcArrayColumns"
},
{
  "name":"org.springframework.data.jdbc.core.convert.JdbcConverter",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"<init>","parameterTypes":["org.springframework.data.jdbc.core.convert.MappingJdbcConverter"] }, {"name":"from","parameterTypes":["org.springframework.data.jdbc.core.convert.MappingJdbcConverter"] }, {"name":"of","parameterTypes":["org.springframework.data.jdbc.core.convert.MappingJdbcConverter"] }, {"name":"readAndResolve","parameterTypes":["java.lang.Class","org.springframework.data.relational.domain.RowDocument"] }, {"name":"readAndResolve","parameterTypes":["java.lang.Class","org.springframework.data.relational.domain.RowDocument","org.springframework.data.jdbc.core.convert.Identifier"] }, {"name":"valueOf","parameterTypes":["org.springframework.data.jdbc.core.convert.MappingJdbcConverter"] }, {"name":"writeJdbcValue","parameterTypes":["java.lang.Object","java.lang.Class","java.sql.SQLType"] }]
},
{
  "name":"org.springframework.data.jdbc.core.convert.JdbcCustomConversions",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.data.jdbc.core.convert.MappingJdbcConverter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"getColumnType","parameterTypes":["org.springframework.data.relational.core.mapping.RelationalPersistentProperty"] }, {"name":"getTargetSqlType","parameterTypes":["org.springframework.data.relational.core.mapping.RelationalPersistentProperty"] }, {"name":"readAndResolve","parameterTypes":["org.springframework.data.util.TypeInformation","org.springframework.data.relational.domain.RowDocument","org.springframework.data.jdbc.core.convert.Identifier"] }, {"name":"readValue","parameterTypes":["java.lang.Object","org.springframework.data.util.TypeInformation"] }, {"name":"toJdbcConverter","parameterTypes":[] }, {"name":"writeJdbcValue","parameterTypes":["java.lang.Object","org.springframework.data.util.TypeInformation","java.sql.SQLType"] }, {"name":"writeValue","parameterTypes":["java.lang.Object","org.springframework.data.util.TypeInformation"] }]
},
{
  "name":"org.springframework.data.jdbc.core.convert.ReadingDataAccessStrategy",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.data.jdbc.core.convert.RelationResolver",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.data.jdbc.core.convert.SqlGenerator"
},
{
  "name":"org.springframework.data.jdbc.core.convert.SqlIdentifierParameterSource"
},
{
  "name":"org.springframework.data.jdbc.core.dialect.JdbcDialect",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.data.jdbc.core.dialect.JdbcPostgresDialect",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"getArraySupport","parameterTypes":[] }, {"name":"simpleTypes","parameterTypes":[] }, {"name":"toDialect","parameterTypes":[] }]
},
{
  "name":"org.springframework.data.jdbc.core.mapping.JdbcMappingContext",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"toMappingContext","parameterTypes":[] }, {"name":"toRelationalMappingContext","parameterTypes":[] }]
},
{
  "name":"org.springframework.data.jdbc.core.mapping.JdbcValue"
},
{
  "name":"org.springframework.data.jdbc.repository.QueryMappingConfiguration"
},
{
  "name":"org.springframework.data.jdbc.repository.config.AbstractJdbcConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"setApplicationContext","parameterTypes":["org.springframework.context.ApplicationContext"] }]
},
{
  "name":"org.springframework.data.jdbc.repository.config.DialectResolver$DefaultDialectProvider",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.data.jdbc.repository.config.DialectResolver.DefaultDialectProvider"
},
{
  "name":"org.springframework.data.jdbc.repository.config.EnableJdbcAuditing",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.data.jdbc.repository.query.Modifying",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.data.jdbc.repository.query.Query",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.data.jdbc.repository.support.JdbcRepositoryFactoryBean",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Class"] }, {"name":"afterPropertiesSet","parameterTypes":[] }, {"name":"setApplicationEventPublisher","parameterTypes":["org.springframework.context.ApplicationEventPublisher"] }, {"name":"setBeanFactory","parameterTypes":["org.springframework.beans.factory.BeanFactory"] }, {"name":"setConverter","parameterTypes":["org.springframework.data.jdbc.core.convert.JdbcConverter"] }, {"name":"setDialect","parameterTypes":["org.springframework.data.relational.core.dialect.Dialect"] }, {"name":"setMappingContext","parameterTypes":["org.springframework.data.relational.core.mapping.RelationalMappingContext"] }]
},
{
  "name":"org.springframework.data.jdbc.repository.support.SimpleJdbcRepository",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["org.springframework.data.jdbc.core.JdbcAggregateOperations","org.springframework.data.mapping.PersistentEntity","org.springframework.data.jdbc.core.convert.JdbcConverter"] }, {"name":"count","parameterTypes":[] }, {"name":"count","parameterTypes":["org.springframework.data.domain.Example"] }, {"name":"delete","parameterTypes":["java.lang.Object"] }, {"name":"deleteAll","parameterTypes":[] }, {"name":"deleteAll","parameterTypes":["java.lang.Iterable"] }, {"name":"deleteAllById","parameterTypes":["java.lang.Iterable"] }, {"name":"deleteById","parameterTypes":["java.lang.Object"] }, {"name":"exists","parameterTypes":["org.springframework.data.domain.Example"] }, {"name":"existsById","parameterTypes":["java.lang.Object"] }, {"name":"findAll","parameterTypes":[] }, {"name":"findAll","parameterTypes":["org.springframework.data.domain.Example"] }, {"name":"findAll","parameterTypes":["org.springframework.data.domain.Example","org.springframework.data.domain.Pageable"] }, {"name":"findAll","parameterTypes":["org.springframework.data.domain.Example","org.springframework.data.domain.Sort"] }, {"name":"findAll","parameterTypes":["org.springframework.data.domain.Pageable"] }, {"name":"findAll","parameterTypes":["org.springframework.data.domain.Sort"] }, {"name":"findAllById","parameterTypes":["java.lang.Iterable"] }, {"name":"findBy","parameterTypes":["org.springframework.data.domain.Example","java.util.function.Function"] }, {"name":"findById","parameterTypes":["java.lang.Object"] }, {"name":"findOne","parameterTypes":["org.springframework.data.domain.Example"] }, {"name":"save","parameterTypes":["java.lang.Object"] }, {"name":"saveAll","parameterTypes":["java.lang.Iterable"] }]
},
{
  "name":"org.springframework.data.mapping.MappingException"
},
{
  "name":"org.springframework.data.mapping.PersistentEntity"
},
{
  "name":"org.springframework.data.mapping.PersistentProperty"
},
{
  "name":"org.springframework.data.mapping.PersistentPropertyAccessor"
},
{
  "name":"org.springframework.data.mapping.PersistentPropertyPath"
},
{
  "name":"org.springframework.data.mapping.PersistentPropertyPathAccessor"
},
{
  "name":"org.springframework.data.mapping.PersistentPropertyPaths"
},
{
  "name":"org.springframework.data.mapping.PropertyPath"
},
{
  "name":"org.springframework.data.mapping.callback.EntityCallback",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.data.mapping.callback.EntityCallbacks"
},
{
  "name":"org.springframework.data.mapping.callback.ReactiveEntityCallbacks"
},
{
  "name":"org.springframework.data.mapping.context.AbstractMappingContext",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"afterPropertiesSet","parameterTypes":[] }, {"name":"createPersistentProperty","parameterTypes":["org.springframework.data.mapping.model.Property","org.springframework.data.mapping.model.MutablePersistentEntity","org.springframework.data.mapping.model.SimpleTypeHolder"] }, {"name":"findPersistentPropertyPaths","parameterTypes":["java.lang.Class","java.util.function.Predicate"] }, {"name":"getManagedTypes","parameterTypes":[] }, {"name":"getPersistentEntities","parameterTypes":[] }, {"name":"getPersistentEntity","parameterTypes":["java.lang.Class"] }, {"name":"getPersistentEntity","parameterTypes":["org.springframework.data.mapping.PersistentProperty"] }, {"name":"getPersistentEntity","parameterTypes":["org.springframework.data.util.TypeInformation"] }, {"name":"getPersistentPropertyPath","parameterTypes":["java.lang.String","java.lang.Class"] }, {"name":"getPersistentPropertyPath","parameterTypes":["java.lang.String","org.springframework.data.util.TypeInformation"] }, {"name":"getPersistentPropertyPath","parameterTypes":["org.springframework.data.mapping.PropertyPath"] }, {"name":"hasPersistentEntityFor","parameterTypes":["java.lang.Class"] }, {"name":"initialize","parameterTypes":[] }, {"name":"setApplicationContext","parameterTypes":["org.springframework.context.ApplicationContext"] }, {"name":"setApplicationEventPublisher","parameterTypes":["org.springframework.context.ApplicationEventPublisher"] }, {"name":"setBeanFactory","parameterTypes":["org.springframework.beans.factory.BeanFactory"] }, {"name":"setEnvironment","parameterTypes":["org.springframework.core.env.Environment"] }, {"name":"setInitialEntitySet","parameterTypes":["java.util.Set"] }, {"name":"setManagedTypes","parameterTypes":["org.springframework.data.domain.ManagedTypes"] }, {"name":"setSimpleTypeHolder","parameterTypes":["org.springframework.data.mapping.model.SimpleTypeHolder"] }, {"name":"setStrict","parameterTypes":["boolean"] }]
},
{
  "name":"org.springframework.data.mapping.context.MappingContext",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"<init>","parameterTypes":["org.springframework.data.jdbc.core.mapping.JdbcMappingContext"] }, {"name":"from","parameterTypes":["org.springframework.data.jdbc.core.mapping.JdbcMappingContext"] }, {"name":"getPersistentEntity","parameterTypes":["java.lang.Class"] }, {"name":"getPersistentEntity","parameterTypes":["org.springframework.data.util.TypeInformation"] }, {"name":"getRequiredPersistentEntity","parameterTypes":["java.lang.Class"] }, {"name":"getRequiredPersistentEntity","parameterTypes":["org.springframework.data.mapping.PersistentProperty"] }, {"name":"getRequiredPersistentEntity","parameterTypes":["org.springframework.data.util.TypeInformation"] }, {"name":"of","parameterTypes":["org.springframework.data.jdbc.core.mapping.JdbcMappingContext"] }, {"name":"valueOf","parameterTypes":["org.springframework.data.jdbc.core.mapping.JdbcMappingContext"] }]
},
{
  "name":"org.springframework.data.mapping.model.EntityInstantiators"
},
{
  "name":"org.springframework.data.mapping.model.FieldNamingStrategy"
},
{
  "name":"org.springframework.data.mapping.model.MutablePersistentEntity"
},
{
  "name":"org.springframework.data.mapping.model.ParameterValueProvider"
},
{
  "name":"org.springframework.data.mapping.model.Property"
},
{
  "name":"org.springframework.data.mapping.model.SimpleTypeHolder"
},
{
  "name":"org.springframework.data.mapping.model.ValueExpressionEvaluator"
},
{
  "name":"org.springframework.data.projection.EntityProjection"
},
{
  "name":"org.springframework.data.projection.EntityProjectionIntrospector"
},
{
  "name":"org.springframework.data.projection.ProjectionFactory"
},
{
  "name":"org.springframework.data.querydsl.QuerydslPredicateExecutor"
},
{
  "name":"org.springframework.data.querydsl.ReactiveQuerydslPredicateExecutor"
},
{
  "name":"org.springframework.data.redis.cache.RedisCache"
},
{
  "name":"org.springframework.data.redis.cache.RedisCacheConfiguration"
},
{
  "name":"org.springframework.data.redis.cache.RedisCacheManager",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.data.redis.cache.RedisCacheManager$RedisCacheManagerBuilder"
},
{
  "name":"org.springframework.data.redis.cache.RedisCacheWriter"
},
{
  "name":"org.springframework.data.redis.connection.ClusterCommandExecutor"
},
{
  "name":"org.springframework.data.redis.connection.ClusterInfo"
},
{
  "name":"org.springframework.data.redis.connection.ClusterTopologyProvider"
},
{
  "name":"org.springframework.data.redis.connection.DataType"
},
{
  "name":"org.springframework.data.redis.connection.ReactiveRedisConnection"
},
{
  "name":"org.springframework.data.redis.connection.ReactiveRedisConnectionFactory",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.data.redis.connection.RedisClusterConfiguration"
},
{
  "name":"org.springframework.data.redis.connection.RedisClusterConnection"
},
{
  "name":"org.springframework.data.redis.connection.RedisConfiguration"
},
{
  "name":"org.springframework.data.redis.connection.RedisConfiguration$ClusterConfiguration"
},
{
  "name":"org.springframework.data.redis.connection.RedisConnection"
},
{
  "name":"org.springframework.data.redis.connection.RedisConnectionFactory",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.data.redis.connection.RedisKeyCommands"
},
{
  "name":"org.springframework.data.redis.connection.RedisNode"
},
{
  "name":"org.springframework.data.redis.connection.RedisPassword"
},
{
  "name":"org.springframework.data.redis.connection.RedisSentinelConfiguration"
},
{
  "name":"org.springframework.data.redis.connection.RedisSentinelConnection"
},
{
  "name":"org.springframework.data.redis.connection.RedisSocketConfiguration"
},
{
  "name":"org.springframework.data.redis.connection.RedisStandaloneConfiguration"
},
{
  "name":"org.springframework.data.redis.connection.SortParameters"
},
{
  "name":"org.springframework.data.redis.connection.lettuce.ClusterConnectionProvider"
},
{
  "name":"org.springframework.data.redis.connection.lettuce.LettuceClientConfiguration"
},
{
  "name":"org.springframework.data.redis.connection.lettuce.LettuceClientConfiguration$LettuceClientConfigurationBuilder"
},
{
  "name":"org.springframework.data.redis.connection.lettuce.LettuceClusterConnection"
},
{
  "name":"org.springframework.data.redis.connection.lettuce.LettuceConnection"
},
{
  "name":"org.springframework.data.redis.connection.lettuce.LettuceConnection$PipeliningFlushPolicy"
},
{
  "name":"org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"afterPropertiesSet","parameterTypes":[] }, {"name":"destroy","parameterTypes":[] }, {"name":"getClusterConnection","parameterTypes":[] }, {"name":"getConnection","parameterTypes":[] }, {"name":"getConvertPipelineAndTxResults","parameterTypes":[] }, {"name":"getPhase","parameterTypes":[] }, {"name":"getReactiveClusterConnection","parameterTypes":[] }, {"name":"getReactiveConnection","parameterTypes":[] }, {"name":"getSentinelConnection","parameterTypes":[] }, {"name":"isAutoStartup","parameterTypes":[] }, {"name":"isRunning","parameterTypes":[] }, {"name":"start","parameterTypes":[] }, {"name":"stop","parameterTypes":[] }, {"name":"translateExceptionIfPossible","parameterTypes":["java.lang.RuntimeException"] }]
},
{
  "name":"org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$MutableLettuceClientConfiguration"
},
{
  "name":"org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$SharedConnection"
},
{
  "name":"org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$State"
},
{
  "name":"org.springframework.data.redis.connection.lettuce.LettuceConnectionProvider"
},
{
  "name":"org.springframework.data.redis.connection.lettuce.LettuceReactiveRedisClusterConnection"
},
{
  "name":"org.springframework.data.redis.connection.lettuce.LettuceReactiveRedisConnection"
},
{
  "name":"org.springframework.data.redis.connection.lettuce.RedisCredentialsProviderFactory"
},
{
  "name":"org.springframework.data.redis.connection.lettuce.StandaloneConnectionProvider"
},
{
  "name":"org.springframework.data.redis.connection.lettuce.StaticMasterReplicaConnectionProvider"
},
{
  "name":"org.springframework.data.redis.core.BoundGeoOperations"
},
{
  "name":"org.springframework.data.redis.core.BoundHashOperations"
},
{
  "name":"org.springframework.data.redis.core.BoundListOperations"
},
{
  "name":"org.springframework.data.redis.core.BoundSetOperations"
},
{
  "name":"org.springframework.data.redis.core.BoundStreamOperations"
},
{
  "name":"org.springframework.data.redis.core.BoundValueOperations"
},
{
  "name":"org.springframework.data.redis.core.BoundZSetOperations"
},
{
  "name":"org.springframework.data.redis.core.BulkMapper"
},
{
  "name":"org.springframework.data.redis.core.ClusterOperations"
},
{
  "name":"org.springframework.data.redis.core.Cursor"
},
{
  "name":"org.springframework.data.redis.core.GeoOperations"
},
{
  "name":"org.springframework.data.redis.core.HashOperations"
},
{
  "name":"org.springframework.data.redis.core.HyperLogLogOperations"
},
{
  "name":"org.springframework.data.redis.core.ListOperations"
},
{
  "name":"org.springframework.data.redis.core.ReactiveGeoOperations"
},
{
  "name":"org.springframework.data.redis.core.ReactiveHashOperations"
},
{
  "name":"org.springframework.data.redis.core.ReactiveHyperLogLogOperations"
},
{
  "name":"org.springframework.data.redis.core.ReactiveListOperations"
},
{
  "name":"org.springframework.data.redis.core.ReactiveRedisCallback"
},
{
  "name":"org.springframework.data.redis.core.ReactiveRedisOperations",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"execute","parameterTypes":["org.springframework.data.redis.core.script.RedisScript"] }, {"name":"execute","parameterTypes":["org.springframework.data.redis.core.script.RedisScript","java.util.List"] }, {"name":"execute","parameterTypes":["org.springframework.data.redis.core.script.RedisScript","java.util.List","java.lang.Object[]"] }, {"name":"listenToChannel","parameterTypes":["java.lang.String[]"] }, {"name":"listenToChannelLater","parameterTypes":["java.lang.String[]"] }, {"name":"listenToPattern","parameterTypes":["java.lang.String[]"] }, {"name":"listenToPatternLater","parameterTypes":["java.lang.String[]"] }, {"name":"scan","parameterTypes":[] }]
},
{
  "name":"org.springframework.data.redis.core.ReactiveRedisSessionCallback"
},
{
  "name":"org.springframework.data.redis.core.ReactiveRedisTemplate",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"convertAndSend","parameterTypes":["java.lang.String","java.lang.Object"] }, {"name":"copy","parameterTypes":["java.lang.Object","java.lang.Object","boolean"] }, {"name":"createFlux","parameterTypes":["org.springframework.data.redis.core.ReactiveRedisCallback"] }, {"name":"createMono","parameterTypes":["org.springframework.data.redis.core.ReactiveRedisCallback"] }, {"name":"delete","parameterTypes":["org.reactivestreams.Publisher"] }, {"name":"delete","parameterTypes":["java.lang.Object[]"] }, {"name":"execute","parameterTypes":["org.springframework.data.redis.core.ReactiveRedisCallback"] }, {"name":"execute","parameterTypes":["org.springframework.data.redis.core.ReactiveRedisCallback","boolean"] }, {"name":"execute","parameterTypes":["org.springframework.data.redis.core.script.RedisScript","java.util.List","java.util.List"] }, {"name":"execute","parameterTypes":["org.springframework.data.redis.core.script.RedisScript","java.util.List","java.util.List","org.springframework.data.redis.serializer.RedisElementWriter","org.springframework.data.redis.serializer.RedisElementReader"] }, {"name":"executeInSession","parameterTypes":["org.springframework.data.redis.core.ReactiveRedisSessionCallback"] }, {"name":"expire","parameterTypes":["java.lang.Object","java.time.Duration"] }, {"name":"expireAt","parameterTypes":["java.lang.Object","java.time.Instant"] }, {"name":"getConnectionFactory","parameterTypes":[] }, {"name":"getExpire","parameterTypes":["java.lang.Object"] }, {"name":"getSerializationContext","parameterTypes":[] }, {"name":"hasKey","parameterTypes":["java.lang.Object"] }, {"name":"keys","parameterTypes":["java.lang.Object"] }, {"name":"listenTo","parameterTypes":["org.springframework.data.redis.listener.Topic[]"] }, {"name":"listenToLater","parameterTypes":["org.springframework.data.redis.listener.Topic[]"] }, {"name":"move","parameterTypes":["java.lang.Object","int"] }, {"name":"opsForGeo","parameterTypes":[] }, {"name":"opsForGeo","parameterTypes":["org.springframework.data.redis.serializer.RedisSerializationContext"] }, {"name":"opsForHash","parameterTypes":[] }, {"name":"opsForHash","parameterTypes":["org.springframework.data.redis.serializer.RedisSerializationContext"] }, {"name":"opsForHyperLogLog","parameterTypes":[] }, {"name":"opsForHyperLogLog","parameterTypes":["org.springframework.data.redis.serializer.RedisSerializationContext"] }, {"name":"opsForList","parameterTypes":[] }, {"name":"opsForList","parameterTypes":["org.springframework.data.redis.serializer.RedisSerializationContext"] }, {"name":"opsForSet","parameterTypes":[] }, {"name":"opsForSet","parameterTypes":["org.springframework.data.redis.serializer.RedisSerializationContext"] }, {"name":"opsForStream","parameterTypes":[] }, {"name":"opsForStream","parameterTypes":["org.springframework.data.redis.hash.HashMapper"] }, {"name":"opsForStream","parameterTypes":["org.springframework.data.redis.serializer.RedisSerializationContext"] }, {"name":"opsForValue","parameterTypes":[] }, {"name":"opsForValue","parameterTypes":["org.springframework.data.redis.serializer.RedisSerializationContext"] }, {"name":"opsForZSet","parameterTypes":[] }, {"name":"opsForZSet","parameterTypes":["org.springframework.data.redis.serializer.RedisSerializationContext"] }, {"name":"persist","parameterTypes":["java.lang.Object"] }, {"name":"randomKey","parameterTypes":[] }, {"name":"rename","parameterTypes":["java.lang.Object","java.lang.Object"] }, {"name":"renameIfAbsent","parameterTypes":["java.lang.Object","java.lang.Object"] }, {"name":"scan","parameterTypes":["org.springframework.data.redis.core.ScanOptions"] }, {"name":"type","parameterTypes":["java.lang.Object"] }, {"name":"unlink","parameterTypes":["org.reactivestreams.Publisher"] }, {"name":"unlink","parameterTypes":["java.lang.Object[]"] }]
},
{
  "name":"org.springframework.data.redis.core.ReactiveSetOperations"
},
{
  "name":"org.springframework.data.redis.core.ReactiveStreamOperations"
},
{
  "name":"org.springframework.data.redis.core.ReactiveStringRedisTemplate",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.data.redis.core.ReactiveValueOperations"
},
{
  "name":"org.springframework.data.redis.core.ReactiveZSetOperations"
},
{
  "name":"org.springframework.data.redis.core.RedisAccessor",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"getConnectionFactory","parameterTypes":[] }, {"name":"getRequiredConnectionFactory","parameterTypes":[] }, {"name":"setConnectionFactory","parameterTypes":["org.springframework.data.redis.connection.RedisConnectionFactory"] }]
},
{
  "name":"org.springframework.data.redis.core.RedisCallback"
},
{
  "name":"org.springframework.data.redis.core.RedisOperations",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"expire","parameterTypes":["java.lang.Object","java.time.Duration"] }, {"name":"expireAt","parameterTypes":["java.lang.Object","java.time.Instant"] }, {"name":"restore","parameterTypes":["java.lang.Object","byte[]","long","java.util.concurrent.TimeUnit"] }]
},
{
  "name":"org.springframework.data.redis.core.RedisTemplate",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"afterPropertiesSet","parameterTypes":[] }, {"name":"boundGeoOps","parameterTypes":["java.lang.Object"] }, {"name":"boundHashOps","parameterTypes":["java.lang.Object"] }, {"name":"boundListOps","parameterTypes":["java.lang.Object"] }, {"name":"boundSetOps","parameterTypes":["java.lang.Object"] }, {"name":"boundStreamOps","parameterTypes":["java.lang.Object"] }, {"name":"boundValueOps","parameterTypes":["java.lang.Object"] }, {"name":"boundZSetOps","parameterTypes":["java.lang.Object"] }, {"name":"convertAndSend","parameterTypes":["java.lang.String","java.lang.Object"] }, {"name":"copy","parameterTypes":["java.lang.Object","java.lang.Object","boolean"] }, {"name":"countExistingKeys","parameterTypes":["java.util.Collection"] }, {"name":"delete","parameterTypes":["java.lang.Object"] }, {"name":"delete","parameterTypes":["java.util.Collection"] }, {"name":"discard","parameterTypes":[] }, {"name":"dump","parameterTypes":["java.lang.Object"] }, {"name":"exec","parameterTypes":[] }, {"name":"exec","parameterTypes":["org.springframework.data.redis.serializer.RedisSerializer"] }, {"name":"execute","parameterTypes":["org.springframework.data.redis.core.RedisCallback"] }, {"name":"execute","parameterTypes":["org.springframework.data.redis.core.RedisCallback","boolean"] }, {"name":"execute","parameterTypes":["org.springframework.data.redis.core.RedisCallback","boolean","boolean"] }, {"name":"execute","parameterTypes":["org.springframework.data.redis.core.SessionCallback"] }, {"name":"execute","parameterTypes":["org.springframework.data.redis.core.script.RedisScript","java.util.List","java.lang.Object[]"] }, {"name":"execute","parameterTypes":["org.springframework.data.redis.core.script.RedisScript","org.springframework.data.redis.serializer.RedisSerializer","org.springframework.data.redis.serializer.RedisSerializer","java.util.List","java.lang.Object[]"] }, {"name":"executePipelined","parameterTypes":["org.springframework.data.redis.core.RedisCallback"] }, {"name":"executePipelined","parameterTypes":["org.springframework.data.redis.core.RedisCallback","org.springframework.data.redis.serializer.RedisSerializer"] }, {"name":"executePipelined","parameterTypes":["org.springframework.data.redis.core.SessionCallback"] }, {"name":"executePipelined","parameterTypes":["org.springframework.data.redis.core.SessionCallback","org.springframework.data.redis.serializer.RedisSerializer"] }, {"name":"executeWithStickyConnection","parameterTypes":["org.springframework.data.redis.core.RedisCallback"] }, {"name":"expire","parameterTypes":["java.lang.Object","long","java.util.concurrent.TimeUnit"] }, {"name":"expireAt","parameterTypes":["java.lang.Object","java.util.Date"] }, {"name":"getClientList","parameterTypes":[] }, {"name":"getDefaultSerializer","parameterTypes":[] }, {"name":"getExpire","parameterTypes":["java.lang.Object"] }, {"name":"getExpire","parameterTypes":["java.lang.Object","java.util.concurrent.TimeUnit"] }, {"name":"getHashKeySerializer","parameterTypes":[] }, {"name":"getHashValueSerializer","parameterTypes":[] }, {"name":"getKeySerializer","parameterTypes":[] }, {"name":"getStringSerializer","parameterTypes":[] }, {"name":"getValueSerializer","parameterTypes":[] }, {"name":"hasKey","parameterTypes":["java.lang.Object"] }, {"name":"isEnableDefaultSerializer","parameterTypes":[] }, {"name":"isExposeConnection","parameterTypes":[] }, {"name":"keys","parameterTypes":["java.lang.Object"] }, {"name":"killClient","parameterTypes":["java.lang.String","int"] }, {"name":"move","parameterTypes":["java.lang.Object","int"] }, {"name":"multi","parameterTypes":[] }, {"name":"opsForCluster","parameterTypes":[] }, {"name":"opsForGeo","parameterTypes":[] }, {"name":"opsForHash","parameterTypes":[] }, {"name":"opsForHyperLogLog","parameterTypes":[] }, {"name":"opsForList","parameterTypes":[] }, {"name":"opsForSet","parameterTypes":[] }, {"name":"opsForStream","parameterTypes":[] }, {"name":"opsForStream","parameterTypes":["org.springframework.data.redis.hash.HashMapper"] }, {"name":"opsForValue","parameterTypes":[] }, {"name":"opsForZSet","parameterTypes":[] }, {"name":"persist","parameterTypes":["java.lang.Object"] }, {"name":"randomKey","parameterTypes":[] }, {"name":"rename","parameterTypes":["java.lang.Object","java.lang.Object"] }, {"name":"renameIfAbsent","parameterTypes":["java.lang.Object","java.lang.Object"] }, {"name":"replicaOf","parameterTypes":["java.lang.String","int"] }, {"name":"replicaOfNoOne","parameterTypes":[] }, {"name":"restore","parameterTypes":["java.lang.Object","byte[]","long","java.util.concurrent.TimeUnit","boolean"] }, {"name":"scan","parameterTypes":["org.springframework.data.redis.core.ScanOptions"] }, {"name":"setBeanClassLoader","parameterTypes":["java.lang.ClassLoader"] }, {"name":"setDefaultSerializer","parameterTypes":["org.springframework.data.redis.serializer.RedisSerializer"] }, {"name":"setEnableDefaultSerializer","parameterTypes":["boolean"] }, {"name":"setEnableTransactionSupport","parameterTypes":["boolean"] }, {"name":"setExposeConnection","parameterTypes":["boolean"] }, {"name":"setHashKeySerializer","parameterTypes":["org.springframework.data.redis.serializer.RedisSerializer"] }, {"name":"setHashValueSerializer","parameterTypes":["org.springframework.data.redis.serializer.RedisSerializer"] }, {"name":"setKeySerializer","parameterTypes":["org.springframework.data.redis.serializer.RedisSerializer"] }, {"name":"setScriptExecutor","parameterTypes":["org.springframework.data.redis.core.script.ScriptExecutor"] }, {"name":"setStringSerializer","parameterTypes":["org.springframework.data.redis.serializer.RedisSerializer"] }, {"name":"setValueSerializer","parameterTypes":["org.springframework.data.redis.serializer.RedisSerializer"] }, {"name":"sort","parameterTypes":["org.springframework.data.redis.core.query.SortQuery"] }, {"name":"sort","parameterTypes":["org.springframework.data.redis.core.query.SortQuery","java.lang.Object"] }, {"name":"sort","parameterTypes":["org.springframework.data.redis.core.query.SortQuery","org.springframework.data.redis.core.BulkMapper"] }, {"name":"sort","parameterTypes":["org.springframework.data.redis.core.query.SortQuery","org.springframework.data.redis.core.BulkMapper","org.springframework.data.redis.serializer.RedisSerializer"] }, {"name":"sort","parameterTypes":["org.springframework.data.redis.core.query.SortQuery","org.springframework.data.redis.serializer.RedisSerializer"] }, {"name":"type","parameterTypes":["java.lang.Object"] }, {"name":"unlink","parameterTypes":["java.lang.Object"] }, {"name":"unlink","parameterTypes":["java.util.Collection"] }, {"name":"unwatch","parameterTypes":[] }, {"name":"watch","parameterTypes":["java.lang.Object"] }, {"name":"watch","parameterTypes":["java.util.Collection"] }]
},
{
  "name":"org.springframework.data.redis.core.ScanOptions"
},
{
  "name":"org.springframework.data.redis.core.SessionCallback"
},
{
  "name":"org.springframework.data.redis.core.SetOperations"
},
{
  "name":"org.springframework.data.redis.core.StreamOperations"
},
{
  "name":"org.springframework.data.redis.core.StringRedisTemplate",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.data.redis.core.ValueOperations"
},
{
  "name":"org.springframework.data.redis.core.ZSetOperations"
},
{
  "name":"org.springframework.data.redis.core.convert.RedisCustomConversions",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.data.redis.core.query.SortQuery"
},
{
  "name":"org.springframework.data.redis.core.script.RedisScript"
},
{
  "name":"org.springframework.data.redis.core.script.ScriptExecutor"
},
{
  "name":"org.springframework.data.redis.hash.HashMapper"
},
{
  "name":"org.springframework.data.redis.listener.ChannelTopic"
},
{
  "name":"org.springframework.data.redis.listener.PatternTopic"
},
{
  "name":"org.springframework.data.redis.listener.ReactiveRedisMessageListenerContainer"
},
{
  "name":"org.springframework.data.redis.listener.Topic"
},
{
  "name":"org.springframework.data.redis.serializer.RedisElementReader"
},
{
  "name":"org.springframework.data.redis.serializer.RedisElementWriter"
},
{
  "name":"org.springframework.data.redis.serializer.RedisSerializationContext"
},
{
  "name":"org.springframework.data.redis.serializer.RedisSerializer"
},
{
  "name":"org.springframework.data.relational.RelationalManagedTypes",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"forEach","parameterTypes":["java.util.function.Consumer"] }]
},
{
  "name":"org.springframework.data.relational.auditing.RelationalAuditingCallback",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":["org.springframework.beans.factory.ObjectFactory"] }, {"name":"getOrder","parameterTypes":[] }, {"name":"onBeforeConvert","parameterTypes":["java.lang.Object"] }]
},
{
  "name":"org.springframework.data.relational.core.conversion.AbstractRelationalConverter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"getConversionService","parameterTypes":[] }, {"name":"getConversions","parameterTypes":[] }, {"name":"getEntityInstantiators","parameterTypes":[] }, {"name":"getMappingContext","parameterTypes":[] }]
},
{
  "name":"org.springframework.data.relational.core.conversion.AggregateChange"
},
{
  "name":"org.springframework.data.relational.core.conversion.BatchingAggregateChange"
},
{
  "name":"org.springframework.data.relational.core.conversion.DeleteAggregateChange"
},
{
  "name":"org.springframework.data.relational.core.conversion.IdValueSource"
},
{
  "name":"org.springframework.data.relational.core.conversion.MappingRelationalConverter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"getEnvironment","parameterTypes":[] }, {"name":"getPropertyAccessor","parameterTypes":["org.springframework.data.mapping.PersistentEntity","java.lang.Object"] }, {"name":"introspectProjection","parameterTypes":["java.lang.Class","java.lang.Class"] }, {"name":"project","parameterTypes":["org.springframework.data.projection.EntityProjection","org.springframework.data.relational.domain.RowDocument"] }, {"name":"read","parameterTypes":["java.lang.Class","org.springframework.data.relational.domain.RowDocument"] }, {"name":"setApplicationContext","parameterTypes":["org.springframework.context.ApplicationContext"] }]
},
{
  "name":"org.springframework.data.relational.core.conversion.MappingRelationalConverter$ConversionContext"
},
{
  "name":"org.springframework.data.relational.core.conversion.MappingRelationalConverter$ProjectingConversionContext"
},
{
  "name":"org.springframework.data.relational.core.conversion.MappingRelationalConverter$RelationalPropertyValueProvider"
},
{
  "name":"org.springframework.data.relational.core.conversion.MutableAggregateChange"
},
{
  "name":"org.springframework.data.relational.core.conversion.ObjectPath"
},
{
  "name":"org.springframework.data.relational.core.conversion.RelationalConverter",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.data.relational.core.conversion.RootAggregateChange"
},
{
  "name":"org.springframework.data.relational.core.conversion.RowDocumentAccessor"
},
{
  "name":"org.springframework.data.relational.core.dialect.AbstractDialect",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"getSelectContext","parameterTypes":[] }]
},
{
  "name":"org.springframework.data.relational.core.dialect.Dialect",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"<init>","parameterTypes":["org.springframework.data.jdbc.core.dialect.JdbcPostgresDialect"] }, {"name":"from","parameterTypes":["org.springframework.data.jdbc.core.dialect.JdbcPostgresDialect"] }, {"name":"getIdGeneration","parameterTypes":[] }, {"name":"getInsertRenderContext","parameterTypes":[] }, {"name":"getLikeEscaper","parameterTypes":[] }, {"name":"of","parameterTypes":["org.springframework.data.jdbc.core.dialect.JdbcPostgresDialect"] }, {"name":"orderByNullHandling","parameterTypes":[] }, {"name":"supportsSingleQueryLoading","parameterTypes":[] }, {"name":"valueOf","parameterTypes":["org.springframework.data.jdbc.core.dialect.JdbcPostgresDialect"] }]
},
{
  "name":"org.springframework.data.relational.core.dialect.Escaper"
},
{
  "name":"org.springframework.data.relational.core.dialect.IdGeneration"
},
{
  "name":"org.springframework.data.relational.core.dialect.InsertRenderContext"
},
{
  "name":"org.springframework.data.relational.core.dialect.LimitClause"
},
{
  "name":"org.springframework.data.relational.core.dialect.LockClause"
},
{
  "name":"org.springframework.data.relational.core.dialect.OrderByNullPrecedence"
},
{
  "name":"org.springframework.data.relational.core.dialect.PostgresDialect",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"getConverters","parameterTypes":[] }, {"name":"getExistsFunction","parameterTypes":[] }, {"name":"getIdentifierProcessing","parameterTypes":[] }, {"name":"limit","parameterTypes":[] }, {"name":"lock","parameterTypes":[] }]
},
{
  "name":"org.springframework.data.relational.core.mapping.AggregatePath"
},
{
  "name":"org.springframework.data.relational.core.mapping.BasicRelationalPersistentProperty"
},
{
  "name":"org.springframework.data.relational.core.mapping.NamingStrategy"
},
{
  "name":"org.springframework.data.relational.core.mapping.RelationalMappingContext",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":["org.springframework.data.jdbc.core.mapping.JdbcMappingContext"] }, {"name":"createPersistentProperty","parameterTypes":["org.springframework.data.mapping.model.Property","org.springframework.data.mapping.model.MutablePersistentEntity","org.springframework.data.mapping.model.SimpleTypeHolder"] }, {"name":"from","parameterTypes":["org.springframework.data.jdbc.core.mapping.JdbcMappingContext"] }, {"name":"getAggregatePath","parameterTypes":["org.springframework.data.mapping.PersistentPropertyPath"] }, {"name":"getAggregatePath","parameterTypes":["org.springframework.data.relational.core.mapping.RelationalPersistentEntity"] }, {"name":"getNamingStrategy","parameterTypes":[] }, {"name":"getPersistentEntity","parameterTypes":["org.springframework.data.mapping.PersistentProperty"] }, {"name":"getPersistentEntity","parameterTypes":["org.springframework.data.relational.core.mapping.RelationalPersistentProperty"] }, {"name":"isForceQuote","parameterTypes":[] }, {"name":"isSingleQueryLoadingEnabled","parameterTypes":[] }, {"name":"of","parameterTypes":["org.springframework.data.jdbc.core.mapping.JdbcMappingContext"] }, {"name":"setApplicationContext","parameterTypes":["org.springframework.context.ApplicationContext"] }, {"name":"setForceQuote","parameterTypes":["boolean"] }, {"name":"setSingleQueryLoadingEnabled","parameterTypes":["boolean"] }, {"name":"setSqlIdentifierSanitizer","parameterTypes":["org.springframework.data.relational.core.mapping.SqlIdentifierSanitizer"] }, {"name":"valueOf","parameterTypes":["org.springframework.data.jdbc.core.mapping.JdbcMappingContext"] }]
},
{
  "name":"org.springframework.data.relational.core.mapping.RelationalPersistentEntity"
},
{
  "name":"org.springframework.data.relational.core.mapping.RelationalPersistentProperty"
},
{
  "name":"org.springframework.data.relational.core.mapping.SqlIdentifierSanitizer"
},
{
  "name":"org.springframework.data.relational.core.mapping.Table",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.data.relational.core.mapping.event.BeforeConvertCallback",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.data.relational.core.query.Query"
},
{
  "name":"org.springframework.data.relational.core.sql.IdentifierProcessing"
},
{
  "name":"org.springframework.data.relational.core.sql.LockMode"
},
{
  "name":"org.springframework.data.relational.core.sql.Select"
},
{
  "name":"org.springframework.data.relational.core.sql.SimpleFunction"
},
{
  "name":"org.springframework.data.relational.core.sql.SqlIdentifier"
},
{
  "name":"org.springframework.data.relational.core.sql.render.SelectRenderContext"
},
{
  "name":"org.springframework.data.relational.domain.RowDocument"
},
{
  "name":"org.springframework.data.repository.CrudRepository",
  "allDeclaredFields":true,
  "allDeclaredClasses":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"count","parameterTypes":[] }, {"name":"delete","parameterTypes":["java.lang.Object"] }, {"name":"deleteAll","parameterTypes":[] }, {"name":"deleteAll","parameterTypes":["java.lang.Iterable"] }, {"name":"deleteAllById","parameterTypes":["java.lang.Iterable"] }, {"name":"deleteById","parameterTypes":["java.lang.Object"] }, {"name":"existsById","parameterTypes":["java.lang.Object"] }, {"name":"findAll","parameterTypes":[] }, {"name":"findAll","parameterTypes":["org.springframework.data.domain.Example","org.springframework.data.domain.Sort"] }, {"name":"findAll","parameterTypes":["org.springframework.data.domain.Sort"] }, {"name":"findAllById","parameterTypes":["java.lang.Iterable"] }, {"name":"findById","parameterTypes":["java.lang.Object"] }, {"name":"save","parameterTypes":["java.lang.Object"] }, {"name":"saveAll","parameterTypes":["java.lang.Iterable"] }]
},
{
  "name":"org.springframework.data.repository.ListCrudRepository",
  "allDeclaredFields":true,
  "allDeclaredClasses":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"findAll","parameterTypes":[] }, {"name":"findAllById","parameterTypes":["java.lang.Iterable"] }, {"name":"saveAll","parameterTypes":["java.lang.Iterable"] }]
},
{
  "name":"org.springframework.data.repository.NoRepositoryBean",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.data.repository.PagingAndSortingRepository",
  "allDeclaredFields":true,
  "allDeclaredClasses":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"findAll","parameterTypes":["org.springframework.data.domain.Example","org.springframework.data.domain.Sort"] }, {"name":"findAll","parameterTypes":["org.springframework.data.domain.Pageable"] }, {"name":"findAll","parameterTypes":["org.springframework.data.domain.Sort"] }]
},
{
  "name":"org.springframework.data.repository.Repository",
  "allDeclaredFields":true,
  "allDeclaredClasses":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"findAll","parameterTypes":["org.springframework.data.domain.Example","org.springframework.data.domain.Sort"] }, {"name":"findAll","parameterTypes":["org.springframework.data.domain.Sort"] }]
},
{
  "name":"org.springframework.data.repository.config.PropertiesBasedNamedQueriesFactoryBean",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"afterPropertiesSet","parameterTypes":[] }, {"name":"getObject","parameterTypes":[] }, {"name":"getObjectType","parameterTypes":[] }, {"name":"isSingleton","parameterTypes":[] }]
},
{
  "name":"org.springframework.data.repository.core.EntityInformation"
},
{
  "name":"org.springframework.data.repository.core.NamedQueries",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"<init>","parameterTypes":["org.springframework.data.repository.core.support.PropertiesBasedNamedQueries"] }, {"name":"from","parameterTypes":["org.springframework.data.repository.core.support.PropertiesBasedNamedQueries"] }, {"name":"of","parameterTypes":["org.springframework.data.repository.core.support.PropertiesBasedNamedQueries"] }, {"name":"valueOf","parameterTypes":["org.springframework.data.repository.core.support.PropertiesBasedNamedQueries"] }]
},
{
  "name":"org.springframework.data.repository.core.RepositoryInformation"
},
{
  "name":"org.springframework.data.repository.core.support.MethodLookup"
},
{
  "name":"org.springframework.data.repository.core.support.MethodLookup$InvokedMethod"
},
{
  "name":"org.springframework.data.repository.core.support.MethodLookup$MethodPredicate"
},
{
  "name":"org.springframework.data.repository.core.support.PropertiesBasedNamedQueries",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"getQuery","parameterTypes":["java.lang.String"] }, {"name":"hasQuery","parameterTypes":["java.lang.String"] }, {"name":"toNamedQueries","parameterTypes":[] }]
},
{
  "name":"org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"equals","parameterTypes":["java.lang.Object"] }, {"name":"hashCode","parameterTypes":[] }, {"name":"iterator","parameterTypes":[] }, {"name":"toString","parameterTypes":[] }]
},
{
  "name":"org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"addRepositoryFactoryCustomizer","parameterTypes":["org.springframework.data.repository.core.support.RepositoryFactoryCustomizer"] }, {"name":"getEntityInformation","parameterTypes":[] }, {"name":"getObject","parameterTypes":[] }, {"name":"getObjectType","parameterTypes":[] }, {"name":"getPersistentEntity","parameterTypes":[] }, {"name":"getQueryMethods","parameterTypes":[] }, {"name":"getRepositoryInformation","parameterTypes":[] }, {"name":"isSingleton","parameterTypes":[] }, {"name":"setApplicationEventPublisher","parameterTypes":["org.springframework.context.ApplicationEventPublisher"] }, {"name":"setBeanClassLoader","parameterTypes":["java.lang.ClassLoader"] }, {"name":"setBeanFactory","parameterTypes":["org.springframework.beans.factory.BeanFactory"] }, {"name":"setCustomImplementation","parameterTypes":["java.lang.Object"] }, {"name":"setEnvironment","parameterTypes":["org.springframework.core.env.Environment"] }, {"name":"setEvaluationContextProvider","parameterTypes":["org.springframework.data.repository.query.QueryMethodEvaluationContextProvider"] }, {"name":"setEvaluationContextProvider","parameterTypes":["org.springframework.data.spel.EvaluationContextProvider"] }, {"name":"setExposeMetadata","parameterTypes":["boolean"] }, {"name":"setLazyInit","parameterTypes":["boolean"] }, {"name":"setNamedQueries","parameterTypes":["org.springframework.data.repository.core.NamedQueries"] }, {"name":"setQueryLookupStrategyKey","parameterTypes":["org.springframework.data.repository.query.QueryLookupStrategy$Key"] }, {"name":"setRepositoryBaseClass","parameterTypes":["java.lang.Class"] }, {"name":"setRepositoryFragments","parameterTypes":["org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments"] }]
},
{
  "name":"org.springframework.data.repository.core.support.RepositoryFactoryCustomizer"
},
{
  "name":"org.springframework.data.repository.core.support.RepositoryFactoryInformation",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.data.repository.core.support.RepositoryFactorySupport"
},
{
  "name":"org.springframework.data.repository.core.support.RepositoryFragment",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"hasMethod","parameterTypes":["java.lang.reflect.Method"] }, {"name":"methods","parameterTypes":[] }]
},
{
  "name":"org.springframework.data.repository.core.support.RepositoryFragment$ImplementedRepositoryFragment",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"equals","parameterTypes":["java.lang.Object"] }, {"name":"getImplementation","parameterTypes":[] }, {"name":"getSignatureContributor","parameterTypes":[] }, {"name":"hashCode","parameterTypes":[] }, {"name":"toString","parameterTypes":[] }, {"name":"withImplementation","parameterTypes":["java.lang.Object"] }]
},
{
  "name":"org.springframework.data.repository.core.support.RepositoryFragmentsFactoryBean",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":["java.util.List"] }, {"name":"afterPropertiesSet","parameterTypes":[] }, {"name":"getObject","parameterTypes":[] }, {"name":"getObjectType","parameterTypes":[] }, {"name":"setBeanFactory","parameterTypes":["org.springframework.beans.factory.BeanFactory"] }]
},
{
  "name":"org.springframework.data.repository.core.support.RepositoryInvocationMulticaster"
},
{
  "name":"org.springframework.data.repository.core.support.RepositoryMethodInvocationListener",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.data.repository.core.support.RepositoryMethodInvocationListener$RepositoryMethodInvocation"
},
{
  "name":"org.springframework.data.repository.core.support.TransactionalRepositoryFactoryBeanSupport",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"setEnableDefaultTransactions","parameterTypes":["boolean"] }, {"name":"setTransactionManager","parameterTypes":["java.lang.String"] }]
},
{
  "name":"org.springframework.data.repository.query.QueryByExampleExecutor",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"findAll","parameterTypes":["org.springframework.data.domain.Example","org.springframework.data.domain.Sort"] }]
},
{
  "name":"org.springframework.data.repository.query.QueryLookupStrategy$Key",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.data.repository.query.QueryMethodEvaluationContextProvider"
},
{
  "name":"org.springframework.data.repository.query.ReactiveQueryByExampleExecutor"
},
{
  "name":"org.springframework.data.spel.EvaluationContextProvider"
},
{
  "name":"org.springframework.data.util.CustomCollections$EclipseCollections",
  "queryAllDeclaredConstructors":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.data.util.CustomCollections$VavrCollections",
  "queryAllDeclaredConstructors":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.data.util.CustomCollections.EclipseCollections"
},
{
  "name":"org.springframework.data.util.CustomCollections.VavrCollections"
},
{
  "name":"org.springframework.data.util.KotlinBeanInfoFactory",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.data.util.Streamable",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"and","parameterTypes":["java.lang.Iterable"] }, {"name":"and","parameterTypes":["java.util.function.Supplier"] }, {"name":"and","parameterTypes":["org.springframework.data.util.Streamable"] }, {"name":"and","parameterTypes":["java.lang.Object[]"] }, {"name":"filter","parameterTypes":["java.util.function.Predicate"] }, {"name":"flatMap","parameterTypes":["java.util.function.Function"] }, {"name":"get","parameterTypes":[] }, {"name":"isEmpty","parameterTypes":[] }, {"name":"map","parameterTypes":["java.util.function.Function"] }, {"name":"stream","parameterTypes":[] }, {"name":"toList","parameterTypes":[] }, {"name":"toSet","parameterTypes":[] }]
},
{
  "name":"org.springframework.data.util.TypeInformation"
},
{
  "name":"org.springframework.data.web.OffsetScrollPositionArgumentResolver",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.data.web.OffsetScrollPositionHandlerMethodArgumentResolver",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"resolveArgument","parameterTypes":["org.springframework.core.MethodParameter","org.springframework.web.method.support.ModelAndViewContainer","org.springframework.web.context.request.NativeWebRequest","org.springframework.web.bind.support.WebDataBinderFactory"] }, {"name":"supportsParameter","parameterTypes":["org.springframework.core.MethodParameter"] }]
},
{
  "name":"org.springframework.data.web.OffsetScrollPositionHandlerMethodArgumentResolverSupport",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"setOffsetParameter","parameterTypes":["java.lang.String"] }, {"name":"setQualifierDelimiter","parameterTypes":["java.lang.String"] }]
},
{
  "name":"org.springframework.data.web.PageableArgumentResolver",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.data.web.PageableDefault"
},
{
  "name":"org.springframework.data.web.PageableHandlerMethodArgumentResolver",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"resolveArgument","parameterTypes":["org.springframework.core.MethodParameter","org.springframework.web.method.support.ModelAndViewContainer","org.springframework.web.context.request.NativeWebRequest","org.springframework.web.bind.support.WebDataBinderFactory"] }, {"name":"supportsParameter","parameterTypes":["org.springframework.core.MethodParameter"] }]
},
{
  "name":"org.springframework.data.web.PageableHandlerMethodArgumentResolverSupport",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"isFallbackPageable","parameterTypes":["org.springframework.data.domain.Pageable"] }, {"name":"setFallbackPageable","parameterTypes":["org.springframework.data.domain.Pageable"] }, {"name":"setMaxPageSize","parameterTypes":["int"] }, {"name":"setOneIndexedParameters","parameterTypes":["boolean"] }, {"name":"setPageParameterName","parameterTypes":["java.lang.String"] }, {"name":"setPrefix","parameterTypes":["java.lang.String"] }, {"name":"setQualifierDelimiter","parameterTypes":["java.lang.String"] }, {"name":"setSizeParameterName","parameterTypes":["java.lang.String"] }]
},
{
  "name":"org.springframework.data.web.SortArgumentResolver",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.data.web.SortDefault"
},
{
  "name":"org.springframework.data.web.SortHandlerMethodArgumentResolver",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"resolveArgument","parameterTypes":["org.springframework.core.MethodParameter","org.springframework.web.method.support.ModelAndViewContainer","org.springframework.web.context.request.NativeWebRequest","org.springframework.web.bind.support.WebDataBinderFactory"] }, {"name":"supportsParameter","parameterTypes":["org.springframework.core.MethodParameter"] }]
},
{
  "name":"org.springframework.data.web.SortHandlerMethodArgumentResolverSupport",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"getPropertyDelimiter","parameterTypes":[] }, {"name":"setFallbackSort","parameterTypes":["org.springframework.data.domain.Sort"] }, {"name":"setPropertyDelimiter","parameterTypes":["java.lang.String"] }, {"name":"setQualifierDelimiter","parameterTypes":["java.lang.String"] }, {"name":"setSortParameter","parameterTypes":["java.lang.String"] }]
},
{
  "name":"org.springframework.data.web.config.EnableSpringDataWebSupport",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.data.web.config.EnableSpringDataWebSupport$PageSerializationMode",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.data.web.config.OffsetScrollPositionHandlerMethodArgumentResolverCustomizer"
},
{
  "name":"org.springframework.data.web.config.PageableHandlerMethodArgumentResolverCustomizer"
},
{
  "name":"org.springframework.data.web.config.ProjectingArgumentResolverRegistrar",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.data.web.config.ProjectingArgumentResolverRegistrar$ProjectingArgumentResolverBeanPostProcessor",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"postProcessAfterInitialization","parameterTypes":["java.lang.Object","java.lang.String"] }, {"name":"postProcessBeforeInitialization","parameterTypes":["java.lang.Object","java.lang.String"] }, {"name":"setBeanClassLoader","parameterTypes":["java.lang.ClassLoader"] }, {"name":"setBeanFactory","parameterTypes":["org.springframework.beans.factory.BeanFactory"] }]
},
{
  "name":"org.springframework.data.web.config.SortHandlerMethodArgumentResolverCustomizer"
},
{
  "name":"org.springframework.data.web.config.SpringDataJacksonConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.data.web.config.SpringDataJacksonConfiguration$PageModule",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.data.web.config.SpringDataJacksonModules",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.data.web.config.SpringDataWebConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":["org.springframework.context.ApplicationContext","org.springframework.beans.factory.ObjectFactory"] }, {"name":"addArgumentResolvers","parameterTypes":["java.util.List"] }, {"name":"addFormatters","parameterTypes":["org.springframework.format.FormatterRegistry"] }, {"name":"extendMessageConverters","parameterTypes":["java.util.List"] }, {"name":"setBeanClassLoader","parameterTypes":["java.lang.ClassLoader"] }]
},
{
  "name":"org.springframework.data.web.config.SpringDataWebSettings",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":["org.springframework.data.web.config.EnableSpringDataWebSupport$PageSerializationMode"] }, {"name":"equals","parameterTypes":["java.lang.Object"] }, {"name":"hashCode","parameterTypes":[] }, {"name":"toString","parameterTypes":[] }]
},
{
  "name":"org.springframework.expression.EvaluationContext"
},
{
  "name":"org.springframework.format.AnnotationFormatterFactory"
},
{
  "name":"org.springframework.format.Formatter"
},
{
  "name":"org.springframework.format.FormatterRegistry",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.format.Parser"
},
{
  "name":"org.springframework.format.Printer"
},
{
  "name":"org.springframework.format.support.DefaultFormattingConversionService",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.format.support.FormattingConversionService",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"addFormatter","parameterTypes":["org.springframework.format.Formatter"] }, {"name":"addFormatterForFieldAnnotation","parameterTypes":["org.springframework.format.AnnotationFormatterFactory"] }, {"name":"addFormatterForFieldType","parameterTypes":["java.lang.Class","org.springframework.format.Formatter"] }, {"name":"addFormatterForFieldType","parameterTypes":["java.lang.Class","org.springframework.format.Printer","org.springframework.format.Parser"] }, {"name":"addParser","parameterTypes":["org.springframework.format.Parser"] }, {"name":"addPrinter","parameterTypes":["org.springframework.format.Printer"] }, {"name":"setEmbeddedValueResolver","parameterTypes":["org.springframework.util.StringValueResolver"] }]
},
{
  "name":"org.springframework.hateoas.server.mvc.TypeConstrainedMappingJackson2HttpMessageConverter"
},
{
  "name":"org.springframework.http.CacheControl"
},
{
  "name":"org.springframework.http.HttpHeaders"
},
{
  "name":"org.springframework.http.HttpInputMessage"
},
{
  "name":"org.springframework.http.HttpMethod"
},
{
  "name":"org.springframework.http.HttpOutputMessage"
},
{
  "name":"org.springframework.http.HttpRequest"
},
{
  "name":"org.springframework.http.HttpStatus"
},
{
  "name":"org.springframework.http.MediaType"
},
{
  "name":"org.springframework.http.ResponseEntity"
},
{
  "name":"org.springframework.http.client.ClientHttpRequestFactory"
},
{
  "name":"org.springframework.http.client.ClientHttpRequestInitializer"
},
{
  "name":"org.springframework.http.client.ClientHttpRequestInterceptor"
},
{
  "name":"org.springframework.http.client.ClientHttpResponse"
},
{
  "name":"org.springframework.http.client.JdkClientHttpRequestFactory"
},
{
  "name":"org.springframework.http.client.observation.ClientRequestObservationConvention"
},
{
  "name":"org.springframework.http.client.reactive.ClientHttpConnector",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.http.client.reactive.ClientHttpResponse"
},
{
  "name":"org.springframework.http.client.reactive.JdkClientHttpConnector",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"connect","parameterTypes":["org.springframework.http.HttpMethod","java.net.URI","java.util.function.Function"] }]
},
{
  "name":"org.springframework.http.client.reactive.JdkClientHttpRequest"
},
{
  "name":"org.springframework.http.codec.ClientCodecConfigurer"
},
{
  "name":"org.springframework.http.codec.CodecConfigurer"
},
{
  "name":"org.springframework.http.codec.ServerCodecConfigurer"
},
{
  "name":"org.springframework.http.codec.support.DefaultClientCodecConfigurer",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.http.codec.support.DefaultServerCodecConfigurer"
},
{
  "name":"org.springframework.http.converter.AbstractGenericHttpMessageConverter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"canWrite","parameterTypes":["java.lang.reflect.Type","java.lang.Class","org.springframework.http.MediaType"] }, {"name":"write","parameterTypes":["java.lang.Object","java.lang.reflect.Type","org.springframework.http.MediaType","org.springframework.http.HttpOutputMessage"] }]
},
{
  "name":"org.springframework.http.converter.AbstractHttpMessageConverter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"addDefaultHeaders","parameterTypes":["org.springframework.http.HttpHeaders","java.lang.Object","org.springframework.http.MediaType"] }, {"name":"canRead","parameterTypes":["java.lang.Class","org.springframework.http.MediaType"] }, {"name":"canWrite","parameterTypes":["java.lang.Class","org.springframework.http.MediaType"] }, {"name":"getContentLength","parameterTypes":["java.lang.Object","org.springframework.http.MediaType"] }, {"name":"getDefaultCharset","parameterTypes":[] }, {"name":"getSupportedMediaTypes","parameterTypes":[] }, {"name":"read","parameterTypes":["java.lang.Class","org.springframework.http.HttpInputMessage"] }, {"name":"setDefaultCharset","parameterTypes":["java.nio.charset.Charset"] }, {"name":"setSupportedMediaTypes","parameterTypes":["java.util.List"] }, {"name":"supportsRepeatableWrites","parameterTypes":["java.lang.Object"] }, {"name":"write","parameterTypes":["java.lang.Object","org.springframework.http.MediaType","org.springframework.http.HttpOutputMessage"] }, {"name":"writeInternal","parameterTypes":["java.lang.Object","org.springframework.http.HttpOutputMessage"] }]
},
{
  "name":"org.springframework.http.converter.FormHttpMessageConverter"
},
{
  "name":"org.springframework.http.converter.GenericHttpMessageConverter",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.http.converter.HttpMessageConverter",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"getSupportedMediaTypes","parameterTypes":["java.lang.Class"] }]
},
{
  "name":"org.springframework.http.converter.HttpMessageNotReadableException"
},
{
  "name":"org.springframework.http.converter.HttpMessageNotWritableException"
},
{
  "name":"org.springframework.http.converter.StringHttpMessageConverter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.http.converter.json.AbstractJackson2HttpMessageConverter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"canRead","parameterTypes":["java.lang.Class","org.springframework.http.MediaType"] }, {"name":"canRead","parameterTypes":["java.lang.reflect.Type","java.lang.Class","org.springframework.http.MediaType"] }, {"name":"canWrite","parameterTypes":["java.lang.Class","org.springframework.http.MediaType"] }, {"name":"getObjectMapper","parameterTypes":[] }, {"name":"getObjectMappersForType","parameterTypes":["java.lang.Class"] }, {"name":"getSupportedMediaTypes","parameterTypes":["java.lang.Class"] }, {"name":"read","parameterTypes":["java.lang.reflect.Type","java.lang.Class","org.springframework.http.HttpInputMessage"] }, {"name":"registerObjectMappersForType","parameterTypes":["java.lang.Class","java.util.function.Consumer"] }, {"name":"setObjectMapper","parameterTypes":["com.fasterxml.jackson.databind.ObjectMapper"] }, {"name":"setPrettyPrint","parameterTypes":["boolean"] }, {"name":"setSupportedMediaTypes","parameterTypes":["java.util.List"] }]
},
{
  "name":"org.springframework.http.converter.json.GsonHttpMessageConverter"
},
{
  "name":"org.springframework.http.converter.json.Jackson2ObjectMapperBuilder",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.http.converter.json.MappingJackson2HttpMessageConverter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.http.converter.support.AllEncompassingFormHttpMessageConverter"
},
{
  "name":"org.springframework.http.server.PathContainer"
},
{
  "name":"org.springframework.http.server.PathContainer$Options"
},
{
  "name":"org.springframework.http.server.RequestPath"
},
{
  "name":"org.springframework.http.server.observation.ServerRequestObservationContext"
},
{
  "name":"org.springframework.http.server.observation.ServerRequestObservationConvention"
},
{
  "name":"org.springframework.jdbc.SQLWarningException"
},
{
  "name":"org.springframework.jdbc.core.BatchPreparedStatementSetter"
},
{
  "name":"org.springframework.jdbc.core.CallableStatementCallback"
},
{
  "name":"org.springframework.jdbc.core.CallableStatementCreator"
},
{
  "name":"org.springframework.jdbc.core.ConnectionCallback"
},
{
  "name":"org.springframework.jdbc.core.JdbcOperations",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.jdbc.core.JdbcTemplate",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"batchUpdate","parameterTypes":["java.lang.String","java.util.Collection","int","org.springframework.jdbc.core.ParameterizedPreparedStatementSetter"] }, {"name":"batchUpdate","parameterTypes":["java.lang.String","java.util.List"] }, {"name":"batchUpdate","parameterTypes":["java.lang.String","java.util.List","int[]"] }, {"name":"batchUpdate","parameterTypes":["java.lang.String","org.springframework.jdbc.core.BatchPreparedStatementSetter"] }, {"name":"batchUpdate","parameterTypes":["org.springframework.jdbc.core.PreparedStatementCreator","org.springframework.jdbc.core.BatchPreparedStatementSetter","org.springframework.jdbc.support.KeyHolder"] }, {"name":"batchUpdate","parameterTypes":["java.lang.String[]"] }, {"name":"call","parameterTypes":["org.springframework.jdbc.core.CallableStatementCreator","java.util.List"] }, {"name":"execute","parameterTypes":["java.lang.String"] }, {"name":"execute","parameterTypes":["java.lang.String","org.springframework.jdbc.core.CallableStatementCallback"] }, {"name":"execute","parameterTypes":["java.lang.String","org.springframework.jdbc.core.PreparedStatementCallback"] }, {"name":"execute","parameterTypes":["org.springframework.jdbc.core.CallableStatementCreator","org.springframework.jdbc.core.CallableStatementCallback"] }, {"name":"execute","parameterTypes":["org.springframework.jdbc.core.ConnectionCallback"] }, {"name":"execute","parameterTypes":["org.springframework.jdbc.core.PreparedStatementCreator","org.springframework.jdbc.core.PreparedStatementCallback"] }, {"name":"execute","parameterTypes":["org.springframework.jdbc.core.StatementCallback"] }, {"name":"query","parameterTypes":["java.lang.String","org.springframework.jdbc.core.PreparedStatementSetter","org.springframework.jdbc.core.ResultSetExtractor"] }, {"name":"query","parameterTypes":["java.lang.String","org.springframework.jdbc.core.PreparedStatementSetter","org.springframework.jdbc.core.RowCallbackHandler"] }, {"name":"query","parameterTypes":["java.lang.String","org.springframework.jdbc.core.PreparedStatementSetter","org.springframework.jdbc.core.RowMapper"] }, {"name":"query","parameterTypes":["java.lang.String","org.springframework.jdbc.core.ResultSetExtractor"] }, {"name":"query","parameterTypes":["java.lang.String","org.springframework.jdbc.core.ResultSetExtractor","java.lang.Object[]"] }, {"name":"query","parameterTypes":["java.lang.String","org.springframework.jdbc.core.RowCallbackHandler"] }, {"name":"query","parameterTypes":["java.lang.String","org.springframework.jdbc.core.RowCallbackHandler","java.lang.Object[]"] }, {"name":"query","parameterTypes":["java.lang.String","org.springframework.jdbc.core.RowMapper"] }, {"name":"query","parameterTypes":["java.lang.String","org.springframework.jdbc.core.RowMapper","java.lang.Object[]"] }, {"name":"query","parameterTypes":["java.lang.String","java.lang.Object[]","org.springframework.jdbc.core.ResultSetExtractor"] }, {"name":"query","parameterTypes":["java.lang.String","java.lang.Object[]","org.springframework.jdbc.core.RowCallbackHandler"] }, {"name":"query","parameterTypes":["java.lang.String","java.lang.Object[]","org.springframework.jdbc.core.RowMapper"] }, {"name":"query","parameterTypes":["java.lang.String","java.lang.Object[]","int[]","org.springframework.jdbc.core.ResultSetExtractor"] }, {"name":"query","parameterTypes":["java.lang.String","java.lang.Object[]","int[]","org.springframework.jdbc.core.RowCallbackHandler"] }, {"name":"query","parameterTypes":["java.lang.String","java.lang.Object[]","int[]","org.springframework.jdbc.core.RowMapper"] }, {"name":"query","parameterTypes":["org.springframework.jdbc.core.PreparedStatementCreator","org.springframework.jdbc.core.ResultSetExtractor"] }, {"name":"query","parameterTypes":["org.springframework.jdbc.core.PreparedStatementCreator","org.springframework.jdbc.core.RowCallbackHandler"] }, {"name":"query","parameterTypes":["org.springframework.jdbc.core.PreparedStatementCreator","org.springframework.jdbc.core.RowMapper"] }, {"name":"queryForList","parameterTypes":["java.lang.String"] }, {"name":"queryForList","parameterTypes":["java.lang.String","java.lang.Class"] }, {"name":"queryForList","parameterTypes":["java.lang.String","java.lang.Class","java.lang.Object[]"] }, {"name":"queryForList","parameterTypes":["java.lang.String","java.lang.Object[]"] }, {"name":"queryForList","parameterTypes":["java.lang.String","java.lang.Object[]","java.lang.Class"] }, {"name":"queryForList","parameterTypes":["java.lang.String","java.lang.Object[]","int[]"] }, {"name":"queryForList","parameterTypes":["java.lang.String","java.lang.Object[]","int[]","java.lang.Class"] }, {"name":"queryForMap","parameterTypes":["java.lang.String"] }, {"name":"queryForMap","parameterTypes":["java.lang.String","java.lang.Object[]"] }, {"name":"queryForMap","parameterTypes":["java.lang.String","java.lang.Object[]","int[]"] }, {"name":"queryForObject","parameterTypes":["java.lang.String","java.lang.Class"] }, {"name":"queryForObject","parameterTypes":["java.lang.String","java.lang.Class","java.lang.Object[]"] }, {"name":"queryForObject","parameterTypes":["java.lang.String","org.springframework.jdbc.core.RowMapper"] }, {"name":"queryForObject","parameterTypes":["java.lang.String","org.springframework.jdbc.core.RowMapper","java.lang.Object[]"] }, {"name":"queryForObject","parameterTypes":["java.lang.String","java.lang.Object[]","java.lang.Class"] }, {"name":"queryForObject","parameterTypes":["java.lang.String","java.lang.Object[]","org.springframework.jdbc.core.RowMapper"] }, {"name":"queryForObject","parameterTypes":["java.lang.String","java.lang.Object[]","int[]","java.lang.Class"] }, {"name":"queryForObject","parameterTypes":["java.lang.String","java.lang.Object[]","int[]","org.springframework.jdbc.core.RowMapper"] }, {"name":"queryForRowSet","parameterTypes":["java.lang.String"] }, {"name":"queryForRowSet","parameterTypes":["java.lang.String","java.lang.Object[]"] }, {"name":"queryForRowSet","parameterTypes":["java.lang.String","java.lang.Object[]","int[]"] }, {"name":"queryForStream","parameterTypes":["java.lang.String","org.springframework.jdbc.core.PreparedStatementSetter","org.springframework.jdbc.core.RowMapper"] }, {"name":"queryForStream","parameterTypes":["java.lang.String","org.springframework.jdbc.core.RowMapper"] }, {"name":"queryForStream","parameterTypes":["java.lang.String","org.springframework.jdbc.core.RowMapper","java.lang.Object[]"] }, {"name":"queryForStream","parameterTypes":["org.springframework.jdbc.core.PreparedStatementCreator","org.springframework.jdbc.core.RowMapper"] }, {"name":"update","parameterTypes":["java.lang.String"] }, {"name":"update","parameterTypes":["java.lang.String","org.springframework.jdbc.core.PreparedStatementSetter"] }, {"name":"update","parameterTypes":["java.lang.String","java.lang.Object[]"] }, {"name":"update","parameterTypes":["java.lang.String","java.lang.Object[]","int[]"] }, {"name":"update","parameterTypes":["org.springframework.jdbc.core.PreparedStatementCreator"] }, {"name":"update","parameterTypes":["org.springframework.jdbc.core.PreparedStatementCreator","org.springframework.jdbc.support.KeyHolder"] }]
},
{
  "name":"org.springframework.jdbc.core.ParameterizedPreparedStatementSetter"
},
{
  "name":"org.springframework.jdbc.core.PreparedStatementCallback"
},
{
  "name":"org.springframework.jdbc.core.PreparedStatementCreator"
},
{
  "name":"org.springframework.jdbc.core.PreparedStatementCreatorFactory"
},
{
  "name":"org.springframework.jdbc.core.PreparedStatementSetter"
},
{
  "name":"org.springframework.jdbc.core.ResultSetExtractor",
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"<init>","parameterTypes":["org.springframework.jdbc.core.RowMapper"] }]
},
{
  "name":"org.springframework.jdbc.core.ResultSetSupportingSqlParameter"
},
{
  "name":"org.springframework.jdbc.core.RowCallbackHandler"
},
{
  "name":"org.springframework.jdbc.core.RowMapper",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.jdbc.core.StatementCallback"
},
{
  "name":"org.springframework.jdbc.core.namedparam.NamedParameterJdbcOperations",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"batchUpdate","parameterTypes":["java.lang.String","java.util.Map[]"] }, {"name":"batchUpdate","parameterTypes":["java.lang.String","org.springframework.jdbc.core.namedparam.SqlParameterSource[]"] }, {"name":"batchUpdate","parameterTypes":["java.lang.String","org.springframework.jdbc.core.namedparam.SqlParameterSource[]","org.springframework.jdbc.support.KeyHolder"] }, {"name":"batchUpdate","parameterTypes":["java.lang.String","org.springframework.jdbc.core.namedparam.SqlParameterSource[]","org.springframework.jdbc.support.KeyHolder","java.lang.String[]"] }, {"name":"execute","parameterTypes":["java.lang.String","java.util.Map","org.springframework.jdbc.core.PreparedStatementCallback"] }, {"name":"execute","parameterTypes":["java.lang.String","org.springframework.jdbc.core.PreparedStatementCallback"] }, {"name":"execute","parameterTypes":["java.lang.String","org.springframework.jdbc.core.namedparam.SqlParameterSource","org.springframework.jdbc.core.PreparedStatementCallback"] }, {"name":"getJdbcOperations","parameterTypes":[] }, {"name":"query","parameterTypes":["java.lang.String","java.util.Map","org.springframework.jdbc.core.ResultSetExtractor"] }, {"name":"query","parameterTypes":["java.lang.String","java.util.Map","org.springframework.jdbc.core.RowCallbackHandler"] }, {"name":"query","parameterTypes":["java.lang.String","java.util.Map","org.springframework.jdbc.core.RowMapper"] }, {"name":"query","parameterTypes":["java.lang.String","org.springframework.jdbc.core.ResultSetExtractor"] }, {"name":"query","parameterTypes":["java.lang.String","org.springframework.jdbc.core.RowCallbackHandler"] }, {"name":"query","parameterTypes":["java.lang.String","org.springframework.jdbc.core.RowMapper"] }, {"name":"query","parameterTypes":["java.lang.String","org.springframework.jdbc.core.namedparam.SqlParameterSource","org.springframework.jdbc.core.ResultSetExtractor"] }, {"name":"query","parameterTypes":["java.lang.String","org.springframework.jdbc.core.namedparam.SqlParameterSource","org.springframework.jdbc.core.RowCallbackHandler"] }, {"name":"query","parameterTypes":["java.lang.String","org.springframework.jdbc.core.namedparam.SqlParameterSource","org.springframework.jdbc.core.RowMapper"] }, {"name":"queryForList","parameterTypes":["java.lang.String","java.util.Map"] }, {"name":"queryForList","parameterTypes":["java.lang.String","java.util.Map","java.lang.Class"] }, {"name":"queryForList","parameterTypes":["java.lang.String","org.springframework.jdbc.core.namedparam.SqlParameterSource"] }, {"name":"queryForList","parameterTypes":["java.lang.String","org.springframework.jdbc.core.namedparam.SqlParameterSource","java.lang.Class"] }, {"name":"queryForMap","parameterTypes":["java.lang.String","java.util.Map"] }, {"name":"queryForMap","parameterTypes":["java.lang.String","org.springframework.jdbc.core.namedparam.SqlParameterSource"] }, {"name":"queryForObject","parameterTypes":["java.lang.String","java.util.Map","java.lang.Class"] }, {"name":"queryForObject","parameterTypes":["java.lang.String","java.util.Map","org.springframework.jdbc.core.RowMapper"] }, {"name":"queryForObject","parameterTypes":["java.lang.String","org.springframework.jdbc.core.namedparam.SqlParameterSource","java.lang.Class"] }, {"name":"queryForObject","parameterTypes":["java.lang.String","org.springframework.jdbc.core.namedparam.SqlParameterSource","org.springframework.jdbc.core.RowMapper"] }, {"name":"queryForRowSet","parameterTypes":["java.lang.String","java.util.Map"] }, {"name":"queryForRowSet","parameterTypes":["java.lang.String","org.springframework.jdbc.core.namedparam.SqlParameterSource"] }, {"name":"queryForStream","parameterTypes":["java.lang.String","java.util.Map","org.springframework.jdbc.core.RowMapper"] }, {"name":"queryForStream","parameterTypes":["java.lang.String","org.springframework.jdbc.core.namedparam.SqlParameterSource","org.springframework.jdbc.core.RowMapper"] }, {"name":"update","parameterTypes":["java.lang.String","java.util.Map"] }, {"name":"update","parameterTypes":["java.lang.String","org.springframework.jdbc.core.namedparam.SqlParameterSource"] }, {"name":"update","parameterTypes":["java.lang.String","org.springframework.jdbc.core.namedparam.SqlParameterSource","org.springframework.jdbc.support.KeyHolder"] }, {"name":"update","parameterTypes":["java.lang.String","org.springframework.jdbc.core.namedparam.SqlParameterSource","org.springframework.jdbc.support.KeyHolder","java.lang.String[]"] }]
},
{
  "name":"org.springframework.jdbc.core.namedparam.ParsedSql"
},
{
  "name":"org.springframework.jdbc.core.namedparam.SqlParameterSource"
},
{
  "name":"org.springframework.jdbc.core.simple.DefaultJdbcClient",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"sql","parameterTypes":["java.lang.String"] }]
},
{
  "name":"org.springframework.jdbc.core.simple.JdbcClient",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.jdbc.core.simple.JdbcClient$StatementSpec"
},
{
  "name":"org.springframework.jdbc.datasource.AbstractDataSource",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"getLogWriter","parameterTypes":[] }, {"name":"getLoginTimeout","parameterTypes":[] }, {"name":"getParentLogger","parameterTypes":[] }, {"name":"setLogWriter","parameterTypes":["java.io.PrintWriter"] }, {"name":"setLoginTimeout","parameterTypes":["int"] }]
},
{
  "name":"org.springframework.jdbc.datasource.DataSourceTransactionManager",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"getDataSource","parameterTypes":[] }, {"name":"getResourceFactory","parameterTypes":[] }, {"name":"isEnforceReadOnly","parameterTypes":[] }, {"name":"setDataSource","parameterTypes":["javax.sql.DataSource"] }, {"name":"setEnforceReadOnly","parameterTypes":["boolean"] }]
},
{
  "name":"org.springframework.jdbc.datasource.DelegatingDataSource"
},
{
  "name":"org.springframework.jdbc.datasource.init.ResourceDatabasePopulator"
},
{
  "name":"org.springframework.jdbc.datasource.lookup.AbstractRoutingDataSource",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"afterPropertiesSet","parameterTypes":[] }, {"name":"createConnectionBuilder","parameterTypes":[] }, {"name":"createShardingKeyBuilder","parameterTypes":[] }, {"name":"getConnection","parameterTypes":[] }, {"name":"getConnection","parameterTypes":["java.lang.String","java.lang.String"] }, {"name":"getResolvedDataSources","parameterTypes":[] }, {"name":"getResolvedDefaultDataSource","parameterTypes":[] }, {"name":"initialize","parameterTypes":[] }, {"name":"isWrapperFor","parameterTypes":["java.lang.Class"] }, {"name":"setDataSourceLookup","parameterTypes":["org.springframework.jdbc.datasource.lookup.DataSourceLookup"] }, {"name":"setDefaultTargetDataSource","parameterTypes":["java.lang.Object"] }, {"name":"setLenientFallback","parameterTypes":["boolean"] }, {"name":"setTargetDataSources","parameterTypes":["java.util.Map"] }, {"name":"unwrap","parameterTypes":["java.lang.Class"] }]
},
{
  "name":"org.springframework.jdbc.datasource.lookup.DataSourceLookup"
},
{
  "name":"org.springframework.jdbc.support.JdbcAccessor",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"afterPropertiesSet","parameterTypes":[] }, {"name":"getDataSource","parameterTypes":[] }, {"name":"getExceptionTranslator","parameterTypes":[] }, {"name":"isLazyInit","parameterTypes":[] }, {"name":"setDataSource","parameterTypes":["javax.sql.DataSource"] }, {"name":"setDatabaseProductName","parameterTypes":["java.lang.String"] }, {"name":"setExceptionTranslator","parameterTypes":["org.springframework.jdbc.support.SQLExceptionTranslator"] }, {"name":"setLazyInit","parameterTypes":["boolean"] }]
},
{
  "name":"org.springframework.jdbc.support.JdbcTransactionManager",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"afterPropertiesSet","parameterTypes":[] }, {"name":"getExceptionTranslator","parameterTypes":[] }, {"name":"isLazyInit","parameterTypes":[] }, {"name":"setDatabaseProductName","parameterTypes":["java.lang.String"] }, {"name":"setExceptionTranslator","parameterTypes":["org.springframework.jdbc.support.SQLExceptionTranslator"] }, {"name":"setLazyInit","parameterTypes":["boolean"] }]
},
{
  "name":"org.springframework.jdbc.support.KeyHolder"
},
{
  "name":"org.springframework.jdbc.support.SQLExceptionTranslator"
},
{
  "name":"org.springframework.jdbc.support.rowset.SqlRowSet"
},
{
  "name":"org.springframework.jmx.export.annotation.ManagedAttribute",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.jmx.export.annotation.ManagedOperation",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.jmx.export.annotation.ManagedResource",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.kafka.annotation.EnableKafka",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.kafka.annotation.KafkaListener",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.kafka.annotation.KafkaListenerAnnotationBeanPostProcessor",
  "allDeclaredClasses":true
},
{
  "name":"org.springframework.kafka.annotation.KafkaListenerAnnotationBeanPostProcessor$AnnotationEnhancer",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.kafka.annotation.PartitionOffset",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.kafka.annotation.RetryableTopic",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.kafka.annotation.TopicPartition",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.kafka.config.AbstractKafkaListenerContainerFactory",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"createContainer","parameterTypes":["java.util.regex.Pattern"] }, {"name":"createContainer","parameterTypes":["java.lang.String[]"] }, {"name":"createContainer","parameterTypes":["org.springframework.kafka.support.TopicPartitionOffset[]"] }, {"name":"createListenerContainer","parameterTypes":["org.springframework.kafka.config.KafkaListenerEndpoint"] }, {"name":"getConsumerFactory","parameterTypes":[] }, {"name":"getContainerProperties","parameterTypes":[] }, {"name":"initializeContainer","parameterTypes":["org.springframework.kafka.listener.AbstractMessageListenerContainer","org.springframework.kafka.config.KafkaListenerEndpoint"] }, {"name":"isBatchListener","parameterTypes":[] }, {"name":"setAckDiscarded","parameterTypes":["java.lang.Boolean"] }, {"name":"setAfterRollbackProcessor","parameterTypes":["org.springframework.kafka.listener.AfterRollbackProcessor"] }, {"name":"setApplicationContext","parameterTypes":["org.springframework.context.ApplicationContext"] }, {"name":"setApplicationEventPublisher","parameterTypes":["org.springframework.context.ApplicationEventPublisher"] }, {"name":"setAutoStartup","parameterTypes":["java.lang.Boolean"] }, {"name":"setBatchInterceptor","parameterTypes":["org.springframework.kafka.listener.BatchInterceptor"] }, {"name":"setBatchListener","parameterTypes":["java.lang.Boolean"] }, {"name":"setBatchMessageConverter","parameterTypes":["org.springframework.kafka.support.converter.BatchMessageConverter"] }, {"name":"setBatchToRecordAdapter","parameterTypes":["org.springframework.kafka.listener.adapter.BatchToRecordAdapter"] }, {"name":"setChangeConsumerThreadName","parameterTypes":["boolean"] }, {"name":"setCommonErrorHandler","parameterTypes":["org.springframework.kafka.listener.CommonErrorHandler"] }, {"name":"setConsumerFactory","parameterTypes":["org.springframework.kafka.core.ConsumerFactory"] }, {"name":"setContainerCustomizer","parameterTypes":["org.springframework.kafka.config.ContainerCustomizer"] }, {"name":"setCorrelationHeaderName","parameterTypes":["java.lang.String"] }, {"name":"setMissingTopicsFatal","parameterTypes":["boolean"] }, {"name":"setPhase","parameterTypes":["int"] }, {"name":"setRecordFilterStrategy","parameterTypes":["org.springframework.kafka.listener.adapter.RecordFilterStrategy"] }, {"name":"setRecordInterceptor","parameterTypes":["org.springframework.kafka.listener.RecordInterceptor"] }, {"name":"setRecordMessageConverter","parameterTypes":["org.springframework.kafka.support.converter.RecordMessageConverter"] }, {"name":"setReplyHeadersConfigurer","parameterTypes":["org.springframework.kafka.listener.adapter.ReplyHeadersConfigurer"] }, {"name":"setReplyTemplate","parameterTypes":["org.springframework.kafka.core.KafkaTemplate"] }, {"name":"setThreadNameSupplier","parameterTypes":["java.util.function.Function"] }]
},
{
  "name":"org.springframework.kafka.config.AbstractKafkaListenerEndpoint"
},
{
  "name":"org.springframework.kafka.config.ConcurrentKafkaListenerContainerFactory",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.kafka.config.ContainerCustomizer"
},
{
  "name":"org.springframework.kafka.config.KafkaListenerContainerFactory",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"createContainer","parameterTypes":["java.util.regex.Pattern"] }, {"name":"createContainer","parameterTypes":["java.lang.String[]"] }, {"name":"createContainer","parameterTypes":["org.springframework.kafka.support.TopicPartitionOffset[]"] }]
},
{
  "name":"org.springframework.kafka.config.KafkaListenerEndpoint"
},
{
  "name":"org.springframework.kafka.config.KafkaListenerEndpointRegistrar"
},
{
  "name":"org.springframework.kafka.config.KafkaListenerEndpointRegistry",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"destroy","parameterTypes":[] }, {"name":"getAllListenerContainers","parameterTypes":[] }, {"name":"getListenerContainer","parameterTypes":["java.lang.String"] }, {"name":"getListenerContainerIds","parameterTypes":[] }, {"name":"getListenerContainers","parameterTypes":[] }, {"name":"getListenerContainersMatching","parameterTypes":["java.util.function.BiPredicate"] }, {"name":"getListenerContainersMatching","parameterTypes":["java.util.function.Predicate"] }, {"name":"getPhase","parameterTypes":[] }, {"name":"getUnregisteredListenerContainer","parameterTypes":["java.lang.String"] }, {"name":"isRunning","parameterTypes":[] }, {"name":"onApplicationEvent","parameterTypes":["org.springframework.context.ApplicationEvent"] }, {"name":"setApplicationContext","parameterTypes":["org.springframework.context.ApplicationContext"] }, {"name":"start","parameterTypes":[] }, {"name":"stop","parameterTypes":[] }, {"name":"stop","parameterTypes":["java.lang.Runnable"] }]
},
{
  "name":"org.springframework.kafka.config.MethodKafkaListenerEndpoint"
},
{
  "name":"org.springframework.kafka.config.StreamsBuilderFactoryBean"
},
{
  "name":"org.springframework.kafka.core.ConsumerFactory",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"createConsumer","parameterTypes":[] }, {"name":"createConsumer","parameterTypes":["java.lang.String"] }, {"name":"createConsumer","parameterTypes":["java.lang.String","java.lang.String"] }, {"name":"createConsumer","parameterTypes":["java.lang.String","java.lang.String","java.lang.String"] }]
},
{
  "name":"org.springframework.kafka.core.ConsumerFactory$Listener"
},
{
  "name":"org.springframework.kafka.core.ConsumerPostProcessor"
},
{
  "name":"org.springframework.kafka.core.DefaultKafkaConsumerFactory",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"addListener","parameterTypes":["int","org.springframework.kafka.core.ConsumerFactory$Listener"] }, {"name":"addListener","parameterTypes":["org.springframework.kafka.core.ConsumerFactory$Listener"] }, {"name":"addPostProcessor","parameterTypes":["org.springframework.kafka.core.ConsumerPostProcessor"] }, {"name":"createConsumer","parameterTypes":["java.lang.String","java.lang.String","java.lang.String","java.util.Properties"] }, {"name":"getConfigurationProperties","parameterTypes":[] }, {"name":"getKeyDeserializer","parameterTypes":[] }, {"name":"getListeners","parameterTypes":[] }, {"name":"getPostProcessors","parameterTypes":[] }, {"name":"getValueDeserializer","parameterTypes":[] }, {"name":"isAutoCommit","parameterTypes":[] }, {"name":"removeConfig","parameterTypes":["java.lang.String"] }, {"name":"removeListener","parameterTypes":["org.springframework.kafka.core.ConsumerFactory$Listener"] }, {"name":"removePostProcessor","parameterTypes":["org.springframework.kafka.core.ConsumerPostProcessor"] }, {"name":"setApplicationContext","parameterTypes":["org.springframework.context.ApplicationContext"] }, {"name":"setBeanName","parameterTypes":["java.lang.String"] }, {"name":"updateConfigs","parameterTypes":["java.util.Map"] }]
},
{
  "name":"org.springframework.kafka.core.DefaultKafkaProducerFactory",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"addListener","parameterTypes":["int","org.springframework.kafka.core.ProducerFactory$Listener"] }, {"name":"addListener","parameterTypes":["org.springframework.kafka.core.ProducerFactory$Listener"] }, {"name":"addPostProcessor","parameterTypes":["org.springframework.kafka.core.ProducerPostProcessor"] }, {"name":"closeThreadBoundProducer","parameterTypes":[] }, {"name":"copyWithConfigurationOverride","parameterTypes":["java.util.Map"] }, {"name":"createNonTransactionalProducer","parameterTypes":[] }, {"name":"createProducer","parameterTypes":[] }, {"name":"createProducer","parameterTypes":["java.lang.String"] }, {"name":"destroy","parameterTypes":[] }, {"name":"getConfigurationProperties","parameterTypes":[] }, {"name":"getKeySerializer","parameterTypes":[] }, {"name":"getKeySerializerSupplier","parameterTypes":[] }, {"name":"getListeners","parameterTypes":[] }, {"name":"getPhase","parameterTypes":[] }, {"name":"getPhysicalCloseTimeout","parameterTypes":[] }, {"name":"getPostProcessors","parameterTypes":[] }, {"name":"getTransactionIdPrefix","parameterTypes":[] }, {"name":"getValueSerializer","parameterTypes":[] }, {"name":"getValueSerializerSupplier","parameterTypes":[] }, {"name":"isProducerPerThread","parameterTypes":[] }, {"name":"isRunning","parameterTypes":[] }, {"name":"onApplicationEvent","parameterTypes":["org.springframework.context.ApplicationEvent"] }, {"name":"removeConfig","parameterTypes":["java.lang.String"] }, {"name":"removeListener","parameterTypes":["org.springframework.kafka.core.ProducerFactory$Listener"] }, {"name":"removePostProcessor","parameterTypes":["org.springframework.kafka.core.ProducerPostProcessor"] }, {"name":"reset","parameterTypes":[] }, {"name":"setApplicationContext","parameterTypes":["org.springframework.context.ApplicationContext"] }, {"name":"setBeanName","parameterTypes":["java.lang.String"] }, {"name":"start","parameterTypes":[] }, {"name":"stop","parameterTypes":[] }, {"name":"transactionCapable","parameterTypes":[] }, {"name":"updateConfigs","parameterTypes":["java.util.Map"] }]
},
{
  "name":"org.springframework.kafka.core.DefaultKafkaProducerFactory$CloseSafeProducer"
},
{
  "name":"org.springframework.kafka.core.KafkaAdmin",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"afterSingletonsInstantiated","parameterTypes":[] }, {"name":"clusterId","parameterTypes":[] }, {"name":"createOrModifyTopics","parameterTypes":["org.apache.kafka.clients.admin.NewTopic[]"] }, {"name":"describeTopics","parameterTypes":["java.lang.String[]"] }, {"name":"getConfigurationProperties","parameterTypes":[] }, {"name":"setApplicationContext","parameterTypes":["org.springframework.context.ApplicationContext"] }]
},
{
  "name":"org.springframework.kafka.core.KafkaAdmin$NewTopics"
},
{
  "name":"org.springframework.kafka.core.KafkaAdminOperations",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.kafka.core.KafkaOperations",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"receive","parameterTypes":["java.lang.String","int","long"] }, {"name":"receive","parameterTypes":["java.util.Collection"] }]
},
{
  "name":"org.springframework.kafka.core.KafkaOperations$OperationsCallback"
},
{
  "name":"org.springframework.kafka.core.KafkaOperations$ProducerCallback"
},
{
  "name":"org.springframework.kafka.core.KafkaResourceFactory",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"setBootstrapServersSupplier","parameterTypes":["java.util.function.Supplier"] }]
},
{
  "name":"org.springframework.kafka.core.KafkaTemplate",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"afterSingletonsInstantiated","parameterTypes":[] }, {"name":"destroy","parameterTypes":[] }, {"name":"execute","parameterTypes":["org.springframework.kafka.core.KafkaOperations$ProducerCallback"] }, {"name":"executeInTransaction","parameterTypes":["org.springframework.kafka.core.KafkaOperations$OperationsCallback"] }, {"name":"flush","parameterTypes":[] }, {"name":"getProducerFactory","parameterTypes":[] }, {"name":"inTransaction","parameterTypes":[] }, {"name":"isAllowNonTransactional","parameterTypes":[] }, {"name":"isTransactional","parameterTypes":[] }, {"name":"metrics","parameterTypes":[] }, {"name":"onApplicationEvent","parameterTypes":["org.springframework.context.ApplicationEvent"] }, {"name":"partitionsFor","parameterTypes":["java.lang.String"] }, {"name":"receive","parameterTypes":["java.lang.String","int","long","java.time.Duration"] }, {"name":"receive","parameterTypes":["java.util.Collection","java.time.Duration"] }, {"name":"send","parameterTypes":["java.lang.String","java.lang.Integer","java.lang.Long","java.lang.Object","java.lang.Object"] }, {"name":"send","parameterTypes":["java.lang.String","java.lang.Integer","java.lang.Object","java.lang.Object"] }, {"name":"send","parameterTypes":["java.lang.String","java.lang.Object"] }, {"name":"send","parameterTypes":["java.lang.String","java.lang.Object","java.lang.Object"] }, {"name":"send","parameterTypes":["org.apache.kafka.clients.producer.ProducerRecord"] }, {"name":"send","parameterTypes":["org.springframework.messaging.Message"] }, {"name":"sendDefault","parameterTypes":["java.lang.Integer","java.lang.Long","java.lang.Object","java.lang.Object"] }, {"name":"sendDefault","parameterTypes":["java.lang.Integer","java.lang.Object","java.lang.Object"] }, {"name":"sendDefault","parameterTypes":["java.lang.Object"] }, {"name":"sendDefault","parameterTypes":["java.lang.Object","java.lang.Object"] }, {"name":"sendOffsetsToTransaction","parameterTypes":["java.util.Map","org.apache.kafka.clients.consumer.ConsumerGroupMetadata"] }, {"name":"setApplicationContext","parameterTypes":["org.springframework.context.ApplicationContext"] }, {"name":"setBeanName","parameterTypes":["java.lang.String"] }]
},
{
  "name":"org.springframework.kafka.core.ProducerFactory",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.kafka.core.ProducerFactory$Listener"
},
{
  "name":"org.springframework.kafka.core.ProducerPostProcessor"
},
{
  "name":"org.springframework.kafka.core.TransactionIdSuffixStrategy"
},
{
  "name":"org.springframework.kafka.listener.AbstractMessageListenerContainer"
},
{
  "name":"org.springframework.kafka.listener.AfterRollbackProcessor"
},
{
  "name":"org.springframework.kafka.listener.BatchInterceptor"
},
{
  "name":"org.springframework.kafka.listener.CommonErrorHandler"
},
{
  "name":"org.springframework.kafka.listener.ConcurrentMessageListenerContainer"
},
{
  "name":"org.springframework.kafka.listener.ConsumerAwareRebalanceListener"
},
{
  "name":"org.springframework.kafka.listener.ConsumerProperties",
  "methods":[{"name":"getAuthExceptionRetryInterval","parameterTypes":[] }, {"name":"getClientId","parameterTypes":[] }, {"name":"getCommitCallback","parameterTypes":[] }, {"name":"getCommitLogLevel","parameterTypes":[] }, {"name":"getCommitRetries","parameterTypes":[] }, {"name":"getConsumerRebalanceListener","parameterTypes":[] }, {"name":"getGroupId","parameterTypes":[] }, {"name":"getKafkaConsumerProperties","parameterTypes":[] }, {"name":"getOffsetAndMetadataProvider","parameterTypes":[] }, {"name":"getPollTimeout","parameterTypes":[] }, {"name":"getSyncCommitTimeout","parameterTypes":[] }, {"name":"isCheckDeserExWhenKeyNull","parameterTypes":[] }, {"name":"isCheckDeserExWhenValueNull","parameterTypes":[] }, {"name":"isFixTxOffsets","parameterTypes":[] }, {"name":"isSyncCommits","parameterTypes":[] }, {"name":"setAuthExceptionRetryInterval","parameterTypes":["java.time.Duration"] }, {"name":"setCheckDeserExWhenKeyNull","parameterTypes":["boolean"] }, {"name":"setCheckDeserExWhenValueNull","parameterTypes":["boolean"] }, {"name":"setClientId","parameterTypes":["java.lang.String"] }, {"name":"setCommitCallback","parameterTypes":["org.apache.kafka.clients.consumer.OffsetCommitCallback"] }, {"name":"setCommitLogLevel","parameterTypes":["org.springframework.kafka.support.LogIfLevelEnabled$Level"] }, {"name":"setCommitRetries","parameterTypes":["int"] }, {"name":"setConsumerRebalanceListener","parameterTypes":["org.apache.kafka.clients.consumer.ConsumerRebalanceListener"] }, {"name":"setFixTxOffsets","parameterTypes":["boolean"] }, {"name":"setGroupId","parameterTypes":["java.lang.String"] }, {"name":"setKafkaConsumerProperties","parameterTypes":["java.util.Properties"] }, {"name":"setOffsetAndMetadataProvider","parameterTypes":["org.springframework.kafka.listener.OffsetAndMetadataProvider"] }, {"name":"setPollTimeout","parameterTypes":["long"] }, {"name":"setSyncCommits","parameterTypes":["boolean"] }]
},
{
  "name":"org.springframework.kafka.listener.ContainerPartitionPausingBackOffManagerFactory"
},
{
  "name":"org.springframework.kafka.listener.ContainerProperties",
  "queryAllPublicMethods":true,
  "fields":[{"name":"isSubBatchPerPartition"}, {"name":"toString"}],
  "methods":[{"name":"getAckMode","parameterTypes":[] }, {"name":"getAdviceChain","parameterTypes":[] }, {"name":"getAssignmentCommitOption","parameterTypes":[] }, {"name":"getConsumerStartTimeout","parameterTypes":[] }, {"name":"getEosMode","parameterTypes":[] }, {"name":"getIdleBeforeDataMultiplier","parameterTypes":[] }, {"name":"getIdleBetweenPolls","parameterTypes":[] }, {"name":"getIdleEventInterval","parameterTypes":[] }, {"name":"getIdlePartitionEventInterval","parameterTypes":[] }, {"name":"getKafkaAwareTransactionManager","parameterTypes":[] }, {"name":"getListenerTaskExecutor","parameterTypes":[] }, {"name":"getMessageListener","parameterTypes":[] }, {"name":"getMicrometerTags","parameterTypes":[] }, {"name":"getMicrometerTagsProvider","parameterTypes":[] }, {"name":"getMonitorInterval","parameterTypes":[] }, {"name":"getNoPollThreshold","parameterTypes":[] }, {"name":"getObservationConvention","parameterTypes":[] }, {"name":"getObservationRegistry","parameterTypes":[] }, {"name":"getPollTimeoutWhilePaused","parameterTypes":[] }, {"name":"getScheduler","parameterTypes":[] }, {"name":"getShutdownTimeout","parameterTypes":[] }, {"name":"getTransactionDefinition","parameterTypes":[] }, {"name":"getTransactionManager","parameterTypes":[] }, {"name":"isAsyncAcks","parameterTypes":[] }, {"name":"isBatchRecoverAfterRollback","parameterTypes":[] }, {"name":"isDeliveryAttemptHeader","parameterTypes":[] }, {"name":"isLogContainerConfig","parameterTypes":[] }, {"name":"isMicrometerEnabled","parameterTypes":[] }, {"name":"isMissingTopicsFatal","parameterTypes":[] }, {"name":"isObservationEnabled","parameterTypes":[] }, {"name":"isPauseImmediate","parameterTypes":[] }, {"name":"isRestartAfterAuthExceptions","parameterTypes":[] }, {"name":"isStopContainerWhenFenced","parameterTypes":[] }, {"name":"isStopImmediate","parameterTypes":[] }, {"name":"setAckMode","parameterTypes":["org.springframework.kafka.listener.ContainerProperties$AckMode"] }, {"name":"setAdviceChain","parameterTypes":["org.aopalliance.aop.Advice[]"] }, {"name":"setAssignmentCommitOption","parameterTypes":["org.springframework.kafka.listener.ContainerProperties$AssignmentCommitOption"] }, {"name":"setAsyncAcks","parameterTypes":["boolean"] }, {"name":"setBatchRecoverAfterRollback","parameterTypes":["boolean"] }, {"name":"setConsumerStartTimeout","parameterTypes":["java.time.Duration"] }, {"name":"setDeliveryAttemptHeader","parameterTypes":["boolean"] }, {"name":"setEosMode","parameterTypes":["org.springframework.kafka.listener.ContainerProperties$EOSMode"] }, {"name":"setIdleBeforeDataMultiplier","parameterTypes":["double"] }, {"name":"setIdleBetweenPolls","parameterTypes":["long"] }, {"name":"setIdleEventInterval","parameterTypes":["java.lang.Long"] }, {"name":"setIdlePartitionEventInterval","parameterTypes":["java.lang.Long"] }, {"name":"setKafkaAwareTransactionManager","parameterTypes":["org.springframework.kafka.transaction.KafkaAwareTransactionManager"] }, {"name":"setListenerTaskExecutor","parameterTypes":["org.springframework.core.task.AsyncTaskExecutor"] }, {"name":"setLogContainerConfig","parameterTypes":["boolean"] }, {"name":"setMessageListener","parameterTypes":["java.lang.Object"] }, {"name":"setMicrometerEnabled","parameterTypes":["boolean"] }, {"name":"setMicrometerTags","parameterTypes":["java.util.Map"] }, {"name":"setMicrometerTagsProvider","parameterTypes":["java.util.function.Function"] }, {"name":"setMissingTopicsFatal","parameterTypes":["boolean"] }, {"name":"setMonitorInterval","parameterTypes":["int"] }, {"name":"setNoPollThreshold","parameterTypes":["float"] }, {"name":"setObservationConvention","parameterTypes":["org.springframework.kafka.support.micrometer.KafkaListenerObservationConvention"] }, {"name":"setObservationEnabled","parameterTypes":["boolean"] }, {"name":"setObservationRegistry","parameterTypes":["io.micrometer.observation.ObservationRegistry"] }, {"name":"setPauseImmediate","parameterTypes":["boolean"] }, {"name":"setPollTimeoutWhilePaused","parameterTypes":["java.time.Duration"] }, {"name":"setRestartAfterAuthExceptions","parameterTypes":["boolean"] }, {"name":"setScheduler","parameterTypes":["org.springframework.scheduling.TaskScheduler"] }, {"name":"setShutdownTimeout","parameterTypes":["long"] }, {"name":"setStopContainerWhenFenced","parameterTypes":["boolean"] }, {"name":"setStopImmediate","parameterTypes":["boolean"] }, {"name":"setSyncCommitTimeout","parameterTypes":["java.time.Duration"] }, {"name":"setTransactionDefinition","parameterTypes":["org.springframework.transaction.TransactionDefinition"] }, {"name":"setTransactionManager","parameterTypes":["org.springframework.transaction.PlatformTransactionManager"] }]
},
{
  "name":"org.springframework.kafka.listener.ContainerProperties$AckModeEditor"
},
{
  "name":"org.springframework.kafka.listener.KafkaConsumerBackoffManager"
},
{
  "name":"org.springframework.kafka.listener.ListenerContainerRegistry",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.kafka.listener.MessageListenerContainer"
},
{
  "name":"org.springframework.kafka.listener.RecordInterceptor",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"afterRecord","parameterTypes":["org.apache.kafka.clients.consumer.ConsumerRecord","org.apache.kafka.clients.consumer.Consumer"] }, {"name":"failure","parameterTypes":["org.apache.kafka.clients.consumer.ConsumerRecord","java.lang.Exception","org.apache.kafka.clients.consumer.Consumer"] }, {"name":"success","parameterTypes":["org.apache.kafka.clients.consumer.ConsumerRecord","org.apache.kafka.clients.consumer.Consumer"] }]
},
{
  "name":"org.springframework.kafka.listener.ThreadStateProcessor",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"clearThreadState","parameterTypes":["org.apache.kafka.clients.consumer.Consumer"] }, {"name":"setupThreadState","parameterTypes":["org.apache.kafka.clients.consumer.Consumer"] }]
},
{
  "name":"org.springframework.kafka.listener.adapter.BatchToRecordAdapter"
},
{
  "name":"org.springframework.kafka.listener.adapter.RecordFilterStrategy"
},
{
  "name":"org.springframework.kafka.listener.adapter.ReplyHeadersConfigurer"
},
{
  "name":"org.springframework.kafka.retrytopic.DeadLetterPublishingRecovererFactory"
},
{
  "name":"org.springframework.kafka.retrytopic.DefaultDestinationTopicResolver"
},
{
  "name":"org.springframework.kafka.retrytopic.DestinationTopic$Properties"
},
{
  "name":"org.springframework.kafka.retrytopic.DestinationTopicProcessor$Context"
},
{
  "name":"org.springframework.kafka.retrytopic.DestinationTopicResolver"
},
{
  "name":"org.springframework.kafka.retrytopic.EndpointCustomizer"
},
{
  "name":"org.springframework.kafka.retrytopic.EndpointCustomizer$TopicNamesHolder"
},
{
  "name":"org.springframework.kafka.retrytopic.ListenerContainerFactoryConfigurer"
},
{
  "name":"org.springframework.kafka.retrytopic.RetryTopicComponentFactory"
},
{
  "name":"org.springframework.kafka.retrytopic.RetryTopicConfiguration"
},
{
  "name":"org.springframework.kafka.retrytopic.RetryTopicConfiguration$TopicCreation"
},
{
  "name":"org.springframework.kafka.retrytopic.RetryTopicConfigurationBuilder"
},
{
  "name":"org.springframework.kafka.retrytopic.RetryTopicConfigurationSupport",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"afterSingletonsInstantiated","parameterTypes":[] }, {"name":"setApplicationContext","parameterTypes":["org.springframework.context.ApplicationContext"] }]
},
{
  "name":"org.springframework.kafka.retrytopic.RetryTopicConfigurationSupport$BlockingRetriesConfigurer"
},
{
  "name":"org.springframework.kafka.retrytopic.RetryTopicConfigurationSupport$CustomizersConfigurer"
},
{
  "name":"org.springframework.kafka.retrytopic.RetryTopicConfigurer",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"setBeanFactory","parameterTypes":["org.springframework.beans.factory.BeanFactory"] }]
},
{
  "name":"org.springframework.kafka.retrytopic.RetryTopicConfigurer$EndpointProcessor"
},
{
  "name":"org.springframework.kafka.retrytopic.RetryTopicConfigurer$LoggingDltListenerHandlerMethod",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.kafka.retrytopic.RetryTopicSchedulerWrapper",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"afterPropertiesSet","parameterTypes":[] }, {"name":"destroy","parameterTypes":[] }]
},
{
  "name":"org.springframework.kafka.security.jaas.KafkaJaasLoginModuleInitializer",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"afterSingletonsInstantiated","parameterTypes":[] }, {"name":"destroy","parameterTypes":[] }]
},
{
  "name":"org.springframework.kafka.security.jaas.KafkaJaasLoginModuleInitializer$ControlFlag"
},
{
  "name":"org.springframework.kafka.support.Acknowledgment"
},
{
  "name":"org.springframework.kafka.support.EndpointHandlerMethod"
},
{
  "name":"org.springframework.kafka.support.LoggingProducerListener",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"onError","parameterTypes":["org.apache.kafka.clients.producer.ProducerRecord","org.apache.kafka.clients.producer.RecordMetadata","java.lang.Exception"] }]
},
{
  "name":"org.springframework.kafka.support.ProducerListener",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"onSuccess","parameterTypes":["org.apache.kafka.clients.producer.ProducerRecord","org.apache.kafka.clients.producer.RecordMetadata"] }]
},
{
  "name":"org.springframework.kafka.support.TopicPartitionOffset"
},
{
  "name":"org.springframework.kafka.support.converter.BatchMessageConverter"
},
{
  "name":"org.springframework.kafka.support.converter.RecordMessageConverter"
},
{
  "name":"org.springframework.kafka.support.micrometer.KafkaRecordSenderContext"
},
{
  "name":"org.springframework.kafka.support.micrometer.KafkaTemplateObservationConvention"
},
{
  "name":"org.springframework.kafka.support.micrometer.MicrometerHolder"
},
{
  "name":"org.springframework.kafka.transaction.KafkaAwareTransactionManager"
},
{
  "name":"org.springframework.kafka.transaction.KafkaTransactionManager"
},
{
  "name":"org.springframework.lang.NonNull"
},
{
  "name":"org.springframework.lang.Nullable"
},
{
  "name":"org.springframework.messaging.Message"
},
{
  "name":"org.springframework.messaging.converter.SmartMessageConverter"
},
{
  "name":"org.springframework.messaging.handler.annotation.MessageMapping",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.retry.ExhaustedRetryException"
},
{
  "name":"org.springframework.retry.RecoveryCallback"
},
{
  "name":"org.springframework.retry.RetryCallback"
},
{
  "name":"org.springframework.retry.RetryContext"
},
{
  "name":"org.springframework.retry.RetryException"
},
{
  "name":"org.springframework.retry.RetryListener"
},
{
  "name":"org.springframework.retry.RetryOperations",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.retry.RetryPolicy"
},
{
  "name":"org.springframework.retry.RetryState"
},
{
  "name":"org.springframework.retry.annotation.Backoff",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.retry.annotation.EnableRetry",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.retry.annotation.RetryConfiguration",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"afterPropertiesSet","parameterTypes":[] }, {"name":"afterSingletonsInstantiated","parameterTypes":[] }, {"name":"getAdvice","parameterTypes":[] }, {"name":"getClassFilter","parameterTypes":[] }, {"name":"getInterfaces","parameterTypes":[] }, {"name":"getPointcut","parameterTypes":[] }, {"name":"setBeanFactory","parameterTypes":["org.springframework.beans.factory.BeanFactory"] }, {"name":"setImportMetadata","parameterTypes":["org.springframework.core.type.AnnotationMetadata"] }, {"name":"validateInterfaces","parameterTypes":[] }]
},
{
  "name":"org.springframework.retry.annotation.Retryable",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.retry.backoff.BackOffPolicy"
},
{
  "name":"org.springframework.retry.interceptor.Retryable",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.retry.policy.RetryContextCache"
},
{
  "name":"org.springframework.retry.support.RetryTemplate",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"execute","parameterTypes":["org.springframework.retry.RetryCallback"] }, {"name":"execute","parameterTypes":["org.springframework.retry.RetryCallback","org.springframework.retry.RecoveryCallback"] }, {"name":"execute","parameterTypes":["org.springframework.retry.RetryCallback","org.springframework.retry.RecoveryCallback","org.springframework.retry.RetryState"] }, {"name":"execute","parameterTypes":["org.springframework.retry.RetryCallback","org.springframework.retry.RetryState"] }]
},
{
  "name":"org.springframework.retry.support.RetryTemplateBuilder"
},
{
  "name":"org.springframework.scheduling.TaskScheduler"
},
{
  "name":"org.springframework.scheduling.annotation.AbstractAsyncConfiguration",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"setImportMetadata","parameterTypes":["org.springframework.core.type.AnnotationMetadata"] }]
},
{
  "name":"org.springframework.scheduling.annotation.EnableAsync",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.scheduling.annotation.ProxyAsyncConfiguration",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.scheduling.annotation.SchedulingConfigurer",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.scheduling.concurrent.SimpleAsyncTaskScheduler"
},
{
  "name":"org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor"
},
{
  "name":"org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler"
},
{
  "name":"org.springframework.scheduling.config.ScheduledTaskRegistrar"
},
{
  "name":"org.springframework.security.crypto.encrypt.RsaAlgorithm",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.security.crypto.encrypt.RsaSecretEncryptor"
},
{
  "name":"org.springframework.security.crypto.encrypt.TextEncryptor"
},
{
  "name":"org.springframework.stereotype.Component",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.stereotype.Controller",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.stereotype.Indexed",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.stereotype.Repository",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.stereotype.Service",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.transaction.ConfigurableTransactionManager",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"addListener","parameterTypes":["org.springframework.transaction.TransactionExecutionListener"] }]
},
{
  "name":"org.springframework.transaction.PlatformTransactionManager",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.transaction.ReactiveTransactionManager"
},
{
  "name":"org.springframework.transaction.TransactionDefinition",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.transaction.TransactionException"
},
{
  "name":"org.springframework.transaction.TransactionExecutionListener"
},
{
  "name":"org.springframework.transaction.TransactionManager",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.transaction.TransactionStatus"
},
{
  "name":"org.springframework.transaction.annotation.AbstractTransactionManagementConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"setImportMetadata","parameterTypes":["org.springframework.core.type.AnnotationMetadata"] }, {"name":"transactionAttributeSource","parameterTypes":[] }]
},
{
  "name":"org.springframework.transaction.annotation.AnnotationTransactionAttributeSource",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"equals","parameterTypes":["java.lang.Object"] }, {"name":"hashCode","parameterTypes":[] }, {"name":"isCandidateClass","parameterTypes":["java.lang.Class"] }]
},
{
  "name":"org.springframework.transaction.annotation.EnableTransactionManagement",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.transaction.annotation.Transactional",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.transaction.event.TransactionalEventListenerFactory"
},
{
  "name":"org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"getTransactionAttribute","parameterTypes":["java.lang.reflect.Method","java.lang.Class"] }, {"name":"hasTransactionAttribute","parameterTypes":["java.lang.reflect.Method","java.lang.Class"] }, {"name":"setEmbeddedValueResolver","parameterTypes":["org.springframework.util.StringValueResolver"] }]
},
{
  "name":"org.springframework.transaction.interceptor.BeanFactoryTransactionAttributeSourceAdvisor",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"getPointcut","parameterTypes":[] }]
},
{
  "name":"org.springframework.transaction.interceptor.RollbackRuleAttribute"
},
{
  "name":"org.springframework.transaction.interceptor.TransactionAspectSupport",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"afterPropertiesSet","parameterTypes":[] }, {"name":"getTransactionAttributeSource","parameterTypes":[] }, {"name":"getTransactionManager","parameterTypes":[] }, {"name":"setBeanFactory","parameterTypes":["org.springframework.beans.factory.BeanFactory"] }, {"name":"setTransactionAttributeSource","parameterTypes":["org.springframework.transaction.interceptor.TransactionAttributeSource"] }, {"name":"setTransactionAttributeSources","parameterTypes":["org.springframework.transaction.interceptor.TransactionAttributeSource[]"] }, {"name":"setTransactionAttributes","parameterTypes":["java.util.Properties"] }, {"name":"setTransactionManager","parameterTypes":["org.springframework.transaction.TransactionManager"] }, {"name":"setTransactionManagerBeanName","parameterTypes":["java.lang.String"] }]
},
{
  "name":"org.springframework.transaction.interceptor.TransactionAttribute"
},
{
  "name":"org.springframework.transaction.interceptor.TransactionAttributeSource",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.transaction.interceptor.TransactionInterceptor",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"invoke","parameterTypes":["org.aopalliance.intercept.MethodInvocation"] }]
},
{
  "name":"org.springframework.transaction.interceptor.TransactionalProxy",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.transaction.reactive.TransactionalOperator"
},
{
  "name":"org.springframework.transaction.support.AbstractPlatformTransactionManager",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"commit","parameterTypes":["org.springframework.transaction.TransactionStatus"] }, {"name":"getTransaction","parameterTypes":["org.springframework.transaction.TransactionDefinition"] }, {"name":"getTransactionExecutionListeners","parameterTypes":[] }, {"name":"rollback","parameterTypes":["org.springframework.transaction.TransactionStatus"] }, {"name":"setTransactionExecutionListeners","parameterTypes":["java.util.Collection"] }]
},
{
  "name":"org.springframework.transaction.support.AbstractPlatformTransactionManager$SuspendedResourcesHolder"
},
{
  "name":"org.springframework.transaction.support.DefaultTransactionDefinition",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"getIsolationLevel","parameterTypes":[] }, {"name":"getName","parameterTypes":[] }, {"name":"getPropagationBehavior","parameterTypes":[] }, {"name":"getTimeout","parameterTypes":[] }, {"name":"hashCode","parameterTypes":[] }, {"name":"isReadOnly","parameterTypes":[] }, {"name":"toString","parameterTypes":[] }]
},
{
  "name":"org.springframework.transaction.support.DefaultTransactionStatus"
},
{
  "name":"org.springframework.transaction.support.ResourceTransactionManager",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.transaction.support.TransactionCallback"
},
{
  "name":"org.springframework.transaction.support.TransactionOperations",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"executeWithoutResult","parameterTypes":["java.util.function.Consumer"] }]
},
{
  "name":"org.springframework.transaction.support.TransactionTemplate",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"afterPropertiesSet","parameterTypes":[] }, {"name":"equals","parameterTypes":["java.lang.Object"] }, {"name":"execute","parameterTypes":["org.springframework.transaction.support.TransactionCallback"] }]
},
{
  "name":"org.springframework.ui.context.ThemeSource"
},
{
  "name":"org.springframework.util.AntPathMatcher",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"combine","parameterTypes":["java.lang.String","java.lang.String"] }, {"name":"extractPathWithinPattern","parameterTypes":["java.lang.String","java.lang.String"] }, {"name":"extractUriTemplateVariables","parameterTypes":["java.lang.String","java.lang.String"] }, {"name":"getPatternComparator","parameterTypes":["java.lang.String"] }, {"name":"isPattern","parameterTypes":["java.lang.String"] }, {"name":"match","parameterTypes":["java.lang.String","java.lang.String"] }, {"name":"matchStart","parameterTypes":["java.lang.String","java.lang.String"] }]
},
{
  "name":"org.springframework.util.AntPathMatcher$AntPathStringMatcher"
},
{
  "name":"org.springframework.util.Assert"
},
{
  "name":"org.springframework.util.CustomizableThreadCreator",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"createThread","parameterTypes":["java.lang.Runnable"] }, {"name":"getThreadGroup","parameterTypes":[] }, {"name":"getThreadNamePrefix","parameterTypes":[] }, {"name":"getThreadPriority","parameterTypes":[] }, {"name":"isDaemon","parameterTypes":[] }, {"name":"setDaemon","parameterTypes":["boolean"] }, {"name":"setThreadGroup","parameterTypes":["java.lang.ThreadGroup"] }, {"name":"setThreadGroupName","parameterTypes":["java.lang.String"] }, {"name":"setThreadNamePrefix","parameterTypes":["java.lang.String"] }, {"name":"setThreadPriority","parameterTypes":["int"] }]
},
{
  "name":"org.springframework.util.MultiValueMap"
},
{
  "name":"org.springframework.util.PathMatcher",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.util.PropertiesPersister"
},
{
  "name":"org.springframework.util.StringValueResolver"
},
{
  "name":"org.springframework.util.concurrent.ListenableFuture"
},
{
  "name":"org.springframework.util.unit.DataSize"
},
{
  "name":"org.springframework.validation.BindException"
},
{
  "name":"org.springframework.validation.BindingResult"
},
{
  "name":"org.springframework.validation.DefaultMessageCodesResolver$Format"
},
{
  "name":"org.springframework.validation.Errors"
},
{
  "name":"org.springframework.validation.MessageCodesResolver"
},
{
  "name":"org.springframework.validation.ObjectError"
},
{
  "name":"org.springframework.validation.SmartValidator",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"validateValue","parameterTypes":["java.lang.Class","java.lang.String","java.lang.Object","org.springframework.validation.Errors","java.lang.Object[]"] }]
},
{
  "name":"org.springframework.validation.Validator",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"validateObject","parameterTypes":["java.lang.Object"] }]
},
{
  "name":"org.springframework.validation.beanvalidation.LocalValidatorFactoryBean",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"afterPropertiesSet","parameterTypes":[] }, {"name":"close","parameterTypes":[] }, {"name":"destroy","parameterTypes":[] }, {"name":"getClockProvider","parameterTypes":[] }, {"name":"getConstraintValidatorFactory","parameterTypes":[] }, {"name":"getMessageInterpolator","parameterTypes":[] }, {"name":"getParameterNameProvider","parameterTypes":[] }, {"name":"getTraversableResolver","parameterTypes":[] }, {"name":"getValidator","parameterTypes":[] }, {"name":"setApplicationContext","parameterTypes":["org.springframework.context.ApplicationContext"] }, {"name":"unwrap","parameterTypes":["java.lang.Class"] }, {"name":"usingContext","parameterTypes":[] }]
},
{
  "name":"org.springframework.validation.beanvalidation.MethodValidationPostProcessor"
},
{
  "name":"org.springframework.validation.beanvalidation.SpringValidatorAdapter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"forExecutables","parameterTypes":[] }, {"name":"getConstraintsForClass","parameterTypes":["java.lang.Class"] }, {"name":"supports","parameterTypes":["java.lang.Class"] }, {"name":"validate","parameterTypes":["java.lang.Object","org.springframework.validation.Errors"] }, {"name":"validate","parameterTypes":["java.lang.Object","org.springframework.validation.Errors","java.lang.Object[]"] }, {"name":"validate","parameterTypes":["java.lang.Object","java.lang.Class[]"] }, {"name":"validateProperty","parameterTypes":["java.lang.Object","java.lang.String","java.lang.Class[]"] }, {"name":"validateValue","parameterTypes":["java.lang.Class","java.lang.String","java.lang.Object","org.springframework.validation.Errors","java.lang.Object[]"] }, {"name":"validateValue","parameterTypes":["java.lang.Class","java.lang.String","java.lang.Object","java.lang.Class[]"] }]
},
{
  "name":"org.springframework.validation.method.MethodValidationResult"
},
{
  "name":"org.springframework.web.HttpMediaTypeNotAcceptableException"
},
{
  "name":"org.springframework.web.HttpRequestMethodNotSupportedException"
},
{
  "name":"org.springframework.web.accept.ContentNegotiationManager",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"getAllFileExtensions","parameterTypes":[] }, {"name":"resolveFileExtensions","parameterTypes":["org.springframework.http.MediaType"] }, {"name":"resolveMediaTypes","parameterTypes":["org.springframework.web.context.request.NativeWebRequest"] }]
},
{
  "name":"org.springframework.web.accept.ContentNegotiationStrategy",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.web.accept.MediaTypeFileExtensionResolver",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.web.bind.annotation.ControllerAdvice",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.web.bind.annotation.CrossOrigin"
},
{
  "name":"org.springframework.web.bind.annotation.DeleteMapping",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.web.bind.annotation.ExceptionHandler",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.web.bind.annotation.GetMapping",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.web.bind.annotation.Mapping",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.web.bind.annotation.PathVariable",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.web.bind.annotation.PostMapping",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.web.bind.annotation.PutMapping",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.web.bind.annotation.RequestBody",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.web.bind.annotation.RequestMapping",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.web.bind.annotation.RequestMethod"
},
{
  "name":"org.springframework.web.bind.annotation.RequestParam",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.web.bind.annotation.ResponseBody",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.web.bind.annotation.ResponseStatus",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.web.bind.annotation.RestController",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.web.bind.annotation.RestControllerAdvice",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.web.bind.support.ConfigurableWebBindingInitializer"
},
{
  "name":"org.springframework.web.bind.support.SessionAttributeStore"
},
{
  "name":"org.springframework.web.bind.support.WebBindingInitializer"
},
{
  "name":"org.springframework.web.bind.support.WebDataBinderFactory"
},
{
  "name":"org.springframework.web.client.DefaultRestClientBuilder",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"apply","parameterTypes":["java.util.function.Consumer"] }, {"name":"baseUrl","parameterTypes":["java.lang.String"] }, {"name":"baseUrl","parameterTypes":["java.net.URI"] }, {"name":"build","parameterTypes":[] }, {"name":"clone","parameterTypes":[] }, {"name":"defaultCookie","parameterTypes":["java.lang.String","java.lang.String[]"] }, {"name":"defaultCookies","parameterTypes":["java.util.function.Consumer"] }, {"name":"defaultHeader","parameterTypes":["java.lang.String","java.lang.String[]"] }, {"name":"defaultHeaders","parameterTypes":["java.util.function.Consumer"] }, {"name":"defaultRequest","parameterTypes":["java.util.function.Consumer"] }, {"name":"defaultStatusHandler","parameterTypes":["java.util.function.Predicate","org.springframework.web.client.RestClient$ResponseSpec$ErrorHandler"] }, {"name":"defaultStatusHandler","parameterTypes":["org.springframework.web.client.ResponseErrorHandler"] }, {"name":"defaultUriVariables","parameterTypes":["java.util.Map"] }, {"name":"messageConverters","parameterTypes":["java.util.List"] }, {"name":"messageConverters","parameterTypes":["java.util.function.Consumer"] }, {"name":"observationConvention","parameterTypes":["org.springframework.http.client.observation.ClientRequestObservationConvention"] }, {"name":"observationRegistry","parameterTypes":["io.micrometer.observation.ObservationRegistry"] }, {"name":"requestFactory","parameterTypes":["org.springframework.http.client.ClientHttpRequestFactory"] }, {"name":"requestInitializer","parameterTypes":["org.springframework.http.client.ClientHttpRequestInitializer"] }, {"name":"requestInitializers","parameterTypes":["java.util.function.Consumer"] }, {"name":"requestInterceptor","parameterTypes":["org.springframework.http.client.ClientHttpRequestInterceptor"] }, {"name":"requestInterceptors","parameterTypes":["java.util.function.Consumer"] }, {"name":"uriBuilderFactory","parameterTypes":["org.springframework.web.util.UriBuilderFactory"] }]
},
{
  "name":"org.springframework.web.client.HttpClientErrorException"
},
{
  "name":"org.springframework.web.client.ResponseErrorHandler",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"handleError","parameterTypes":["java.net.URI","org.springframework.http.HttpMethod","org.springframework.http.client.ClientHttpResponse"] }]
},
{
  "name":"org.springframework.web.client.RestClient"
},
{
  "name":"org.springframework.web.client.RestClient$Builder",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.web.client.RestClient$ResponseSpec$ErrorHandler"
},
{
  "name":"org.springframework.web.client.RestTemplate"
},
{
  "name":"org.springframework.web.client.StatusHandler"
},
{
  "name":"org.springframework.web.context.ConfigurableWebApplicationContext"
},
{
  "name":"org.springframework.web.context.ServletContextAware",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.web.context.WebApplicationContext"
},
{
  "name":"org.springframework.web.context.request.NativeWebRequest"
},
{
  "name":"org.springframework.web.context.request.RequestAttributes"
},
{
  "name":"org.springframework.web.context.request.ServletRequestAttributes"
},
{
  "name":"org.springframework.web.context.request.WebRequest"
},
{
  "name":"org.springframework.web.context.request.async.WebAsyncManager"
},
{
  "name":"org.springframework.web.context.support.ServletContextResource"
},
{
  "name":"org.springframework.web.context.support.WebApplicationObjectSupport",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"setServletContext","parameterTypes":["jakarta.servlet.ServletContext"] }]
},
{
  "name":"org.springframework.web.cors.CorsConfiguration"
},
{
  "name":"org.springframework.web.cors.CorsConfigurationSource"
},
{
  "name":"org.springframework.web.cors.CorsProcessor"
},
{
  "name":"org.springframework.web.filter.CharacterEncodingFilter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"getEncoding","parameterTypes":[] }, {"name":"isForceRequestEncoding","parameterTypes":[] }, {"name":"isForceResponseEncoding","parameterTypes":[] }, {"name":"setEncoding","parameterTypes":["java.lang.String"] }, {"name":"setForceEncoding","parameterTypes":["boolean"] }, {"name":"setForceRequestEncoding","parameterTypes":["boolean"] }, {"name":"setForceResponseEncoding","parameterTypes":["boolean"] }]
},
{
  "name":"org.springframework.web.filter.FormContentFilter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"setCharset","parameterTypes":["java.nio.charset.Charset"] }, {"name":"setFormConverter","parameterTypes":["org.springframework.http.converter.FormHttpMessageConverter"] }]
},
{
  "name":"org.springframework.web.filter.GenericFilterBean",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"afterPropertiesSet","parameterTypes":[] }, {"name":"destroy","parameterTypes":[] }, {"name":"getEnvironment","parameterTypes":[] }, {"name":"getFilterConfig","parameterTypes":[] }, {"name":"init","parameterTypes":["jakarta.servlet.FilterConfig"] }, {"name":"setBeanName","parameterTypes":["java.lang.String"] }, {"name":"setEnvironment","parameterTypes":["org.springframework.core.env.Environment"] }, {"name":"setServletContext","parameterTypes":["jakarta.servlet.ServletContext"] }]
},
{
  "name":"org.springframework.web.filter.OncePerRequestFilter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"doFilter","parameterTypes":["jakarta.servlet.ServletRequest","jakarta.servlet.ServletResponse","jakarta.servlet.FilterChain"] }]
},
{
  "name":"org.springframework.web.filter.RequestContextFilter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"setThreadContextInheritable","parameterTypes":["boolean"] }]
},
{
  "name":"org.springframework.web.filter.ServerHttpObservationFilter",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.web.method.ControllerAdviceBean"
},
{
  "name":"org.springframework.web.method.HandlerMethod"
},
{
  "name":"org.springframework.web.method.annotation.ExceptionHandlerMethodResolver",
  "methods":[{"name":"noMatchingExceptionHandler","parameterTypes":[] }]
},
{
  "name":"org.springframework.web.method.annotation.HandlerMethodValidationException"
},
{
  "name":"org.springframework.web.method.annotation.InitBinderDataBinderFactory"
},
{
  "name":"org.springframework.web.method.annotation.MethodArgumentTypeMismatchException"
},
{
  "name":"org.springframework.web.method.annotation.ModelFactory"
},
{
  "name":"org.springframework.web.method.annotation.SessionAttributesHandler"
},
{
  "name":"org.springframework.web.method.support.CompositeUriComponentsContributor",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"contributeMethodArgument","parameterTypes":["org.springframework.core.MethodParameter","java.lang.Object","org.springframework.web.util.UriComponentsBuilder","java.util.Map","org.springframework.core.convert.ConversionService"] }, {"name":"supportsParameter","parameterTypes":["org.springframework.core.MethodParameter"] }]
},
{
  "name":"org.springframework.web.method.support.HandlerMethodArgumentResolver",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.web.method.support.InvocableHandlerMethod"
},
{
  "name":"org.springframework.web.method.support.ModelAndViewContainer"
},
{
  "name":"org.springframework.web.method.support.UriComponentsContributor",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.web.multipart.MultipartException"
},
{
  "name":"org.springframework.web.multipart.MultipartHttpServletRequest"
},
{
  "name":"org.springframework.web.multipart.MultipartResolver",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.web.multipart.support.MissingServletRequestPartException"
},
{
  "name":"org.springframework.web.multipart.support.StandardServletMultipartResolver",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"cleanupMultipart","parameterTypes":["org.springframework.web.multipart.MultipartHttpServletRequest"] }, {"name":"isMultipart","parameterTypes":["jakarta.servlet.http.HttpServletRequest"] }, {"name":"resolveMultipart","parameterTypes":["jakarta.servlet.http.HttpServletRequest"] }]
},
{
  "name":"org.springframework.web.reactive.DispatcherHandler"
},
{
  "name":"org.springframework.web.reactive.function.client.ClientRequestObservationConvention"
},
{
  "name":"org.springframework.web.reactive.function.client.DefaultWebClientBuilder",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"apply","parameterTypes":["java.util.function.Consumer"] }, {"name":"baseUrl","parameterTypes":["java.lang.String"] }, {"name":"build","parameterTypes":[] }, {"name":"clientConnector","parameterTypes":["org.springframework.http.client.reactive.ClientHttpConnector"] }, {"name":"clone","parameterTypes":[] }, {"name":"codecs","parameterTypes":["java.util.function.Consumer"] }, {"name":"defaultCookie","parameterTypes":["java.lang.String","java.lang.String[]"] }, {"name":"defaultCookies","parameterTypes":["java.util.function.Consumer"] }, {"name":"defaultHeader","parameterTypes":["java.lang.String","java.lang.String[]"] }, {"name":"defaultHeaders","parameterTypes":["java.util.function.Consumer"] }, {"name":"defaultRequest","parameterTypes":["java.util.function.Consumer"] }, {"name":"defaultStatusHandler","parameterTypes":["java.util.function.Predicate","java.util.function.Function"] }, {"name":"defaultUriVariables","parameterTypes":["java.util.Map"] }, {"name":"exchangeFunction","parameterTypes":["org.springframework.web.reactive.function.client.ExchangeFunction"] }, {"name":"exchangeStrategies","parameterTypes":["java.util.function.Consumer"] }, {"name":"exchangeStrategies","parameterTypes":["org.springframework.web.reactive.function.client.ExchangeStrategies"] }, {"name":"filter","parameterTypes":["org.springframework.web.reactive.function.client.ExchangeFilterFunction"] }, {"name":"filters","parameterTypes":["java.util.function.Consumer"] }, {"name":"observationConvention","parameterTypes":["org.springframework.web.reactive.function.client.ClientRequestObservationConvention"] }, {"name":"observationRegistry","parameterTypes":["io.micrometer.observation.ObservationRegistry"] }, {"name":"uriBuilderFactory","parameterTypes":["org.springframework.web.util.UriBuilderFactory"] }]
},
{
  "name":"org.springframework.web.reactive.function.client.ExchangeFilterFunction"
},
{
  "name":"org.springframework.web.reactive.function.client.ExchangeFunction"
},
{
  "name":"org.springframework.web.reactive.function.client.ExchangeStrategies"
},
{
  "name":"org.springframework.web.reactive.function.client.ExchangeStrategies$Builder"
},
{
  "name":"org.springframework.web.reactive.function.client.WebClient"
},
{
  "name":"org.springframework.web.reactive.function.client.WebClient$Builder",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.web.service.annotation.HttpExchange"
},
{
  "name":"org.springframework.web.servlet.DispatcherServlet",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.web.servlet.FlashMap"
},
{
  "name":"org.springframework.web.servlet.FlashMapManager",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.web.servlet.FrameworkServlet",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"destroy","parameterTypes":[] }, {"name":"getContextAttribute","parameterTypes":[] }, {"name":"getContextClass","parameterTypes":[] }, {"name":"getContextConfigLocation","parameterTypes":[] }, {"name":"getContextId","parameterTypes":[] }, {"name":"getNamespace","parameterTypes":[] }, {"name":"getServletContextAttributeName","parameterTypes":[] }, {"name":"isEnableLoggingRequestDetails","parameterTypes":[] }, {"name":"onApplicationEvent","parameterTypes":["org.springframework.context.event.ContextRefreshedEvent"] }, {"name":"refresh","parameterTypes":[] }, {"name":"setApplicationContext","parameterTypes":["org.springframework.context.ApplicationContext"] }, {"name":"setContextAttribute","parameterTypes":["java.lang.String"] }, {"name":"setContextClass","parameterTypes":["java.lang.Class"] }, {"name":"setContextConfigLocation","parameterTypes":["java.lang.String"] }, {"name":"setContextId","parameterTypes":["java.lang.String"] }, {"name":"setContextInitializerClasses","parameterTypes":["java.lang.String"] }, {"name":"setContextInitializers","parameterTypes":["org.springframework.context.ApplicationContextInitializer[]"] }, {"name":"setDispatchOptionsRequest","parameterTypes":["boolean"] }, {"name":"setDispatchTraceRequest","parameterTypes":["boolean"] }, {"name":"setEnableLoggingRequestDetails","parameterTypes":["boolean"] }, {"name":"setNamespace","parameterTypes":["java.lang.String"] }, {"name":"setPublishContext","parameterTypes":["boolean"] }, {"name":"setPublishEvents","parameterTypes":["boolean"] }, {"name":"setThreadContextInheritable","parameterTypes":["boolean"] }]
},
{
  "name":"org.springframework.web.servlet.HandlerAdapter",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.web.servlet.HandlerExceptionResolver",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.web.servlet.HandlerExecutionChain"
},
{
  "name":"org.springframework.web.servlet.HandlerInterceptor"
},
{
  "name":"org.springframework.web.servlet.HandlerMapping",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.web.servlet.HttpServletBean",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"getEnvironment","parameterTypes":[] }, {"name":"getServletName","parameterTypes":[] }, {"name":"init","parameterTypes":[] }, {"name":"setEnvironment","parameterTypes":["org.springframework.core.env.Environment"] }]
},
{
  "name":"org.springframework.web.servlet.LocaleResolver",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.web.servlet.ModelAndView"
},
{
  "name":"org.springframework.web.servlet.RequestToViewNameTranslator",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.web.servlet.ThemeResolver",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.web.servlet.View"
},
{
  "name":"org.springframework.web.servlet.ViewResolver",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.web.servlet.config.annotation.AsyncSupportConfigurer"
},
{
  "name":"org.springframework.web.servlet.config.annotation.ContentNegotiationConfigurer"
},
{
  "name":"org.springframework.web.servlet.config.annotation.CorsRegistry"
},
{
  "name":"org.springframework.web.servlet.config.annotation.DefaultServletHandlerConfigurer"
},
{
  "name":"org.springframework.web.servlet.config.annotation.DelegatingWebMvcConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"setConfigurers","parameterTypes":["java.util.List"] }]
},
{
  "name":"org.springframework.web.servlet.config.annotation.InterceptorRegistry"
},
{
  "name":"org.springframework.web.servlet.config.annotation.PathMatchConfigurer"
},
{
  "name":"org.springframework.web.servlet.config.annotation.ResourceChainRegistration"
},
{
  "name":"org.springframework.web.servlet.config.annotation.ResourceHandlerRegistration"
},
{
  "name":"org.springframework.web.servlet.config.annotation.ResourceHandlerRegistry"
},
{
  "name":"org.springframework.web.servlet.config.annotation.ViewControllerRegistry"
},
{
  "name":"org.springframework.web.servlet.config.annotation.ViewResolverRegistry"
},
{
  "name":"org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"beanNameHandlerMapping","parameterTypes":["org.springframework.format.support.FormattingConversionService","org.springframework.web.servlet.resource.ResourceUrlProvider"] }, {"name":"defaultServletHandlerMapping","parameterTypes":[] }, {"name":"handlerExceptionResolver","parameterTypes":["org.springframework.web.accept.ContentNegotiationManager"] }, {"name":"handlerFunctionAdapter","parameterTypes":[] }, {"name":"httpRequestHandlerAdapter","parameterTypes":[] }, {"name":"mvcHandlerMappingIntrospector","parameterTypes":[] }, {"name":"mvcPathMatcher","parameterTypes":[] }, {"name":"mvcPatternParser","parameterTypes":[] }, {"name":"mvcResourceUrlProvider","parameterTypes":[] }, {"name":"mvcUriComponentsContributor","parameterTypes":["org.springframework.format.support.FormattingConversionService","org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter"] }, {"name":"mvcUrlPathHelper","parameterTypes":[] }, {"name":"mvcViewResolver","parameterTypes":["org.springframework.web.accept.ContentNegotiationManager"] }, {"name":"requestMappingHandlerAdapter","parameterTypes":["org.springframework.web.accept.ContentNegotiationManager","org.springframework.format.support.FormattingConversionService","org.springframework.validation.Validator"] }, {"name":"requestMappingHandlerMapping","parameterTypes":["org.springframework.web.accept.ContentNegotiationManager","org.springframework.format.support.FormattingConversionService","org.springframework.web.servlet.resource.ResourceUrlProvider"] }, {"name":"resourceHandlerMapping","parameterTypes":["org.springframework.web.accept.ContentNegotiationManager","org.springframework.format.support.FormattingConversionService","org.springframework.web.servlet.resource.ResourceUrlProvider"] }, {"name":"routerFunctionMapping","parameterTypes":["org.springframework.format.support.FormattingConversionService","org.springframework.web.servlet.resource.ResourceUrlProvider"] }, {"name":"setApplicationContext","parameterTypes":["org.springframework.context.ApplicationContext"] }, {"name":"setServletContext","parameterTypes":["jakarta.servlet.ServletContext"] }, {"name":"simpleControllerHandlerAdapter","parameterTypes":[] }, {"name":"viewControllerHandlerMapping","parameterTypes":["org.springframework.format.support.FormattingConversionService","org.springframework.web.servlet.resource.ResourceUrlProvider"] }]
},
{
  "name":"org.springframework.web.servlet.config.annotation.WebMvcConfigurer",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"addArgumentResolvers","parameterTypes":["java.util.List"] }, {"name":"addCorsMappings","parameterTypes":["org.springframework.web.servlet.config.annotation.CorsRegistry"] }, {"name":"addErrorResponseInterceptors","parameterTypes":["java.util.List"] }, {"name":"addFormatters","parameterTypes":["org.springframework.format.FormatterRegistry"] }, {"name":"addInterceptors","parameterTypes":["org.springframework.web.servlet.config.annotation.InterceptorRegistry"] }, {"name":"addResourceHandlers","parameterTypes":["org.springframework.web.servlet.config.annotation.ResourceHandlerRegistry"] }, {"name":"addReturnValueHandlers","parameterTypes":["java.util.List"] }, {"name":"addViewControllers","parameterTypes":["org.springframework.web.servlet.config.annotation.ViewControllerRegistry"] }, {"name":"configureAsyncSupport","parameterTypes":["org.springframework.web.servlet.config.annotation.AsyncSupportConfigurer"] }, {"name":"configureContentNegotiation","parameterTypes":["org.springframework.web.servlet.config.annotation.ContentNegotiationConfigurer"] }, {"name":"configureDefaultServletHandling","parameterTypes":["org.springframework.web.servlet.config.annotation.DefaultServletHandlerConfigurer"] }, {"name":"configureHandlerExceptionResolvers","parameterTypes":["java.util.List"] }, {"name":"configureMessageConverters","parameterTypes":["java.util.List"] }, {"name":"configurePathMatch","parameterTypes":["org.springframework.web.servlet.config.annotation.PathMatchConfigurer"] }, {"name":"configureViewResolvers","parameterTypes":["org.springframework.web.servlet.config.annotation.ViewResolverRegistry"] }, {"name":"extendHandlerExceptionResolvers","parameterTypes":["java.util.List"] }, {"name":"extendMessageConverters","parameterTypes":["java.util.List"] }, {"name":"getMessageCodesResolver","parameterTypes":[] }, {"name":"getValidator","parameterTypes":[] }]
},
{
  "name":"org.springframework.web.servlet.function.HandlerFunction"
},
{
  "name":"org.springframework.web.servlet.function.RouterFunction"
},
{
  "name":"org.springframework.web.servlet.function.ServerRequest"
},
{
  "name":"org.springframework.web.servlet.function.ServerResponse"
},
{
  "name":"org.springframework.web.servlet.function.support.HandlerFunctionAdapter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"getLastModified","parameterTypes":["jakarta.servlet.http.HttpServletRequest","java.lang.Object"] }, {"name":"getOrder","parameterTypes":[] }, {"name":"handle","parameterTypes":["jakarta.servlet.http.HttpServletRequest","jakarta.servlet.http.HttpServletResponse","java.lang.Object"] }, {"name":"supports","parameterTypes":["java.lang.Object"] }]
},
{
  "name":"org.springframework.web.servlet.function.support.RouterFunctionMapping",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"afterPropertiesSet","parameterTypes":[] }, {"name":"match","parameterTypes":["jakarta.servlet.http.HttpServletRequest","java.lang.String"] }]
},
{
  "name":"org.springframework.web.servlet.handler.AbstractDetectingUrlHandlerMapping",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"initApplicationContext","parameterTypes":[] }, {"name":"setDetectHandlersInAncestorContexts","parameterTypes":["boolean"] }]
},
{
  "name":"org.springframework.web.servlet.handler.AbstractHandlerMapping",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"getCorsConfigurationSource","parameterTypes":[] }, {"name":"getCorsProcessor","parameterTypes":[] }, {"name":"getDefaultHandler","parameterTypes":[] }, {"name":"getHandler","parameterTypes":["jakarta.servlet.http.HttpServletRequest"] }, {"name":"getOrder","parameterTypes":[] }, {"name":"getPathMatcher","parameterTypes":[] }, {"name":"getPatternParser","parameterTypes":[] }, {"name":"getUrlPathHelper","parameterTypes":[] }, {"name":"setAlwaysUseFullPath","parameterTypes":["boolean"] }, {"name":"setBeanName","parameterTypes":["java.lang.String"] }, {"name":"setCorsConfigurationSource","parameterTypes":["org.springframework.web.cors.CorsConfigurationSource"] }, {"name":"setCorsConfigurations","parameterTypes":["java.util.Map"] }, {"name":"setCorsProcessor","parameterTypes":["org.springframework.web.cors.CorsProcessor"] }, {"name":"setDefaultHandler","parameterTypes":["java.lang.Object"] }, {"name":"setInterceptors","parameterTypes":["java.lang.Object[]"] }, {"name":"setOrder","parameterTypes":["int"] }, {"name":"setPathMatcher","parameterTypes":["org.springframework.util.PathMatcher"] }, {"name":"setPatternParser","parameterTypes":["org.springframework.web.util.pattern.PathPatternParser"] }, {"name":"setRemoveSemicolonContent","parameterTypes":["boolean"] }, {"name":"setUrlDecode","parameterTypes":["boolean"] }, {"name":"setUrlPathHelper","parameterTypes":["org.springframework.web.util.UrlPathHelper"] }, {"name":"usesPathPatterns","parameterTypes":[] }]
},
{
  "name":"org.springframework.web.servlet.handler.AbstractHandlerMethodMapping",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"getDirectPaths","parameterTypes":["java.lang.Object"] }, {"name":"getHandlerMethods","parameterTypes":[] }, {"name":"getHandlerMethodsForMappingName","parameterTypes":["java.lang.String"] }, {"name":"getMappingPathPatterns","parameterTypes":["java.lang.Object"] }, {"name":"getMatchingMapping","parameterTypes":["java.lang.Object","jakarta.servlet.http.HttpServletRequest"] }, {"name":"getNamingStrategy","parameterTypes":[] }, {"name":"handleMatch","parameterTypes":["java.lang.Object","java.lang.String","jakarta.servlet.http.HttpServletRequest"] }, {"name":"initCorsConfiguration","parameterTypes":["java.lang.Object","java.lang.reflect.Method","java.lang.Object"] }, {"name":"registerHandlerMethod","parameterTypes":["java.lang.Object","java.lang.reflect.Method","java.lang.Object"] }, {"name":"registerMapping","parameterTypes":["java.lang.Object","java.lang.Object","java.lang.reflect.Method"] }, {"name":"setDetectHandlerMethodsInAncestorContexts","parameterTypes":["boolean"] }, {"name":"setHandlerMethodMappingNamingStrategy","parameterTypes":["org.springframework.web.servlet.handler.HandlerMethodMappingNamingStrategy"] }, {"name":"setPatternParser","parameterTypes":["org.springframework.web.util.pattern.PathPatternParser"] }, {"name":"unregisterMapping","parameterTypes":["java.lang.Object"] }]
},
{
  "name":"org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$EmptyHandler",
  "methods":[{"name":"handle","parameterTypes":[] }]
},
{
  "name":"org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry"
},
{
  "name":"org.springframework.web.servlet.handler.AbstractUrlHandlerMapping",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"getRootHandler","parameterTypes":[] }, {"name":"match","parameterTypes":["jakarta.servlet.http.HttpServletRequest","java.lang.String"] }, {"name":"registerHandler","parameterTypes":["java.lang.String","java.lang.Object"] }, {"name":"registerHandler","parameterTypes":["java.lang.String[]","java.lang.String"] }, {"name":"setLazyInitHandlers","parameterTypes":["boolean"] }, {"name":"setPatternParser","parameterTypes":["org.springframework.web.util.pattern.PathPatternParser"] }, {"name":"setRootHandler","parameterTypes":["java.lang.Object"] }, {"name":"setUseTrailingSlashMatch","parameterTypes":["boolean"] }, {"name":"unregisterHandler","parameterTypes":["java.lang.String"] }, {"name":"useTrailingSlashMatch","parameterTypes":[] }]
},
{
  "name":"org.springframework.web.servlet.handler.BeanNameUrlHandlerMapping",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.web.servlet.handler.HandlerExceptionResolverComposite",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"getOrder","parameterTypes":[] }, {"name":"resolveException","parameterTypes":["jakarta.servlet.http.HttpServletRequest","jakarta.servlet.http.HttpServletResponse","java.lang.Object","java.lang.Exception"] }]
},
{
  "name":"org.springframework.web.servlet.handler.HandlerMappingIntrospector"
},
{
  "name":"org.springframework.web.servlet.handler.HandlerMethodMappingNamingStrategy"
},
{
  "name":"org.springframework.web.servlet.handler.MappedInterceptor"
},
{
  "name":"org.springframework.web.servlet.handler.MatchableHandlerMapping",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.web.servlet.handler.RequestMatchResult"
},
{
  "name":"org.springframework.web.servlet.handler.SimpleUrlHandlerMapping",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.web.servlet.i18n.AbstractLocaleResolver",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"setDefaultLocale","parameterTypes":["java.util.Locale"] }]
},
{
  "name":"org.springframework.web.servlet.i18n.AcceptHeaderLocaleResolver",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"resolveLocale","parameterTypes":["jakarta.servlet.http.HttpServletRequest"] }, {"name":"setLocale","parameterTypes":["jakarta.servlet.http.HttpServletRequest","jakarta.servlet.http.HttpServletResponse","java.util.Locale"] }]
},
{
  "name":"org.springframework.web.servlet.mvc.HttpRequestHandlerAdapter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"getLastModified","parameterTypes":["jakarta.servlet.http.HttpServletRequest","java.lang.Object"] }, {"name":"handle","parameterTypes":["jakarta.servlet.http.HttpServletRequest","jakarta.servlet.http.HttpServletResponse","java.lang.Object"] }, {"name":"supports","parameterTypes":["java.lang.Object"] }]
},
{
  "name":"org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"getLastModified","parameterTypes":["jakarta.servlet.http.HttpServletRequest","java.lang.Object"] }, {"name":"handle","parameterTypes":["jakarta.servlet.http.HttpServletRequest","jakarta.servlet.http.HttpServletResponse","java.lang.Object"] }, {"name":"supports","parameterTypes":["java.lang.Object"] }]
},
{
  "name":"org.springframework.web.servlet.mvc.condition.PathPatternsRequestCondition"
},
{
  "name":"org.springframework.web.servlet.mvc.condition.PatternsRequestCondition"
},
{
  "name":"org.springframework.web.servlet.mvc.condition.RequestCondition"
},
{
  "name":"org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"getLastModified","parameterTypes":["jakarta.servlet.http.HttpServletRequest","java.lang.Object"] }, {"name":"getOrder","parameterTypes":[] }, {"name":"handle","parameterTypes":["jakarta.servlet.http.HttpServletRequest","jakarta.servlet.http.HttpServletResponse","java.lang.Object"] }, {"name":"setOrder","parameterTypes":["int"] }, {"name":"supports","parameterTypes":["java.lang.Object"] }]
},
{
  "name":"org.springframework.web.servlet.mvc.method.RequestMappingInfo"
},
{
  "name":"org.springframework.web.servlet.mvc.method.RequestMappingInfo$BuilderConfiguration"
},
{
  "name":"org.springframework.web.servlet.mvc.method.RequestMappingInfoHandlerMapping",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"initCorsConfiguration","parameterTypes":["java.lang.Object","java.lang.reflect.Method","java.lang.Object"] }, {"name":"registerHandlerMethod","parameterTypes":["java.lang.Object","java.lang.reflect.Method","java.lang.Object"] }, {"name":"registerMapping","parameterTypes":["java.lang.Object","java.lang.Object","java.lang.reflect.Method"] }]
},
{
  "name":"org.springframework.web.servlet.mvc.method.RequestMappingInfoHandlerMapping$HttpOptionsHandler",
  "methods":[{"name":"handle","parameterTypes":[] }]
},
{
  "name":"org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver"
},
{
  "name":"org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"afterPropertiesSet","parameterTypes":[] }, {"name":"setBeanFactory","parameterTypes":["org.springframework.beans.factory.BeanFactory"] }]
},
{
  "name":"org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"afterPropertiesSet","parameterTypes":[] }, {"name":"getBuilderConfiguration","parameterTypes":[] }, {"name":"getContentNegotiationManager","parameterTypes":[] }, {"name":"getFileExtensions","parameterTypes":[] }, {"name":"getPathPrefixes","parameterTypes":[] }, {"name":"initCorsConfiguration","parameterTypes":["java.lang.Object","java.lang.reflect.Method","java.lang.Object"] }, {"name":"match","parameterTypes":["jakarta.servlet.http.HttpServletRequest","java.lang.String"] }, {"name":"registerHandlerMethod","parameterTypes":["java.lang.Object","java.lang.reflect.Method","java.lang.Object"] }, {"name":"registerMapping","parameterTypes":["java.lang.Object","java.lang.Object","java.lang.reflect.Method"] }, {"name":"registerMapping","parameterTypes":["org.springframework.web.servlet.mvc.method.RequestMappingInfo","java.lang.Object","java.lang.reflect.Method"] }, {"name":"setContentNegotiationManager","parameterTypes":["org.springframework.web.accept.ContentNegotiationManager"] }, {"name":"setEmbeddedValueResolver","parameterTypes":["org.springframework.util.StringValueResolver"] }, {"name":"setPathPrefixes","parameterTypes":["java.util.Map"] }, {"name":"setPatternParser","parameterTypes":["org.springframework.web.util.pattern.PathPatternParser"] }, {"name":"setUseRegisteredSuffixPatternMatch","parameterTypes":["boolean"] }, {"name":"setUseSuffixPatternMatch","parameterTypes":["boolean"] }, {"name":"setUseTrailingSlashMatch","parameterTypes":["boolean"] }, {"name":"useRegisteredSuffixPatternMatch","parameterTypes":[] }, {"name":"useSuffixPatternMatch","parameterTypes":[] }, {"name":"useTrailingSlashMatch","parameterTypes":[] }]
},
{
  "name":"org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping$AnnotationDescriptor"
},
{
  "name":"org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod"
},
{
  "name":"org.springframework.web.servlet.resource.AbstractResourceResolver",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"resolveResource","parameterTypes":["jakarta.servlet.http.HttpServletRequest","java.lang.String","java.util.List","org.springframework.web.servlet.resource.ResourceResolverChain"] }, {"name":"resolveUrlPath","parameterTypes":["java.lang.String","java.util.List","org.springframework.web.servlet.resource.ResourceResolverChain"] }]
},
{
  "name":"org.springframework.web.servlet.resource.LiteWebJarsResourceResolver",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.web.servlet.resource.NoResourceFoundException"
},
{
  "name":"org.springframework.web.servlet.resource.ResourceResolver",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.web.servlet.resource.ResourceResolverChain"
},
{
  "name":"org.springframework.web.servlet.resource.ResourceTransformer",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.web.servlet.resource.ResourceTransformerChain"
},
{
  "name":"org.springframework.web.servlet.resource.ResourceUrlProvider",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"onApplicationEvent","parameterTypes":["org.springframework.context.ApplicationEvent"] }, {"name":"setApplicationContext","parameterTypes":["org.springframework.context.ApplicationContext"] }]
},
{
  "name":"org.springframework.web.servlet.support.AbstractFlashMapManager",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"getFlashMapTimeout","parameterTypes":[] }, {"name":"getUrlPathHelper","parameterTypes":[] }, {"name":"retrieveAndUpdate","parameterTypes":["jakarta.servlet.http.HttpServletRequest","jakarta.servlet.http.HttpServletResponse"] }, {"name":"saveOutputFlashMap","parameterTypes":["org.springframework.web.servlet.FlashMap","jakarta.servlet.http.HttpServletRequest","jakarta.servlet.http.HttpServletResponse"] }, {"name":"setFlashMapTimeout","parameterTypes":["int"] }, {"name":"setUrlPathHelper","parameterTypes":["org.springframework.web.util.UrlPathHelper"] }]
},
{
  "name":"org.springframework.web.servlet.support.SessionFlashMapManager",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.web.servlet.support.WebContentGenerator",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.web.servlet.theme.AbstractThemeResolver",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"getDefaultThemeName","parameterTypes":[] }, {"name":"setDefaultThemeName","parameterTypes":["java.lang.String"] }]
},
{
  "name":"org.springframework.web.servlet.theme.FixedThemeResolver",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"resolveThemeName","parameterTypes":["jakarta.servlet.http.HttpServletRequest"] }, {"name":"setThemeName","parameterTypes":["jakarta.servlet.http.HttpServletRequest","jakarta.servlet.http.HttpServletResponse","java.lang.String"] }]
},
{
  "name":"org.springframework.web.servlet.view.AbstractCachingViewResolver",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"clearCache","parameterTypes":[] }, {"name":"getCacheFilter","parameterTypes":[] }, {"name":"getCacheLimit","parameterTypes":[] }, {"name":"isCache","parameterTypes":[] }, {"name":"isCacheUnresolved","parameterTypes":[] }, {"name":"removeFromCache","parameterTypes":["java.lang.String","java.util.Locale"] }, {"name":"resolveViewName","parameterTypes":["java.lang.String","java.util.Locale"] }, {"name":"setCache","parameterTypes":["boolean"] }, {"name":"setCacheFilter","parameterTypes":["org.springframework.web.servlet.view.AbstractCachingViewResolver$CacheFilter"] }, {"name":"setCacheLimit","parameterTypes":["int"] }, {"name":"setCacheUnresolved","parameterTypes":["boolean"] }]
},
{
  "name":"org.springframework.web.servlet.view.AbstractCachingViewResolver$CacheFilter"
},
{
  "name":"org.springframework.web.servlet.view.AbstractUrlBasedView"
},
{
  "name":"org.springframework.web.servlet.view.BeanNameViewResolver"
},
{
  "name":"org.springframework.web.servlet.view.ContentNegotiatingViewResolver",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"afterPropertiesSet","parameterTypes":[] }, {"name":"getOrder","parameterTypes":[] }, {"name":"resolveViewName","parameterTypes":["java.lang.String","java.util.Locale"] }]
},
{
  "name":"org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"getViewName","parameterTypes":["jakarta.servlet.http.HttpServletRequest"] }]
},
{
  "name":"org.springframework.web.servlet.view.InternalResourceViewResolver",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.web.servlet.view.UrlBasedViewResolver",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"getAttributesMap","parameterTypes":[] }, {"name":"getOrder","parameterTypes":[] }, {"name":"getRedirectHosts","parameterTypes":[] }, {"name":"setAttributes","parameterTypes":["java.util.Properties"] }, {"name":"setAttributesMap","parameterTypes":["java.util.Map"] }, {"name":"setContentType","parameterTypes":["java.lang.String"] }, {"name":"setExposeContextBeansAsAttributes","parameterTypes":["boolean"] }, {"name":"setExposePathVariables","parameterTypes":["java.lang.Boolean"] }, {"name":"setExposedContextBeanNames","parameterTypes":["java.lang.String[]"] }, {"name":"setOrder","parameterTypes":["int"] }, {"name":"setPrefix","parameterTypes":["java.lang.String"] }, {"name":"setRedirectContextRelative","parameterTypes":["boolean"] }, {"name":"setRedirectHosts","parameterTypes":["java.lang.String[]"] }, {"name":"setRedirectHttp10Compatible","parameterTypes":["boolean"] }, {"name":"setRequestContextAttribute","parameterTypes":["java.lang.String"] }, {"name":"setSuffix","parameterTypes":["java.lang.String"] }, {"name":"setViewClass","parameterTypes":["java.lang.Class"] }, {"name":"setViewNames","parameterTypes":["java.lang.String[]"] }]
},
{
  "name":"org.springframework.web.servlet.view.ViewResolverComposite",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"afterPropertiesSet","parameterTypes":[] }, {"name":"getOrder","parameterTypes":[] }, {"name":"resolveViewName","parameterTypes":["java.lang.String","java.util.Locale"] }, {"name":"setApplicationContext","parameterTypes":["org.springframework.context.ApplicationContext"] }, {"name":"setServletContext","parameterTypes":["jakarta.servlet.ServletContext"] }]
},
{
  "name":"org.springframework.web.util.DefaultUriBuilderFactory"
},
{
  "name":"org.springframework.web.util.UriBuilderFactory"
},
{
  "name":"org.springframework.web.util.UriComponentsBuilder"
},
{
  "name":"org.springframework.web.util.UrlPathHelper",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.web.util.pattern.PathPattern"
},
{
  "name":"org.springframework.web.util.pattern.PathPatternParser",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.web.util.pattern.PatternParseException"
},
{
  "name":"org.stringtemplate.v4.misc.ObjectModelAdaptor",
  "fields":[{"name":"INVALID_MEMBER"}]
},
{
  "name":"org.synchronoss.cloud.nio.multipart.NioMultipartParser"
},
{
  "name":"org.thymeleaf.spring6.SpringTemplateEngine"
},
{
  "name":"org.webjars.WebJarAssetLocator"
},
{
  "name":"org.webjars.WebJarVersionLocator"
},
{
  "name":"org.xmlbeam.XBProjector"
},
{
  "name":"org.yaml.snakeyaml.Yaml"
},
{
  "name":"reactor.core.publisher.Flux"
},
{
  "name":"reactor.core.publisher.FluxAutoConnect",
  "fields":[{"name":"remaining"}]
},
{
  "name":"reactor.core.publisher.FluxConcatIterable$ConcatIterableSubscriber",
  "fields":[{"name":"wip"}]
},
{
  "name":"reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber",
  "fields":[{"name":"fallbackValue"}]
},
{
  "name":"reactor.core.publisher.FluxDoFinally$DoFinallySubscriber",
  "fields":[{"name":"once"}]
},
{
  "name":"reactor.core.publisher.FluxFlattenIterable$FlattenIterableSubscriber",
  "fields":[{"name":"error"}, {"name":"requested"}, {"name":"wip"}]
},
{
  "name":"reactor.core.publisher.FluxOnErrorReturn$ReturnSubscriber",
  "fields":[{"name":"requested"}]
},
{
  "name":"reactor.core.publisher.FluxPublish",
  "fields":[{"name":"connection"}]
},
{
  "name":"reactor.core.publisher.FluxPublish$PubSubInner",
  "fields":[{"name":"requested"}]
},
{
  "name":"reactor.core.publisher.FluxPublish$PublishSubscriber",
  "fields":[{"name":"error"}, {"name":"state"}, {"name":"subscribers"}]
},
{
  "name":"reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber",
  "fields":[{"name":"index"}, {"name":"timeout"}]
},
{
  "name":"reactor.core.publisher.FluxTimeout$TimeoutTimeoutSubscriber",
  "fields":[{"name":"s"}]
},
{
  "name":"reactor.core.publisher.Mono"
},
{
  "name":"reactor.core.publisher.MonoCacheTime",
  "fields":[{"name":"state"}]
},
{
  "name":"reactor.core.publisher.MonoCompletionStage$MonoCompletionStageSubscription",
  "fields":[{"name":"requestedOnce"}]
},
{
  "name":"reactor.core.publisher.MonoDelay$MonoDelayRunnable",
  "fields":[{"name":"state"}]
},
{
  "name":"reactor.core.publisher.MonoFlatMap$FlatMapMain",
  "fields":[{"name":"second"}]
},
{
  "name":"reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain",
  "fields":[{"name":"state"}]
},
{
  "name":"reactor.core.publisher.Operators$BaseFluxToMonoOperator",
  "fields":[{"name":"state"}]
},
{
  "name":"reactor.core.publisher.Operators$MonoInnerProducerBase",
  "fields":[{"name":"state"}]
},
{
  "name":"reactor.core.publisher.Operators$MultiSubscriptionSubscriber",
  "fields":[{"name":"missedProduced"}, {"name":"missedRequested"}, {"name":"missedSubscription"}, {"name":"wip"}]
},
{
  "name":"reactor.core.publisher.Operators$ScalarSubscription",
  "fields":[{"name":"once"}]
},
{
  "name":"reactor.core.publisher.SignalType"
},
{
  "name":"reactor.core.publisher.SinkManyBestEffort",
  "fields":[{"name":"subscribers"}]
},
{
  "name":"reactor.core.publisher.SinksSpecs$AbstractSerializedSink",
  "fields":[{"name":"lockedAt"}, {"name":"wip"}]
},
{
  "name":"reactor.core.publisher.SynchronousSink"
},
{
  "name":"reactor.core.scheduler.BoundedElasticThreadPerTaskScheduler",
  "fields":[{"name":"state"}]
},
{
  "name":"reactor.core.scheduler.BoundedElasticThreadPerTaskScheduler$BoundedServices",
  "fields":[{"name":"activeExecutorsState"}]
},
{
  "name":"reactor.core.scheduler.BoundedElasticThreadPerTaskScheduler$SequentialThreadPerTaskExecutor",
  "fields":[{"name":"size"}, {"name":"wipAndRefCnt"}]
},
{
  "name":"reactor.core.scheduler.DelegateServiceScheduler",
  "fields":[{"name":"state"}]
},
{
  "name":"reactor.core.scheduler.ParallelScheduler",
  "fields":[{"name":"state"}]
},
{
  "name":"reactor.core.scheduler.SchedulerTask",
  "fields":[{"name":"future"}, {"name":"parent"}]
},
{
  "name":"reactor.netty.http.client.HttpClient"
},
{
  "name":"reactor.netty5.http.client.HttpClient"
},
{
  "name":"reactor.tools.agent.ReactorDebugAgent"
},
{
  "name":"reactor.util.concurrent.MpscLinkedQueue",
  "fields":[{"name":"consumerNode"}, {"name":"producerNode"}]
},
{
  "name":"reactor.util.concurrent.MpscLinkedQueue$LinkedQueueNode",
  "fields":[{"name":"next"}]
},
{
  "name":"reactor.util.concurrent.SpscArrayQueueConsumer",
  "fields":[{"name":"consumerIndex"}]
},
{
  "name":"reactor.util.concurrent.SpscArrayQueueProducer",
  "fields":[{"name":"producerIndex"}]
},
{
  "name":"reactor.util.context.Context"
},
{
  "name":"reactor.util.context.ContextView"
},
{
  "name":"reactor.util.context.ReactorContextAccessor"
},
{
  "name":"reactor.util.function.Tuple2"
},
{
  "name":"scala.Option"
},
{
  "name":"scala.util.Properties"
},
{
  "name":"software.amazon.awssdk.annotations.Immutable"
},
{
  "name":"software.amazon.awssdk.annotations.SdkInternalApi"
},
{
  "name":"software.amazon.awssdk.annotations.SdkProtectedApi"
},
{
  "name":"software.amazon.awssdk.annotations.SdkPublicApi"
},
{
  "name":"software.amazon.awssdk.annotations.ThreadSafe"
},
{
  "name":"software.amazon.awssdk.auth.credentials.AwsCredentials"
},
{
  "name":"software.amazon.awssdk.auth.credentials.AwsCredentialsProvider",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"identityType","parameterTypes":[] }, {"name":"resolveIdentity","parameterTypes":["software.amazon.awssdk.identity.spi.ResolveIdentityRequest"] }]
},
{
  "name":"software.amazon.awssdk.auth.credentials.AwsCredentialsProviderChain",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"resolveCredentials","parameterTypes":[] }, {"name":"toBuilder","parameterTypes":[] }, {"name":"toString","parameterTypes":[] }]
},
{
  "name":"software.amazon.awssdk.auth.credentials.AwsCredentialsProviderChain$Builder"
},
{
  "name":"software.amazon.awssdk.auth.credentials.ProfileCredentialsProvider"
},
{
  "name":"software.amazon.awssdk.auth.credentials.StaticCredentialsProvider"
},
{
  "name":"software.amazon.awssdk.awscore.AwsClient",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"software.amazon.awssdk.awscore.AwsRequestOverrideConfiguration"
},
{
  "name":"software.amazon.awssdk.awscore.client.builder.AwsClientBuilder",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"credentialsProvider","parameterTypes":["software.amazon.awssdk.auth.credentials.AwsCredentialsProvider"] }]
},
{
  "name":"software.amazon.awssdk.awscore.client.builder.AwsDefaultClientBuilder",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"credentialsProvider","parameterTypes":["software.amazon.awssdk.identity.spi.IdentityProvider"] }, {"name":"defaultsMode","parameterTypes":["software.amazon.awssdk.awscore.defaultsmode.DefaultsMode"] }, {"name":"dualstackEnabled","parameterTypes":["java.lang.Boolean"] }, {"name":"fipsEnabled","parameterTypes":["java.lang.Boolean"] }, {"name":"region","parameterTypes":["software.amazon.awssdk.regions.Region"] }]
},
{
  "name":"software.amazon.awssdk.awscore.client.builder.AwsSyncClientBuilder",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"software.amazon.awssdk.awscore.defaultsmode.DefaultsMode"
},
{
  "name":"software.amazon.awssdk.awscore.exception.AwsServiceException"
},
{
  "name":"software.amazon.awssdk.awscore.presigner.PresignRequest"
},
{
  "name":"software.amazon.awssdk.awscore.presigner.PresignedRequest$Builder"
},
{
  "name":"software.amazon.awssdk.awscore.presigner.SdkPresigner",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"software.amazon.awssdk.core.ClientEndpointProvider"
},
{
  "name":"software.amazon.awssdk.core.ClientType"
},
{
  "name":"software.amazon.awssdk.core.CompressionConfiguration"
},
{
  "name":"software.amazon.awssdk.core.RequestOverrideConfiguration"
},
{
  "name":"software.amazon.awssdk.core.ResponseBytes"
},
{
  "name":"software.amazon.awssdk.core.ResponseInputStream"
},
{
  "name":"software.amazon.awssdk.core.SdkBytes"
},
{
  "name":"software.amazon.awssdk.core.SdkClient",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"software.amazon.awssdk.core.SdkPlugin"
},
{
  "name":"software.amazon.awssdk.core.SdkRequest"
},
{
  "name":"software.amazon.awssdk.core.SelectedAuthScheme"
},
{
  "name":"software.amazon.awssdk.core.client.builder.SdkClientBuilder",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"overrideConfiguration","parameterTypes":["java.util.function.Consumer"] }]
},
{
  "name":"software.amazon.awssdk.core.client.builder.SdkDefaultClientBuilder",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"addPlugin","parameterTypes":["software.amazon.awssdk.core.SdkPlugin"] }, {"name":"build","parameterTypes":[] }, {"name":"endpointOverride","parameterTypes":["java.net.URI"] }, {"name":"overrideConfiguration","parameterTypes":[] }, {"name":"overrideConfiguration","parameterTypes":["software.amazon.awssdk.core.client.config.ClientOverrideConfiguration"] }, {"name":"plugins","parameterTypes":[] }]
},
{
  "name":"software.amazon.awssdk.core.client.builder.SdkSyncClientBuilder",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"software.amazon.awssdk.core.client.config.ClientAsyncConfiguration"
},
{
  "name":"software.amazon.awssdk.core.client.config.ClientOverrideConfiguration"
},
{
  "name":"software.amazon.awssdk.core.client.config.SdkClientConfiguration"
},
{
  "name":"software.amazon.awssdk.core.client.config.SdkClientConfiguration$Builder"
},
{
  "name":"software.amazon.awssdk.core.exception.SdkClientException"
},
{
  "name":"software.amazon.awssdk.core.http.ExecutionContext"
},
{
  "name":"software.amazon.awssdk.core.interceptor.InterceptorContext$Builder"
},
{
  "name":"software.amazon.awssdk.core.retry.RetryMode"
},
{
  "name":"software.amazon.awssdk.core.sync.RequestBody"
},
{
  "name":"software.amazon.awssdk.core.sync.ResponseTransformer"
},
{
  "name":"software.amazon.awssdk.http.ContentStreamProvider"
},
{
  "name":"software.amazon.awssdk.http.SdkHttpClient"
},
{
  "name":"software.amazon.awssdk.http.SdkHttpClient$Builder"
},
{
  "name":"software.amazon.awssdk.http.SdkHttpFullRequest"
},
{
  "name":"software.amazon.awssdk.http.SdkHttpRequest"
},
{
  "name":"software.amazon.awssdk.http.SdkHttpRequest$Builder"
},
{
  "name":"software.amazon.awssdk.http.apache.ApacheSdkHttpService"
},
{
  "name":"software.amazon.awssdk.http.async.SdkAsyncHttpClient"
},
{
  "name":"software.amazon.awssdk.http.async.SdkAsyncHttpClient$Builder"
},
{
  "name":"software.amazon.awssdk.http.auth.spi.scheme.AuthScheme"
},
{
  "name":"software.amazon.awssdk.http.auth.spi.signer.SignedRequest"
},
{
  "name":"software.amazon.awssdk.http.nio.netty.NettySdkAsyncHttpService"
},
{
  "name":"software.amazon.awssdk.identity.spi.Identity"
},
{
  "name":"software.amazon.awssdk.identity.spi.IdentityProvider",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"resolveIdentity","parameterTypes":[] }, {"name":"resolveIdentity","parameterTypes":["java.util.function.Consumer"] }]
},
{
  "name":"software.amazon.awssdk.identity.spi.IdentityProviders"
},
{
  "name":"software.amazon.awssdk.identity.spi.ResolveIdentityRequest"
},
{
  "name":"software.amazon.awssdk.metrics.MetricCollector"
},
{
  "name":"software.amazon.awssdk.metrics.MetricPublisher"
},
{
  "name":"software.amazon.awssdk.profiles.Profile"
},
{
  "name":"software.amazon.awssdk.profiles.ProfileFile"
},
{
  "name":"software.amazon.awssdk.protocols.query.AwsQueryProtocolFactory"
},
{
  "name":"software.amazon.awssdk.protocols.xml.AwsS3ProtocolFactory"
},
{
  "name":"software.amazon.awssdk.protocols.xml.AwsXmlProtocolFactory"
},
{
  "name":"software.amazon.awssdk.regions.Region"
},
{
  "name":"software.amazon.awssdk.regions.ServiceMetadata"
},
{
  "name":"software.amazon.awssdk.regions.providers.AwsProfileRegionProvider"
},
{
  "name":"software.amazon.awssdk.regions.providers.AwsRegionProvider",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"software.amazon.awssdk.regions.providers.AwsRegionProviderChain",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"getRegion","parameterTypes":[] }]
},
{
  "name":"software.amazon.awssdk.retries.api.RetryStrategy"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.CloudFrontClient",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"associateAlias","parameterTypes":["java.util.function.Consumer"] }, {"name":"copyDistribution","parameterTypes":["java.util.function.Consumer"] }, {"name":"createAnycastIpList","parameterTypes":["java.util.function.Consumer"] }, {"name":"createCachePolicy","parameterTypes":["java.util.function.Consumer"] }, {"name":"createCloudFrontOriginAccessIdentity","parameterTypes":["java.util.function.Consumer"] }, {"name":"createContinuousDeploymentPolicy","parameterTypes":["java.util.function.Consumer"] }, {"name":"createDistribution","parameterTypes":["java.util.function.Consumer"] }, {"name":"createDistributionWithTags","parameterTypes":["java.util.function.Consumer"] }, {"name":"createFieldLevelEncryptionConfig","parameterTypes":["java.util.function.Consumer"] }, {"name":"createFieldLevelEncryptionProfile","parameterTypes":["java.util.function.Consumer"] }, {"name":"createFunction","parameterTypes":["java.util.function.Consumer"] }, {"name":"createInvalidation","parameterTypes":["java.util.function.Consumer"] }, {"name":"createKeyGroup","parameterTypes":["java.util.function.Consumer"] }, {"name":"createKeyValueStore","parameterTypes":["java.util.function.Consumer"] }, {"name":"createMonitoringSubscription","parameterTypes":["java.util.function.Consumer"] }, {"name":"createOriginAccessControl","parameterTypes":["java.util.function.Consumer"] }, {"name":"createOriginRequestPolicy","parameterTypes":["java.util.function.Consumer"] }, {"name":"createPublicKey","parameterTypes":["java.util.function.Consumer"] }, {"name":"createRealtimeLogConfig","parameterTypes":["java.util.function.Consumer"] }, {"name":"createResponseHeadersPolicy","parameterTypes":["java.util.function.Consumer"] }, {"name":"createStreamingDistribution","parameterTypes":["java.util.function.Consumer"] }, {"name":"createStreamingDistributionWithTags","parameterTypes":["java.util.function.Consumer"] }, {"name":"createVpcOrigin","parameterTypes":["java.util.function.Consumer"] }, {"name":"deleteAnycastIpList","parameterTypes":["java.util.function.Consumer"] }, {"name":"deleteCachePolicy","parameterTypes":["java.util.function.Consumer"] }, {"name":"deleteCloudFrontOriginAccessIdentity","parameterTypes":["java.util.function.Consumer"] }, {"name":"deleteContinuousDeploymentPolicy","parameterTypes":["java.util.function.Consumer"] }, {"name":"deleteDistribution","parameterTypes":["java.util.function.Consumer"] }, {"name":"deleteFieldLevelEncryptionConfig","parameterTypes":["java.util.function.Consumer"] }, {"name":"deleteFieldLevelEncryptionProfile","parameterTypes":["java.util.function.Consumer"] }, {"name":"deleteFunction","parameterTypes":["java.util.function.Consumer"] }, {"name":"deleteKeyGroup","parameterTypes":["java.util.function.Consumer"] }, {"name":"deleteKeyValueStore","parameterTypes":["java.util.function.Consumer"] }, {"name":"deleteMonitoringSubscription","parameterTypes":["java.util.function.Consumer"] }, {"name":"deleteOriginAccessControl","parameterTypes":["java.util.function.Consumer"] }, {"name":"deleteOriginRequestPolicy","parameterTypes":["java.util.function.Consumer"] }, {"name":"deletePublicKey","parameterTypes":["java.util.function.Consumer"] }, {"name":"deleteRealtimeLogConfig","parameterTypes":["java.util.function.Consumer"] }, {"name":"deleteResponseHeadersPolicy","parameterTypes":["java.util.function.Consumer"] }, {"name":"deleteStreamingDistribution","parameterTypes":["java.util.function.Consumer"] }, {"name":"deleteVpcOrigin","parameterTypes":["java.util.function.Consumer"] }, {"name":"describeFunction","parameterTypes":["java.util.function.Consumer"] }, {"name":"describeKeyValueStore","parameterTypes":["java.util.function.Consumer"] }, {"name":"getAnycastIpList","parameterTypes":["java.util.function.Consumer"] }, {"name":"getCachePolicy","parameterTypes":["java.util.function.Consumer"] }, {"name":"getCachePolicyConfig","parameterTypes":["java.util.function.Consumer"] }, {"name":"getCloudFrontOriginAccessIdentity","parameterTypes":["java.util.function.Consumer"] }, {"name":"getCloudFrontOriginAccessIdentityConfig","parameterTypes":["java.util.function.Consumer"] }, {"name":"getContinuousDeploymentPolicy","parameterTypes":["java.util.function.Consumer"] }, {"name":"getContinuousDeploymentPolicyConfig","parameterTypes":["java.util.function.Consumer"] }, {"name":"getDistribution","parameterTypes":["java.util.function.Consumer"] }, {"name":"getDistributionConfig","parameterTypes":["java.util.function.Consumer"] }, {"name":"getFieldLevelEncryption","parameterTypes":["java.util.function.Consumer"] }, {"name":"getFieldLevelEncryptionConfig","parameterTypes":["java.util.function.Consumer"] }, {"name":"getFieldLevelEncryptionProfile","parameterTypes":["java.util.function.Consumer"] }, {"name":"getFieldLevelEncryptionProfileConfig","parameterTypes":["java.util.function.Consumer"] }, {"name":"getFunction","parameterTypes":["java.util.function.Consumer"] }, {"name":"getInvalidation","parameterTypes":["java.util.function.Consumer"] }, {"name":"getKeyGroup","parameterTypes":["java.util.function.Consumer"] }, {"name":"getKeyGroupConfig","parameterTypes":["java.util.function.Consumer"] }, {"name":"getMonitoringSubscription","parameterTypes":["java.util.function.Consumer"] }, {"name":"getOriginAccessControl","parameterTypes":["java.util.function.Consumer"] }, {"name":"getOriginAccessControlConfig","parameterTypes":["java.util.function.Consumer"] }, {"name":"getOriginRequestPolicy","parameterTypes":["java.util.function.Consumer"] }, {"name":"getOriginRequestPolicyConfig","parameterTypes":["java.util.function.Consumer"] }, {"name":"getPublicKey","parameterTypes":["java.util.function.Consumer"] }, {"name":"getPublicKeyConfig","parameterTypes":["java.util.function.Consumer"] }, {"name":"getRealtimeLogConfig","parameterTypes":["java.util.function.Consumer"] }, {"name":"getResponseHeadersPolicy","parameterTypes":["java.util.function.Consumer"] }, {"name":"getResponseHeadersPolicyConfig","parameterTypes":["java.util.function.Consumer"] }, {"name":"getStreamingDistribution","parameterTypes":["java.util.function.Consumer"] }, {"name":"getStreamingDistributionConfig","parameterTypes":["java.util.function.Consumer"] }, {"name":"getVpcOrigin","parameterTypes":["java.util.function.Consumer"] }, {"name":"listAnycastIpLists","parameterTypes":["java.util.function.Consumer"] }, {"name":"listCachePolicies","parameterTypes":["java.util.function.Consumer"] }, {"name":"listCloudFrontOriginAccessIdentities","parameterTypes":[] }, {"name":"listCloudFrontOriginAccessIdentities","parameterTypes":["java.util.function.Consumer"] }, {"name":"listConflictingAliases","parameterTypes":["java.util.function.Consumer"] }, {"name":"listContinuousDeploymentPolicies","parameterTypes":["java.util.function.Consumer"] }, {"name":"listDistributions","parameterTypes":[] }, {"name":"listDistributions","parameterTypes":["java.util.function.Consumer"] }, {"name":"listDistributionsByAnycastIpListId","parameterTypes":["java.util.function.Consumer"] }, {"name":"listDistributionsByCachePolicyId","parameterTypes":["java.util.function.Consumer"] }, {"name":"listDistributionsByKeyGroup","parameterTypes":["java.util.function.Consumer"] }, {"name":"listDistributionsByOriginRequestPolicyId","parameterTypes":["java.util.function.Consumer"] }, {"name":"listDistributionsByRealtimeLogConfig","parameterTypes":["java.util.function.Consumer"] }, {"name":"listDistributionsByResponseHeadersPolicyId","parameterTypes":["java.util.function.Consumer"] }, {"name":"listDistributionsByVpcOriginId","parameterTypes":["java.util.function.Consumer"] }, {"name":"listDistributionsByWebACLId","parameterTypes":["java.util.function.Consumer"] }, {"name":"listFieldLevelEncryptionConfigs","parameterTypes":[] }, {"name":"listFieldLevelEncryptionConfigs","parameterTypes":["java.util.function.Consumer"] }, {"name":"listFieldLevelEncryptionProfiles","parameterTypes":[] }, {"name":"listFieldLevelEncryptionProfiles","parameterTypes":["java.util.function.Consumer"] }, {"name":"listFunctions","parameterTypes":["java.util.function.Consumer"] }, {"name":"listInvalidations","parameterTypes":["java.util.function.Consumer"] }, {"name":"listKeyGroups","parameterTypes":["java.util.function.Consumer"] }, {"name":"listKeyValueStores","parameterTypes":["java.util.function.Consumer"] }, {"name":"listOriginAccessControls","parameterTypes":["java.util.function.Consumer"] }, {"name":"listOriginRequestPolicies","parameterTypes":["java.util.function.Consumer"] }, {"name":"listPublicKeys","parameterTypes":[] }, {"name":"listPublicKeys","parameterTypes":["java.util.function.Consumer"] }, {"name":"listRealtimeLogConfigs","parameterTypes":["java.util.function.Consumer"] }, {"name":"listResponseHeadersPolicies","parameterTypes":["java.util.function.Consumer"] }, {"name":"listStreamingDistributions","parameterTypes":[] }, {"name":"listStreamingDistributions","parameterTypes":["java.util.function.Consumer"] }, {"name":"listTagsForResource","parameterTypes":["java.util.function.Consumer"] }, {"name":"listVpcOrigins","parameterTypes":["java.util.function.Consumer"] }, {"name":"publishFunction","parameterTypes":["java.util.function.Consumer"] }, {"name":"tagResource","parameterTypes":["java.util.function.Consumer"] }, {"name":"testFunction","parameterTypes":["java.util.function.Consumer"] }, {"name":"untagResource","parameterTypes":["java.util.function.Consumer"] }, {"name":"updateCachePolicy","parameterTypes":["java.util.function.Consumer"] }, {"name":"updateCloudFrontOriginAccessIdentity","parameterTypes":["java.util.function.Consumer"] }, {"name":"updateContinuousDeploymentPolicy","parameterTypes":["java.util.function.Consumer"] }, {"name":"updateDistribution","parameterTypes":["java.util.function.Consumer"] }, {"name":"updateDistributionWithStagingConfig","parameterTypes":["java.util.function.Consumer"] }, {"name":"updateFieldLevelEncryptionConfig","parameterTypes":["java.util.function.Consumer"] }, {"name":"updateFieldLevelEncryptionProfile","parameterTypes":["java.util.function.Consumer"] }, {"name":"updateFunction","parameterTypes":["java.util.function.Consumer"] }, {"name":"updateKeyGroup","parameterTypes":["java.util.function.Consumer"] }, {"name":"updateKeyValueStore","parameterTypes":["java.util.function.Consumer"] }, {"name":"updateOriginAccessControl","parameterTypes":["java.util.function.Consumer"] }, {"name":"updateOriginRequestPolicy","parameterTypes":["java.util.function.Consumer"] }, {"name":"updatePublicKey","parameterTypes":["java.util.function.Consumer"] }, {"name":"updateRealtimeLogConfig","parameterTypes":["java.util.function.Consumer"] }, {"name":"updateResponseHeadersPolicy","parameterTypes":["java.util.function.Consumer"] }, {"name":"updateStreamingDistribution","parameterTypes":["java.util.function.Consumer"] }, {"name":"updateVpcOrigin","parameterTypes":["java.util.function.Consumer"] }]
},
{
  "name":"software.amazon.awssdk.services.cloudfront.CloudFrontClientBuilder"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.CloudFrontServiceClientConfiguration"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.CloudFrontUtilities"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.DefaultCloudFrontClient",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"associateAlias","parameterTypes":["software.amazon.awssdk.services.cloudfront.model.AssociateAliasRequest"] }, {"name":"close","parameterTypes":[] }, {"name":"copyDistribution","parameterTypes":["software.amazon.awssdk.services.cloudfront.model.CopyDistributionRequest"] }, {"name":"createAnycastIpList","parameterTypes":["software.amazon.awssdk.services.cloudfront.model.CreateAnycastIpListRequest"] }, {"name":"createCachePolicy","parameterTypes":["software.amazon.awssdk.services.cloudfront.model.CreateCachePolicyRequest"] }, {"name":"createCloudFrontOriginAccessIdentity","parameterTypes":["software.amazon.awssdk.services.cloudfront.model.CreateCloudFrontOriginAccessIdentityRequest"] }, {"name":"createContinuousDeploymentPolicy","parameterTypes":["software.amazon.awssdk.services.cloudfront.model.CreateContinuousDeploymentPolicyRequest"] }, {"name":"createDistribution","parameterTypes":["software.amazon.awssdk.services.cloudfront.model.CreateDistributionRequest"] }, {"name":"createDistributionWithTags","parameterTypes":["software.amazon.awssdk.services.cloudfront.model.CreateDistributionWithTagsRequest"] }, {"name":"createFieldLevelEncryptionConfig","parameterTypes":["software.amazon.awssdk.services.cloudfront.model.CreateFieldLevelEncryptionConfigRequest"] }, {"name":"createFieldLevelEncryptionProfile","parameterTypes":["software.amazon.awssdk.services.cloudfront.model.CreateFieldLevelEncryptionProfileRequest"] }, {"name":"createFunction","parameterTypes":["software.amazon.awssdk.services.cloudfront.model.CreateFunctionRequest"] }, {"name":"createInvalidation","parameterTypes":["software.amazon.awssdk.services.cloudfront.model.CreateInvalidationRequest"] }, {"name":"createKeyGroup","parameterTypes":["software.amazon.awssdk.services.cloudfront.model.CreateKeyGroupRequest"] }, {"name":"createKeyValueStore","parameterTypes":["software.amazon.awssdk.services.cloudfront.model.CreateKeyValueStoreRequest"] }, {"name":"createMonitoringSubscription","parameterTypes":["software.amazon.awssdk.services.cloudfront.model.CreateMonitoringSubscriptionRequest"] }, {"name":"createOriginAccessControl","parameterTypes":["software.amazon.awssdk.services.cloudfront.model.CreateOriginAccessControlRequest"] }, {"name":"createOriginRequestPolicy","parameterTypes":["software.amazon.awssdk.services.cloudfront.model.CreateOriginRequestPolicyRequest"] }, {"name":"createPublicKey","parameterTypes":["software.amazon.awssdk.services.cloudfront.model.CreatePublicKeyRequest"] }, {"name":"createRealtimeLogConfig","parameterTypes":["software.amazon.awssdk.services.cloudfront.model.CreateRealtimeLogConfigRequest"] }, {"name":"createResponseHeadersPolicy","parameterTypes":["software.amazon.awssdk.services.cloudfront.model.CreateResponseHeadersPolicyRequest"] }, {"name":"createStreamingDistribution","parameterTypes":["software.amazon.awssdk.services.cloudfront.model.CreateStreamingDistributionRequest"] }, {"name":"createStreamingDistributionWithTags","parameterTypes":["software.amazon.awssdk.services.cloudfront.model.CreateStreamingDistributionWithTagsRequest"] }, {"name":"createVpcOrigin","parameterTypes":["software.amazon.awssdk.services.cloudfront.model.CreateVpcOriginRequest"] }, {"name":"deleteAnycastIpList","parameterTypes":["software.amazon.awssdk.services.cloudfront.model.DeleteAnycastIpListRequest"] }, {"name":"deleteCachePolicy","parameterTypes":["software.amazon.awssdk.services.cloudfront.model.DeleteCachePolicyRequest"] }, {"name":"deleteCloudFrontOriginAccessIdentity","parameterTypes":["software.amazon.awssdk.services.cloudfront.model.DeleteCloudFrontOriginAccessIdentityRequest"] }, {"name":"deleteContinuousDeploymentPolicy","parameterTypes":["software.amazon.awssdk.services.cloudfront.model.DeleteContinuousDeploymentPolicyRequest"] }, {"name":"deleteDistribution","parameterTypes":["software.amazon.awssdk.services.cloudfront.model.DeleteDistributionRequest"] }, {"name":"deleteFieldLevelEncryptionConfig","parameterTypes":["software.amazon.awssdk.services.cloudfront.model.DeleteFieldLevelEncryptionConfigRequest"] }, {"name":"deleteFieldLevelEncryptionProfile","parameterTypes":["software.amazon.awssdk.services.cloudfront.model.DeleteFieldLevelEncryptionProfileRequest"] }, {"name":"deleteFunction","parameterTypes":["software.amazon.awssdk.services.cloudfront.model.DeleteFunctionRequest"] }, {"name":"deleteKeyGroup","parameterTypes":["software.amazon.awssdk.services.cloudfront.model.DeleteKeyGroupRequest"] }, {"name":"deleteKeyValueStore","parameterTypes":["software.amazon.awssdk.services.cloudfront.model.DeleteKeyValueStoreRequest"] }, {"name":"deleteMonitoringSubscription","parameterTypes":["software.amazon.awssdk.services.cloudfront.model.DeleteMonitoringSubscriptionRequest"] }, {"name":"deleteOriginAccessControl","parameterTypes":["software.amazon.awssdk.services.cloudfront.model.DeleteOriginAccessControlRequest"] }, {"name":"deleteOriginRequestPolicy","parameterTypes":["software.amazon.awssdk.services.cloudfront.model.DeleteOriginRequestPolicyRequest"] }, {"name":"deletePublicKey","parameterTypes":["software.amazon.awssdk.services.cloudfront.model.DeletePublicKeyRequest"] }, {"name":"deleteRealtimeLogConfig","parameterTypes":["software.amazon.awssdk.services.cloudfront.model.DeleteRealtimeLogConfigRequest"] }, {"name":"deleteResponseHeadersPolicy","parameterTypes":["software.amazon.awssdk.services.cloudfront.model.DeleteResponseHeadersPolicyRequest"] }, {"name":"deleteStreamingDistribution","parameterTypes":["software.amazon.awssdk.services.cloudfront.model.DeleteStreamingDistributionRequest"] }, {"name":"deleteVpcOrigin","parameterTypes":["software.amazon.awssdk.services.cloudfront.model.DeleteVpcOriginRequest"] }, {"name":"describeFunction","parameterTypes":["software.amazon.awssdk.services.cloudfront.model.DescribeFunctionRequest"] }, {"name":"describeKeyValueStore","parameterTypes":["software.amazon.awssdk.services.cloudfront.model.DescribeKeyValueStoreRequest"] }, {"name":"getAnycastIpList","parameterTypes":["software.amazon.awssdk.services.cloudfront.model.GetAnycastIpListRequest"] }, {"name":"getCachePolicy","parameterTypes":["software.amazon.awssdk.services.cloudfront.model.GetCachePolicyRequest"] }, {"name":"getCachePolicyConfig","parameterTypes":["software.amazon.awssdk.services.cloudfront.model.GetCachePolicyConfigRequest"] }, {"name":"getCloudFrontOriginAccessIdentity","parameterTypes":["software.amazon.awssdk.services.cloudfront.model.GetCloudFrontOriginAccessIdentityRequest"] }, {"name":"getCloudFrontOriginAccessIdentityConfig","parameterTypes":["software.amazon.awssdk.services.cloudfront.model.GetCloudFrontOriginAccessIdentityConfigRequest"] }, {"name":"getContinuousDeploymentPolicy","parameterTypes":["software.amazon.awssdk.services.cloudfront.model.GetContinuousDeploymentPolicyRequest"] }, {"name":"getContinuousDeploymentPolicyConfig","parameterTypes":["software.amazon.awssdk.services.cloudfront.model.GetContinuousDeploymentPolicyConfigRequest"] }, {"name":"getDistribution","parameterTypes":["software.amazon.awssdk.services.cloudfront.model.GetDistributionRequest"] }, {"name":"getDistributionConfig","parameterTypes":["software.amazon.awssdk.services.cloudfront.model.GetDistributionConfigRequest"] }, {"name":"getFieldLevelEncryption","parameterTypes":["software.amazon.awssdk.services.cloudfront.model.GetFieldLevelEncryptionRequest"] }, {"name":"getFieldLevelEncryptionConfig","parameterTypes":["software.amazon.awssdk.services.cloudfront.model.GetFieldLevelEncryptionConfigRequest"] }, {"name":"getFieldLevelEncryptionProfile","parameterTypes":["software.amazon.awssdk.services.cloudfront.model.GetFieldLevelEncryptionProfileRequest"] }, {"name":"getFieldLevelEncryptionProfileConfig","parameterTypes":["software.amazon.awssdk.services.cloudfront.model.GetFieldLevelEncryptionProfileConfigRequest"] }, {"name":"getFunction","parameterTypes":["software.amazon.awssdk.services.cloudfront.model.GetFunctionRequest"] }, {"name":"getInvalidation","parameterTypes":["software.amazon.awssdk.services.cloudfront.model.GetInvalidationRequest"] }, {"name":"getKeyGroup","parameterTypes":["software.amazon.awssdk.services.cloudfront.model.GetKeyGroupRequest"] }, {"name":"getKeyGroupConfig","parameterTypes":["software.amazon.awssdk.services.cloudfront.model.GetKeyGroupConfigRequest"] }, {"name":"getMonitoringSubscription","parameterTypes":["software.amazon.awssdk.services.cloudfront.model.GetMonitoringSubscriptionRequest"] }, {"name":"getOriginAccessControl","parameterTypes":["software.amazon.awssdk.services.cloudfront.model.GetOriginAccessControlRequest"] }, {"name":"getOriginAccessControlConfig","parameterTypes":["software.amazon.awssdk.services.cloudfront.model.GetOriginAccessControlConfigRequest"] }, {"name":"getOriginRequestPolicy","parameterTypes":["software.amazon.awssdk.services.cloudfront.model.GetOriginRequestPolicyRequest"] }, {"name":"getOriginRequestPolicyConfig","parameterTypes":["software.amazon.awssdk.services.cloudfront.model.GetOriginRequestPolicyConfigRequest"] }, {"name":"getPublicKey","parameterTypes":["software.amazon.awssdk.services.cloudfront.model.GetPublicKeyRequest"] }, {"name":"getPublicKeyConfig","parameterTypes":["software.amazon.awssdk.services.cloudfront.model.GetPublicKeyConfigRequest"] }, {"name":"getRealtimeLogConfig","parameterTypes":["software.amazon.awssdk.services.cloudfront.model.GetRealtimeLogConfigRequest"] }, {"name":"getResponseHeadersPolicy","parameterTypes":["software.amazon.awssdk.services.cloudfront.model.GetResponseHeadersPolicyRequest"] }, {"name":"getResponseHeadersPolicyConfig","parameterTypes":["software.amazon.awssdk.services.cloudfront.model.GetResponseHeadersPolicyConfigRequest"] }, {"name":"getStreamingDistribution","parameterTypes":["software.amazon.awssdk.services.cloudfront.model.GetStreamingDistributionRequest"] }, {"name":"getStreamingDistributionConfig","parameterTypes":["software.amazon.awssdk.services.cloudfront.model.GetStreamingDistributionConfigRequest"] }, {"name":"getVpcOrigin","parameterTypes":["software.amazon.awssdk.services.cloudfront.model.GetVpcOriginRequest"] }, {"name":"listAnycastIpLists","parameterTypes":["software.amazon.awssdk.services.cloudfront.model.ListAnycastIpListsRequest"] }, {"name":"listCachePolicies","parameterTypes":["software.amazon.awssdk.services.cloudfront.model.ListCachePoliciesRequest"] }, {"name":"listCloudFrontOriginAccessIdentities","parameterTypes":["software.amazon.awssdk.services.cloudfront.model.ListCloudFrontOriginAccessIdentitiesRequest"] }, {"name":"listConflictingAliases","parameterTypes":["software.amazon.awssdk.services.cloudfront.model.ListConflictingAliasesRequest"] }, {"name":"listContinuousDeploymentPolicies","parameterTypes":["software.amazon.awssdk.services.cloudfront.model.ListContinuousDeploymentPoliciesRequest"] }, {"name":"listDistributions","parameterTypes":["software.amazon.awssdk.services.cloudfront.model.ListDistributionsRequest"] }, {"name":"listDistributionsByAnycastIpListId","parameterTypes":["software.amazon.awssdk.services.cloudfront.model.ListDistributionsByAnycastIpListIdRequest"] }, {"name":"listDistributionsByCachePolicyId","parameterTypes":["software.amazon.awssdk.services.cloudfront.model.ListDistributionsByCachePolicyIdRequest"] }, {"name":"listDistributionsByKeyGroup","parameterTypes":["software.amazon.awssdk.services.cloudfront.model.ListDistributionsByKeyGroupRequest"] }, {"name":"listDistributionsByOriginRequestPolicyId","parameterTypes":["software.amazon.awssdk.services.cloudfront.model.ListDistributionsByOriginRequestPolicyIdRequest"] }, {"name":"listDistributionsByRealtimeLogConfig","parameterTypes":["software.amazon.awssdk.services.cloudfront.model.ListDistributionsByRealtimeLogConfigRequest"] }, {"name":"listDistributionsByResponseHeadersPolicyId","parameterTypes":["software.amazon.awssdk.services.cloudfront.model.ListDistributionsByResponseHeadersPolicyIdRequest"] }, {"name":"listDistributionsByVpcOriginId","parameterTypes":["software.amazon.awssdk.services.cloudfront.model.ListDistributionsByVpcOriginIdRequest"] }, {"name":"listDistributionsByWebACLId","parameterTypes":["software.amazon.awssdk.services.cloudfront.model.ListDistributionsByWebAclIdRequest"] }, {"name":"listFieldLevelEncryptionConfigs","parameterTypes":["software.amazon.awssdk.services.cloudfront.model.ListFieldLevelEncryptionConfigsRequest"] }, {"name":"listFieldLevelEncryptionProfiles","parameterTypes":["software.amazon.awssdk.services.cloudfront.model.ListFieldLevelEncryptionProfilesRequest"] }, {"name":"listFunctions","parameterTypes":["software.amazon.awssdk.services.cloudfront.model.ListFunctionsRequest"] }, {"name":"listInvalidations","parameterTypes":["software.amazon.awssdk.services.cloudfront.model.ListInvalidationsRequest"] }, {"name":"listKeyGroups","parameterTypes":["software.amazon.awssdk.services.cloudfront.model.ListKeyGroupsRequest"] }, {"name":"listKeyValueStores","parameterTypes":["software.amazon.awssdk.services.cloudfront.model.ListKeyValueStoresRequest"] }, {"name":"listOriginAccessControls","parameterTypes":["software.amazon.awssdk.services.cloudfront.model.ListOriginAccessControlsRequest"] }, {"name":"listOriginRequestPolicies","parameterTypes":["software.amazon.awssdk.services.cloudfront.model.ListOriginRequestPoliciesRequest"] }, {"name":"listPublicKeys","parameterTypes":["software.amazon.awssdk.services.cloudfront.model.ListPublicKeysRequest"] }, {"name":"listRealtimeLogConfigs","parameterTypes":["software.amazon.awssdk.services.cloudfront.model.ListRealtimeLogConfigsRequest"] }, {"name":"listResponseHeadersPolicies","parameterTypes":["software.amazon.awssdk.services.cloudfront.model.ListResponseHeadersPoliciesRequest"] }, {"name":"listStreamingDistributions","parameterTypes":["software.amazon.awssdk.services.cloudfront.model.ListStreamingDistributionsRequest"] }, {"name":"listTagsForResource","parameterTypes":["software.amazon.awssdk.services.cloudfront.model.ListTagsForResourceRequest"] }, {"name":"listVpcOrigins","parameterTypes":["software.amazon.awssdk.services.cloudfront.model.ListVpcOriginsRequest"] }, {"name":"publishFunction","parameterTypes":["software.amazon.awssdk.services.cloudfront.model.PublishFunctionRequest"] }, {"name":"serviceClientConfiguration","parameterTypes":[] }, {"name":"serviceName","parameterTypes":[] }, {"name":"tagResource","parameterTypes":["software.amazon.awssdk.services.cloudfront.model.TagResourceRequest"] }, {"name":"testFunction","parameterTypes":["software.amazon.awssdk.services.cloudfront.model.TestFunctionRequest"] }, {"name":"untagResource","parameterTypes":["software.amazon.awssdk.services.cloudfront.model.UntagResourceRequest"] }, {"name":"updateCachePolicy","parameterTypes":["software.amazon.awssdk.services.cloudfront.model.UpdateCachePolicyRequest"] }, {"name":"updateCloudFrontOriginAccessIdentity","parameterTypes":["software.amazon.awssdk.services.cloudfront.model.UpdateCloudFrontOriginAccessIdentityRequest"] }, {"name":"updateContinuousDeploymentPolicy","parameterTypes":["software.amazon.awssdk.services.cloudfront.model.UpdateContinuousDeploymentPolicyRequest"] }, {"name":"updateDistribution","parameterTypes":["software.amazon.awssdk.services.cloudfront.model.UpdateDistributionRequest"] }, {"name":"updateDistributionWithStagingConfig","parameterTypes":["software.amazon.awssdk.services.cloudfront.model.UpdateDistributionWithStagingConfigRequest"] }, {"name":"updateFieldLevelEncryptionConfig","parameterTypes":["software.amazon.awssdk.services.cloudfront.model.UpdateFieldLevelEncryptionConfigRequest"] }, {"name":"updateFieldLevelEncryptionProfile","parameterTypes":["software.amazon.awssdk.services.cloudfront.model.UpdateFieldLevelEncryptionProfileRequest"] }, {"name":"updateFunction","parameterTypes":["software.amazon.awssdk.services.cloudfront.model.UpdateFunctionRequest"] }, {"name":"updateKeyGroup","parameterTypes":["software.amazon.awssdk.services.cloudfront.model.UpdateKeyGroupRequest"] }, {"name":"updateKeyValueStore","parameterTypes":["software.amazon.awssdk.services.cloudfront.model.UpdateKeyValueStoreRequest"] }, {"name":"updateOriginAccessControl","parameterTypes":["software.amazon.awssdk.services.cloudfront.model.UpdateOriginAccessControlRequest"] }, {"name":"updateOriginRequestPolicy","parameterTypes":["software.amazon.awssdk.services.cloudfront.model.UpdateOriginRequestPolicyRequest"] }, {"name":"updatePublicKey","parameterTypes":["software.amazon.awssdk.services.cloudfront.model.UpdatePublicKeyRequest"] }, {"name":"updateRealtimeLogConfig","parameterTypes":["software.amazon.awssdk.services.cloudfront.model.UpdateRealtimeLogConfigRequest"] }, {"name":"updateResponseHeadersPolicy","parameterTypes":["software.amazon.awssdk.services.cloudfront.model.UpdateResponseHeadersPolicyRequest"] }, {"name":"updateStreamingDistribution","parameterTypes":["software.amazon.awssdk.services.cloudfront.model.UpdateStreamingDistributionRequest"] }, {"name":"updateVpcOrigin","parameterTypes":["software.amazon.awssdk.services.cloudfront.model.UpdateVpcOriginRequest"] }, {"name":"utilities","parameterTypes":[] }, {"name":"waiter","parameterTypes":[] }]
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.AccessDeniedException"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.AssociateAliasRequest"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.AssociateAliasResponse"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.BatchTooLargeException"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.CachePolicyAlreadyExistsException"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.CachePolicyInUseException"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.CannotChangeImmutablePublicKeyFieldsException"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.CannotDeleteEntityWhileInUseException"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.CannotUpdateEntityWhileInUseException"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.CloudFrontException"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.CloudFrontOriginAccessIdentityAlreadyExistsException"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.CloudFrontOriginAccessIdentityInUseException"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.CnameAlreadyExistsException"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.ContinuousDeploymentPolicyAlreadyExistsException"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.ContinuousDeploymentPolicyInUseException"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.CopyDistributionRequest"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.CopyDistributionResponse"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.CreateAnycastIpListRequest"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.CreateAnycastIpListResponse"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.CreateCachePolicyRequest"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.CreateCachePolicyResponse"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.CreateCloudFrontOriginAccessIdentityRequest"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.CreateCloudFrontOriginAccessIdentityResponse"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.CreateContinuousDeploymentPolicyRequest"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.CreateContinuousDeploymentPolicyResponse"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.CreateDistributionRequest"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.CreateDistributionResponse"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.CreateDistributionWithTagsRequest"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.CreateDistributionWithTagsResponse"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.CreateFieldLevelEncryptionConfigRequest"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.CreateFieldLevelEncryptionConfigResponse"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.CreateFieldLevelEncryptionProfileRequest"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.CreateFieldLevelEncryptionProfileResponse"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.CreateFunctionRequest"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.CreateFunctionResponse"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.CreateInvalidationRequest"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.CreateInvalidationResponse"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.CreateKeyGroupRequest"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.CreateKeyGroupResponse"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.CreateKeyValueStoreRequest"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.CreateKeyValueStoreResponse"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.CreateMonitoringSubscriptionRequest"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.CreateMonitoringSubscriptionResponse"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.CreateOriginAccessControlRequest"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.CreateOriginAccessControlResponse"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.CreateOriginRequestPolicyRequest"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.CreateOriginRequestPolicyResponse"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.CreatePublicKeyRequest"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.CreatePublicKeyResponse"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.CreateRealtimeLogConfigRequest"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.CreateRealtimeLogConfigResponse"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.CreateResponseHeadersPolicyRequest"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.CreateResponseHeadersPolicyResponse"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.CreateStreamingDistributionRequest"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.CreateStreamingDistributionResponse"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.CreateStreamingDistributionWithTagsRequest"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.CreateStreamingDistributionWithTagsResponse"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.CreateVpcOriginRequest"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.CreateVpcOriginResponse"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.DeleteAnycastIpListRequest"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.DeleteAnycastIpListResponse"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.DeleteCachePolicyRequest"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.DeleteCachePolicyResponse"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.DeleteCloudFrontOriginAccessIdentityRequest"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.DeleteCloudFrontOriginAccessIdentityResponse"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.DeleteContinuousDeploymentPolicyRequest"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.DeleteContinuousDeploymentPolicyResponse"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.DeleteDistributionRequest"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.DeleteDistributionResponse"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.DeleteFieldLevelEncryptionConfigRequest"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.DeleteFieldLevelEncryptionConfigResponse"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.DeleteFieldLevelEncryptionProfileRequest"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.DeleteFieldLevelEncryptionProfileResponse"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.DeleteFunctionRequest"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.DeleteFunctionResponse"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.DeleteKeyGroupRequest"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.DeleteKeyGroupResponse"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.DeleteKeyValueStoreRequest"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.DeleteKeyValueStoreResponse"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.DeleteMonitoringSubscriptionRequest"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.DeleteMonitoringSubscriptionResponse"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.DeleteOriginAccessControlRequest"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.DeleteOriginAccessControlResponse"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.DeleteOriginRequestPolicyRequest"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.DeleteOriginRequestPolicyResponse"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.DeletePublicKeyRequest"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.DeletePublicKeyResponse"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.DeleteRealtimeLogConfigRequest"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.DeleteRealtimeLogConfigResponse"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.DeleteResponseHeadersPolicyRequest"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.DeleteResponseHeadersPolicyResponse"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.DeleteStreamingDistributionRequest"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.DeleteStreamingDistributionResponse"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.DeleteVpcOriginRequest"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.DeleteVpcOriginResponse"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.DescribeFunctionRequest"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.DescribeFunctionResponse"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.DescribeKeyValueStoreRequest"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.DescribeKeyValueStoreResponse"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.DistributionAlreadyExistsException"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.DistributionNotDisabledException"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.EntityAlreadyExistsException"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.EntityLimitExceededException"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.EntityNotFoundException"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.EntitySizeLimitExceededException"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.FieldLevelEncryptionConfigAlreadyExistsException"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.FieldLevelEncryptionConfigInUseException"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.FieldLevelEncryptionProfileAlreadyExistsException"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.FieldLevelEncryptionProfileInUseException"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.FieldLevelEncryptionProfileSizeExceededException"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.FunctionAlreadyExistsException"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.FunctionInUseException"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.FunctionSizeLimitExceededException"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.GetAnycastIpListRequest"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.GetAnycastIpListResponse"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.GetCachePolicyConfigRequest"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.GetCachePolicyConfigResponse"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.GetCachePolicyRequest"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.GetCachePolicyResponse"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.GetCloudFrontOriginAccessIdentityConfigRequest"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.GetCloudFrontOriginAccessIdentityConfigResponse"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.GetCloudFrontOriginAccessIdentityRequest"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.GetCloudFrontOriginAccessIdentityResponse"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.GetContinuousDeploymentPolicyConfigRequest"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.GetContinuousDeploymentPolicyConfigResponse"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.GetContinuousDeploymentPolicyRequest"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.GetContinuousDeploymentPolicyResponse"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.GetDistributionConfigRequest"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.GetDistributionConfigResponse"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.GetDistributionRequest"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.GetDistributionResponse"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.GetFieldLevelEncryptionConfigRequest"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.GetFieldLevelEncryptionConfigResponse"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.GetFieldLevelEncryptionProfileConfigRequest"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.GetFieldLevelEncryptionProfileConfigResponse"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.GetFieldLevelEncryptionProfileRequest"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.GetFieldLevelEncryptionProfileResponse"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.GetFieldLevelEncryptionRequest"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.GetFieldLevelEncryptionResponse"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.GetFunctionRequest"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.GetFunctionResponse"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.GetInvalidationRequest"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.GetInvalidationResponse"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.GetKeyGroupConfigRequest"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.GetKeyGroupConfigResponse"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.GetKeyGroupRequest"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.GetKeyGroupResponse"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.GetMonitoringSubscriptionRequest"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.GetMonitoringSubscriptionResponse"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.GetOriginAccessControlConfigRequest"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.GetOriginAccessControlConfigResponse"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.GetOriginAccessControlRequest"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.GetOriginAccessControlResponse"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.GetOriginRequestPolicyConfigRequest"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.GetOriginRequestPolicyConfigResponse"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.GetOriginRequestPolicyRequest"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.GetOriginRequestPolicyResponse"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.GetPublicKeyConfigRequest"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.GetPublicKeyConfigResponse"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.GetPublicKeyRequest"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.GetPublicKeyResponse"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.GetRealtimeLogConfigRequest"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.GetRealtimeLogConfigResponse"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.GetResponseHeadersPolicyConfigRequest"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.GetResponseHeadersPolicyConfigResponse"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.GetResponseHeadersPolicyRequest"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.GetResponseHeadersPolicyResponse"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.GetStreamingDistributionConfigRequest"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.GetStreamingDistributionConfigResponse"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.GetStreamingDistributionRequest"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.GetStreamingDistributionResponse"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.GetVpcOriginRequest"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.GetVpcOriginResponse"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.IllegalDeleteException"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.IllegalFieldLevelEncryptionConfigAssociationWithCacheBehaviorException"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.IllegalOriginAccessConfigurationException"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.IllegalUpdateException"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.InconsistentQuantitiesException"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.InvalidArgumentException"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.InvalidDefaultRootObjectException"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.InvalidDomainNameForOriginAccessControlException"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.InvalidErrorCodeException"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.InvalidForwardCookiesException"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.InvalidFunctionAssociationException"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.InvalidGeoRestrictionParameterException"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.InvalidHeadersForS3OriginException"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.InvalidIfMatchVersionException"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.InvalidLambdaFunctionAssociationException"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.InvalidLocationCodeException"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.InvalidMinimumProtocolVersionException"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.InvalidOriginAccessControlException"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.InvalidOriginAccessIdentityException"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.InvalidOriginException"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.InvalidOriginKeepaliveTimeoutException"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.InvalidOriginReadTimeoutException"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.InvalidProtocolSettingsException"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.InvalidQueryStringParametersException"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.InvalidRelativePathException"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.InvalidRequiredProtocolException"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.InvalidResponseCodeException"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.InvalidTaggingException"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.InvalidTtlOrderException"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.InvalidViewerCertificateException"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.InvalidWebAclIdException"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.KeyGroupAlreadyExistsException"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.ListAnycastIpListsRequest"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.ListAnycastIpListsResponse"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.ListCachePoliciesRequest"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.ListCachePoliciesResponse"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.ListCloudFrontOriginAccessIdentitiesRequest"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.ListCloudFrontOriginAccessIdentitiesResponse"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.ListConflictingAliasesRequest"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.ListConflictingAliasesResponse"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.ListContinuousDeploymentPoliciesRequest"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.ListContinuousDeploymentPoliciesResponse"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.ListDistributionsByAnycastIpListIdRequest"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.ListDistributionsByAnycastIpListIdResponse"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.ListDistributionsByCachePolicyIdRequest"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.ListDistributionsByCachePolicyIdResponse"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.ListDistributionsByKeyGroupRequest"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.ListDistributionsByKeyGroupResponse"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.ListDistributionsByOriginRequestPolicyIdRequest"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.ListDistributionsByOriginRequestPolicyIdResponse"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.ListDistributionsByRealtimeLogConfigRequest"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.ListDistributionsByRealtimeLogConfigResponse"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.ListDistributionsByResponseHeadersPolicyIdRequest"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.ListDistributionsByResponseHeadersPolicyIdResponse"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.ListDistributionsByVpcOriginIdRequest"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.ListDistributionsByVpcOriginIdResponse"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.ListDistributionsByWebAclIdRequest"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.ListDistributionsByWebAclIdResponse"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.ListDistributionsRequest"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.ListDistributionsResponse"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.ListFieldLevelEncryptionConfigsRequest"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.ListFieldLevelEncryptionConfigsResponse"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.ListFieldLevelEncryptionProfilesRequest"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.ListFieldLevelEncryptionProfilesResponse"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.ListFunctionsRequest"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.ListFunctionsResponse"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.ListInvalidationsRequest"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.ListInvalidationsResponse"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.ListKeyGroupsRequest"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.ListKeyGroupsResponse"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.ListKeyValueStoresRequest"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.ListKeyValueStoresResponse"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.ListOriginAccessControlsRequest"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.ListOriginAccessControlsResponse"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.ListOriginRequestPoliciesRequest"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.ListOriginRequestPoliciesResponse"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.ListPublicKeysRequest"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.ListPublicKeysResponse"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.ListRealtimeLogConfigsRequest"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.ListRealtimeLogConfigsResponse"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.ListResponseHeadersPoliciesRequest"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.ListResponseHeadersPoliciesResponse"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.ListStreamingDistributionsRequest"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.ListStreamingDistributionsResponse"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.ListTagsForResourceRequest"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.ListTagsForResourceResponse"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.ListVpcOriginsRequest"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.ListVpcOriginsResponse"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.MissingBodyException"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.MonitoringSubscriptionAlreadyExistsException"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.NoSuchCachePolicyException"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.NoSuchCloudFrontOriginAccessIdentityException"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.NoSuchContinuousDeploymentPolicyException"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.NoSuchDistributionException"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.NoSuchFieldLevelEncryptionConfigException"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.NoSuchFieldLevelEncryptionProfileException"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.NoSuchFunctionExistsException"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.NoSuchInvalidationException"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.NoSuchMonitoringSubscriptionException"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.NoSuchOriginAccessControlException"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.NoSuchOriginException"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.NoSuchOriginRequestPolicyException"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.NoSuchPublicKeyException"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.NoSuchRealtimeLogConfigException"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.NoSuchResourceException"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.NoSuchResponseHeadersPolicyException"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.NoSuchStreamingDistributionException"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.OriginAccessControlAlreadyExistsException"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.OriginAccessControlInUseException"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.OriginRequestPolicyAlreadyExistsException"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.OriginRequestPolicyInUseException"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.Paths$Builder"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.PreconditionFailedException"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.PublicKeyAlreadyExistsException"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.PublicKeyInUseException"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.PublishFunctionRequest"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.PublishFunctionResponse"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.QueryArgProfileEmptyException"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.RealtimeLogConfigAlreadyExistsException"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.RealtimeLogConfigInUseException"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.RealtimeLogConfigOwnerMismatchException"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.ResourceInUseException"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.ResponseHeadersPolicyAlreadyExistsException"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.ResponseHeadersPolicyInUseException"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.StagingDistributionInUseException"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.StreamingDistributionAlreadyExistsException"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.StreamingDistributionNotDisabledException"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.TagResourceRequest"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.TagResourceResponse"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.TestFunctionFailedException"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.TestFunctionRequest"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.TestFunctionResponse"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.TooLongCspInResponseHeadersPolicyException"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.TooManyCacheBehaviorsException"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.TooManyCachePoliciesException"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.TooManyCertificatesException"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.TooManyCloudFrontOriginAccessIdentitiesException"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.TooManyContinuousDeploymentPoliciesException"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.TooManyCookieNamesInWhiteListException"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.TooManyCookiesInCachePolicyException"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.TooManyCookiesInOriginRequestPolicyException"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.TooManyCustomHeadersInResponseHeadersPolicyException"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.TooManyDistributionCnamEsException"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.TooManyDistributionsAssociatedToCachePolicyException"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.TooManyDistributionsAssociatedToFieldLevelEncryptionConfigException"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.TooManyDistributionsAssociatedToKeyGroupException"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.TooManyDistributionsAssociatedToOriginAccessControlException"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.TooManyDistributionsAssociatedToOriginRequestPolicyException"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.TooManyDistributionsAssociatedToResponseHeadersPolicyException"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.TooManyDistributionsException"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.TooManyDistributionsWithFunctionAssociationsException"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.TooManyDistributionsWithLambdaAssociationsException"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.TooManyDistributionsWithSingleFunctionArnException"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.TooManyFieldLevelEncryptionConfigsException"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.TooManyFieldLevelEncryptionContentTypeProfilesException"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.TooManyFieldLevelEncryptionEncryptionEntitiesException"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.TooManyFieldLevelEncryptionFieldPatternsException"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.TooManyFieldLevelEncryptionProfilesException"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.TooManyFieldLevelEncryptionQueryArgProfilesException"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.TooManyFunctionAssociationsException"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.TooManyFunctionsException"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.TooManyHeadersInCachePolicyException"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.TooManyHeadersInForwardedValuesException"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.TooManyHeadersInOriginRequestPolicyException"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.TooManyInvalidationsInProgressException"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.TooManyKeyGroupsAssociatedToDistributionException"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.TooManyKeyGroupsException"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.TooManyLambdaFunctionAssociationsException"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.TooManyOriginAccessControlsException"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.TooManyOriginCustomHeadersException"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.TooManyOriginGroupsPerDistributionException"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.TooManyOriginRequestPoliciesException"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.TooManyOriginsException"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.TooManyPublicKeysException"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.TooManyPublicKeysInKeyGroupException"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.TooManyQueryStringParametersException"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.TooManyQueryStringsInCachePolicyException"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.TooManyQueryStringsInOriginRequestPolicyException"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.TooManyRealtimeLogConfigsException"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.TooManyRemoveHeadersInResponseHeadersPolicyException"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.TooManyResponseHeadersPoliciesException"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.TooManyStreamingDistributionCnamEsException"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.TooManyStreamingDistributionsException"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.TooManyTrustedSignersException"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.TrustedKeyGroupDoesNotExistException"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.TrustedSignerDoesNotExistException"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.UnsupportedOperationException"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.UntagResourceRequest"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.UntagResourceResponse"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.UpdateCachePolicyRequest"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.UpdateCachePolicyResponse"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.UpdateCloudFrontOriginAccessIdentityRequest"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.UpdateCloudFrontOriginAccessIdentityResponse"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.UpdateContinuousDeploymentPolicyRequest"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.UpdateContinuousDeploymentPolicyResponse"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.UpdateDistributionRequest"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.UpdateDistributionResponse"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.UpdateDistributionWithStagingConfigRequest"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.UpdateDistributionWithStagingConfigResponse"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.UpdateFieldLevelEncryptionConfigRequest"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.UpdateFieldLevelEncryptionConfigResponse"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.UpdateFieldLevelEncryptionProfileRequest"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.UpdateFieldLevelEncryptionProfileResponse"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.UpdateFunctionRequest"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.UpdateFunctionResponse"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.UpdateKeyGroupRequest"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.UpdateKeyGroupResponse"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.UpdateKeyValueStoreRequest"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.UpdateKeyValueStoreResponse"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.UpdateOriginAccessControlRequest"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.UpdateOriginAccessControlResponse"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.UpdateOriginRequestPolicyRequest"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.UpdateOriginRequestPolicyResponse"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.UpdatePublicKeyRequest"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.UpdatePublicKeyResponse"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.UpdateRealtimeLogConfigRequest"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.UpdateRealtimeLogConfigResponse"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.UpdateResponseHeadersPolicyRequest"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.UpdateResponseHeadersPolicyResponse"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.UpdateStreamingDistributionRequest"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.UpdateStreamingDistributionResponse"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.UpdateVpcOriginRequest"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.model.UpdateVpcOriginResponse"
},
{
  "name":"software.amazon.awssdk.services.cloudfront.waiters.CloudFrontWaiter"
},
{
  "name":"software.amazon.awssdk.services.cloudwatch.CloudWatchAsyncClient",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"deleteAlarms","parameterTypes":["java.util.function.Consumer"] }, {"name":"deleteAnomalyDetector","parameterTypes":["java.util.function.Consumer"] }, {"name":"deleteDashboards","parameterTypes":["java.util.function.Consumer"] }, {"name":"deleteInsightRules","parameterTypes":["java.util.function.Consumer"] }, {"name":"deleteMetricStream","parameterTypes":["java.util.function.Consumer"] }, {"name":"describeAlarmHistory","parameterTypes":[] }, {"name":"describeAlarmHistory","parameterTypes":["java.util.function.Consumer"] }, {"name":"describeAlarmHistoryPaginator","parameterTypes":[] }, {"name":"describeAlarmHistoryPaginator","parameterTypes":["java.util.function.Consumer"] }, {"name":"describeAlarmHistoryPaginator","parameterTypes":["software.amazon.awssdk.services.cloudwatch.model.DescribeAlarmHistoryRequest"] }, {"name":"describeAlarms","parameterTypes":[] }, {"name":"describeAlarms","parameterTypes":["java.util.function.Consumer"] }, {"name":"describeAlarmsForMetric","parameterTypes":["java.util.function.Consumer"] }, {"name":"describeAlarmsPaginator","parameterTypes":[] }, {"name":"describeAlarmsPaginator","parameterTypes":["java.util.function.Consumer"] }, {"name":"describeAlarmsPaginator","parameterTypes":["software.amazon.awssdk.services.cloudwatch.model.DescribeAlarmsRequest"] }, {"name":"describeAnomalyDetectors","parameterTypes":["java.util.function.Consumer"] }, {"name":"describeAnomalyDetectorsPaginator","parameterTypes":["java.util.function.Consumer"] }, {"name":"describeAnomalyDetectorsPaginator","parameterTypes":["software.amazon.awssdk.services.cloudwatch.model.DescribeAnomalyDetectorsRequest"] }, {"name":"describeInsightRules","parameterTypes":["java.util.function.Consumer"] }, {"name":"describeInsightRulesPaginator","parameterTypes":["java.util.function.Consumer"] }, {"name":"describeInsightRulesPaginator","parameterTypes":["software.amazon.awssdk.services.cloudwatch.model.DescribeInsightRulesRequest"] }, {"name":"disableAlarmActions","parameterTypes":["java.util.function.Consumer"] }, {"name":"disableInsightRules","parameterTypes":["java.util.function.Consumer"] }, {"name":"enableAlarmActions","parameterTypes":["java.util.function.Consumer"] }, {"name":"enableInsightRules","parameterTypes":["java.util.function.Consumer"] }, {"name":"getDashboard","parameterTypes":["java.util.function.Consumer"] }, {"name":"getInsightRuleReport","parameterTypes":["java.util.function.Consumer"] }, {"name":"getMetricData","parameterTypes":["java.util.function.Consumer"] }, {"name":"getMetricDataPaginator","parameterTypes":["java.util.function.Consumer"] }, {"name":"getMetricDataPaginator","parameterTypes":["software.amazon.awssdk.services.cloudwatch.model.GetMetricDataRequest"] }, {"name":"getMetricStatistics","parameterTypes":["java.util.function.Consumer"] }, {"name":"getMetricStream","parameterTypes":["java.util.function.Consumer"] }, {"name":"getMetricWidgetImage","parameterTypes":["java.util.function.Consumer"] }, {"name":"listDashboards","parameterTypes":[] }, {"name":"listDashboards","parameterTypes":["java.util.function.Consumer"] }, {"name":"listDashboardsPaginator","parameterTypes":[] }, {"name":"listDashboardsPaginator","parameterTypes":["java.util.function.Consumer"] }, {"name":"listDashboardsPaginator","parameterTypes":["software.amazon.awssdk.services.cloudwatch.model.ListDashboardsRequest"] }, {"name":"listManagedInsightRules","parameterTypes":["java.util.function.Consumer"] }, {"name":"listManagedInsightRulesPaginator","parameterTypes":["java.util.function.Consumer"] }, {"name":"listManagedInsightRulesPaginator","parameterTypes":["software.amazon.awssdk.services.cloudwatch.model.ListManagedInsightRulesRequest"] }, {"name":"listMetricStreams","parameterTypes":["java.util.function.Consumer"] }, {"name":"listMetricStreamsPaginator","parameterTypes":["java.util.function.Consumer"] }, {"name":"listMetricStreamsPaginator","parameterTypes":["software.amazon.awssdk.services.cloudwatch.model.ListMetricStreamsRequest"] }, {"name":"listMetrics","parameterTypes":[] }, {"name":"listMetrics","parameterTypes":["java.util.function.Consumer"] }, {"name":"listMetricsPaginator","parameterTypes":[] }, {"name":"listMetricsPaginator","parameterTypes":["java.util.function.Consumer"] }, {"name":"listMetricsPaginator","parameterTypes":["software.amazon.awssdk.services.cloudwatch.model.ListMetricsRequest"] }, {"name":"listTagsForResource","parameterTypes":["java.util.function.Consumer"] }, {"name":"putAnomalyDetector","parameterTypes":["java.util.function.Consumer"] }, {"name":"putCompositeAlarm","parameterTypes":["java.util.function.Consumer"] }, {"name":"putDashboard","parameterTypes":["java.util.function.Consumer"] }, {"name":"putInsightRule","parameterTypes":["java.util.function.Consumer"] }, {"name":"putManagedInsightRules","parameterTypes":["java.util.function.Consumer"] }, {"name":"putMetricAlarm","parameterTypes":["java.util.function.Consumer"] }, {"name":"putMetricData","parameterTypes":["java.util.function.Consumer"] }, {"name":"putMetricStream","parameterTypes":["java.util.function.Consumer"] }, {"name":"setAlarmState","parameterTypes":["java.util.function.Consumer"] }, {"name":"startMetricStreams","parameterTypes":["java.util.function.Consumer"] }, {"name":"stopMetricStreams","parameterTypes":["java.util.function.Consumer"] }, {"name":"tagResource","parameterTypes":["java.util.function.Consumer"] }, {"name":"untagResource","parameterTypes":["java.util.function.Consumer"] }]
},
{
  "name":"software.amazon.awssdk.services.cloudwatch.CloudWatchAsyncClientBuilder"
},
{
  "name":"software.amazon.awssdk.services.cloudwatch.CloudWatchServiceClientConfiguration"
},
{
  "name":"software.amazon.awssdk.services.cloudwatch.DefaultCloudWatchAsyncClient",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"deleteAlarms","parameterTypes":["software.amazon.awssdk.services.cloudwatch.model.DeleteAlarmsRequest"] }, {"name":"deleteAnomalyDetector","parameterTypes":["software.amazon.awssdk.services.cloudwatch.model.DeleteAnomalyDetectorRequest"] }, {"name":"deleteDashboards","parameterTypes":["software.amazon.awssdk.services.cloudwatch.model.DeleteDashboardsRequest"] }, {"name":"deleteInsightRules","parameterTypes":["software.amazon.awssdk.services.cloudwatch.model.DeleteInsightRulesRequest"] }, {"name":"deleteMetricStream","parameterTypes":["software.amazon.awssdk.services.cloudwatch.model.DeleteMetricStreamRequest"] }, {"name":"describeAlarmHistory","parameterTypes":["software.amazon.awssdk.services.cloudwatch.model.DescribeAlarmHistoryRequest"] }, {"name":"describeAlarms","parameterTypes":["software.amazon.awssdk.services.cloudwatch.model.DescribeAlarmsRequest"] }, {"name":"describeAlarmsForMetric","parameterTypes":["software.amazon.awssdk.services.cloudwatch.model.DescribeAlarmsForMetricRequest"] }, {"name":"describeAnomalyDetectors","parameterTypes":["software.amazon.awssdk.services.cloudwatch.model.DescribeAnomalyDetectorsRequest"] }, {"name":"describeInsightRules","parameterTypes":["software.amazon.awssdk.services.cloudwatch.model.DescribeInsightRulesRequest"] }, {"name":"disableAlarmActions","parameterTypes":["software.amazon.awssdk.services.cloudwatch.model.DisableAlarmActionsRequest"] }, {"name":"disableInsightRules","parameterTypes":["software.amazon.awssdk.services.cloudwatch.model.DisableInsightRulesRequest"] }, {"name":"enableAlarmActions","parameterTypes":["software.amazon.awssdk.services.cloudwatch.model.EnableAlarmActionsRequest"] }, {"name":"enableInsightRules","parameterTypes":["software.amazon.awssdk.services.cloudwatch.model.EnableInsightRulesRequest"] }, {"name":"getDashboard","parameterTypes":["software.amazon.awssdk.services.cloudwatch.model.GetDashboardRequest"] }, {"name":"getInsightRuleReport","parameterTypes":["software.amazon.awssdk.services.cloudwatch.model.GetInsightRuleReportRequest"] }, {"name":"getMetricData","parameterTypes":["software.amazon.awssdk.services.cloudwatch.model.GetMetricDataRequest"] }, {"name":"getMetricStatistics","parameterTypes":["software.amazon.awssdk.services.cloudwatch.model.GetMetricStatisticsRequest"] }, {"name":"getMetricStream","parameterTypes":["software.amazon.awssdk.services.cloudwatch.model.GetMetricStreamRequest"] }, {"name":"getMetricWidgetImage","parameterTypes":["software.amazon.awssdk.services.cloudwatch.model.GetMetricWidgetImageRequest"] }, {"name":"listDashboards","parameterTypes":["software.amazon.awssdk.services.cloudwatch.model.ListDashboardsRequest"] }, {"name":"listManagedInsightRules","parameterTypes":["software.amazon.awssdk.services.cloudwatch.model.ListManagedInsightRulesRequest"] }, {"name":"listMetricStreams","parameterTypes":["software.amazon.awssdk.services.cloudwatch.model.ListMetricStreamsRequest"] }, {"name":"listMetrics","parameterTypes":["software.amazon.awssdk.services.cloudwatch.model.ListMetricsRequest"] }, {"name":"listTagsForResource","parameterTypes":["software.amazon.awssdk.services.cloudwatch.model.ListTagsForResourceRequest"] }, {"name":"putAnomalyDetector","parameterTypes":["software.amazon.awssdk.services.cloudwatch.model.PutAnomalyDetectorRequest"] }, {"name":"putCompositeAlarm","parameterTypes":["software.amazon.awssdk.services.cloudwatch.model.PutCompositeAlarmRequest"] }, {"name":"putDashboard","parameterTypes":["software.amazon.awssdk.services.cloudwatch.model.PutDashboardRequest"] }, {"name":"putInsightRule","parameterTypes":["software.amazon.awssdk.services.cloudwatch.model.PutInsightRuleRequest"] }, {"name":"putManagedInsightRules","parameterTypes":["software.amazon.awssdk.services.cloudwatch.model.PutManagedInsightRulesRequest"] }, {"name":"putMetricAlarm","parameterTypes":["software.amazon.awssdk.services.cloudwatch.model.PutMetricAlarmRequest"] }, {"name":"putMetricData","parameterTypes":["software.amazon.awssdk.services.cloudwatch.model.PutMetricDataRequest"] }, {"name":"putMetricStream","parameterTypes":["software.amazon.awssdk.services.cloudwatch.model.PutMetricStreamRequest"] }, {"name":"serviceClientConfiguration","parameterTypes":[] }, {"name":"serviceName","parameterTypes":[] }, {"name":"setAlarmState","parameterTypes":["software.amazon.awssdk.services.cloudwatch.model.SetAlarmStateRequest"] }, {"name":"startMetricStreams","parameterTypes":["software.amazon.awssdk.services.cloudwatch.model.StartMetricStreamsRequest"] }, {"name":"stopMetricStreams","parameterTypes":["software.amazon.awssdk.services.cloudwatch.model.StopMetricStreamsRequest"] }, {"name":"tagResource","parameterTypes":["software.amazon.awssdk.services.cloudwatch.model.TagResourceRequest"] }, {"name":"untagResource","parameterTypes":["software.amazon.awssdk.services.cloudwatch.model.UntagResourceRequest"] }, {"name":"waiter","parameterTypes":[] }]
},
{
  "name":"software.amazon.awssdk.services.cloudwatch.model.DeleteAlarmsRequest"
},
{
  "name":"software.amazon.awssdk.services.cloudwatch.model.DeleteAlarmsResponse"
},
{
  "name":"software.amazon.awssdk.services.cloudwatch.model.DeleteAnomalyDetectorRequest"
},
{
  "name":"software.amazon.awssdk.services.cloudwatch.model.DeleteAnomalyDetectorResponse"
},
{
  "name":"software.amazon.awssdk.services.cloudwatch.model.DeleteDashboardsRequest"
},
{
  "name":"software.amazon.awssdk.services.cloudwatch.model.DeleteDashboardsResponse"
},
{
  "name":"software.amazon.awssdk.services.cloudwatch.model.DeleteInsightRulesRequest"
},
{
  "name":"software.amazon.awssdk.services.cloudwatch.model.DeleteInsightRulesResponse"
},
{
  "name":"software.amazon.awssdk.services.cloudwatch.model.DeleteMetricStreamRequest"
},
{
  "name":"software.amazon.awssdk.services.cloudwatch.model.DeleteMetricStreamResponse"
},
{
  "name":"software.amazon.awssdk.services.cloudwatch.model.DescribeAlarmHistoryRequest"
},
{
  "name":"software.amazon.awssdk.services.cloudwatch.model.DescribeAlarmHistoryResponse"
},
{
  "name":"software.amazon.awssdk.services.cloudwatch.model.DescribeAlarmsForMetricRequest"
},
{
  "name":"software.amazon.awssdk.services.cloudwatch.model.DescribeAlarmsForMetricResponse"
},
{
  "name":"software.amazon.awssdk.services.cloudwatch.model.DescribeAlarmsRequest"
},
{
  "name":"software.amazon.awssdk.services.cloudwatch.model.DescribeAlarmsResponse"
},
{
  "name":"software.amazon.awssdk.services.cloudwatch.model.DescribeAnomalyDetectorsRequest"
},
{
  "name":"software.amazon.awssdk.services.cloudwatch.model.DescribeAnomalyDetectorsResponse"
},
{
  "name":"software.amazon.awssdk.services.cloudwatch.model.DescribeInsightRulesRequest"
},
{
  "name":"software.amazon.awssdk.services.cloudwatch.model.DescribeInsightRulesResponse"
},
{
  "name":"software.amazon.awssdk.services.cloudwatch.model.DisableAlarmActionsRequest"
},
{
  "name":"software.amazon.awssdk.services.cloudwatch.model.DisableAlarmActionsResponse"
},
{
  "name":"software.amazon.awssdk.services.cloudwatch.model.DisableInsightRulesRequest"
},
{
  "name":"software.amazon.awssdk.services.cloudwatch.model.DisableInsightRulesResponse"
},
{
  "name":"software.amazon.awssdk.services.cloudwatch.model.EnableAlarmActionsRequest"
},
{
  "name":"software.amazon.awssdk.services.cloudwatch.model.EnableAlarmActionsResponse"
},
{
  "name":"software.amazon.awssdk.services.cloudwatch.model.EnableInsightRulesRequest"
},
{
  "name":"software.amazon.awssdk.services.cloudwatch.model.EnableInsightRulesResponse"
},
{
  "name":"software.amazon.awssdk.services.cloudwatch.model.GetDashboardRequest"
},
{
  "name":"software.amazon.awssdk.services.cloudwatch.model.GetDashboardResponse"
},
{
  "name":"software.amazon.awssdk.services.cloudwatch.model.GetInsightRuleReportRequest"
},
{
  "name":"software.amazon.awssdk.services.cloudwatch.model.GetInsightRuleReportResponse"
},
{
  "name":"software.amazon.awssdk.services.cloudwatch.model.GetMetricDataRequest"
},
{
  "name":"software.amazon.awssdk.services.cloudwatch.model.GetMetricDataResponse"
},
{
  "name":"software.amazon.awssdk.services.cloudwatch.model.GetMetricStatisticsRequest"
},
{
  "name":"software.amazon.awssdk.services.cloudwatch.model.GetMetricStatisticsResponse"
},
{
  "name":"software.amazon.awssdk.services.cloudwatch.model.GetMetricStreamRequest"
},
{
  "name":"software.amazon.awssdk.services.cloudwatch.model.GetMetricStreamResponse"
},
{
  "name":"software.amazon.awssdk.services.cloudwatch.model.GetMetricWidgetImageRequest"
},
{
  "name":"software.amazon.awssdk.services.cloudwatch.model.GetMetricWidgetImageResponse"
},
{
  "name":"software.amazon.awssdk.services.cloudwatch.model.ListDashboardsRequest"
},
{
  "name":"software.amazon.awssdk.services.cloudwatch.model.ListDashboardsResponse"
},
{
  "name":"software.amazon.awssdk.services.cloudwatch.model.ListManagedInsightRulesRequest"
},
{
  "name":"software.amazon.awssdk.services.cloudwatch.model.ListManagedInsightRulesResponse"
},
{
  "name":"software.amazon.awssdk.services.cloudwatch.model.ListMetricStreamsRequest"
},
{
  "name":"software.amazon.awssdk.services.cloudwatch.model.ListMetricStreamsResponse"
},
{
  "name":"software.amazon.awssdk.services.cloudwatch.model.ListMetricsRequest"
},
{
  "name":"software.amazon.awssdk.services.cloudwatch.model.ListMetricsResponse"
},
{
  "name":"software.amazon.awssdk.services.cloudwatch.model.ListTagsForResourceRequest"
},
{
  "name":"software.amazon.awssdk.services.cloudwatch.model.ListTagsForResourceResponse"
},
{
  "name":"software.amazon.awssdk.services.cloudwatch.model.PutAnomalyDetectorRequest"
},
{
  "name":"software.amazon.awssdk.services.cloudwatch.model.PutAnomalyDetectorResponse"
},
{
  "name":"software.amazon.awssdk.services.cloudwatch.model.PutCompositeAlarmRequest"
},
{
  "name":"software.amazon.awssdk.services.cloudwatch.model.PutCompositeAlarmResponse"
},
{
  "name":"software.amazon.awssdk.services.cloudwatch.model.PutDashboardRequest"
},
{
  "name":"software.amazon.awssdk.services.cloudwatch.model.PutDashboardResponse"
},
{
  "name":"software.amazon.awssdk.services.cloudwatch.model.PutInsightRuleRequest"
},
{
  "name":"software.amazon.awssdk.services.cloudwatch.model.PutInsightRuleResponse"
},
{
  "name":"software.amazon.awssdk.services.cloudwatch.model.PutManagedInsightRulesRequest"
},
{
  "name":"software.amazon.awssdk.services.cloudwatch.model.PutManagedInsightRulesResponse"
},
{
  "name":"software.amazon.awssdk.services.cloudwatch.model.PutMetricAlarmRequest"
},
{
  "name":"software.amazon.awssdk.services.cloudwatch.model.PutMetricAlarmResponse"
},
{
  "name":"software.amazon.awssdk.services.cloudwatch.model.PutMetricDataRequest"
},
{
  "name":"software.amazon.awssdk.services.cloudwatch.model.PutMetricDataResponse"
},
{
  "name":"software.amazon.awssdk.services.cloudwatch.model.PutMetricStreamRequest"
},
{
  "name":"software.amazon.awssdk.services.cloudwatch.model.PutMetricStreamResponse"
},
{
  "name":"software.amazon.awssdk.services.cloudwatch.model.SetAlarmStateRequest"
},
{
  "name":"software.amazon.awssdk.services.cloudwatch.model.SetAlarmStateResponse"
},
{
  "name":"software.amazon.awssdk.services.cloudwatch.model.StartMetricStreamsRequest"
},
{
  "name":"software.amazon.awssdk.services.cloudwatch.model.StartMetricStreamsResponse"
},
{
  "name":"software.amazon.awssdk.services.cloudwatch.model.StopMetricStreamsRequest"
},
{
  "name":"software.amazon.awssdk.services.cloudwatch.model.StopMetricStreamsResponse"
},
{
  "name":"software.amazon.awssdk.services.cloudwatch.model.TagResourceRequest"
},
{
  "name":"software.amazon.awssdk.services.cloudwatch.model.TagResourceResponse"
},
{
  "name":"software.amazon.awssdk.services.cloudwatch.model.UntagResourceRequest"
},
{
  "name":"software.amazon.awssdk.services.cloudwatch.model.UntagResourceResponse"
},
{
  "name":"software.amazon.awssdk.services.cloudwatch.paginators.DescribeAlarmHistoryPublisher"
},
{
  "name":"software.amazon.awssdk.services.cloudwatch.paginators.DescribeAlarmsPublisher"
},
{
  "name":"software.amazon.awssdk.services.cloudwatch.paginators.DescribeAnomalyDetectorsPublisher"
},
{
  "name":"software.amazon.awssdk.services.cloudwatch.paginators.DescribeInsightRulesPublisher"
},
{
  "name":"software.amazon.awssdk.services.cloudwatch.paginators.GetMetricDataPublisher"
},
{
  "name":"software.amazon.awssdk.services.cloudwatch.paginators.ListDashboardsPublisher"
},
{
  "name":"software.amazon.awssdk.services.cloudwatch.paginators.ListManagedInsightRulesPublisher"
},
{
  "name":"software.amazon.awssdk.services.cloudwatch.paginators.ListMetricStreamsPublisher"
},
{
  "name":"software.amazon.awssdk.services.cloudwatch.paginators.ListMetricsPublisher"
},
{
  "name":"software.amazon.awssdk.services.cloudwatch.waiters.CloudWatchAsyncWaiter"
},
{
  "name":"software.amazon.awssdk.services.s3.DefaultS3BaseClientBuilder",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"accelerate","parameterTypes":["java.lang.Boolean"] }, {"name":"authSchemeProvider","parameterTypes":["software.amazon.awssdk.services.s3.auth.scheme.S3AuthSchemeProvider"] }, {"name":"crossRegionAccessEnabled","parameterTypes":["java.lang.Boolean"] }, {"name":"disableMultiRegionAccessPoints","parameterTypes":["java.lang.Boolean"] }, {"name":"disableS3ExpressSessionAuth","parameterTypes":["java.lang.Boolean"] }, {"name":"forcePathStyle","parameterTypes":["java.lang.Boolean"] }, {"name":"putAuthScheme","parameterTypes":["software.amazon.awssdk.http.auth.spi.scheme.AuthScheme"] }, {"name":"serviceConfiguration","parameterTypes":["software.amazon.awssdk.services.s3.S3Configuration"] }, {"name":"setServiceConfiguration","parameterTypes":["software.amazon.awssdk.services.s3.S3Configuration"] }, {"name":"useArnRegion","parameterTypes":["java.lang.Boolean"] }]
},
{
  "name":"software.amazon.awssdk.services.s3.DefaultS3Client",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"abortMultipartUpload","parameterTypes":["software.amazon.awssdk.services.s3.model.AbortMultipartUploadRequest"] }, {"name":"close","parameterTypes":[] }, {"name":"completeMultipartUpload","parameterTypes":["software.amazon.awssdk.services.s3.model.CompleteMultipartUploadRequest"] }, {"name":"copyObject","parameterTypes":["software.amazon.awssdk.services.s3.model.CopyObjectRequest"] }, {"name":"createBucket","parameterTypes":["software.amazon.awssdk.services.s3.model.CreateBucketRequest"] }, {"name":"createMultipartUpload","parameterTypes":["software.amazon.awssdk.services.s3.model.CreateMultipartUploadRequest"] }, {"name":"createSession","parameterTypes":["software.amazon.awssdk.services.s3.model.CreateSessionRequest"] }, {"name":"deleteBucket","parameterTypes":["software.amazon.awssdk.services.s3.model.DeleteBucketRequest"] }, {"name":"deleteBucketAnalyticsConfiguration","parameterTypes":["software.amazon.awssdk.services.s3.model.DeleteBucketAnalyticsConfigurationRequest"] }, {"name":"deleteBucketCors","parameterTypes":["software.amazon.awssdk.services.s3.model.DeleteBucketCorsRequest"] }, {"name":"deleteBucketEncryption","parameterTypes":["software.amazon.awssdk.services.s3.model.DeleteBucketEncryptionRequest"] }, {"name":"deleteBucketIntelligentTieringConfiguration","parameterTypes":["software.amazon.awssdk.services.s3.model.DeleteBucketIntelligentTieringConfigurationRequest"] }, {"name":"deleteBucketInventoryConfiguration","parameterTypes":["software.amazon.awssdk.services.s3.model.DeleteBucketInventoryConfigurationRequest"] }, {"name":"deleteBucketLifecycle","parameterTypes":["software.amazon.awssdk.services.s3.model.DeleteBucketLifecycleRequest"] }, {"name":"deleteBucketMetricsConfiguration","parameterTypes":["software.amazon.awssdk.services.s3.model.DeleteBucketMetricsConfigurationRequest"] }, {"name":"deleteBucketOwnershipControls","parameterTypes":["software.amazon.awssdk.services.s3.model.DeleteBucketOwnershipControlsRequest"] }, {"name":"deleteBucketPolicy","parameterTypes":["software.amazon.awssdk.services.s3.model.DeleteBucketPolicyRequest"] }, {"name":"deleteBucketReplication","parameterTypes":["software.amazon.awssdk.services.s3.model.DeleteBucketReplicationRequest"] }, {"name":"deleteBucketTagging","parameterTypes":["software.amazon.awssdk.services.s3.model.DeleteBucketTaggingRequest"] }, {"name":"deleteBucketWebsite","parameterTypes":["software.amazon.awssdk.services.s3.model.DeleteBucketWebsiteRequest"] }, {"name":"deleteObject","parameterTypes":["software.amazon.awssdk.services.s3.model.DeleteObjectRequest"] }, {"name":"deleteObjectTagging","parameterTypes":["software.amazon.awssdk.services.s3.model.DeleteObjectTaggingRequest"] }, {"name":"deleteObjects","parameterTypes":["software.amazon.awssdk.services.s3.model.DeleteObjectsRequest"] }, {"name":"deletePublicAccessBlock","parameterTypes":["software.amazon.awssdk.services.s3.model.DeletePublicAccessBlockRequest"] }, {"name":"getBucketAccelerateConfiguration","parameterTypes":["software.amazon.awssdk.services.s3.model.GetBucketAccelerateConfigurationRequest"] }, {"name":"getBucketAcl","parameterTypes":["software.amazon.awssdk.services.s3.model.GetBucketAclRequest"] }, {"name":"getBucketAnalyticsConfiguration","parameterTypes":["software.amazon.awssdk.services.s3.model.GetBucketAnalyticsConfigurationRequest"] }, {"name":"getBucketCors","parameterTypes":["software.amazon.awssdk.services.s3.model.GetBucketCorsRequest"] }, {"name":"getBucketEncryption","parameterTypes":["software.amazon.awssdk.services.s3.model.GetBucketEncryptionRequest"] }, {"name":"getBucketIntelligentTieringConfiguration","parameterTypes":["software.amazon.awssdk.services.s3.model.GetBucketIntelligentTieringConfigurationRequest"] }, {"name":"getBucketInventoryConfiguration","parameterTypes":["software.amazon.awssdk.services.s3.model.GetBucketInventoryConfigurationRequest"] }, {"name":"getBucketLifecycleConfiguration","parameterTypes":["software.amazon.awssdk.services.s3.model.GetBucketLifecycleConfigurationRequest"] }, {"name":"getBucketLocation","parameterTypes":["software.amazon.awssdk.services.s3.model.GetBucketLocationRequest"] }, {"name":"getBucketLogging","parameterTypes":["software.amazon.awssdk.services.s3.model.GetBucketLoggingRequest"] }, {"name":"getBucketMetricsConfiguration","parameterTypes":["software.amazon.awssdk.services.s3.model.GetBucketMetricsConfigurationRequest"] }, {"name":"getBucketNotificationConfiguration","parameterTypes":["software.amazon.awssdk.services.s3.model.GetBucketNotificationConfigurationRequest"] }, {"name":"getBucketOwnershipControls","parameterTypes":["software.amazon.awssdk.services.s3.model.GetBucketOwnershipControlsRequest"] }, {"name":"getBucketPolicy","parameterTypes":["software.amazon.awssdk.services.s3.model.GetBucketPolicyRequest"] }, {"name":"getBucketPolicyStatus","parameterTypes":["software.amazon.awssdk.services.s3.model.GetBucketPolicyStatusRequest"] }, {"name":"getBucketReplication","parameterTypes":["software.amazon.awssdk.services.s3.model.GetBucketReplicationRequest"] }, {"name":"getBucketRequestPayment","parameterTypes":["software.amazon.awssdk.services.s3.model.GetBucketRequestPaymentRequest"] }, {"name":"getBucketTagging","parameterTypes":["software.amazon.awssdk.services.s3.model.GetBucketTaggingRequest"] }, {"name":"getBucketVersioning","parameterTypes":["software.amazon.awssdk.services.s3.model.GetBucketVersioningRequest"] }, {"name":"getBucketWebsite","parameterTypes":["software.amazon.awssdk.services.s3.model.GetBucketWebsiteRequest"] }, {"name":"getObject","parameterTypes":["software.amazon.awssdk.services.s3.model.GetObjectRequest","software.amazon.awssdk.core.sync.ResponseTransformer"] }, {"name":"getObjectAcl","parameterTypes":["software.amazon.awssdk.services.s3.model.GetObjectAclRequest"] }, {"name":"getObjectAttributes","parameterTypes":["software.amazon.awssdk.services.s3.model.GetObjectAttributesRequest"] }, {"name":"getObjectLegalHold","parameterTypes":["software.amazon.awssdk.services.s3.model.GetObjectLegalHoldRequest"] }, {"name":"getObjectLockConfiguration","parameterTypes":["software.amazon.awssdk.services.s3.model.GetObjectLockConfigurationRequest"] }, {"name":"getObjectRetention","parameterTypes":["software.amazon.awssdk.services.s3.model.GetObjectRetentionRequest"] }, {"name":"getObjectTagging","parameterTypes":["software.amazon.awssdk.services.s3.model.GetObjectTaggingRequest"] }, {"name":"getObjectTorrent","parameterTypes":["software.amazon.awssdk.services.s3.model.GetObjectTorrentRequest","software.amazon.awssdk.core.sync.ResponseTransformer"] }, {"name":"getPublicAccessBlock","parameterTypes":["software.amazon.awssdk.services.s3.model.GetPublicAccessBlockRequest"] }, {"name":"headBucket","parameterTypes":["software.amazon.awssdk.services.s3.model.HeadBucketRequest"] }, {"name":"headObject","parameterTypes":["software.amazon.awssdk.services.s3.model.HeadObjectRequest"] }, {"name":"listBucketAnalyticsConfigurations","parameterTypes":["software.amazon.awssdk.services.s3.model.ListBucketAnalyticsConfigurationsRequest"] }, {"name":"listBucketIntelligentTieringConfigurations","parameterTypes":["software.amazon.awssdk.services.s3.model.ListBucketIntelligentTieringConfigurationsRequest"] }, {"name":"listBucketInventoryConfigurations","parameterTypes":["software.amazon.awssdk.services.s3.model.ListBucketInventoryConfigurationsRequest"] }, {"name":"listBucketMetricsConfigurations","parameterTypes":["software.amazon.awssdk.services.s3.model.ListBucketMetricsConfigurationsRequest"] }, {"name":"listBuckets","parameterTypes":["software.amazon.awssdk.services.s3.model.ListBucketsRequest"] }, {"name":"listDirectoryBuckets","parameterTypes":["software.amazon.awssdk.services.s3.model.ListDirectoryBucketsRequest"] }, {"name":"listMultipartUploads","parameterTypes":["software.amazon.awssdk.services.s3.model.ListMultipartUploadsRequest"] }, {"name":"listObjectVersions","parameterTypes":["software.amazon.awssdk.services.s3.model.ListObjectVersionsRequest"] }, {"name":"listObjects","parameterTypes":["software.amazon.awssdk.services.s3.model.ListObjectsRequest"] }, {"name":"listObjectsV2","parameterTypes":["software.amazon.awssdk.services.s3.model.ListObjectsV2Request"] }, {"name":"listParts","parameterTypes":["software.amazon.awssdk.services.s3.model.ListPartsRequest"] }, {"name":"putBucketAccelerateConfiguration","parameterTypes":["software.amazon.awssdk.services.s3.model.PutBucketAccelerateConfigurationRequest"] }, {"name":"putBucketAcl","parameterTypes":["software.amazon.awssdk.services.s3.model.PutBucketAclRequest"] }, {"name":"putBucketAnalyticsConfiguration","parameterTypes":["software.amazon.awssdk.services.s3.model.PutBucketAnalyticsConfigurationRequest"] }, {"name":"putBucketCors","parameterTypes":["software.amazon.awssdk.services.s3.model.PutBucketCorsRequest"] }, {"name":"putBucketEncryption","parameterTypes":["software.amazon.awssdk.services.s3.model.PutBucketEncryptionRequest"] }, {"name":"putBucketIntelligentTieringConfiguration","parameterTypes":["software.amazon.awssdk.services.s3.model.PutBucketIntelligentTieringConfigurationRequest"] }, {"name":"putBucketInventoryConfiguration","parameterTypes":["software.amazon.awssdk.services.s3.model.PutBucketInventoryConfigurationRequest"] }, {"name":"putBucketLifecycleConfiguration","parameterTypes":["software.amazon.awssdk.services.s3.model.PutBucketLifecycleConfigurationRequest"] }, {"name":"putBucketLogging","parameterTypes":["software.amazon.awssdk.services.s3.model.PutBucketLoggingRequest"] }, {"name":"putBucketMetricsConfiguration","parameterTypes":["software.amazon.awssdk.services.s3.model.PutBucketMetricsConfigurationRequest"] }, {"name":"putBucketNotificationConfiguration","parameterTypes":["software.amazon.awssdk.services.s3.model.PutBucketNotificationConfigurationRequest"] }, {"name":"putBucketOwnershipControls","parameterTypes":["software.amazon.awssdk.services.s3.model.PutBucketOwnershipControlsRequest"] }, {"name":"putBucketPolicy","parameterTypes":["software.amazon.awssdk.services.s3.model.PutBucketPolicyRequest"] }, {"name":"putBucketReplication","parameterTypes":["software.amazon.awssdk.services.s3.model.PutBucketReplicationRequest"] }, {"name":"putBucketRequestPayment","parameterTypes":["software.amazon.awssdk.services.s3.model.PutBucketRequestPaymentRequest"] }, {"name":"putBucketTagging","parameterTypes":["software.amazon.awssdk.services.s3.model.PutBucketTaggingRequest"] }, {"name":"putBucketVersioning","parameterTypes":["software.amazon.awssdk.services.s3.model.PutBucketVersioningRequest"] }, {"name":"putBucketWebsite","parameterTypes":["software.amazon.awssdk.services.s3.model.PutBucketWebsiteRequest"] }, {"name":"putObject","parameterTypes":["software.amazon.awssdk.services.s3.model.PutObjectRequest","software.amazon.awssdk.core.sync.RequestBody"] }, {"name":"putObjectAcl","parameterTypes":["software.amazon.awssdk.services.s3.model.PutObjectAclRequest"] }, {"name":"putObjectLegalHold","parameterTypes":["software.amazon.awssdk.services.s3.model.PutObjectLegalHoldRequest"] }, {"name":"putObjectLockConfiguration","parameterTypes":["software.amazon.awssdk.services.s3.model.PutObjectLockConfigurationRequest"] }, {"name":"putObjectRetention","parameterTypes":["software.amazon.awssdk.services.s3.model.PutObjectRetentionRequest"] }, {"name":"putObjectTagging","parameterTypes":["software.amazon.awssdk.services.s3.model.PutObjectTaggingRequest"] }, {"name":"putPublicAccessBlock","parameterTypes":["software.amazon.awssdk.services.s3.model.PutPublicAccessBlockRequest"] }, {"name":"restoreObject","parameterTypes":["software.amazon.awssdk.services.s3.model.RestoreObjectRequest"] }, {"name":"serviceClientConfiguration","parameterTypes":[] }, {"name":"serviceName","parameterTypes":[] }, {"name":"uploadPart","parameterTypes":["software.amazon.awssdk.services.s3.model.UploadPartRequest","software.amazon.awssdk.core.sync.RequestBody"] }, {"name":"uploadPartCopy","parameterTypes":["software.amazon.awssdk.services.s3.model.UploadPartCopyRequest"] }, {"name":"utilities","parameterTypes":[] }, {"name":"waiter","parameterTypes":[] }, {"name":"writeGetObjectResponse","parameterTypes":["software.amazon.awssdk.services.s3.model.WriteGetObjectResponseRequest","software.amazon.awssdk.core.sync.RequestBody"] }]
},
{
  "name":"software.amazon.awssdk.services.s3.DefaultS3ClientBuilder",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"endpointProvider","parameterTypes":["software.amazon.awssdk.services.s3.endpoints.S3EndpointProvider"] }, {"name":"httpClient","parameterTypes":["software.amazon.awssdk.http.SdkHttpClient"] }, {"name":"httpClientBuilder","parameterTypes":["software.amazon.awssdk.http.SdkHttpClient$Builder"] }]
},
{
  "name":"software.amazon.awssdk.services.s3.S3BaseClientBuilder",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"serviceConfiguration","parameterTypes":["java.util.function.Consumer"] }]
},
{
  "name":"software.amazon.awssdk.services.s3.S3Client",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"abortMultipartUpload","parameterTypes":["java.util.function.Consumer"] }, {"name":"completeMultipartUpload","parameterTypes":["java.util.function.Consumer"] }, {"name":"copyObject","parameterTypes":["java.util.function.Consumer"] }, {"name":"createBucket","parameterTypes":["java.util.function.Consumer"] }, {"name":"createMultipartUpload","parameterTypes":["java.util.function.Consumer"] }, {"name":"createSession","parameterTypes":["java.util.function.Consumer"] }, {"name":"deleteBucket","parameterTypes":["java.util.function.Consumer"] }, {"name":"deleteBucketAnalyticsConfiguration","parameterTypes":["java.util.function.Consumer"] }, {"name":"deleteBucketCors","parameterTypes":["java.util.function.Consumer"] }, {"name":"deleteBucketEncryption","parameterTypes":["java.util.function.Consumer"] }, {"name":"deleteBucketIntelligentTieringConfiguration","parameterTypes":["java.util.function.Consumer"] }, {"name":"deleteBucketInventoryConfiguration","parameterTypes":["java.util.function.Consumer"] }, {"name":"deleteBucketLifecycle","parameterTypes":["java.util.function.Consumer"] }, {"name":"deleteBucketMetricsConfiguration","parameterTypes":["java.util.function.Consumer"] }, {"name":"deleteBucketOwnershipControls","parameterTypes":["java.util.function.Consumer"] }, {"name":"deleteBucketPolicy","parameterTypes":["java.util.function.Consumer"] }, {"name":"deleteBucketReplication","parameterTypes":["java.util.function.Consumer"] }, {"name":"deleteBucketTagging","parameterTypes":["java.util.function.Consumer"] }, {"name":"deleteBucketWebsite","parameterTypes":["java.util.function.Consumer"] }, {"name":"deleteObject","parameterTypes":["java.util.function.Consumer"] }, {"name":"deleteObjectTagging","parameterTypes":["java.util.function.Consumer"] }, {"name":"deleteObjects","parameterTypes":["java.util.function.Consumer"] }, {"name":"deletePublicAccessBlock","parameterTypes":["java.util.function.Consumer"] }, {"name":"getBucketAccelerateConfiguration","parameterTypes":["java.util.function.Consumer"] }, {"name":"getBucketAcl","parameterTypes":["java.util.function.Consumer"] }, {"name":"getBucketAnalyticsConfiguration","parameterTypes":["java.util.function.Consumer"] }, {"name":"getBucketCors","parameterTypes":["java.util.function.Consumer"] }, {"name":"getBucketEncryption","parameterTypes":["java.util.function.Consumer"] }, {"name":"getBucketIntelligentTieringConfiguration","parameterTypes":["java.util.function.Consumer"] }, {"name":"getBucketInventoryConfiguration","parameterTypes":["java.util.function.Consumer"] }, {"name":"getBucketLifecycleConfiguration","parameterTypes":["java.util.function.Consumer"] }, {"name":"getBucketLocation","parameterTypes":["java.util.function.Consumer"] }, {"name":"getBucketLogging","parameterTypes":["java.util.function.Consumer"] }, {"name":"getBucketMetricsConfiguration","parameterTypes":["java.util.function.Consumer"] }, {"name":"getBucketNotificationConfiguration","parameterTypes":["java.util.function.Consumer"] }, {"name":"getBucketOwnershipControls","parameterTypes":["java.util.function.Consumer"] }, {"name":"getBucketPolicy","parameterTypes":["java.util.function.Consumer"] }, {"name":"getBucketPolicyStatus","parameterTypes":["java.util.function.Consumer"] }, {"name":"getBucketReplication","parameterTypes":["java.util.function.Consumer"] }, {"name":"getBucketRequestPayment","parameterTypes":["java.util.function.Consumer"] }, {"name":"getBucketTagging","parameterTypes":["java.util.function.Consumer"] }, {"name":"getBucketVersioning","parameterTypes":["java.util.function.Consumer"] }, {"name":"getBucketWebsite","parameterTypes":["java.util.function.Consumer"] }, {"name":"getObject","parameterTypes":["java.util.function.Consumer"] }, {"name":"getObject","parameterTypes":["java.util.function.Consumer","java.nio.file.Path"] }, {"name":"getObject","parameterTypes":["java.util.function.Consumer","software.amazon.awssdk.core.sync.ResponseTransformer"] }, {"name":"getObject","parameterTypes":["software.amazon.awssdk.services.s3.model.GetObjectRequest"] }, {"name":"getObject","parameterTypes":["software.amazon.awssdk.services.s3.model.GetObjectRequest","java.nio.file.Path"] }, {"name":"getObjectAcl","parameterTypes":["java.util.function.Consumer"] }, {"name":"getObjectAsBytes","parameterTypes":["java.util.function.Consumer"] }, {"name":"getObjectAsBytes","parameterTypes":["software.amazon.awssdk.services.s3.model.GetObjectRequest"] }, {"name":"getObjectAttributes","parameterTypes":["java.util.function.Consumer"] }, {"name":"getObjectLegalHold","parameterTypes":["java.util.function.Consumer"] }, {"name":"getObjectLockConfiguration","parameterTypes":["java.util.function.Consumer"] }, {"name":"getObjectRetention","parameterTypes":["java.util.function.Consumer"] }, {"name":"getObjectTagging","parameterTypes":["java.util.function.Consumer"] }, {"name":"getObjectTorrent","parameterTypes":["java.util.function.Consumer"] }, {"name":"getObjectTorrent","parameterTypes":["java.util.function.Consumer","java.nio.file.Path"] }, {"name":"getObjectTorrent","parameterTypes":["java.util.function.Consumer","software.amazon.awssdk.core.sync.ResponseTransformer"] }, {"name":"getObjectTorrent","parameterTypes":["software.amazon.awssdk.services.s3.model.GetObjectTorrentRequest"] }, {"name":"getObjectTorrent","parameterTypes":["software.amazon.awssdk.services.s3.model.GetObjectTorrentRequest","java.nio.file.Path"] }, {"name":"getObjectTorrentAsBytes","parameterTypes":["java.util.function.Consumer"] }, {"name":"getObjectTorrentAsBytes","parameterTypes":["software.amazon.awssdk.services.s3.model.GetObjectTorrentRequest"] }, {"name":"getPublicAccessBlock","parameterTypes":["java.util.function.Consumer"] }, {"name":"headBucket","parameterTypes":["java.util.function.Consumer"] }, {"name":"headObject","parameterTypes":["java.util.function.Consumer"] }, {"name":"listBucketAnalyticsConfigurations","parameterTypes":["java.util.function.Consumer"] }, {"name":"listBucketIntelligentTieringConfigurations","parameterTypes":["java.util.function.Consumer"] }, {"name":"listBucketInventoryConfigurations","parameterTypes":["java.util.function.Consumer"] }, {"name":"listBucketMetricsConfigurations","parameterTypes":["java.util.function.Consumer"] }, {"name":"listBuckets","parameterTypes":[] }, {"name":"listBuckets","parameterTypes":["java.util.function.Consumer"] }, {"name":"listBucketsPaginator","parameterTypes":[] }, {"name":"listBucketsPaginator","parameterTypes":["java.util.function.Consumer"] }, {"name":"listBucketsPaginator","parameterTypes":["software.amazon.awssdk.services.s3.model.ListBucketsRequest"] }, {"name":"listDirectoryBuckets","parameterTypes":["java.util.function.Consumer"] }, {"name":"listDirectoryBucketsPaginator","parameterTypes":["java.util.function.Consumer"] }, {"name":"listDirectoryBucketsPaginator","parameterTypes":["software.amazon.awssdk.services.s3.model.ListDirectoryBucketsRequest"] }, {"name":"listMultipartUploads","parameterTypes":["java.util.function.Consumer"] }, {"name":"listMultipartUploadsPaginator","parameterTypes":["java.util.function.Consumer"] }, {"name":"listMultipartUploadsPaginator","parameterTypes":["software.amazon.awssdk.services.s3.model.ListMultipartUploadsRequest"] }, {"name":"listObjectVersions","parameterTypes":["java.util.function.Consumer"] }, {"name":"listObjectVersionsPaginator","parameterTypes":["java.util.function.Consumer"] }, {"name":"listObjectVersionsPaginator","parameterTypes":["software.amazon.awssdk.services.s3.model.ListObjectVersionsRequest"] }, {"name":"listObjects","parameterTypes":["java.util.function.Consumer"] }, {"name":"listObjectsV2","parameterTypes":["java.util.function.Consumer"] }, {"name":"listObjectsV2Paginator","parameterTypes":["java.util.function.Consumer"] }, {"name":"listObjectsV2Paginator","parameterTypes":["software.amazon.awssdk.services.s3.model.ListObjectsV2Request"] }, {"name":"listParts","parameterTypes":["java.util.function.Consumer"] }, {"name":"listPartsPaginator","parameterTypes":["java.util.function.Consumer"] }, {"name":"listPartsPaginator","parameterTypes":["software.amazon.awssdk.services.s3.model.ListPartsRequest"] }, {"name":"putBucketAccelerateConfiguration","parameterTypes":["java.util.function.Consumer"] }, {"name":"putBucketAcl","parameterTypes":["java.util.function.Consumer"] }, {"name":"putBucketAnalyticsConfiguration","parameterTypes":["java.util.function.Consumer"] }, {"name":"putBucketCors","parameterTypes":["java.util.function.Consumer"] }, {"name":"putBucketEncryption","parameterTypes":["java.util.function.Consumer"] }, {"name":"putBucketIntelligentTieringConfiguration","parameterTypes":["java.util.function.Consumer"] }, {"name":"putBucketInventoryConfiguration","parameterTypes":["java.util.function.Consumer"] }, {"name":"putBucketLifecycleConfiguration","parameterTypes":["java.util.function.Consumer"] }, {"name":"putBucketLogging","parameterTypes":["java.util.function.Consumer"] }, {"name":"putBucketMetricsConfiguration","parameterTypes":["java.util.function.Consumer"] }, {"name":"putBucketNotificationConfiguration","parameterTypes":["java.util.function.Consumer"] }, {"name":"putBucketOwnershipControls","parameterTypes":["java.util.function.Consumer"] }, {"name":"putBucketPolicy","parameterTypes":["java.util.function.Consumer"] }, {"name":"putBucketReplication","parameterTypes":["java.util.function.Consumer"] }, {"name":"putBucketRequestPayment","parameterTypes":["java.util.function.Consumer"] }, {"name":"putBucketTagging","parameterTypes":["java.util.function.Consumer"] }, {"name":"putBucketVersioning","parameterTypes":["java.util.function.Consumer"] }, {"name":"putBucketWebsite","parameterTypes":["java.util.function.Consumer"] }, {"name":"putObject","parameterTypes":["java.util.function.Consumer","java.nio.file.Path"] }, {"name":"putObject","parameterTypes":["java.util.function.Consumer","software.amazon.awssdk.core.sync.RequestBody"] }, {"name":"putObject","parameterTypes":["software.amazon.awssdk.services.s3.model.PutObjectRequest","java.nio.file.Path"] }, {"name":"putObjectAcl","parameterTypes":["java.util.function.Consumer"] }, {"name":"putObjectLegalHold","parameterTypes":["java.util.function.Consumer"] }, {"name":"putObjectLockConfiguration","parameterTypes":["java.util.function.Consumer"] }, {"name":"putObjectRetention","parameterTypes":["java.util.function.Consumer"] }, {"name":"putObjectTagging","parameterTypes":["java.util.function.Consumer"] }, {"name":"putPublicAccessBlock","parameterTypes":["java.util.function.Consumer"] }, {"name":"restoreObject","parameterTypes":["java.util.function.Consumer"] }, {"name":"uploadPart","parameterTypes":["java.util.function.Consumer","java.nio.file.Path"] }, {"name":"uploadPart","parameterTypes":["java.util.function.Consumer","software.amazon.awssdk.core.sync.RequestBody"] }, {"name":"uploadPart","parameterTypes":["software.amazon.awssdk.services.s3.model.UploadPartRequest","java.nio.file.Path"] }, {"name":"uploadPartCopy","parameterTypes":["java.util.function.Consumer"] }, {"name":"writeGetObjectResponse","parameterTypes":["java.util.function.Consumer","java.nio.file.Path"] }, {"name":"writeGetObjectResponse","parameterTypes":["java.util.function.Consumer","software.amazon.awssdk.core.sync.RequestBody"] }, {"name":"writeGetObjectResponse","parameterTypes":["software.amazon.awssdk.services.s3.model.WriteGetObjectResponseRequest","java.nio.file.Path"] }]
},
{
  "name":"software.amazon.awssdk.services.s3.S3ClientBuilder",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"software.amazon.awssdk.services.s3.S3Configuration"
},
{
  "name":"software.amazon.awssdk.services.s3.S3ServiceClientConfiguration"
},
{
  "name":"software.amazon.awssdk.services.s3.S3Utilities"
},
{
  "name":"software.amazon.awssdk.services.s3.auth.scheme.S3AuthSchemeProvider"
},
{
  "name":"software.amazon.awssdk.services.s3.endpoints.S3EndpointProvider"
},
{
  "name":"software.amazon.awssdk.services.s3.internal.endpoints.UseGlobalEndpointResolver"
},
{
  "name":"software.amazon.awssdk.services.s3.internal.signing.DefaultS3Presigner",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"presignAbortMultipartUpload","parameterTypes":["software.amazon.awssdk.services.s3.presigner.model.AbortMultipartUploadPresignRequest"] }, {"name":"presignCompleteMultipartUpload","parameterTypes":["software.amazon.awssdk.services.s3.presigner.model.CompleteMultipartUploadPresignRequest"] }, {"name":"presignCreateMultipartUpload","parameterTypes":["software.amazon.awssdk.services.s3.presigner.model.CreateMultipartUploadPresignRequest"] }, {"name":"presignDeleteObject","parameterTypes":["software.amazon.awssdk.services.s3.presigner.model.DeleteObjectPresignRequest"] }, {"name":"presignGetObject","parameterTypes":["software.amazon.awssdk.services.s3.presigner.model.GetObjectPresignRequest"] }, {"name":"presignPutObject","parameterTypes":["software.amazon.awssdk.services.s3.presigner.model.PutObjectPresignRequest"] }, {"name":"presignUploadPart","parameterTypes":["software.amazon.awssdk.services.s3.presigner.model.UploadPartPresignRequest"] }]
},
{
  "name":"software.amazon.awssdk.services.s3.internal.signing.DefaultSdkPresigner",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"close","parameterTypes":[] }]
},
{
  "name":"software.amazon.awssdk.services.s3.model.AbortMultipartUploadRequest"
},
{
  "name":"software.amazon.awssdk.services.s3.model.AbortMultipartUploadResponse"
},
{
  "name":"software.amazon.awssdk.services.s3.model.BucketAlreadyExistsException"
},
{
  "name":"software.amazon.awssdk.services.s3.model.BucketAlreadyOwnedByYouException"
},
{
  "name":"software.amazon.awssdk.services.s3.model.CompleteMultipartUploadRequest"
},
{
  "name":"software.amazon.awssdk.services.s3.model.CompleteMultipartUploadResponse"
},
{
  "name":"software.amazon.awssdk.services.s3.model.CopyObjectRequest"
},
{
  "name":"software.amazon.awssdk.services.s3.model.CopyObjectResponse"
},
{
  "name":"software.amazon.awssdk.services.s3.model.CreateBucketRequest"
},
{
  "name":"software.amazon.awssdk.services.s3.model.CreateBucketRequest$Builder"
},
{
  "name":"software.amazon.awssdk.services.s3.model.CreateBucketResponse"
},
{
  "name":"software.amazon.awssdk.services.s3.model.CreateMultipartUploadRequest"
},
{
  "name":"software.amazon.awssdk.services.s3.model.CreateMultipartUploadResponse"
},
{
  "name":"software.amazon.awssdk.services.s3.model.CreateSessionRequest"
},
{
  "name":"software.amazon.awssdk.services.s3.model.CreateSessionResponse"
},
{
  "name":"software.amazon.awssdk.services.s3.model.Delete$Builder"
},
{
  "name":"software.amazon.awssdk.services.s3.model.DeleteBucketAnalyticsConfigurationRequest"
},
{
  "name":"software.amazon.awssdk.services.s3.model.DeleteBucketAnalyticsConfigurationResponse"
},
{
  "name":"software.amazon.awssdk.services.s3.model.DeleteBucketCorsRequest"
},
{
  "name":"software.amazon.awssdk.services.s3.model.DeleteBucketCorsResponse"
},
{
  "name":"software.amazon.awssdk.services.s3.model.DeleteBucketEncryptionRequest"
},
{
  "name":"software.amazon.awssdk.services.s3.model.DeleteBucketEncryptionResponse"
},
{
  "name":"software.amazon.awssdk.services.s3.model.DeleteBucketIntelligentTieringConfigurationRequest"
},
{
  "name":"software.amazon.awssdk.services.s3.model.DeleteBucketIntelligentTieringConfigurationResponse"
},
{
  "name":"software.amazon.awssdk.services.s3.model.DeleteBucketInventoryConfigurationRequest"
},
{
  "name":"software.amazon.awssdk.services.s3.model.DeleteBucketInventoryConfigurationResponse"
},
{
  "name":"software.amazon.awssdk.services.s3.model.DeleteBucketLifecycleRequest"
},
{
  "name":"software.amazon.awssdk.services.s3.model.DeleteBucketLifecycleResponse"
},
{
  "name":"software.amazon.awssdk.services.s3.model.DeleteBucketMetricsConfigurationRequest"
},
{
  "name":"software.amazon.awssdk.services.s3.model.DeleteBucketMetricsConfigurationResponse"
},
{
  "name":"software.amazon.awssdk.services.s3.model.DeleteBucketOwnershipControlsRequest"
},
{
  "name":"software.amazon.awssdk.services.s3.model.DeleteBucketOwnershipControlsResponse"
},
{
  "name":"software.amazon.awssdk.services.s3.model.DeleteBucketPolicyRequest"
},
{
  "name":"software.amazon.awssdk.services.s3.model.DeleteBucketPolicyResponse"
},
{
  "name":"software.amazon.awssdk.services.s3.model.DeleteBucketReplicationRequest"
},
{
  "name":"software.amazon.awssdk.services.s3.model.DeleteBucketReplicationResponse"
},
{
  "name":"software.amazon.awssdk.services.s3.model.DeleteBucketRequest"
},
{
  "name":"software.amazon.awssdk.services.s3.model.DeleteBucketRequest$Builder"
},
{
  "name":"software.amazon.awssdk.services.s3.model.DeleteBucketResponse"
},
{
  "name":"software.amazon.awssdk.services.s3.model.DeleteBucketTaggingRequest"
},
{
  "name":"software.amazon.awssdk.services.s3.model.DeleteBucketTaggingResponse"
},
{
  "name":"software.amazon.awssdk.services.s3.model.DeleteBucketWebsiteRequest"
},
{
  "name":"software.amazon.awssdk.services.s3.model.DeleteBucketWebsiteResponse"
},
{
  "name":"software.amazon.awssdk.services.s3.model.DeleteObjectRequest"
},
{
  "name":"software.amazon.awssdk.services.s3.model.DeleteObjectRequest$Builder"
},
{
  "name":"software.amazon.awssdk.services.s3.model.DeleteObjectResponse"
},
{
  "name":"software.amazon.awssdk.services.s3.model.DeleteObjectTaggingRequest"
},
{
  "name":"software.amazon.awssdk.services.s3.model.DeleteObjectTaggingResponse"
},
{
  "name":"software.amazon.awssdk.services.s3.model.DeleteObjectsRequest"
},
{
  "name":"software.amazon.awssdk.services.s3.model.DeleteObjectsResponse"
},
{
  "name":"software.amazon.awssdk.services.s3.model.DeletePublicAccessBlockRequest"
},
{
  "name":"software.amazon.awssdk.services.s3.model.DeletePublicAccessBlockResponse"
},
{
  "name":"software.amazon.awssdk.services.s3.model.EncryptionTypeMismatchException"
},
{
  "name":"software.amazon.awssdk.services.s3.model.GetBucketAccelerateConfigurationRequest"
},
{
  "name":"software.amazon.awssdk.services.s3.model.GetBucketAccelerateConfigurationResponse"
},
{
  "name":"software.amazon.awssdk.services.s3.model.GetBucketAclRequest"
},
{
  "name":"software.amazon.awssdk.services.s3.model.GetBucketAclResponse"
},
{
  "name":"software.amazon.awssdk.services.s3.model.GetBucketAnalyticsConfigurationRequest"
},
{
  "name":"software.amazon.awssdk.services.s3.model.GetBucketAnalyticsConfigurationResponse"
},
{
  "name":"software.amazon.awssdk.services.s3.model.GetBucketCorsRequest"
},
{
  "name":"software.amazon.awssdk.services.s3.model.GetBucketCorsResponse"
},
{
  "name":"software.amazon.awssdk.services.s3.model.GetBucketEncryptionRequest"
},
{
  "name":"software.amazon.awssdk.services.s3.model.GetBucketEncryptionResponse"
},
{
  "name":"software.amazon.awssdk.services.s3.model.GetBucketIntelligentTieringConfigurationRequest"
},
{
  "name":"software.amazon.awssdk.services.s3.model.GetBucketIntelligentTieringConfigurationResponse"
},
{
  "name":"software.amazon.awssdk.services.s3.model.GetBucketInventoryConfigurationRequest"
},
{
  "name":"software.amazon.awssdk.services.s3.model.GetBucketInventoryConfigurationResponse"
},
{
  "name":"software.amazon.awssdk.services.s3.model.GetBucketLifecycleConfigurationRequest"
},
{
  "name":"software.amazon.awssdk.services.s3.model.GetBucketLifecycleConfigurationResponse"
},
{
  "name":"software.amazon.awssdk.services.s3.model.GetBucketLocationRequest"
},
{
  "name":"software.amazon.awssdk.services.s3.model.GetBucketLocationResponse"
},
{
  "name":"software.amazon.awssdk.services.s3.model.GetBucketLoggingRequest"
},
{
  "name":"software.amazon.awssdk.services.s3.model.GetBucketLoggingResponse"
},
{
  "name":"software.amazon.awssdk.services.s3.model.GetBucketMetricsConfigurationRequest"
},
{
  "name":"software.amazon.awssdk.services.s3.model.GetBucketMetricsConfigurationResponse"
},
{
  "name":"software.amazon.awssdk.services.s3.model.GetBucketNotificationConfigurationRequest"
},
{
  "name":"software.amazon.awssdk.services.s3.model.GetBucketNotificationConfigurationResponse"
},
{
  "name":"software.amazon.awssdk.services.s3.model.GetBucketOwnershipControlsRequest"
},
{
  "name":"software.amazon.awssdk.services.s3.model.GetBucketOwnershipControlsResponse"
},
{
  "name":"software.amazon.awssdk.services.s3.model.GetBucketPolicyRequest"
},
{
  "name":"software.amazon.awssdk.services.s3.model.GetBucketPolicyResponse"
},
{
  "name":"software.amazon.awssdk.services.s3.model.GetBucketPolicyStatusRequest"
},
{
  "name":"software.amazon.awssdk.services.s3.model.GetBucketPolicyStatusResponse"
},
{
  "name":"software.amazon.awssdk.services.s3.model.GetBucketReplicationRequest"
},
{
  "name":"software.amazon.awssdk.services.s3.model.GetBucketReplicationResponse"
},
{
  "name":"software.amazon.awssdk.services.s3.model.GetBucketRequestPaymentRequest"
},
{
  "name":"software.amazon.awssdk.services.s3.model.GetBucketRequestPaymentResponse"
},
{
  "name":"software.amazon.awssdk.services.s3.model.GetBucketTaggingRequest"
},
{
  "name":"software.amazon.awssdk.services.s3.model.GetBucketTaggingResponse"
},
{
  "name":"software.amazon.awssdk.services.s3.model.GetBucketVersioningRequest"
},
{
  "name":"software.amazon.awssdk.services.s3.model.GetBucketVersioningResponse"
},
{
  "name":"software.amazon.awssdk.services.s3.model.GetBucketWebsiteRequest"
},
{
  "name":"software.amazon.awssdk.services.s3.model.GetBucketWebsiteResponse"
},
{
  "name":"software.amazon.awssdk.services.s3.model.GetObjectAclRequest"
},
{
  "name":"software.amazon.awssdk.services.s3.model.GetObjectAclResponse"
},
{
  "name":"software.amazon.awssdk.services.s3.model.GetObjectAttributesRequest"
},
{
  "name":"software.amazon.awssdk.services.s3.model.GetObjectAttributesResponse"
},
{
  "name":"software.amazon.awssdk.services.s3.model.GetObjectLegalHoldRequest"
},
{
  "name":"software.amazon.awssdk.services.s3.model.GetObjectLegalHoldResponse"
},
{
  "name":"software.amazon.awssdk.services.s3.model.GetObjectLockConfigurationRequest"
},
{
  "name":"software.amazon.awssdk.services.s3.model.GetObjectLockConfigurationResponse"
},
{
  "name":"software.amazon.awssdk.services.s3.model.GetObjectRequest"
},
{
  "name":"software.amazon.awssdk.services.s3.model.GetObjectRequest$Builder"
},
{
  "name":"software.amazon.awssdk.services.s3.model.GetObjectResponse"
},
{
  "name":"software.amazon.awssdk.services.s3.model.GetObjectRetentionRequest"
},
{
  "name":"software.amazon.awssdk.services.s3.model.GetObjectRetentionResponse"
},
{
  "name":"software.amazon.awssdk.services.s3.model.GetObjectTaggingRequest"
},
{
  "name":"software.amazon.awssdk.services.s3.model.GetObjectTaggingResponse"
},
{
  "name":"software.amazon.awssdk.services.s3.model.GetObjectTorrentRequest"
},
{
  "name":"software.amazon.awssdk.services.s3.model.GetObjectTorrentResponse"
},
{
  "name":"software.amazon.awssdk.services.s3.model.GetPublicAccessBlockRequest"
},
{
  "name":"software.amazon.awssdk.services.s3.model.GetPublicAccessBlockResponse"
},
{
  "name":"software.amazon.awssdk.services.s3.model.HeadBucketRequest"
},
{
  "name":"software.amazon.awssdk.services.s3.model.HeadBucketRequest$Builder"
},
{
  "name":"software.amazon.awssdk.services.s3.model.HeadBucketResponse"
},
{
  "name":"software.amazon.awssdk.services.s3.model.HeadObjectRequest"
},
{
  "name":"software.amazon.awssdk.services.s3.model.HeadObjectRequest$Builder"
},
{
  "name":"software.amazon.awssdk.services.s3.model.HeadObjectResponse"
},
{
  "name":"software.amazon.awssdk.services.s3.model.InvalidObjectStateException"
},
{
  "name":"software.amazon.awssdk.services.s3.model.InvalidRequestException"
},
{
  "name":"software.amazon.awssdk.services.s3.model.InvalidWriteOffsetException"
},
{
  "name":"software.amazon.awssdk.services.s3.model.ListBucketAnalyticsConfigurationsRequest"
},
{
  "name":"software.amazon.awssdk.services.s3.model.ListBucketAnalyticsConfigurationsResponse"
},
{
  "name":"software.amazon.awssdk.services.s3.model.ListBucketIntelligentTieringConfigurationsRequest"
},
{
  "name":"software.amazon.awssdk.services.s3.model.ListBucketIntelligentTieringConfigurationsResponse"
},
{
  "name":"software.amazon.awssdk.services.s3.model.ListBucketInventoryConfigurationsRequest"
},
{
  "name":"software.amazon.awssdk.services.s3.model.ListBucketInventoryConfigurationsResponse"
},
{
  "name":"software.amazon.awssdk.services.s3.model.ListBucketMetricsConfigurationsRequest"
},
{
  "name":"software.amazon.awssdk.services.s3.model.ListBucketMetricsConfigurationsResponse"
},
{
  "name":"software.amazon.awssdk.services.s3.model.ListBucketsRequest"
},
{
  "name":"software.amazon.awssdk.services.s3.model.ListBucketsResponse"
},
{
  "name":"software.amazon.awssdk.services.s3.model.ListDirectoryBucketsRequest"
},
{
  "name":"software.amazon.awssdk.services.s3.model.ListDirectoryBucketsResponse"
},
{
  "name":"software.amazon.awssdk.services.s3.model.ListMultipartUploadsRequest"
},
{
  "name":"software.amazon.awssdk.services.s3.model.ListMultipartUploadsResponse"
},
{
  "name":"software.amazon.awssdk.services.s3.model.ListObjectVersionsRequest"
},
{
  "name":"software.amazon.awssdk.services.s3.model.ListObjectVersionsResponse"
},
{
  "name":"software.amazon.awssdk.services.s3.model.ListObjectsRequest"
},
{
  "name":"software.amazon.awssdk.services.s3.model.ListObjectsResponse"
},
{
  "name":"software.amazon.awssdk.services.s3.model.ListObjectsV2Request"
},
{
  "name":"software.amazon.awssdk.services.s3.model.ListObjectsV2Response"
},
{
  "name":"software.amazon.awssdk.services.s3.model.ListPartsRequest"
},
{
  "name":"software.amazon.awssdk.services.s3.model.ListPartsResponse"
},
{
  "name":"software.amazon.awssdk.services.s3.model.NoSuchBucketException"
},
{
  "name":"software.amazon.awssdk.services.s3.model.NoSuchKeyException"
},
{
  "name":"software.amazon.awssdk.services.s3.model.NoSuchUploadException"
},
{
  "name":"software.amazon.awssdk.services.s3.model.ObjectAlreadyInActiveTierErrorException"
},
{
  "name":"software.amazon.awssdk.services.s3.model.ObjectNotInActiveTierErrorException"
},
{
  "name":"software.amazon.awssdk.services.s3.model.PutBucketAccelerateConfigurationRequest"
},
{
  "name":"software.amazon.awssdk.services.s3.model.PutBucketAccelerateConfigurationResponse"
},
{
  "name":"software.amazon.awssdk.services.s3.model.PutBucketAclRequest"
},
{
  "name":"software.amazon.awssdk.services.s3.model.PutBucketAclResponse"
},
{
  "name":"software.amazon.awssdk.services.s3.model.PutBucketAnalyticsConfigurationRequest"
},
{
  "name":"software.amazon.awssdk.services.s3.model.PutBucketAnalyticsConfigurationResponse"
},
{
  "name":"software.amazon.awssdk.services.s3.model.PutBucketCorsRequest"
},
{
  "name":"software.amazon.awssdk.services.s3.model.PutBucketCorsResponse"
},
{
  "name":"software.amazon.awssdk.services.s3.model.PutBucketEncryptionRequest"
},
{
  "name":"software.amazon.awssdk.services.s3.model.PutBucketEncryptionResponse"
},
{
  "name":"software.amazon.awssdk.services.s3.model.PutBucketIntelligentTieringConfigurationRequest"
},
{
  "name":"software.amazon.awssdk.services.s3.model.PutBucketIntelligentTieringConfigurationResponse"
},
{
  "name":"software.amazon.awssdk.services.s3.model.PutBucketInventoryConfigurationRequest"
},
{
  "name":"software.amazon.awssdk.services.s3.model.PutBucketInventoryConfigurationResponse"
},
{
  "name":"software.amazon.awssdk.services.s3.model.PutBucketLifecycleConfigurationRequest"
},
{
  "name":"software.amazon.awssdk.services.s3.model.PutBucketLifecycleConfigurationResponse"
},
{
  "name":"software.amazon.awssdk.services.s3.model.PutBucketLoggingRequest"
},
{
  "name":"software.amazon.awssdk.services.s3.model.PutBucketLoggingResponse"
},
{
  "name":"software.amazon.awssdk.services.s3.model.PutBucketMetricsConfigurationRequest"
},
{
  "name":"software.amazon.awssdk.services.s3.model.PutBucketMetricsConfigurationResponse"
},
{
  "name":"software.amazon.awssdk.services.s3.model.PutBucketNotificationConfigurationRequest"
},
{
  "name":"software.amazon.awssdk.services.s3.model.PutBucketNotificationConfigurationResponse"
},
{
  "name":"software.amazon.awssdk.services.s3.model.PutBucketOwnershipControlsRequest"
},
{
  "name":"software.amazon.awssdk.services.s3.model.PutBucketOwnershipControlsResponse"
},
{
  "name":"software.amazon.awssdk.services.s3.model.PutBucketPolicyRequest"
},
{
  "name":"software.amazon.awssdk.services.s3.model.PutBucketPolicyResponse"
},
{
  "name":"software.amazon.awssdk.services.s3.model.PutBucketReplicationRequest"
},
{
  "name":"software.amazon.awssdk.services.s3.model.PutBucketReplicationResponse"
},
{
  "name":"software.amazon.awssdk.services.s3.model.PutBucketRequestPaymentRequest"
},
{
  "name":"software.amazon.awssdk.services.s3.model.PutBucketRequestPaymentResponse"
},
{
  "name":"software.amazon.awssdk.services.s3.model.PutBucketTaggingRequest"
},
{
  "name":"software.amazon.awssdk.services.s3.model.PutBucketTaggingResponse"
},
{
  "name":"software.amazon.awssdk.services.s3.model.PutBucketVersioningRequest"
},
{
  "name":"software.amazon.awssdk.services.s3.model.PutBucketVersioningResponse"
},
{
  "name":"software.amazon.awssdk.services.s3.model.PutBucketWebsiteRequest"
},
{
  "name":"software.amazon.awssdk.services.s3.model.PutBucketWebsiteResponse"
},
{
  "name":"software.amazon.awssdk.services.s3.model.PutObjectAclRequest"
},
{
  "name":"software.amazon.awssdk.services.s3.model.PutObjectAclResponse"
},
{
  "name":"software.amazon.awssdk.services.s3.model.PutObjectLegalHoldRequest"
},
{
  "name":"software.amazon.awssdk.services.s3.model.PutObjectLegalHoldResponse"
},
{
  "name":"software.amazon.awssdk.services.s3.model.PutObjectLockConfigurationRequest"
},
{
  "name":"software.amazon.awssdk.services.s3.model.PutObjectLockConfigurationResponse"
},
{
  "name":"software.amazon.awssdk.services.s3.model.PutObjectRequest"
},
{
  "name":"software.amazon.awssdk.services.s3.model.PutObjectResponse"
},
{
  "name":"software.amazon.awssdk.services.s3.model.PutObjectRetentionRequest"
},
{
  "name":"software.amazon.awssdk.services.s3.model.PutObjectRetentionResponse"
},
{
  "name":"software.amazon.awssdk.services.s3.model.PutObjectTaggingRequest"
},
{
  "name":"software.amazon.awssdk.services.s3.model.PutObjectTaggingResponse"
},
{
  "name":"software.amazon.awssdk.services.s3.model.PutPublicAccessBlockRequest"
},
{
  "name":"software.amazon.awssdk.services.s3.model.PutPublicAccessBlockResponse"
},
{
  "name":"software.amazon.awssdk.services.s3.model.RestoreObjectRequest"
},
{
  "name":"software.amazon.awssdk.services.s3.model.RestoreObjectResponse"
},
{
  "name":"software.amazon.awssdk.services.s3.model.S3Exception"
},
{
  "name":"software.amazon.awssdk.services.s3.model.S3Object"
},
{
  "name":"software.amazon.awssdk.services.s3.model.TooManyPartsException"
},
{
  "name":"software.amazon.awssdk.services.s3.model.UploadPartCopyRequest"
},
{
  "name":"software.amazon.awssdk.services.s3.model.UploadPartCopyResponse"
},
{
  "name":"software.amazon.awssdk.services.s3.model.UploadPartRequest"
},
{
  "name":"software.amazon.awssdk.services.s3.model.UploadPartResponse"
},
{
  "name":"software.amazon.awssdk.services.s3.model.WriteGetObjectResponseRequest"
},
{
  "name":"software.amazon.awssdk.services.s3.model.WriteGetObjectResponseResponse"
},
{
  "name":"software.amazon.awssdk.services.s3.paginators.ListBucketsIterable"
},
{
  "name":"software.amazon.awssdk.services.s3.paginators.ListDirectoryBucketsIterable"
},
{
  "name":"software.amazon.awssdk.services.s3.paginators.ListMultipartUploadsIterable"
},
{
  "name":"software.amazon.awssdk.services.s3.paginators.ListObjectVersionsIterable"
},
{
  "name":"software.amazon.awssdk.services.s3.paginators.ListObjectsV2Iterable"
},
{
  "name":"software.amazon.awssdk.services.s3.paginators.ListPartsIterable"
},
{
  "name":"software.amazon.awssdk.services.s3.presigner.S3Presigner",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"presignAbortMultipartUpload","parameterTypes":["java.util.function.Consumer"] }, {"name":"presignCompleteMultipartUpload","parameterTypes":["java.util.function.Consumer"] }, {"name":"presignCreateMultipartUpload","parameterTypes":["java.util.function.Consumer"] }, {"name":"presignDeleteObject","parameterTypes":["java.util.function.Consumer"] }, {"name":"presignGetObject","parameterTypes":["java.util.function.Consumer"] }, {"name":"presignPutObject","parameterTypes":["java.util.function.Consumer"] }, {"name":"presignUploadPart","parameterTypes":["java.util.function.Consumer"] }]
},
{
  "name":"software.amazon.awssdk.services.s3.presigner.S3Presigner$Builder"
},
{
  "name":"software.amazon.awssdk.services.s3.presigner.model.AbortMultipartUploadPresignRequest"
},
{
  "name":"software.amazon.awssdk.services.s3.presigner.model.CompleteMultipartUploadPresignRequest"
},
{
  "name":"software.amazon.awssdk.services.s3.presigner.model.CreateMultipartUploadPresignRequest"
},
{
  "name":"software.amazon.awssdk.services.s3.presigner.model.DeleteObjectPresignRequest"
},
{
  "name":"software.amazon.awssdk.services.s3.presigner.model.GetObjectPresignRequest"
},
{
  "name":"software.amazon.awssdk.services.s3.presigner.model.PresignedAbortMultipartUploadRequest"
},
{
  "name":"software.amazon.awssdk.services.s3.presigner.model.PresignedCompleteMultipartUploadRequest"
},
{
  "name":"software.amazon.awssdk.services.s3.presigner.model.PresignedCreateMultipartUploadRequest"
},
{
  "name":"software.amazon.awssdk.services.s3.presigner.model.PresignedDeleteObjectRequest"
},
{
  "name":"software.amazon.awssdk.services.s3.presigner.model.PresignedGetObjectRequest"
},
{
  "name":"software.amazon.awssdk.services.s3.presigner.model.PresignedPutObjectRequest"
},
{
  "name":"software.amazon.awssdk.services.s3.presigner.model.PresignedUploadPartRequest"
},
{
  "name":"software.amazon.awssdk.services.s3.presigner.model.PutObjectPresignRequest"
},
{
  "name":"software.amazon.awssdk.services.s3.presigner.model.UploadPartPresignRequest"
},
{
  "name":"software.amazon.awssdk.services.s3.waiters.S3Waiter"
},
{
  "name":"software.amazon.awssdk.services.sts.auth.StsWebIdentityTokenFileCredentialsProvider"
},
{
  "name":"software.amazon.awssdk.utils.AttributeMap"
},
{
  "name":"software.amazon.awssdk.utils.AttributeMap$LazyValueSource"
},
{
  "name":"software.amazon.awssdk.utils.Either"
},
{
  "name":"software.amazon.awssdk.utils.Pair"
},
{
  "name":"software.amazon.awssdk.utils.SdkAutoCloseable",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"software.amazon.awssdk.utils.builder.Buildable",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"software.amazon.awssdk.utils.builder.CopyableBuilder"
},
{
  "name":"software.amazon.awssdk.utils.builder.SdkBuilder",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"applyMutation","parameterTypes":["java.util.function.Consumer"] }]
},
{
  "name":"software.amazon.awssdk.utils.builder.ToCopyableBuilder",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"copy","parameterTypes":["java.util.function.Consumer"] }]
},
{
  "name":"sun.management.ClassLoadingImpl",
  "queryAllPublicConstructors":true
},
{
  "name":"sun.management.CompilationImpl",
  "queryAllPublicConstructors":true
},
{
  "name":"sun.management.ManagementFactoryHelper$1",
  "queryAllPublicConstructors":true
},
{
  "name":"sun.management.ManagementFactoryHelper$PlatformLoggingImpl",
  "queryAllPublicConstructors":true
},
{
  "name":"sun.management.MemoryImpl",
  "queryAllPublicConstructors":true
},
{
  "name":"sun.management.MemoryManagerImpl",
  "queryAllPublicConstructors":true
},
{
  "name":"sun.management.MemoryPoolImpl",
  "queryAllPublicConstructors":true
},
{
  "name":"sun.management.RuntimeImpl",
  "queryAllPublicConstructors":true
},
{
  "name":"sun.misc.Unsafe",
  "fields":[{"name":"theUnsafe"}],
  "methods":[{"name":"copyMemory","parameterTypes":["java.lang.Object","long","java.lang.Object","long","long"] }, {"name":"getAndAddLong","parameterTypes":["java.lang.Object","long","long"] }, {"name":"getAndSetObject","parameterTypes":["java.lang.Object","long","java.lang.Object"] }, {"name":"invokeCleaner","parameterTypes":["java.nio.ByteBuffer"] }, {"name":"storeFence","parameterTypes":[] }]
},
{
  "name":"sun.nio.ch.SelectorImpl",
  "fields":[{"name":"publicSelectedKeys"}, {"name":"selectedKeys"}]
},
{
  "name":"sun.reflect.ReflectionFactory",
  "methods":[{"name":"getReflectionFactory","parameterTypes":[] }, {"name":"newConstructorForSerialization","parameterTypes":["java.lang.Class","java.lang.reflect.Constructor"] }]
},
{
  "name":"sun.security.pkcs12.PKCS12KeyStore",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"sun.security.pkcs12.PKCS12KeyStore$DualFormatPKCS12",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"sun.security.provider.ConfigFile",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"sun.security.provider.DSA$SHA224withDSA",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"sun.security.provider.DSA$SHA256withDSA",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"sun.security.provider.MD5",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"sun.security.provider.NativePRNG",
  "methods":[{"name":"<init>","parameterTypes":["java.security.SecureRandomParameters"] }]
},
{
  "name":"sun.security.provider.SHA",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"sun.security.provider.SHA2$SHA224",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"sun.security.provider.SHA2$SHA256",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"sun.security.provider.SHA5$SHA384",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"sun.security.provider.SHA5$SHA512",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"sun.security.provider.X509Factory",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"sun.security.rsa.PSSParameters",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"sun.security.rsa.RSAKeyFactory$Legacy",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"sun.security.rsa.RSAPSSSignature",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"sun.security.rsa.RSASignature$SHA224withRSA",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"sun.security.ssl.KeyManagerFactoryImpl$SunX509",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"sun.security.ssl.SSLContextImpl$DefaultSSLContext",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"sun.security.ssl.SSLContextImpl$TLSContext",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"sun.security.ssl.TrustManagerFactoryImpl$PKIXFactory",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"sun.security.x509.AuthorityInfoAccessExtension",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Boolean","java.lang.Object"] }]
},
{
  "name":"sun.security.x509.AuthorityKeyIdentifierExtension",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Boolean","java.lang.Object"] }]
},
{
  "name":"sun.security.x509.BasicConstraintsExtension",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Boolean","java.lang.Object"] }]
},
{
  "name":"sun.security.x509.CRLDistributionPointsExtension",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Boolean","java.lang.Object"] }]
},
{
  "name":"sun.security.x509.CertificatePoliciesExtension",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Boolean","java.lang.Object"] }]
},
{
  "name":"sun.security.x509.ExtendedKeyUsageExtension",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Boolean","java.lang.Object"] }]
},
{
  "name":"sun.security.x509.IssuerAlternativeNameExtension",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Boolean","java.lang.Object"] }]
},
{
  "name":"sun.security.x509.KeyUsageExtension",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Boolean","java.lang.Object"] }]
},
{
  "name":"sun.security.x509.NetscapeCertTypeExtension",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Boolean","java.lang.Object"] }]
},
{
  "name":"sun.security.x509.PrivateKeyUsageExtension",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Boolean","java.lang.Object"] }]
},
{
  "name":"sun.security.x509.SubjectAlternativeNameExtension",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Boolean","java.lang.Object"] }]
},
{
  "name":"sun.security.x509.SubjectKeyIdentifierExtension",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Boolean","java.lang.Object"] }]
},
{
  "name":"zipkin2.reporter.BaseHttpSender",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"messageMaxBytes","parameterTypes":[] }, {"name":"postSpans","parameterTypes":["java.lang.Object","java.lang.Object"] }, {"name":"send","parameterTypes":["java.util.List"] }, {"name":"toString","parameterTypes":[] }]
},
{
  "name":"zipkin2.reporter.BytesEncoder",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"zipkin2.reporter.BytesMessageSender",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"zipkin2.reporter.BytesMessageSender$Base",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"encoding","parameterTypes":[] }, {"name":"messageSizeInBytes","parameterTypes":["int"] }, {"name":"messageSizeInBytes","parameterTypes":["java.util.List"] }]
},
{
  "name":"zipkin2.reporter.Encoding",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"zipkin2.reporter.Encoding$1",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"encode","parameterTypes":["java.util.List"] }, {"name":"listSizeInBytes","parameterTypes":["int"] }, {"name":"listSizeInBytes","parameterTypes":["java.util.List"] }, {"name":"mediaType","parameterTypes":[] }]
},
{
  "name":"zipkin2.reporter.HttpEndpointSupplier"
},
{
  "name":"zipkin2.reporter.Sender"
},
{
  "name":"zipkin2.reporter.brave.AsyncZipkinSpanHandler",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"end","parameterTypes":["brave.propagation.TraceContext","brave.handler.MutableSpan","brave.handler.SpanHandler$Cause"] }, {"name":"equals","parameterTypes":["java.lang.Object"] }, {"name":"flush","parameterTypes":[] }, {"name":"hashCode","parameterTypes":[] }, {"name":"toString","parameterTypes":[] }]
},
{
  "name":"zipkin2.reporter.brave.AsyncZipkinSpanHandler$Builder"
},
{
  "name":"zipkin2.reporter.brave.MutableSpanBytesEncoder",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"zipkin2.reporter.brave.MutableSpanBytesEncoder$1",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"encode","parameterTypes":["java.lang.Object"] }, {"name":"encoding","parameterTypes":[] }, {"name":"sizeInBytes","parameterTypes":["java.lang.Object"] }]
}
]
