{
  "reflection": [
    {
      "type": "[B"
    },
    {
      "type": "[C"
    },
    {
      "type": "[D"
    },
    {
      "type": "[F"
    },
    {
      "type": "[I"
    },
    {
      "type": "[J"
    },
    {
      "type": "[Lcom.fasterxml.jackson.databind.deser.BeanDeserializerModifier;"
    },
    {
      "type": "[Lcom.fasterxml.jackson.databind.deser.Deserializers;"
    },
    {
      "type": "[Lcom.fasterxml.jackson.databind.deser.KeyDeserializers;"
    },
    {
      "type": "[Lcom.fasterxml.jackson.databind.deser.ValueInstantiators;"
    },
    {
      "type": "[Lcom.fasterxml.jackson.databind.ser.BeanSerializerModifier;"
    },
    {
      "type": "[Lcom.fasterxml.jackson.databind.ser.Serializers;"
    },
    {
      "type": "[Ljava.lang.Class;"
    },
    {
      "type": "[Ljava.lang.Object;"
    },
    {
      "type": "[Ljava.lang.String;"
    },
    {
      "type": "[Ljava.lang.annotation.Annotation;"
    },
    {
      "type": "[Ljava.sql.Statement;"
    },
    {
      "type": "[Ljavax.management.openmbean.CompositeData;"
    },
    {
      "type": "[Lkotlin.annotation.AnnotationTarget;"
    },
    {
      "type": "[Lorg.springframework.ai.chat.messages.AssistantMessage$ToolCall;"
    },
    {
      "type": "[Lorg.springframework.ai.model.Media;"
    },
    {
      "type": "[Lorg.springframework.ai.ollama.api.OllamaApi$ChatRequest$Tool;"
    },
    {
      "type": "[Lorg.springframework.ai.ollama.api.OllamaApi$Message$ToolCall;"
    },
    {
      "type": "[Lorg.springframework.ai.ollama.api.OllamaApi$Message;"
    },
    {
      "type": "[Lorg.springframework.cloud.commons.config.DefaultsBindHandlerAdvisor$MappingsProvider;"
    },
    {
      "type": "[Lorg.springframework.core.annotation.TypeMappedAnnotation;"
    },
    {
      "type": "[Lorg.springframework.core.io.Resource;"
    },
    {
      "type": "[Lorg.springframework.data.elasticsearch.annotations.Alias;"
    },
    {
      "type": "[Lorg.springframework.kafka.annotation.TopicPartition;"
    },
    {
      "type": "[Lorg.springframework.kafka.retrytopic.ExceptionBasedDltDestination;"
    },
    {
      "type": "[Lorg.springframework.util.ConcurrentReferenceHashMap$Segment;"
    },
    {
      "type": "[Lorg.springframework.web.bind.annotation.RequestMethod;"
    },
    {
      "type": "[S"
    },
    {
      "type": "[Z"
    },
    {
      "type": "apple.security.AppleProvider",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "boolean"
    },
    {
      "type": "brave.Clock"
    },
    {
      "type": "brave.CurrentSpanCustomizer",
      "allDeclaredFields": true
    },
    {
      "type": "brave.ScopedSpan"
    },
    {
      "type": "brave.Span"
    },
    {
      "type": "brave.SpanCustomizer"
    },
    {
      "type": "brave.Tag"
    },
    {
      "type": "brave.Tracer",
      "allDeclaredFields": true
    },
    {
      "type": "brave.Tracer$SpanInScope"
    },
    {
      "type": "brave.Tracing",
      "allDeclaredFields": true
    },
    {
      "type": "brave.Tracing$Builder"
    },
    {
      "type": "brave.Tracing$Default",
      "allDeclaredFields": true
    },
    {
      "type": "brave.baggage.BaggageField"
    },
    {
      "type": "brave.baggage.BaggagePropagation$FactoryBuilder",
      "allDeclaredFields": true
    },
    {
      "type": "brave.baggage.BaggagePropagationConfig"
    },
    {
      "type": "brave.baggage.BaggagePropagationCustomizer"
    },
    {
      "type": "brave.baggage.CorrelationScopeConfig"
    },
    {
      "type": "brave.baggage.CorrelationScopeCustomizer"
    },
    {
      "type": "brave.baggage.CorrelationScopeDecorator",
      "allDeclaredFields": true
    },
    {
      "type": "brave.baggage.CorrelationScopeDecorator$Builder",
      "allDeclaredFields": true
    },
    {
      "type": "brave.baggage.CorrelationScopeDecorator$Multiple",
      "allDeclaredFields": true
    },
    {
      "type": "brave.context.slf4j.MDCScopeDecorator$Builder",
      "allDeclaredFields": true
    },
    {
      "type": "brave.handler.MutableSpan"
    },
    {
      "type": "brave.handler.SpanHandler",
      "allDeclaredFields": true
    },
    {
      "type": "brave.handler.SpanHandler$Cause"
    },
    {
      "type": "brave.internal.Nullable"
    },
    {
      "type": "brave.propagation.CurrentTraceContext",
      "allDeclaredFields": true
    },
    {
      "type": "brave.propagation.CurrentTraceContext$Scope"
    },
    {
      "type": "brave.propagation.CurrentTraceContext$ScopeDecorator"
    },
    {
      "type": "brave.propagation.Propagation"
    },
    {
      "type": "brave.propagation.Propagation$Factory",
      "allDeclaredFields": true
    },
    {
      "type": "brave.propagation.Propagation$KeyFactory"
    },
    {
      "type": "brave.propagation.ThreadLocalCurrentTraceContext",
      "allDeclaredFields": true
    },
    {
      "type": "brave.propagation.ThreadLocalCurrentTraceContext$Builder"
    },
    {
      "type": "brave.propagation.TraceContext"
    },
    {
      "type": "brave.propagation.TraceContextOrSamplingFlags"
    },
    {
      "type": "brave.sampler.Sampler",
      "allDeclaredFields": true
    },
    {
      "type": "brave.sampler.Sampler$1",
      "allDeclaredFields": true
    },
    {
      "type": "brave.sampler.SamplerFunction"
    },
    {
      "type": "ch.qos.logback.classic.BasicConfigurator",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "ch.qos.logback.classic.LoggerContext"
    },
    {
      "type": "ch.qos.logback.classic.joran.SerializedModelConfigurator",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "ch.qos.logback.classic.spi.LogbackServiceProvider"
    },
    {
      "type": "ch.qos.logback.classic.util.DefaultJoranConfigurator",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "clojure.core$clojure_version"
    },
    {
      "type": "co.elastic.clients.ApiClient",
      "allDeclaredFields": true
    },
    {
      "type": "co.elastic.clients.elasticsearch.ElasticsearchClient",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "shutdown",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "co.elastic.clients.elasticsearch._types.ElasticsearchException"
    },
    {
      "type": "co.elastic.clients.elasticsearch._types.SortOptions"
    },
    {
      "type": "co.elastic.clients.elasticsearch._types.Time$Builder"
    },
    {
      "type": "co.elastic.clients.elasticsearch._types.query_dsl.IdsQuery$Builder"
    },
    {
      "type": "co.elastic.clients.elasticsearch._types.query_dsl.MatchAllQuery$Builder"
    },
    {
      "type": "co.elastic.clients.elasticsearch._types.query_dsl.Query$Builder"
    },
    {
      "type": "co.elastic.clients.elasticsearch.async_search.ElasticsearchAsyncSearchClient"
    },
    {
      "type": "co.elastic.clients.elasticsearch.autoscaling.ElasticsearchAutoscalingClient"
    },
    {
      "type": "co.elastic.clients.elasticsearch.cat.ElasticsearchCatClient"
    },
    {
      "type": "co.elastic.clients.elasticsearch.ccr.ElasticsearchCcrClient"
    },
    {
      "type": "co.elastic.clients.elasticsearch.cluster.ElasticsearchClusterClient"
    },
    {
      "type": "co.elastic.clients.elasticsearch.cluster.HealthRequest$Builder"
    },
    {
      "type": "co.elastic.clients.elasticsearch.cluster.HealthResponse"
    },
    {
      "type": "co.elastic.clients.elasticsearch.connector.ElasticsearchConnectorClient"
    },
    {
      "type": "co.elastic.clients.elasticsearch.core.BulkRequest"
    },
    {
      "type": "co.elastic.clients.elasticsearch.core.BulkResponse"
    },
    {
      "type": "co.elastic.clients.elasticsearch.core.ClearScrollRequest"
    },
    {
      "type": "co.elastic.clients.elasticsearch.core.ClearScrollRequest$Builder"
    },
    {
      "type": "co.elastic.clients.elasticsearch.core.ClearScrollResponse"
    },
    {
      "type": "co.elastic.clients.elasticsearch.core.ClosePointInTimeRequest"
    },
    {
      "type": "co.elastic.clients.elasticsearch.core.ClosePointInTimeResponse"
    },
    {
      "type": "co.elastic.clients.elasticsearch.core.CountRequest"
    },
    {
      "type": "co.elastic.clients.elasticsearch.core.CountResponse"
    },
    {
      "type": "co.elastic.clients.elasticsearch.core.CreateRequest"
    },
    {
      "type": "co.elastic.clients.elasticsearch.core.CreateResponse"
    },
    {
      "type": "co.elastic.clients.elasticsearch.core.DeleteByQueryRequest"
    },
    {
      "type": "co.elastic.clients.elasticsearch.core.DeleteByQueryResponse"
    },
    {
      "type": "co.elastic.clients.elasticsearch.core.DeleteByQueryRethrottleRequest"
    },
    {
      "type": "co.elastic.clients.elasticsearch.core.DeleteByQueryRethrottleResponse"
    },
    {
      "type": "co.elastic.clients.elasticsearch.core.DeleteRequest"
    },
    {
      "type": "co.elastic.clients.elasticsearch.core.DeleteResponse"
    },
    {
      "type": "co.elastic.clients.elasticsearch.core.DeleteScriptRequest"
    },
    {
      "type": "co.elastic.clients.elasticsearch.core.DeleteScriptResponse"
    },
    {
      "type": "co.elastic.clients.elasticsearch.core.ExistsRequest"
    },
    {
      "type": "co.elastic.clients.elasticsearch.core.ExistsSourceRequest"
    },
    {
      "type": "co.elastic.clients.elasticsearch.core.ExplainRequest"
    },
    {
      "type": "co.elastic.clients.elasticsearch.core.ExplainResponse"
    },
    {
      "type": "co.elastic.clients.elasticsearch.core.FieldCapsRequest"
    },
    {
      "type": "co.elastic.clients.elasticsearch.core.FieldCapsResponse"
    },
    {
      "type": "co.elastic.clients.elasticsearch.core.GetRequest"
    },
    {
      "type": "co.elastic.clients.elasticsearch.core.GetResponse"
    },
    {
      "type": "co.elastic.clients.elasticsearch.core.GetScriptContextResponse"
    },
    {
      "type": "co.elastic.clients.elasticsearch.core.GetScriptLanguagesResponse"
    },
    {
      "type": "co.elastic.clients.elasticsearch.core.GetScriptRequest"
    },
    {
      "type": "co.elastic.clients.elasticsearch.core.GetScriptResponse"
    },
    {
      "type": "co.elastic.clients.elasticsearch.core.GetSourceRequest"
    },
    {
      "type": "co.elastic.clients.elasticsearch.core.GetSourceResponse"
    },
    {
      "type": "co.elastic.clients.elasticsearch.core.HealthReportRequest"
    },
    {
      "type": "co.elastic.clients.elasticsearch.core.HealthReportResponse"
    },
    {
      "type": "co.elastic.clients.elasticsearch.core.IndexRequest"
    },
    {
      "type": "co.elastic.clients.elasticsearch.core.IndexResponse"
    },
    {
      "type": "co.elastic.clients.elasticsearch.core.InfoResponse"
    },
    {
      "type": "co.elastic.clients.elasticsearch.core.KnnSearchRequest"
    },
    {
      "type": "co.elastic.clients.elasticsearch.core.KnnSearchResponse"
    },
    {
      "type": "co.elastic.clients.elasticsearch.core.MgetRequest"
    },
    {
      "type": "co.elastic.clients.elasticsearch.core.MgetResponse"
    },
    {
      "type": "co.elastic.clients.elasticsearch.core.MsearchRequest"
    },
    {
      "type": "co.elastic.clients.elasticsearch.core.MsearchResponse"
    },
    {
      "type": "co.elastic.clients.elasticsearch.core.MsearchTemplateRequest"
    },
    {
      "type": "co.elastic.clients.elasticsearch.core.MsearchTemplateResponse"
    },
    {
      "type": "co.elastic.clients.elasticsearch.core.MtermvectorsRequest"
    },
    {
      "type": "co.elastic.clients.elasticsearch.core.MtermvectorsResponse"
    },
    {
      "type": "co.elastic.clients.elasticsearch.core.OpenPointInTimeRequest"
    },
    {
      "type": "co.elastic.clients.elasticsearch.core.OpenPointInTimeResponse"
    },
    {
      "type": "co.elastic.clients.elasticsearch.core.PutScriptRequest"
    },
    {
      "type": "co.elastic.clients.elasticsearch.core.PutScriptResponse"
    },
    {
      "type": "co.elastic.clients.elasticsearch.core.RankEvalRequest"
    },
    {
      "type": "co.elastic.clients.elasticsearch.core.RankEvalResponse"
    },
    {
      "type": "co.elastic.clients.elasticsearch.core.ReindexRequest"
    },
    {
      "type": "co.elastic.clients.elasticsearch.core.ReindexResponse"
    },
    {
      "type": "co.elastic.clients.elasticsearch.core.ReindexRethrottleRequest"
    },
    {
      "type": "co.elastic.clients.elasticsearch.core.ReindexRethrottleResponse"
    },
    {
      "type": "co.elastic.clients.elasticsearch.core.RenderSearchTemplateRequest"
    },
    {
      "type": "co.elastic.clients.elasticsearch.core.RenderSearchTemplateResponse"
    },
    {
      "type": "co.elastic.clients.elasticsearch.core.ScriptsPainlessExecuteRequest"
    },
    {
      "type": "co.elastic.clients.elasticsearch.core.ScriptsPainlessExecuteResponse"
    },
    {
      "type": "co.elastic.clients.elasticsearch.core.ScrollRequest"
    },
    {
      "type": "co.elastic.clients.elasticsearch.core.ScrollRequest$Builder"
    },
    {
      "type": "co.elastic.clients.elasticsearch.core.ScrollResponse"
    },
    {
      "type": "co.elastic.clients.elasticsearch.core.SearchMvtRequest"
    },
    {
      "type": "co.elastic.clients.elasticsearch.core.SearchRequest"
    },
    {
      "type": "co.elastic.clients.elasticsearch.core.SearchResponse"
    },
    {
      "type": "co.elastic.clients.elasticsearch.core.SearchShardsRequest"
    },
    {
      "type": "co.elastic.clients.elasticsearch.core.SearchShardsResponse"
    },
    {
      "type": "co.elastic.clients.elasticsearch.core.SearchTemplateRequest"
    },
    {
      "type": "co.elastic.clients.elasticsearch.core.SearchTemplateResponse"
    },
    {
      "type": "co.elastic.clients.elasticsearch.core.TermsEnumRequest"
    },
    {
      "type": "co.elastic.clients.elasticsearch.core.TermsEnumResponse"
    },
    {
      "type": "co.elastic.clients.elasticsearch.core.TermvectorsRequest"
    },
    {
      "type": "co.elastic.clients.elasticsearch.core.TermvectorsResponse"
    },
    {
      "type": "co.elastic.clients.elasticsearch.core.UpdateByQueryRequest"
    },
    {
      "type": "co.elastic.clients.elasticsearch.core.UpdateByQueryResponse"
    },
    {
      "type": "co.elastic.clients.elasticsearch.core.UpdateByQueryRethrottleRequest"
    },
    {
      "type": "co.elastic.clients.elasticsearch.core.UpdateByQueryRethrottleResponse"
    },
    {
      "type": "co.elastic.clients.elasticsearch.core.UpdateRequest"
    },
    {
      "type": "co.elastic.clients.elasticsearch.core.UpdateResponse"
    },
    {
      "type": "co.elastic.clients.elasticsearch.core.bulk.BulkResponseItem"
    },
    {
      "type": "co.elastic.clients.elasticsearch.core.search.Hit"
    },
    {
      "type": "co.elastic.clients.elasticsearch.core.search.ResponseBody"
    },
    {
      "type": "co.elastic.clients.elasticsearch.dangling_indices.ElasticsearchDanglingIndicesClient"
    },
    {
      "type": "co.elastic.clients.elasticsearch.enrich.ElasticsearchEnrichClient"
    },
    {
      "type": "co.elastic.clients.elasticsearch.eql.ElasticsearchEqlClient"
    },
    {
      "type": "co.elastic.clients.elasticsearch.esql.ElasticsearchEsqlClient"
    },
    {
      "type": "co.elastic.clients.elasticsearch.features.ElasticsearchFeaturesClient"
    },
    {
      "type": "co.elastic.clients.elasticsearch.fleet.ElasticsearchFleetClient"
    },
    {
      "type": "co.elastic.clients.elasticsearch.graph.ElasticsearchGraphClient"
    },
    {
      "type": "co.elastic.clients.elasticsearch.ilm.ElasticsearchIlmClient"
    },
    {
      "type": "co.elastic.clients.elasticsearch.indices.ElasticsearchIndicesClient"
    },
    {
      "type": "co.elastic.clients.elasticsearch.inference.ElasticsearchInferenceClient"
    },
    {
      "type": "co.elastic.clients.elasticsearch.ingest.ElasticsearchIngestClient"
    },
    {
      "type": "co.elastic.clients.elasticsearch.license.ElasticsearchLicenseClient"
    },
    {
      "type": "co.elastic.clients.elasticsearch.logstash.ElasticsearchLogstashClient"
    },
    {
      "type": "co.elastic.clients.elasticsearch.migration.ElasticsearchMigrationClient"
    },
    {
      "type": "co.elastic.clients.elasticsearch.ml.ElasticsearchMlClient"
    },
    {
      "type": "co.elastic.clients.elasticsearch.monitoring.ElasticsearchMonitoringClient"
    },
    {
      "type": "co.elastic.clients.elasticsearch.nodes.ElasticsearchNodesClient"
    },
    {
      "type": "co.elastic.clients.elasticsearch.query_rules.ElasticsearchQueryRulesClient"
    },
    {
      "type": "co.elastic.clients.elasticsearch.rollup.ElasticsearchRollupClient"
    },
    {
      "type": "co.elastic.clients.elasticsearch.search_application.ElasticsearchSearchApplicationClient"
    },
    {
      "type": "co.elastic.clients.elasticsearch.searchable_snapshots.ElasticsearchSearchableSnapshotsClient"
    },
    {
      "type": "co.elastic.clients.elasticsearch.security.ElasticsearchSecurityClient"
    },
    {
      "type": "co.elastic.clients.elasticsearch.shutdown.ElasticsearchShutdownClient"
    },
    {
      "type": "co.elastic.clients.elasticsearch.slm.ElasticsearchSlmClient"
    },
    {
      "type": "co.elastic.clients.elasticsearch.snapshot.ElasticsearchSnapshotClient"
    },
    {
      "type": "co.elastic.clients.elasticsearch.sql.ElasticsearchSqlClient"
    },
    {
      "type": "co.elastic.clients.elasticsearch.ssl.ElasticsearchSslClient"
    },
    {
      "type": "co.elastic.clients.elasticsearch.synonyms.ElasticsearchSynonymsClient"
    },
    {
      "type": "co.elastic.clients.elasticsearch.tasks.ElasticsearchTasksClient"
    },
    {
      "type": "co.elastic.clients.elasticsearch.text_structure.ElasticsearchTextStructureClient"
    },
    {
      "type": "co.elastic.clients.elasticsearch.transform.ElasticsearchTransformClient"
    },
    {
      "type": "co.elastic.clients.elasticsearch.watcher.ElasticsearchWatcherClient"
    },
    {
      "type": "co.elastic.clients.elasticsearch.xpack.ElasticsearchXpackClient"
    },
    {
      "type": "co.elastic.clients.json.BufferingJsonGenerator"
    },
    {
      "type": "co.elastic.clients.json.BufferingJsonpMapper"
    },
    {
      "type": "co.elastic.clients.json.JsonpDeserializer"
    },
    {
      "type": "co.elastic.clients.json.JsonpMapper"
    },
    {
      "type": "co.elastic.clients.json.JsonpMapperBase",
      "allDeclaredFields": true
    },
    {
      "type": "co.elastic.clients.json.JsonpSerializer"
    },
    {
      "type": "co.elastic.clients.json.NdJsonpSerializable"
    },
    {
      "type": "co.elastic.clients.json.jackson.JacksonJsonpMapper",
      "allDeclaredFields": true
    },
    {
      "type": "co.elastic.clients.transport.ElasticsearchTransport"
    },
    {
      "type": "co.elastic.clients.transport.ElasticsearchTransportBase",
      "allDeclaredFields": true
    },
    {
      "type": "co.elastic.clients.transport.Endpoint"
    },
    {
      "type": "co.elastic.clients.transport.Transport"
    },
    {
      "type": "co.elastic.clients.transport.TransportOptions"
    },
    {
      "type": "co.elastic.clients.transport.endpoints.BinaryResponse"
    },
    {
      "type": "co.elastic.clients.transport.endpoints.BooleanResponse"
    },
    {
      "type": "co.elastic.clients.transport.http.HeaderMap"
    },
    {
      "type": "co.elastic.clients.transport.http.TransportHttpClient$Request"
    },
    {
      "type": "co.elastic.clients.transport.http.TransportHttpClient$Response"
    },
    {
      "type": "co.elastic.clients.transport.instrumentation.Instrumentation$Context"
    },
    {
      "type": "co.elastic.clients.transport.rest_client.RestClientTransport",
      "allDeclaredFields": true
    },
    {
      "type": "co.elastic.clients.util.BinaryData"
    },
    {
      "type": "co.elastic.clients.util.ObjectBuilder"
    },
    {
      "type": "com.fasterxml.aalto.AsyncXMLStreamReader"
    },
    {
      "type": "com.fasterxml.jackson.annotation.JacksonAnnotation"
    },
    {
      "type": "com.fasterxml.jackson.annotation.JsonAutoDetect$Value"
    },
    {
      "type": "com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility"
    },
    {
      "type": "com.fasterxml.jackson.annotation.JsonIgnore"
    },
    {
      "type": "com.fasterxml.jackson.annotation.JsonInclude"
    },
    {
      "type": "com.fasterxml.jackson.annotation.JsonInclude$Include"
    },
    {
      "type": "com.fasterxml.jackson.annotation.JsonInclude$IncludeEditor"
    },
    {
      "type": "com.fasterxml.jackson.annotation.JsonInclude$Value"
    },
    {
      "type": "com.fasterxml.jackson.annotation.JsonProperty"
    },
    {
      "type": "com.fasterxml.jackson.annotation.JsonSetter$Value"
    },
    {
      "type": "com.fasterxml.jackson.annotation.JsonTypeInfo$As"
    },
    {
      "type": "com.fasterxml.jackson.annotation.JsonUnwrapped"
    },
    {
      "type": "com.fasterxml.jackson.annotation.JsonView"
    },
    {
      "type": "com.fasterxml.jackson.annotation.PropertyAccessor"
    },
    {
      "type": "com.fasterxml.jackson.core.Base64Variant"
    },
    {
      "type": "com.fasterxml.jackson.core.FormatSchema"
    },
    {
      "type": "com.fasterxml.jackson.core.JsonEncoding"
    },
    {
      "type": "com.fasterxml.jackson.core.JsonFactory"
    },
    {
      "type": "com.fasterxml.jackson.core.JsonFactory$Feature"
    },
    {
      "type": "com.fasterxml.jackson.core.JsonGenerator"
    },
    {
      "type": "com.fasterxml.jackson.core.JsonGenerator$Feature"
    },
    {
      "type": "com.fasterxml.jackson.core.JsonParser"
    },
    {
      "type": "com.fasterxml.jackson.core.JsonParser$Feature"
    },
    {
      "type": "com.fasterxml.jackson.core.JsonProcessingException"
    },
    {
      "type": "com.fasterxml.jackson.core.JsonToken"
    },
    {
      "type": "com.fasterxml.jackson.core.ObjectCodec",
      "allDeclaredFields": true
    },
    {
      "type": "com.fasterxml.jackson.core.PrettyPrinter"
    },
    {
      "type": "com.fasterxml.jackson.core.StreamReadFeature"
    },
    {
      "type": "com.fasterxml.jackson.core.StreamWriteFeature"
    },
    {
      "type": "com.fasterxml.jackson.core.TreeCodec",
      "allDeclaredFields": true
    },
    {
      "type": "com.fasterxml.jackson.core.TreeNode"
    },
    {
      "type": "com.fasterxml.jackson.core.Version"
    },
    {
      "type": "com.fasterxml.jackson.core.Versioned"
    },
    {
      "type": "com.fasterxml.jackson.core.exc.StreamReadException"
    },
    {
      "type": "com.fasterxml.jackson.core.exc.StreamWriteException"
    },
    {
      "type": "com.fasterxml.jackson.core.io.CharacterEscapes"
    },
    {
      "type": "com.fasterxml.jackson.core.type.ResolvedType"
    },
    {
      "type": "com.fasterxml.jackson.core.type.TypeReference"
    },
    {
      "type": "com.fasterxml.jackson.databind.AnnotationIntrospector"
    },
    {
      "type": "com.fasterxml.jackson.databind.DatabindException"
    },
    {
      "type": "com.fasterxml.jackson.databind.DeserializationConfig"
    },
    {
      "type": "com.fasterxml.jackson.databind.DeserializationContext"
    },
    {
      "type": "com.fasterxml.jackson.databind.DeserializationFeature"
    },
    {
      "type": "com.fasterxml.jackson.databind.InjectableValues"
    },
    {
      "type": "com.fasterxml.jackson.databind.JavaType"
    },
    {
      "type": "com.fasterxml.jackson.databind.JsonDeserializer"
    },
    {
      "type": "com.fasterxml.jackson.databind.JsonMappingException"
    },
    {
      "type": "com.fasterxml.jackson.databind.JsonNode"
    },
    {
      "type": "com.fasterxml.jackson.databind.JsonSerializer"
    },
    {
      "type": "com.fasterxml.jackson.databind.KeyDeserializer"
    },
    {
      "type": "com.fasterxml.jackson.databind.MapperFeature"
    },
    {
      "type": "com.fasterxml.jackson.databind.MappingIterator"
    },
    {
      "type": "com.fasterxml.jackson.databind.Module",
      "allDeclaredFields": true
    },
    {
      "type": "com.fasterxml.jackson.databind.Module$SetupContext"
    },
    {
      "type": "com.fasterxml.jackson.databind.ObjectMapper",
      "allDeclaredFields": true
    },
    {
      "type": "com.fasterxml.jackson.databind.ObjectMapper$DefaultTyping"
    },
    {
      "type": "com.fasterxml.jackson.databind.ObjectReader"
    },
    {
      "type": "com.fasterxml.jackson.databind.ObjectWriter"
    },
    {
      "type": "com.fasterxml.jackson.databind.PropertyNamingStrategy"
    },
    {
      "type": "com.fasterxml.jackson.databind.SerializationConfig"
    },
    {
      "type": "com.fasterxml.jackson.databind.SerializationFeature"
    },
    {
      "type": "com.fasterxml.jackson.databind.SerializerProvider"
    },
    {
      "type": "com.fasterxml.jackson.databind.cfg.CacheProvider"
    },
    {
      "type": "com.fasterxml.jackson.databind.cfg.ConstructorDetector"
    },
    {
      "type": "com.fasterxml.jackson.databind.cfg.ContextAttributes"
    },
    {
      "type": "com.fasterxml.jackson.databind.cfg.DatatypeFeature"
    },
    {
      "type": "com.fasterxml.jackson.databind.cfg.HandlerInstantiator"
    },
    {
      "type": "com.fasterxml.jackson.databind.cfg.MutableCoercionConfig"
    },
    {
      "type": "com.fasterxml.jackson.databind.cfg.MutableConfigOverride"
    },
    {
      "type": "com.fasterxml.jackson.databind.deser.BeanDeserializerModifier"
    },
    {
      "type": "com.fasterxml.jackson.databind.deser.DefaultDeserializationContext"
    },
    {
      "type": "com.fasterxml.jackson.databind.deser.DeserializationProblemHandler"
    },
    {
      "type": "com.fasterxml.jackson.databind.deser.ValueInstantiator"
    },
    {
      "type": "com.fasterxml.jackson.databind.exc.InvalidFormatException"
    },
    {
      "type": "com.fasterxml.jackson.databind.exc.MismatchedInputException"
    },
    {
      "type": "com.fasterxml.jackson.databind.ext.Java7SupportImpl",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.fasterxml.jackson.databind.introspect.AccessorNamingStrategy$Provider"
    },
    {
      "type": "com.fasterxml.jackson.databind.introspect.ClassIntrospector"
    },
    {
      "type": "com.fasterxml.jackson.databind.introspect.ClassIntrospector$MixInResolver"
    },
    {
      "type": "com.fasterxml.jackson.databind.introspect.VisibilityChecker"
    },
    {
      "type": "com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper"
    },
    {
      "type": "com.fasterxml.jackson.databind.jsonschema.JsonSchema"
    },
    {
      "type": "com.fasterxml.jackson.databind.jsontype.NamedType"
    },
    {
      "type": "com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator"
    },
    {
      "type": "com.fasterxml.jackson.databind.jsontype.SubtypeResolver"
    },
    {
      "type": "com.fasterxml.jackson.databind.jsontype.TypeResolverBuilder"
    },
    {
      "type": "com.fasterxml.jackson.databind.module.SimpleAbstractTypeResolver"
    },
    {
      "type": "com.fasterxml.jackson.databind.module.SimpleDeserializers"
    },
    {
      "type": "com.fasterxml.jackson.databind.module.SimpleKeyDeserializers"
    },
    {
      "type": "com.fasterxml.jackson.databind.module.SimpleModule",
      "allDeclaredFields": true
    },
    {
      "type": "com.fasterxml.jackson.databind.module.SimpleSerializers"
    },
    {
      "type": "com.fasterxml.jackson.databind.module.SimpleValueInstantiators"
    },
    {
      "type": "com.fasterxml.jackson.databind.node.ArrayNode"
    },
    {
      "type": "com.fasterxml.jackson.databind.node.JsonNodeFactory"
    },
    {
      "type": "com.fasterxml.jackson.databind.node.ObjectNode"
    },
    {
      "type": "com.fasterxml.jackson.databind.ser.BeanSerializerModifier"
    },
    {
      "type": "com.fasterxml.jackson.databind.ser.DefaultSerializerProvider"
    },
    {
      "type": "com.fasterxml.jackson.databind.ser.FilterProvider"
    },
    {
      "type": "com.fasterxml.jackson.databind.ser.SerializerFactory"
    },
    {
      "type": "com.fasterxml.jackson.databind.type.LogicalType"
    },
    {
      "type": "com.fasterxml.jackson.databind.type.TypeFactory"
    },
    {
      "type": "com.fasterxml.jackson.databind.util.Converter"
    },
    {
      "type": "com.fasterxml.jackson.databind.util.StdConverter",
      "allDeclaredFields": true
    },
    {
      "type": "com.fasterxml.jackson.dataformat.cbor.CBORFactory"
    },
    {
      "type": "com.fasterxml.jackson.dataformat.smile.SmileFactory"
    },
    {
      "type": "com.fasterxml.jackson.dataformat.xml.XmlMapper"
    },
    {
      "type": "com.fasterxml.jackson.dataformat.yaml.YAMLFactory"
    },
    {
      "type": "com.fasterxml.jackson.datatype.jdk8.Jdk8Module",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.fasterxml.jackson.datatype.joda.JodaModule"
    },
    {
      "type": "com.fasterxml.jackson.datatype.jsr310.JavaTimeModule",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.fasterxml.jackson.module.kotlin.KotlinModule",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.fasterxml.jackson.module.kotlin.KotlinModule$Builder"
    },
    {
      "type": "com.fasterxml.jackson.module.kotlin.SingletonSupport"
    },
    {
      "type": "com.fasterxml.jackson.module.paramnames.ParameterNamesModule",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.google.common.base.Optional"
    },
    {
      "type": "com.google.gson.Gson"
    },
    {
      "type": "com.google.protobuf.Message"
    },
    {
      "type": "com.ibm.lang.management.OperatingSystemMXBean"
    },
    {
      "type": "com.jayway.jsonpath.DocumentContext"
    },
    {
      "type": "com.leijendary.Application",
      "allDeclaredFields": true
    },
    {
      "type": "com.leijendary.ApplicationKt",
      "methods": [
        {
          "name": "main",
          "parameterTypes": [
            "java.lang.String[]"
          ]
        }
      ]
    },
    {
      "type": "com.leijendary.ApplicationKt__ApplicationContextInitializer",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.leijendary.ApplicationKt__EnvironmentPostProcessor"
    },
    {
      "type": "com.leijendary.client.PetStoreClient"
    },
    {
      "type": "com.leijendary.client.PetStoreFeignConfiguration"
    },
    {
      "type": "com.leijendary.config.AiConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "com.leijendary.config.AwsConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "com.leijendary.config.CacheConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "com.leijendary.config.DatabaseConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "com.leijendary.config.DatabaseConfiguration$Companion"
    },
    {
      "type": "com.leijendary.config.KafkaConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "com.leijendary.config.OpenApiConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "com.leijendary.config.SynchronizedTransactionManager",
      "allDeclaredFields": true
    },
    {
      "type": "com.leijendary.config.TransactionRoutingDataSource",
      "allDeclaredFields": true
    },
    {
      "type": "com.leijendary.config.properties.AwsCloudFrontProperties",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.String",
            "java.lang.String",
            "java.lang.String",
            "java.lang.String",
            "java.time.Duration"
          ]
        }
      ]
    },
    {
      "type": "com.leijendary.config.properties.AwsS3Properties",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.String",
            "java.time.Duration"
          ]
        }
      ]
    },
    {
      "type": "com.leijendary.config.properties.DataSourcePrimaryProperties",
      "allDeclaredFields": true
    },
    {
      "type": "com.leijendary.config.properties.DataSourceReadOnlyProperties",
      "allDeclaredFields": true
    },
    {
      "type": "com.leijendary.config.properties.KafkaTopicProperties",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.leijendary.config.properties.KafkaTopicProperties$KafkaTopic",
      "fields": [
        {
          "name": "this$0"
        }
      ],
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.String",
            "int",
            "int",
            "int",
            "kotlin.jvm.internal.DefaultConstructorMarker"
          ]
        }
      ]
    },
    {
      "type": "com.leijendary.config.properties.OpenApiProperties",
      "allDeclaredFields": true
    },
    {
      "type": "com.leijendary.context.DatabaseContext",
      "allDeclaredFields": true
    },
    {
      "type": "com.leijendary.context.SpringContext",
      "allDeclaredFields": true
    },
    {
      "type": "com.leijendary.domain.ai.chat.AiChat",
      "allDeclaredFields": true
    },
    {
      "type": "com.leijendary.domain.ai.chat.AiChat$Companion"
    },
    {
      "type": "com.leijendary.domain.ai.chat.AiChatController",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "create",
          "parameterTypes": [
            "com.leijendary.domain.ai.chat.AiChatRequest"
          ]
        },
        {
          "name": "cursor",
          "parameterTypes": [
            "com.leijendary.model.Cursorable"
          ]
        },
        {
          "name": "delete",
          "parameterTypes": [
            "java.lang.String"
          ]
        },
        {
          "name": "get",
          "parameterTypes": [
            "java.lang.String"
          ]
        },
        {
          "name": "history",
          "parameterTypes": [
            "java.lang.String"
          ]
        }
      ]
    },
    {
      "type": "com.leijendary.domain.ai.chat.AiChatCreateResponse",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "getId",
          "parameterTypes": []
        },
        {
          "name": "getText",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.leijendary.domain.ai.chat.AiChatCursorRepository",
      "methods": [
        {
          "name": "cursor",
          "parameterTypes": [
            "java.lang.String",
            "com.leijendary.model.Cursorable",
            "java.lang.Class"
          ]
        }
      ]
    },
    {
      "type": "com.leijendary.domain.ai.chat.AiChatCursorRepositoryImpl",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "cursor",
          "parameterTypes": [
            "java.lang.String",
            "com.leijendary.model.Cursorable",
            "java.lang.Class"
          ]
        }
      ]
    },
    {
      "type": "com.leijendary.domain.ai.chat.AiChatCursorRepositoryImpl$$SpringCGLIB$$0",
      "fields": [
        {
          "name": "CGLIB$CALLBACK_FILTER"
        },
        {
          "name": "CGLIB$FACTORY_DATA"
        }
      ]
    },
    {
      "type": "com.leijendary.domain.ai.chat.AiChatFunction",
      "allDeclaredFields": true
    },
    {
      "type": "com.leijendary.domain.ai.chat.AiChatFunction$$SpringCGLIB$$0",
      "allDeclaredFields": true,
      "fields": [
        {
          "name": "CGLIB$FACTORY_DATA"
        }
      ],
      "methods": [
        {
          "name": "CGLIB$SET_STATIC_CALLBACKS",
          "parameterTypes": [
            "org.springframework.cglib.proxy.Callback[]"
          ]
        }
      ]
    },
    {
      "type": "com.leijendary.domain.ai.chat.AiChatFunction$$SpringCGLIB$$FastClass$$0",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.Class"
          ]
        }
      ]
    },
    {
      "type": "com.leijendary.domain.ai.chat.AiChatFunction$$SpringCGLIB$$FastClass$$1",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.Class"
          ]
        }
      ]
    },
    {
      "type": "com.leijendary.domain.ai.chat.AiChatFunction$Companion"
    },
    {
      "type": "com.leijendary.domain.ai.chat.AiChatFunction$Request",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.String"
          ]
        }
      ]
    },
    {
      "type": "com.leijendary.domain.ai.chat.AiChatFunction$Response",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "getAccountNumber",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.leijendary.domain.ai.chat.AiChatHistoryResponse",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "getId",
          "parameterTypes": []
        },
        {
          "name": "getMessages",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.leijendary.domain.ai.chat.AiChatMemory",
      "allDeclaredFields": true
    },
    {
      "type": "com.leijendary.domain.ai.chat.AiChatMemoryRepository"
    },
    {
      "type": "com.leijendary.domain.ai.chat.AiChatMemory_Accessor_aptcp6",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "com.leijendary.domain.ai.chat.AiChatMemory"
          ]
        }
      ]
    },
    {
      "type": "com.leijendary.domain.ai.chat.AiChatMemory_Instantiator_aptcp6",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.leijendary.domain.ai.chat.AiChatMessage",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "getText",
          "parameterTypes": []
        },
        {
          "name": "getType",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.leijendary.domain.ai.chat.AiChatRepository"
    },
    {
      "type": "com.leijendary.domain.ai.chat.AiChatRequest",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.String",
            "java.lang.String",
            "int",
            "kotlin.jvm.internal.DefaultConstructorMarker"
          ]
        }
      ]
    },
    {
      "type": "com.leijendary.domain.ai.chat.AiChatResponse",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.String",
            "java.lang.String",
            "java.time.Instant"
          ]
        },
        {
          "name": "getCreatedAt",
          "parameterTypes": []
        },
        {
          "name": "getId",
          "parameterTypes": []
        },
        {
          "name": "getTitle",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.leijendary.domain.ai.chat.AiChatResponse_Instantiator_4mw5jj",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.leijendary.domain.ai.chat.AiChatService"
    },
    {
      "type": "com.leijendary.domain.ai.chat.AiChatServiceImpl",
      "allDeclaredFields": true
    },
    {
      "type": "com.leijendary.domain.ai.chat.AiChat_Accessor_kifl9y",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "com.leijendary.domain.ai.chat.AiChat"
          ]
        }
      ]
    },
    {
      "type": "com.leijendary.domain.ai.chat.AiChat_Instantiator_kifl9y",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.leijendary.domain.ai.chat.PersistentChatMemory",
      "allDeclaredFields": true
    },
    {
      "type": "com.leijendary.domain.image.Image",
      "allDeclaredFields": true
    },
    {
      "type": "com.leijendary.domain.image.Image$Companion"
    },
    {
      "type": "com.leijendary.domain.image.ImageController",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "createUrl",
          "parameterTypes": [
            "com.leijendary.domain.image.ImageCreateUrlRequest"
          ]
        },
        {
          "name": "delete",
          "parameterTypes": [
            "com.leijendary.domain.image.ImageDeleteRequest"
          ]
        },
        {
          "name": "validate",
          "parameterTypes": [
            "com.leijendary.domain.image.ImageValidateRequest"
          ]
        }
      ]
    },
    {
      "type": "com.leijendary.domain.image.ImageCreateUrlRequest",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.String",
            "java.util.List"
          ]
        }
      ]
    },
    {
      "type": "com.leijendary.domain.image.ImageCreateUrlResponse",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "getUrl",
          "parameterTypes": []
        },
        {
          "name": "getValidated",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.leijendary.domain.image.ImageDeleteRequest",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.String"
          ]
        }
      ]
    },
    {
      "type": "com.leijendary.domain.image.ImageMetadata",
      "allDeclaredFields": true
    },
    {
      "type": "com.leijendary.domain.image.ImageMetadataRepository"
    },
    {
      "type": "com.leijendary.domain.image.ImageMetadataRequest",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.String",
            "java.lang.String"
          ]
        }
      ]
    },
    {
      "type": "com.leijendary.domain.image.ImageMetadata_Accessor_boadw1",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "com.leijendary.domain.image.ImageMetadata"
          ]
        }
      ]
    },
    {
      "type": "com.leijendary.domain.image.ImageMultiValidateResponse"
    },
    {
      "type": "com.leijendary.domain.image.ImageRepository"
    },
    {
      "type": "com.leijendary.domain.image.ImageRequest",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.String",
            "java.lang.String",
            "java.lang.String"
          ]
        },
        {
          "name": "getOriginal",
          "parameterTypes": []
        },
        {
          "name": "getPreview",
          "parameterTypes": []
        },
        {
          "name": "getThumbnail",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.leijendary.domain.image.ImageResponse",
      "allDeclaredFields": true
    },
    {
      "type": "com.leijendary.domain.image.ImageService"
    },
    {
      "type": "com.leijendary.domain.image.ImageServiceImpl",
      "allDeclaredFields": true
    },
    {
      "type": "com.leijendary.domain.image.ImageValidateRequest",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.String"
          ]
        }
      ]
    },
    {
      "type": "com.leijendary.domain.image.ImageValidateResponse",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "getId",
          "parameterTypes": []
        },
        {
          "name": "getName",
          "parameterTypes": []
        },
        {
          "name": "getPath",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.leijendary.domain.image.Image_Accessor_k9xyxe",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "com.leijendary.domain.image.Image"
          ]
        }
      ]
    },
    {
      "type": "com.leijendary.domain.image.Image_Instantiator_k9xyxe",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.leijendary.domain.sample.Sample",
      "allDeclaredFields": true
    },
    {
      "type": "com.leijendary.domain.sample.Sample$Companion"
    },
    {
      "type": "com.leijendary.domain.sample.SampleAdminController",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "create",
          "parameterTypes": [
            "com.leijendary.domain.sample.SampleRequest"
          ]
        },
        {
          "name": "delete",
          "parameterTypes": [
            "java.lang.String"
          ]
        },
        {
          "name": "deleteImage",
          "parameterTypes": [
            "java.lang.String"
          ]
        },
        {
          "name": "get",
          "parameterTypes": [
            "java.lang.String"
          ]
        },
        {
          "name": "page",
          "parameterTypes": [
            "com.leijendary.model.QueryRequest",
            "org.springframework.data.domain.Pageable"
          ]
        },
        {
          "name": "saveImage",
          "parameterTypes": [
            "java.lang.String",
            "com.leijendary.domain.image.ImageRequest"
          ]
        },
        {
          "name": "update",
          "parameterTypes": [
            "java.lang.String",
            "com.leijendary.domain.sample.SampleRequest"
          ]
        }
      ]
    },
    {
      "type": "com.leijendary.domain.sample.SampleController",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "counter",
          "parameterTypes": []
        },
        {
          "name": "cursor",
          "parameterTypes": [
            "com.leijendary.model.QueryRequest",
            "com.leijendary.model.Cursorable"
          ]
        },
        {
          "name": "get",
          "parameterTypes": [
            "java.lang.String"
          ]
        },
        {
          "name": "openApiStoreInventory",
          "parameterTypes": []
        },
        {
          "name": "requestScoped",
          "parameterTypes": [
            "java.util.UUID"
          ]
        }
      ]
    },
    {
      "type": "com.leijendary.domain.sample.SampleCursorRepository",
      "methods": [
        {
          "name": "cursor",
          "parameterTypes": [
            "java.lang.String",
            "com.leijendary.model.Cursorable",
            "java.lang.Class"
          ]
        }
      ]
    },
    {
      "type": "com.leijendary.domain.sample.SampleCursorRepositoryImpl",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "cursor",
          "parameterTypes": [
            "java.lang.String",
            "com.leijendary.model.Cursorable",
            "java.lang.Class"
          ]
        }
      ]
    },
    {
      "type": "com.leijendary.domain.sample.SampleCursorRepositoryImpl$$SpringCGLIB$$0",
      "fields": [
        {
          "name": "CGLIB$CALLBACK_FILTER"
        },
        {
          "name": "CGLIB$FACTORY_DATA"
        }
      ]
    },
    {
      "type": "com.leijendary.domain.sample.SampleDetailResponse",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.String",
            "java.lang.String",
            "java.lang.String",
            "java.math.BigDecimal",
            "int",
            "java.time.Instant"
          ]
        },
        {
          "name": "getAmount",
          "parameterTypes": []
        },
        {
          "name": "getCreatedAt",
          "parameterTypes": []
        },
        {
          "name": "getDescription",
          "parameterTypes": []
        },
        {
          "name": "getId",
          "parameterTypes": []
        },
        {
          "name": "getImage",
          "parameterTypes": []
        },
        {
          "name": "getName",
          "parameterTypes": []
        },
        {
          "name": "getTranslations",
          "parameterTypes": []
        },
        {
          "name": "getVersion",
          "parameterTypes": []
        },
        {
          "name": "setTranslations",
          "parameterTypes": [
            "java.util.List"
          ]
        }
      ]
    },
    {
      "type": "com.leijendary.domain.sample.SampleDetailResponse_Instantiator_202x72",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.leijendary.domain.sample.SampleImage",
      "allDeclaredFields": true
    },
    {
      "type": "com.leijendary.domain.sample.SampleImageRepository"
    },
    {
      "type": "com.leijendary.domain.sample.SampleImage_Accessor_qtz48c",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "com.leijendary.domain.sample.SampleImage"
          ]
        }
      ]
    },
    {
      "type": "com.leijendary.domain.sample.SampleMessageConsumer",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "created",
          "parameterTypes": [
            "java.lang.String"
          ]
        },
        {
          "name": "deleted",
          "parameterTypes": [
            "java.lang.String"
          ]
        },
        {
          "name": "updated",
          "parameterTypes": [
            "java.lang.String"
          ]
        }
      ]
    },
    {
      "type": "com.leijendary.domain.sample.SampleMessageProducer",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "created",
          "parameterTypes": [
            "com.leijendary.domain.sample.SampleDetailResponse"
          ]
        },
        {
          "name": "deleted",
          "parameterTypes": [
            "java.lang.String"
          ]
        },
        {
          "name": "updated",
          "parameterTypes": [
            "com.leijendary.domain.sample.SampleDetailResponse"
          ]
        }
      ]
    },
    {
      "type": "com.leijendary.domain.sample.SampleMessageProducer$$SpringCGLIB$$0",
      "fields": [
        {
          "name": "CGLIB$CALLBACK_FILTER"
        },
        {
          "name": "CGLIB$FACTORY_DATA"
        }
      ]
    },
    {
      "type": "com.leijendary.domain.sample.SampleRepository"
    },
    {
      "type": "com.leijendary.domain.sample.SampleRequest",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.String",
            "java.lang.String",
            "java.math.BigDecimal",
            "java.util.List",
            "int"
          ]
        },
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.String",
            "java.lang.String",
            "java.math.BigDecimal",
            "java.util.List",
            "int",
            "int",
            "kotlin.jvm.internal.DefaultConstructorMarker"
          ]
        }
      ]
    },
    {
      "type": "com.leijendary.domain.sample.SampleResponse",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.String",
            "java.lang.String",
            "java.lang.String",
            "java.math.BigDecimal",
            "java.time.Instant"
          ]
        },
        {
          "name": "getAmount",
          "parameterTypes": []
        },
        {
          "name": "getCreatedAt",
          "parameterTypes": []
        },
        {
          "name": "getDescription",
          "parameterTypes": []
        },
        {
          "name": "getId",
          "parameterTypes": []
        },
        {
          "name": "getImage",
          "parameterTypes": []
        },
        {
          "name": "getName",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.leijendary.domain.sample.SampleResponse_Instantiator_qr8a15",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.leijendary.domain.sample.SampleSearch",
      "allDeclaredFields": true
    },
    {
      "type": "com.leijendary.domain.sample.SampleSearch$Companion"
    },
    {
      "type": "com.leijendary.domain.sample.SampleSearchController",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "list",
          "parameterTypes": [
            "com.leijendary.model.QueryRequest",
            "org.springframework.data.domain.Pageable"
          ]
        },
        {
          "name": "reindex",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.leijendary.domain.sample.SampleSearchCustomRepository",
      "methods": [
        {
          "name": "deleteImage",
          "parameterTypes": [
            "java.lang.String"
          ]
        },
        {
          "name": "setImage",
          "parameterTypes": [
            "java.lang.String",
            "com.leijendary.projection.ImageProjection"
          ]
        }
      ]
    },
    {
      "type": "com.leijendary.domain.sample.SampleSearchCustomRepositoryImpl",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "deleteImage",
          "parameterTypes": [
            "java.lang.String"
          ]
        },
        {
          "name": "setImage",
          "parameterTypes": [
            "java.lang.String",
            "com.leijendary.projection.ImageProjection"
          ]
        }
      ]
    },
    {
      "type": "com.leijendary.domain.sample.SampleSearchCustomRepositoryImpl$$SpringCGLIB$$0",
      "fields": [
        {
          "name": "CGLIB$CALLBACK_FILTER"
        },
        {
          "name": "CGLIB$FACTORY_DATA"
        }
      ]
    },
    {
      "type": "com.leijendary.domain.sample.SampleSearchRepository"
    },
    {
      "type": "com.leijendary.domain.sample.SampleSearchService"
    },
    {
      "type": "com.leijendary.domain.sample.SampleSearchServiceImpl",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "delete",
          "parameterTypes": [
            "java.lang.String"
          ]
        },
        {
          "name": "page",
          "parameterTypes": [
            "com.leijendary.model.QueryRequest",
            "org.springframework.data.domain.Pageable"
          ]
        },
        {
          "name": "reindex",
          "parameterTypes": []
        },
        {
          "name": "save",
          "parameterTypes": [
            "com.leijendary.domain.sample.SampleDetailResponse"
          ]
        },
        {
          "name": "update",
          "parameterTypes": [
            "com.leijendary.domain.sample.SampleDetailResponse"
          ]
        }
      ]
    },
    {
      "type": "com.leijendary.domain.sample.SampleSearchServiceImpl$$SpringCGLIB$$0",
      "fields": [
        {
          "name": "CGLIB$CALLBACK_FILTER"
        },
        {
          "name": "CGLIB$FACTORY_DATA"
        }
      ]
    },
    {
      "type": "com.leijendary.domain.sample.SampleSearch_Accessor_taapg0",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "com.leijendary.domain.sample.SampleSearch"
          ]
        }
      ]
    },
    {
      "type": "com.leijendary.domain.sample.SampleSearch_Instantiator_taapg0",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.leijendary.domain.sample.SampleService"
    },
    {
      "type": "com.leijendary.domain.sample.SampleServiceImpl",
      "allDeclaredFields": true
    },
    {
      "type": "com.leijendary.domain.sample.SampleTranslation",
      "allDeclaredFields": true
    },
    {
      "type": "com.leijendary.domain.sample.SampleTranslationRepository"
    },
    {
      "type": "com.leijendary.domain.sample.SampleTranslationRequest",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.String",
            "java.lang.String"
          ]
        },
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.String",
            "java.lang.String",
            "int",
            "kotlin.jvm.internal.DefaultConstructorMarker"
          ]
        }
      ]
    },
    {
      "type": "com.leijendary.domain.sample.SampleTranslationResponse",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.String",
            "java.lang.String",
            "java.lang.String",
            "int"
          ]
        },
        {
          "name": "getDescription",
          "parameterTypes": []
        },
        {
          "name": "getLanguage",
          "parameterTypes": []
        },
        {
          "name": "getName",
          "parameterTypes": []
        },
        {
          "name": "getOrdinal",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.leijendary.domain.sample.SampleTranslationResponse_Instantiator_59e3lh",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.leijendary.domain.sample.SampleTranslationSearch",
      "allDeclaredFields": true
    },
    {
      "type": "com.leijendary.domain.sample.SampleTranslationSearch_Accessor_8ka9jj",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "com.leijendary.domain.sample.SampleTranslationSearch"
          ]
        }
      ]
    },
    {
      "type": "com.leijendary.domain.sample.SampleTranslationSearch_Instantiator_8ka9jj",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.leijendary.domain.sample.SampleTranslation_Accessor_quou3r",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "com.leijendary.domain.sample.SampleTranslation"
          ]
        }
      ]
    },
    {
      "type": "com.leijendary.domain.sample.SampleTranslation_Instantiator_quou3r",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.leijendary.domain.sample.Sample_Accessor_wmuz8z",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "com.leijendary.domain.sample.Sample"
          ]
        }
      ]
    },
    {
      "type": "com.leijendary.domain.sample.Sample_Instantiator_wmuz8z",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.leijendary.error.AsyncRequestNotUsableExceptionHandler",
      "allDeclaredFields": true
    },
    {
      "type": "com.leijendary.error.ClientAbortExceptionHandler",
      "allDeclaredFields": true
    },
    {
      "type": "com.leijendary.error.ErrorModelExceptionHandler",
      "allDeclaredFields": true
    },
    {
      "type": "com.leijendary.error.GlobalExceptionHandler",
      "allDeclaredFields": true
    },
    {
      "type": "com.leijendary.error.HttpClientErrorExceptionHandler",
      "allDeclaredFields": true
    },
    {
      "type": "com.leijendary.error.HttpMessageNotReadableExceptionHandler",
      "allDeclaredFields": true
    },
    {
      "type": "com.leijendary.error.HttpRequestMethodNotSupportedExceptionHandler",
      "allDeclaredFields": true
    },
    {
      "type": "com.leijendary.error.MethodExceptionHandler",
      "allDeclaredFields": true
    },
    {
      "type": "com.leijendary.error.MissingServletRequestPartExceptionHandler",
      "allDeclaredFields": true
    },
    {
      "type": "com.leijendary.error.NoResourceFoundExceptionHandler",
      "allDeclaredFields": true
    },
    {
      "type": "com.leijendary.error.OptimisticLockingFailureExceptionHandler",
      "allDeclaredFields": true
    },
    {
      "type": "com.leijendary.error.PSQLExceptionHandler",
      "allDeclaredFields": true
    },
    {
      "type": "com.leijendary.error.ResourceNotFoundExceptionHandler",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "catchResourceNotFound",
          "parameterTypes": [
            "com.leijendary.error.exception.ResourceNotFoundException"
          ]
        }
      ]
    },
    {
      "type": "com.leijendary.error.ResourceNotUniqueExceptionHandler",
      "allDeclaredFields": true
    },
    {
      "type": "com.leijendary.error.StatusExceptionHandler",
      "allDeclaredFields": true
    },
    {
      "type": "com.leijendary.error.exception.ErrorModelException"
    },
    {
      "type": "com.leijendary.error.exception.ResourceNotFoundException"
    },
    {
      "type": "com.leijendary.error.exception.ResourceNotUniqueException"
    },
    {
      "type": "com.leijendary.error.exception.StatusException"
    },
    {
      "type": "com.leijendary.filter.TraceFilter",
      "allDeclaredFields": true
    },
    {
      "type": "com.leijendary.interceptor.KafkaInterceptor",
      "allDeclaredFields": true
    },
    {
      "type": "com.leijendary.model.CursorMetadata",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "getCreatedAt",
          "parameterTypes": []
        },
        {
          "name": "getId",
          "parameterTypes": []
        },
        {
          "name": "getSize",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.leijendary.model.Cursorable",
      "fields": [
        {
          "name": "component1"
        },
        {
          "name": "component2"
        },
        {
          "name": "component3"
        },
        {
          "name": "createdAt"
        },
        {
          "name": "hashCode"
        },
        {
          "name": "id"
        },
        {
          "name": "size"
        },
        {
          "name": "toString"
        }
      ],
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "int",
            "java.time.Instant",
            "java.lang.String",
            "int",
            "kotlin.jvm.internal.DefaultConstructorMarker"
          ]
        }
      ]
    },
    {
      "type": "com.leijendary.model.CursoredModel",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "getContent",
          "parameterTypes": []
        },
        {
          "name": "getCursor",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.leijendary.model.ErrorModel",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "getCode",
          "parameterTypes": []
        },
        {
          "name": "getId",
          "parameterTypes": []
        },
        {
          "name": "getMessage",
          "parameterTypes": []
        },
        {
          "name": "getSource",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.leijendary.model.ErrorSource",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "getHeader",
          "parameterTypes": []
        },
        {
          "name": "getMeta",
          "parameterTypes": []
        },
        {
          "name": "getParameter",
          "parameterTypes": []
        },
        {
          "name": "getPointer",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.leijendary.model.IdentityModel",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.Object"
          ]
        },
        {
          "name": "getId",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.leijendary.model.QueryRequest",
      "fields": [
        {
          "name": "component1"
        },
        {
          "name": "hashCode"
        },
        {
          "name": "query"
        },
        {
          "name": "toString"
        }
      ],
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.String"
          ]
        },
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.String",
            "int",
            "kotlin.jvm.internal.DefaultConstructorMarker"
          ]
        }
      ]
    },
    {
      "type": "com.leijendary.model.TranslationRequest",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "setLanguage",
          "parameterTypes": [
            "java.lang.String"
          ]
        },
        {
          "name": "setOrdinal",
          "parameterTypes": [
            "int"
          ]
        }
      ]
    },
    {
      "type": "com.leijendary.projection.CursorProjection"
    },
    {
      "type": "com.leijendary.projection.ImageProjection",
      "allDeclaredFields": true
    },
    {
      "type": "com.leijendary.projection.LocaleProjection"
    },
    {
      "type": "com.leijendary.projection.LocalizedProjection"
    },
    {
      "type": "com.leijendary.projection.PrefixedIDProjection"
    },
    {
      "type": "com.leijendary.security.Encryption",
      "allDeclaredFields": true
    },
    {
      "type": "com.leijendary.storage.BlockStorage",
      "allDeclaredFields": true
    },
    {
      "type": "com.leijendary.storage.BlockStorage$Request"
    },
    {
      "type": "com.leijendary.validator.UniqueFieldsValidator",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.leijendary.validator.annotation.UniqueFields",
      "methods": [
        {
          "name": "fields",
          "parameterTypes": []
        },
        {
          "name": "groups",
          "parameterTypes": []
        },
        {
          "name": "message",
          "parameterTypes": []
        },
        {
          "name": "payload",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.pgvector.PGvector"
    },
    {
      "type": "com.querydsl.core.types.Predicate"
    },
    {
      "type": "com.rometools.rome.feed.WireFeed"
    },
    {
      "type": "com.samskivert.mustache.Template"
    },
    {
      "type": "com.sun.crypto.provider.AESCipher$General",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.sun.crypto.provider.ARCFOURCipher",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.sun.crypto.provider.ChaCha20Cipher$ChaCha20Poly1305",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.sun.crypto.provider.DESCipher",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.sun.crypto.provider.DESedeCipher",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.sun.crypto.provider.DHParameters",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.sun.crypto.provider.GaloisCounterMode$AESGCM",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.sun.crypto.provider.HmacCore$HmacSHA256",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.sun.crypto.provider.HmacSHA1",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.sun.crypto.provider.PBKDF2Core$HmacSHA1",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.sun.crypto.provider.PBKDF2Core$HmacSHA224",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.sun.crypto.provider.PBKDF2Core$HmacSHA256",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.sun.crypto.provider.PBKDF2Core$HmacSHA384",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.sun.crypto.provider.PBKDF2Core$HmacSHA512",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.sun.crypto.provider.TlsKeyMaterialGenerator",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.sun.crypto.provider.TlsMasterSecretGenerator",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.sun.crypto.provider.TlsPrfGenerator$V12",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.sun.management.GarbageCollectionNotificationInfo"
    },
    {
      "type": "com.sun.management.GarbageCollectorMXBean"
    },
    {
      "type": "com.sun.management.GcInfo",
      "fields": [
        {
          "name": "builder"
        },
        {
          "name": "extAttributes"
        }
      ]
    },
    {
      "type": "com.sun.management.HotSpotDiagnosticMXBean"
    },
    {
      "type": "com.sun.management.OperatingSystemMXBean",
      "methods": [
        {
          "name": "getCpuLoad",
          "parameterTypes": []
        },
        {
          "name": "getProcessCpuLoad",
          "parameterTypes": []
        },
        {
          "name": "getProcessCpuTime",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.sun.management.ThreadMXBean"
    },
    {
      "type": "com.sun.management.UnixOperatingSystemMXBean",
      "methods": [
        {
          "name": "getMaxFileDescriptorCount",
          "parameterTypes": []
        },
        {
          "name": "getOpenFileDescriptorCount",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.sun.management.VMOption"
    },
    {
      "type": "com.sun.management.internal.GarbageCollectorExtImpl"
    },
    {
      "type": "com.sun.management.internal.HotSpotDiagnostic"
    },
    {
      "type": "com.sun.management.internal.HotSpotThreadImpl"
    },
    {
      "type": "com.sun.management.internal.OperatingSystemImpl"
    },
    {
      "type": "com.sun.org.apache.xalan.internal.xsltc.trax.TransformerFactoryImpl",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.sun.org.apache.xerces.internal.jaxp.SAXParserFactoryImpl",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.sun.xml.internal.stream.XMLInputFactoryImpl",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.zaxxer.hikari.HikariConfig",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "setJdbcUrl",
          "parameterTypes": [
            "java.lang.String"
          ]
        },
        {
          "name": "setPassword",
          "parameterTypes": [
            "java.lang.String"
          ]
        },
        {
          "name": "setPoolName",
          "parameterTypes": [
            "java.lang.String"
          ]
        },
        {
          "name": "setReadOnly",
          "parameterTypes": [
            "boolean"
          ]
        },
        {
          "name": "setUsername",
          "parameterTypes": [
            "java.lang.String"
          ]
        }
      ]
    },
    {
      "type": "com.zaxxer.hikari.HikariConfigMXBean"
    },
    {
      "type": "com.zaxxer.hikari.HikariDataSource",
      "allDeclaredFields": true
    },
    {
      "type": "com.zaxxer.hikari.HikariPoolMXBean"
    },
    {
      "type": "com.zaxxer.hikari.metrics.MetricsTrackerFactory"
    },
    {
      "type": "com.zaxxer.hikari.pool.PoolBase",
      "fields": [
        {
          "name": "catalog"
        }
      ]
    },
    {
      "type": "com.zaxxer.hikari.pool.PoolEntry",
      "fields": [
        {
          "name": "state"
        }
      ]
    },
    {
      "type": "feign.AsyncClient"
    },
    {
      "type": "feign.AsyncContextSupplier"
    },
    {
      "type": "feign.AsyncResponseHandler"
    },
    {
      "type": "feign.BaseBuilder",
      "allDeclaredFields": true
    },
    {
      "type": "feign.Capability",
      "methods": [
        {
          "name": "enrich",
          "parameterTypes": [
            "feign.Client"
          ]
        },
        {
          "name": "enrich",
          "parameterTypes": [
            "feign.Contract"
          ]
        },
        {
          "name": "enrich",
          "parameterTypes": [
            "feign.InvocationHandlerFactory"
          ]
        },
        {
          "name": "enrich",
          "parameterTypes": [
            "feign.Logger"
          ]
        },
        {
          "name": "enrich",
          "parameterTypes": [
            "feign.QueryMapEncoder"
          ]
        },
        {
          "name": "enrich",
          "parameterTypes": [
            "feign.Request$Options"
          ]
        },
        {
          "name": "enrich",
          "parameterTypes": [
            "feign.RequestInterceptor"
          ]
        },
        {
          "name": "enrich",
          "parameterTypes": [
            "feign.ResponseInterceptor$Chain"
          ]
        },
        {
          "name": "enrich",
          "parameterTypes": [
            "feign.Retryer"
          ]
        },
        {
          "name": "enrich",
          "parameterTypes": [
            "feign.codec.Decoder"
          ]
        },
        {
          "name": "enrich",
          "parameterTypes": [
            "feign.codec.Encoder"
          ]
        },
        {
          "name": "enrich",
          "parameterTypes": [
            "feign.codec.ErrorDecoder"
          ]
        }
      ]
    },
    {
      "type": "feign.Client"
    },
    {
      "type": "feign.Contract"
    },
    {
      "type": "feign.Feign$Builder",
      "allDeclaredFields": true
    },
    {
      "type": "feign.InvocationHandlerFactory"
    },
    {
      "type": "feign.Logger"
    },
    {
      "type": "feign.Logger$Level"
    },
    {
      "type": "feign.MethodInfoResolver"
    },
    {
      "type": "feign.QueryMapEncoder"
    },
    {
      "type": "feign.Request$Options"
    },
    {
      "type": "feign.RequestInterceptor"
    },
    {
      "type": "feign.RequestTemplate"
    },
    {
      "type": "feign.ResponseInterceptor"
    },
    {
      "type": "feign.ResponseInterceptor$Chain"
    },
    {
      "type": "feign.Retryer"
    },
    {
      "type": "feign.Retryer$1"
    },
    {
      "type": "feign.Target$HardCodedTarget"
    },
    {
      "type": "feign.codec.Decoder"
    },
    {
      "type": "feign.codec.Encoder"
    },
    {
      "type": "feign.codec.ErrorDecoder"
    },
    {
      "type": "feign.micrometer.MicrometerObservationCapability",
      "methods": [
        {
          "name": "enrich",
          "parameterTypes": [
            "feign.Client"
          ]
        }
      ]
    },
    {
      "type": "feign.optionals.OptionalDecoder"
    },
    {
      "type": "freemarker.template.Configuration"
    },
    {
      "type": "groovy.lang.GroovySystem"
    },
    {
      "type": "groovy.text.TemplateEngine"
    },
    {
      "type": "io.awspring.cloud.autoconfigure.AwsClientProperties",
      "allDeclaredFields": true
    },
    {
      "type": "io.awspring.cloud.autoconfigure.config.parameterstore.ParameterStoreConfigDataLoader",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.springframework.boot.logging.DeferredLogFactory"
          ]
        }
      ]
    },
    {
      "type": "io.awspring.cloud.autoconfigure.config.parameterstore.ParameterStoreConfigDataLocationResolver",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.springframework.boot.logging.DeferredLogFactory"
          ]
        }
      ]
    },
    {
      "type": "io.awspring.cloud.autoconfigure.config.parameterstore.ParameterStorePropertySources",
      "allDeclaredFields": true
    },
    {
      "type": "io.awspring.cloud.autoconfigure.config.secretsmanager.SecretsManagerConfigDataLoader",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.springframework.boot.logging.DeferredLogFactory"
          ]
        }
      ]
    },
    {
      "type": "io.awspring.cloud.autoconfigure.config.secretsmanager.SecretsManagerConfigDataLocationResolver",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.springframework.boot.logging.DeferredLogFactory"
          ]
        }
      ]
    },
    {
      "type": "io.awspring.cloud.autoconfigure.config.secretsmanager.SecretsManagerPropertySources",
      "allDeclaredFields": true
    },
    {
      "type": "io.awspring.cloud.autoconfigure.core.AwsAutoConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "io.awspring.cloud.autoconfigure.core.AwsClientBuilderConfigurer",
      "allDeclaredFields": true
    },
    {
      "type": "io.awspring.cloud.autoconfigure.core.AwsClientCustomizer"
    },
    {
      "type": "io.awspring.cloud.autoconfigure.core.AwsConnectionDetails"
    },
    {
      "type": "io.awspring.cloud.autoconfigure.core.AwsProperties",
      "allDeclaredFields": true
    },
    {
      "type": "io.awspring.cloud.autoconfigure.core.CredentialsProperties",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "getProfile",
          "parameterTypes": []
        },
        {
          "name": "setInstanceProfile",
          "parameterTypes": [
            "boolean"
          ]
        },
        {
          "name": "setProfile",
          "parameterTypes": [
            "io.awspring.cloud.autoconfigure.core.Profile"
          ]
        }
      ]
    },
    {
      "type": "io.awspring.cloud.autoconfigure.core.CredentialsProviderAutoConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "io.awspring.cloud.autoconfigure.core.Profile",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "setName",
          "parameterTypes": [
            "java.lang.String"
          ]
        }
      ]
    },
    {
      "type": "io.awspring.cloud.autoconfigure.core.RegionProperties",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "getProfile",
          "parameterTypes": []
        },
        {
          "name": "setInstanceProfile",
          "parameterTypes": [
            "boolean"
          ]
        },
        {
          "name": "setProfile",
          "parameterTypes": [
            "io.awspring.cloud.autoconfigure.core.Profile"
          ]
        }
      ]
    },
    {
      "type": "io.awspring.cloud.autoconfigure.core.RegionProviderAutoConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "io.awspring.cloud.autoconfigure.core.StsProperties"
    },
    {
      "type": "io.awspring.cloud.autoconfigure.metrics.CloudWatchExportAutoConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "io.awspring.cloud.autoconfigure.metrics.CloudWatchProperties",
      "allDeclaredFields": true
    },
    {
      "type": "io.awspring.cloud.autoconfigure.metrics.CloudWatchPropertiesConfigAdapter",
      "allDeclaredFields": true
    },
    {
      "type": "io.awspring.cloud.autoconfigure.metrics.CloudWatchRegistryProperties",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "setNamespace",
          "parameterTypes": [
            "java.lang.String"
          ]
        }
      ]
    },
    {
      "type": "io.awspring.cloud.autoconfigure.s3.S3AutoConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "io.awspring.cloud.autoconfigure.s3.S3AutoConfiguration$Jackson2JsonS3ObjectConverterConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "io.awspring.cloud.autoconfigure.s3.S3AutoConfiguration$Jackson2JsonS3ObjectConverterConfiguration$$SpringCGLIB$$0",
      "allDeclaredFields": true,
      "fields": [
        {
          "name": "CGLIB$FACTORY_DATA"
        }
      ],
      "methods": [
        {
          "name": "CGLIB$SET_STATIC_CALLBACKS",
          "parameterTypes": [
            "org.springframework.cglib.proxy.Callback[]"
          ]
        }
      ]
    },
    {
      "type": "io.awspring.cloud.autoconfigure.s3.S3AutoConfiguration$Jackson2JsonS3ObjectConverterConfiguration$$SpringCGLIB$$FastClass$$0",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.Class"
          ]
        }
      ]
    },
    {
      "type": "io.awspring.cloud.autoconfigure.s3.S3AutoConfiguration$Jackson2JsonS3ObjectConverterConfiguration$$SpringCGLIB$$FastClass$$1",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.Class"
          ]
        }
      ]
    },
    {
      "type": "io.awspring.cloud.autoconfigure.s3.properties.S3CrtClientProperties"
    },
    {
      "type": "io.awspring.cloud.autoconfigure.s3.properties.S3Properties",
      "allDeclaredFields": true
    },
    {
      "type": "io.awspring.cloud.autoconfigure.s3.properties.S3TransferManagerProperties"
    },
    {
      "type": "io.awspring.cloud.parameterstore.ParameterStorePropertySource"
    },
    {
      "type": "io.awspring.cloud.s3.InMemoryBufferingS3OutputStreamProvider",
      "allDeclaredFields": true
    },
    {
      "type": "io.awspring.cloud.s3.Jackson2JsonS3ObjectConverter",
      "allDeclaredFields": true
    },
    {
      "type": "io.awspring.cloud.s3.Location"
    },
    {
      "type": "io.awspring.cloud.s3.ObjectMetadata"
    },
    {
      "type": "io.awspring.cloud.s3.S3ObjectConverter"
    },
    {
      "type": "io.awspring.cloud.s3.S3Operations"
    },
    {
      "type": "io.awspring.cloud.s3.S3OutputStream"
    },
    {
      "type": "io.awspring.cloud.s3.S3OutputStreamProvider"
    },
    {
      "type": "io.awspring.cloud.s3.S3ProtocolResolver"
    },
    {
      "type": "io.awspring.cloud.s3.S3Resource"
    },
    {
      "type": "io.awspring.cloud.s3.S3Template",
      "allDeclaredFields": true
    },
    {
      "type": "io.awspring.cloud.secretsmanager.SecretsManagerPropertySource"
    },
    {
      "type": "io.lettuce.core.AbstractRedisAsyncCommands",
      "methods": [
        {
          "name": "exec",
          "parameterTypes": []
        },
        {
          "name": "multi",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.lettuce.core.AbstractRedisClient"
    },
    {
      "type": "io.lettuce.core.ChannelGroupListener"
    },
    {
      "type": "io.lettuce.core.ClientOptions"
    },
    {
      "type": "io.lettuce.core.ClientOptions$Builder"
    },
    {
      "type": "io.lettuce.core.ConnectionBuilder$PlainChannelInitializer"
    },
    {
      "type": "io.lettuce.core.ConnectionEventTrigger"
    },
    {
      "type": "io.lettuce.core.RedisAsyncCommandsImpl"
    },
    {
      "type": "io.lettuce.core.RedisChannelHandler",
      "fields": [
        {
          "name": "closed"
        }
      ]
    },
    {
      "type": "io.lettuce.core.RedisClient"
    },
    {
      "type": "io.lettuce.core.RedisCredentialsProvider"
    },
    {
      "type": "io.lettuce.core.RedisPublisher$RedisSubscription",
      "fields": [
        {
          "name": "commandDispatch"
        },
        {
          "name": "demand"
        },
        {
          "name": "state"
        }
      ]
    },
    {
      "type": "io.lettuce.core.RedisURI"
    },
    {
      "type": "io.lettuce.core.RedisURI$Builder"
    },
    {
      "type": "io.lettuce.core.api.StatefulConnection"
    },
    {
      "type": "io.lettuce.core.api.StatefulRedisConnection"
    },
    {
      "type": "io.lettuce.core.api.sync.BaseRedisCommands"
    },
    {
      "type": "io.lettuce.core.api.sync.RedisAclCommands"
    },
    {
      "type": "io.lettuce.core.api.sync.RedisCommands"
    },
    {
      "type": "io.lettuce.core.api.sync.RedisFunctionCommands"
    },
    {
      "type": "io.lettuce.core.api.sync.RedisGeoCommands"
    },
    {
      "type": "io.lettuce.core.api.sync.RedisHLLCommands"
    },
    {
      "type": "io.lettuce.core.api.sync.RedisHashCommands"
    },
    {
      "type": "io.lettuce.core.api.sync.RedisKeyCommands"
    },
    {
      "type": "io.lettuce.core.api.sync.RedisListCommands"
    },
    {
      "type": "io.lettuce.core.api.sync.RedisScriptingCommands"
    },
    {
      "type": "io.lettuce.core.api.sync.RedisServerCommands"
    },
    {
      "type": "io.lettuce.core.api.sync.RedisSetCommands"
    },
    {
      "type": "io.lettuce.core.api.sync.RedisSortedSetCommands"
    },
    {
      "type": "io.lettuce.core.api.sync.RedisStreamCommands"
    },
    {
      "type": "io.lettuce.core.api.sync.RedisStringCommands"
    },
    {
      "type": "io.lettuce.core.api.sync.RedisTransactionalCommands"
    },
    {
      "type": "io.lettuce.core.cluster.ClusterClientOptions"
    },
    {
      "type": "io.lettuce.core.cluster.RedisClusterClient"
    },
    {
      "type": "io.lettuce.core.cluster.api.StatefulRedisClusterConnection"
    },
    {
      "type": "io.lettuce.core.cluster.api.sync.RedisClusterCommands"
    },
    {
      "type": "io.lettuce.core.codec.RedisCodec"
    },
    {
      "type": "io.lettuce.core.event.EventBus"
    },
    {
      "type": "io.lettuce.core.event.EventPublisherOptions"
    },
    {
      "type": "io.lettuce.core.metrics.CommandLatencyRecorder"
    },
    {
      "type": "io.lettuce.core.metrics.MicrometerOptions",
      "allDeclaredFields": true
    },
    {
      "type": "io.lettuce.core.metrics.MicrometerOptions$Builder"
    },
    {
      "type": "io.lettuce.core.protocol.AsyncCommand",
      "fields": [
        {
          "name": "count"
        }
      ]
    },
    {
      "type": "io.lettuce.core.protocol.CommandEncoder"
    },
    {
      "type": "io.lettuce.core.protocol.CommandHandler"
    },
    {
      "type": "io.lettuce.core.protocol.CommandWrapper",
      "fields": [
        {
          "name": "onComplete"
        }
      ]
    },
    {
      "type": "io.lettuce.core.protocol.ConnectionWatchdog"
    },
    {
      "type": "io.lettuce.core.protocol.DefaultEndpoint",
      "fields": [
        {
          "name": "queueSize"
        },
        {
          "name": "status"
        }
      ]
    },
    {
      "type": "io.lettuce.core.protocol.RedisHandshakeHandler"
    },
    {
      "type": "io.lettuce.core.protocol.SharedLock",
      "fields": [
        {
          "name": "writers"
        }
      ]
    },
    {
      "type": "io.lettuce.core.resource.ClientResources"
    },
    {
      "type": "io.lettuce.core.resource.ClientResources$Builder"
    },
    {
      "type": "io.lettuce.core.resource.DefaultClientResources",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "shutdown",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.lettuce.core.resource.DefaultClientResources$Builder"
    },
    {
      "type": "io.lettuce.core.resource.Delay"
    },
    {
      "type": "io.lettuce.core.resource.DnsResolver"
    },
    {
      "type": "io.lettuce.core.resource.EventLoopGroupProvider"
    },
    {
      "type": "io.lettuce.core.resource.NettyCustomizer"
    },
    {
      "type": "io.lettuce.core.resource.SocketAddressResolver"
    },
    {
      "type": "io.lettuce.core.resource.ThreadFactoryProvider"
    },
    {
      "type": "io.lettuce.core.tracing.Tracing"
    },
    {
      "type": "io.micrometer.cloudwatch2.CloudWatchConfig"
    },
    {
      "type": "io.micrometer.cloudwatch2.CloudWatchMeterRegistry",
      "allDeclaredFields": true
    },
    {
      "type": "io.micrometer.cloudwatch2.CloudWatchMeterRegistry$Batch"
    },
    {
      "type": "io.micrometer.common.KeyValues"
    },
    {
      "type": "io.micrometer.common.lang.NonNull"
    },
    {
      "type": "io.micrometer.common.lang.NonNullApi"
    },
    {
      "type": "io.micrometer.common.lang.NonNullFields"
    },
    {
      "type": "io.micrometer.common.lang.Nullable"
    },
    {
      "type": "io.micrometer.common.util.internal.logging.WarnThenDebugLogger"
    },
    {
      "type": "io.micrometer.context.ContextRegistry"
    },
    {
      "type": "io.micrometer.context.ContextSnapshot"
    },
    {
      "type": "io.micrometer.context.ContextSnapshotFactory"
    },
    {
      "type": "io.micrometer.context.ThreadLocalAccessor"
    },
    {
      "type": "io.micrometer.core.instrument.Clock"
    },
    {
      "type": "io.micrometer.core.instrument.Clock$1",
      "allDeclaredFields": true
    },
    {
      "type": "io.micrometer.core.instrument.Counter"
    },
    {
      "type": "io.micrometer.core.instrument.DistributionSummary"
    },
    {
      "type": "io.micrometer.core.instrument.FunctionCounter"
    },
    {
      "type": "io.micrometer.core.instrument.FunctionTimer"
    },
    {
      "type": "io.micrometer.core.instrument.Gauge"
    },
    {
      "type": "io.micrometer.core.instrument.HighCardinalityTagsDetector"
    },
    {
      "type": "io.micrometer.core.instrument.LongTaskTimer"
    },
    {
      "type": "io.micrometer.core.instrument.Meter"
    },
    {
      "type": "io.micrometer.core.instrument.Meter$Id"
    },
    {
      "type": "io.micrometer.core.instrument.Meter$Type"
    },
    {
      "type": "io.micrometer.core.instrument.MeterRegistry",
      "allDeclaredFields": true
    },
    {
      "type": "io.micrometer.core.instrument.MeterRegistry$Config"
    },
    {
      "type": "io.micrometer.core.instrument.MeterRegistry$More"
    },
    {
      "type": "io.micrometer.core.instrument.Tag"
    },
    {
      "type": "io.micrometer.core.instrument.Tags"
    },
    {
      "type": "io.micrometer.core.instrument.TimeGauge"
    },
    {
      "type": "io.micrometer.core.instrument.Timer"
    },
    {
      "type": "io.micrometer.core.instrument.Timer$Builder"
    },
    {
      "type": "io.micrometer.core.instrument.binder.MeterBinder"
    },
    {
      "type": "io.micrometer.core.instrument.binder.jvm.ClassLoaderMetrics",
      "allDeclaredFields": true
    },
    {
      "type": "io.micrometer.core.instrument.binder.jvm.JvmCompilationMetrics",
      "allDeclaredFields": true
    },
    {
      "type": "io.micrometer.core.instrument.binder.jvm.JvmGcMetrics",
      "allDeclaredFields": true
    },
    {
      "type": "io.micrometer.core.instrument.binder.jvm.JvmHeapPressureMetrics",
      "allDeclaredFields": true
    },
    {
      "type": "io.micrometer.core.instrument.binder.jvm.JvmInfoMetrics",
      "allDeclaredFields": true
    },
    {
      "type": "io.micrometer.core.instrument.binder.jvm.JvmMemoryMetrics",
      "allDeclaredFields": true
    },
    {
      "type": "io.micrometer.core.instrument.binder.jvm.JvmThreadMetrics",
      "allDeclaredFields": true
    },
    {
      "type": "io.micrometer.core.instrument.binder.logging.LogbackMetrics",
      "allDeclaredFields": true
    },
    {
      "type": "io.micrometer.core.instrument.binder.system.FileDescriptorMetrics",
      "allDeclaredFields": true
    },
    {
      "type": "io.micrometer.core.instrument.binder.system.ProcessorMetrics",
      "allDeclaredFields": true
    },
    {
      "type": "io.micrometer.core.instrument.binder.system.UptimeMetrics",
      "allDeclaredFields": true
    },
    {
      "type": "io.micrometer.core.instrument.config.MeterFilter"
    },
    {
      "type": "io.micrometer.core.instrument.config.MeterFilter$9",
      "allDeclaredFields": true
    },
    {
      "type": "io.micrometer.core.instrument.config.MeterFilterReply"
    },
    {
      "type": "io.micrometer.core.instrument.config.MeterRegistryConfig"
    },
    {
      "type": "io.micrometer.core.instrument.config.NamingConvention"
    },
    {
      "type": "io.micrometer.core.instrument.config.validate.Validated"
    },
    {
      "type": "io.micrometer.core.instrument.config.validate.ValidationException"
    },
    {
      "type": "io.micrometer.core.instrument.distribution.DistributionStatisticConfig"
    },
    {
      "type": "io.micrometer.core.instrument.distribution.TimeWindowMax",
      "fields": [
        {
          "name": "rotating"
        }
      ]
    },
    {
      "type": "io.micrometer.core.instrument.distribution.TimeWindowSum",
      "fields": [
        {
          "name": "rotating"
        }
      ]
    },
    {
      "type": "io.micrometer.core.instrument.distribution.pause.PauseDetector"
    },
    {
      "type": "io.micrometer.core.instrument.observation.MeterObservationHandler"
    },
    {
      "type": "io.micrometer.core.instrument.push.PushMeterRegistry",
      "allDeclaredFields": true
    },
    {
      "type": "io.micrometer.core.instrument.push.PushRegistryConfig"
    },
    {
      "type": "io.micrometer.core.instrument.search.RequiredSearch"
    },
    {
      "type": "io.micrometer.core.instrument.search.Search"
    },
    {
      "type": "io.micrometer.core.instrument.step.StepMeterRegistry",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "close",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micrometer.core.instrument.step.StepRegistryConfig"
    },
    {
      "type": "io.micrometer.observation.Observation"
    },
    {
      "type": "io.micrometer.observation.Observation$Context"
    },
    {
      "type": "io.micrometer.observation.Observation$ContextView"
    },
    {
      "type": "io.micrometer.observation.Observation$Event"
    },
    {
      "type": "io.micrometer.observation.Observation$Scope"
    },
    {
      "type": "io.micrometer.observation.ObservationConvention"
    },
    {
      "type": "io.micrometer.observation.ObservationFilter"
    },
    {
      "type": "io.micrometer.observation.ObservationHandler"
    },
    {
      "type": "io.micrometer.observation.ObservationPredicate"
    },
    {
      "type": "io.micrometer.observation.ObservationRegistry"
    },
    {
      "type": "io.micrometer.observation.ObservationRegistry$ObservationConfig"
    },
    {
      "type": "io.micrometer.observation.SimpleObservationRegistry",
      "allDeclaredFields": true
    },
    {
      "type": "io.micrometer.observation.annotation.Observed"
    },
    {
      "type": "io.micrometer.observation.aop.ObservedAspect",
      "allDeclaredFields": true
    },
    {
      "type": "io.micrometer.observation.contextpropagation.ObservationThreadLocalAccessor"
    },
    {
      "type": "io.micrometer.observation.transport.ReceiverContext"
    },
    {
      "type": "io.micrometer.observation.transport.SenderContext"
    },
    {
      "type": "io.micrometer.tracing.Baggage"
    },
    {
      "type": "io.micrometer.tracing.BaggageInScope"
    },
    {
      "type": "io.micrometer.tracing.BaggageManager"
    },
    {
      "type": "io.micrometer.tracing.CurrentTraceContext"
    },
    {
      "type": "io.micrometer.tracing.ScopedSpan"
    },
    {
      "type": "io.micrometer.tracing.Span"
    },
    {
      "type": "io.micrometer.tracing.Span$Builder"
    },
    {
      "type": "io.micrometer.tracing.SpanCustomizer"
    },
    {
      "type": "io.micrometer.tracing.TraceContext"
    },
    {
      "type": "io.micrometer.tracing.TraceContext$Builder"
    },
    {
      "type": "io.micrometer.tracing.Tracer"
    },
    {
      "type": "io.micrometer.tracing.Tracer$SpanInScope"
    },
    {
      "type": "io.micrometer.tracing.brave.bridge.BraveBaggageFields"
    },
    {
      "type": "io.micrometer.tracing.brave.bridge.BravePropagator",
      "allDeclaredFields": true
    },
    {
      "type": "io.micrometer.tracing.brave.bridge.BraveSpanCustomizer",
      "allDeclaredFields": true
    },
    {
      "type": "io.micrometer.tracing.brave.bridge.BraveTracer",
      "allDeclaredFields": true
    },
    {
      "type": "io.micrometer.tracing.brave.bridge.CompositeSpanHandler",
      "allDeclaredFields": true
    },
    {
      "type": "io.micrometer.tracing.handler.DefaultTracingObservationHandler",
      "allDeclaredFields": true
    },
    {
      "type": "io.micrometer.tracing.handler.PropagatingReceiverTracingObservationHandler",
      "allDeclaredFields": true
    },
    {
      "type": "io.micrometer.tracing.handler.PropagatingSenderTracingObservationHandler",
      "allDeclaredFields": true
    },
    {
      "type": "io.micrometer.tracing.handler.TracingAwareMeterObservationHandler",
      "allDeclaredFields": true
    },
    {
      "type": "io.micrometer.tracing.handler.TracingObservationHandler"
    },
    {
      "type": "io.micrometer.tracing.handler.TracingObservationHandler$TracingContext"
    },
    {
      "type": "io.micrometer.tracing.otel.bridge.OtelTracer"
    },
    {
      "type": "io.micrometer.tracing.propagation.Propagator"
    },
    {
      "type": "io.micrometer.tracing.propagation.Propagator$Getter"
    },
    {
      "type": "io.micrometer.tracing.propagation.Propagator$Setter"
    },
    {
      "type": "io.netty.buffer.AbstractByteBufAllocator"
    },
    {
      "type": "io.netty.buffer.AbstractReferenceCountedByteBuf",
      "fields": [
        {
          "name": "refCnt"
        }
      ]
    },
    {
      "type": "io.netty.buffer.ByteBuf"
    },
    {
      "type": "io.netty.channel.AbstractChannelHandlerContext",
      "fields": [
        {
          "name": "handlerState"
        }
      ]
    },
    {
      "type": "io.netty.channel.ChannelOutboundBuffer",
      "fields": [
        {
          "name": "totalPendingSize"
        },
        {
          "name": "unwritable"
        }
      ]
    },
    {
      "type": "io.netty.channel.DefaultChannelConfig",
      "fields": [
        {
          "name": "autoRead"
        },
        {
          "name": "writeBufferWaterMark"
        }
      ]
    },
    {
      "type": "io.netty.channel.DefaultChannelPipeline",
      "fields": [
        {
          "name": "estimatorHandle"
        }
      ]
    },
    {
      "type": "io.netty.channel.DefaultChannelPipeline$HeadContext"
    },
    {
      "type": "io.netty.channel.DefaultChannelPipeline$TailContext"
    },
    {
      "type": "io.netty.channel.DefaultFileRegion"
    },
    {
      "type": "io.netty.channel.epoll.Epoll"
    },
    {
      "type": "io.netty.channel.epoll.NativeDatagramPacketArray$NativeDatagramPacket"
    },
    {
      "type": "io.netty.channel.kqueue.KQueue"
    },
    {
      "type": "io.netty.channel.pool.SimpleChannelPool$1"
    },
    {
      "type": "io.netty.channel.socket.nio.NioSocketChannel",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.netty.channel.unix.PeerCredentials"
    },
    {
      "type": "io.netty.handler.codec.http.HttpClientCodec"
    },
    {
      "type": "io.netty.handler.logging.LoggingHandler"
    },
    {
      "type": "io.netty.handler.ssl.SslHandler"
    },
    {
      "type": "io.netty.handler.timeout.ReadTimeoutHandler"
    },
    {
      "type": "io.netty.handler.timeout.WriteTimeoutHandler"
    },
    {
      "type": "io.netty.incubator.channel.uring.IOUring"
    },
    {
      "type": "io.netty.internal.tcnative.SSLContext"
    },
    {
      "type": "io.netty.resolver.AddressResolverGroup"
    },
    {
      "type": "io.netty.resolver.dns$DnsAddressResolverGroup"
    },
    {
      "type": "io.netty.resolver.dns.DnsAddressResolverGroup"
    },
    {
      "type": "io.netty.util.AbstractReferenceCounted",
      "fields": [
        {
          "name": "refCnt"
        }
      ]
    },
    {
      "type": "io.netty.util.DefaultAttributeMap",
      "fields": [
        {
          "name": "attributes"
        }
      ]
    },
    {
      "type": "io.netty.util.DefaultAttributeMap$DefaultAttribute",
      "fields": [
        {
          "name": "attributeMap"
        }
      ]
    },
    {
      "type": "io.netty.util.HashedWheelTimer",
      "fields": [
        {
          "name": "workerState"
        }
      ]
    },
    {
      "type": "io.netty.util.HashedWheelTimer$HashedWheelTimeout",
      "fields": [
        {
          "name": "state"
        }
      ]
    },
    {
      "type": "io.netty.util.Recycler$DefaultHandle",
      "fields": [
        {
          "name": "state"
        }
      ]
    },
    {
      "type": "io.netty.util.ReferenceCountUtil"
    },
    {
      "type": "io.netty.util.ResourceLeakDetector$DefaultResourceLeak",
      "fields": [
        {
          "name": "droppedRecords"
        },
        {
          "name": "head"
        }
      ]
    },
    {
      "type": "io.netty.util.Timer"
    },
    {
      "type": "io.netty.util.concurrent.DefaultPromise",
      "fields": [
        {
          "name": "result"
        }
      ]
    },
    {
      "type": "io.netty.util.concurrent.EventExecutorGroup"
    },
    {
      "type": "io.netty.util.concurrent.Future"
    },
    {
      "type": "io.netty.util.concurrent.SingleThreadEventExecutor",
      "fields": [
        {
          "name": "state"
        },
        {
          "name": "threadProperties"
        }
      ]
    },
    {
      "type": "io.netty.util.internal.shaded.org.jctools.queues.BaseMpscLinkedArrayQueueColdProducerFields",
      "fields": [
        {
          "name": "producerLimit"
        }
      ]
    },
    {
      "type": "io.netty.util.internal.shaded.org.jctools.queues.BaseMpscLinkedArrayQueueConsumerFields",
      "fields": [
        {
          "name": "consumerIndex"
        }
      ]
    },
    {
      "type": "io.netty.util.internal.shaded.org.jctools.queues.BaseMpscLinkedArrayQueueProducerFields",
      "fields": [
        {
          "name": "producerIndex"
        }
      ]
    },
    {
      "type": "io.netty.util.internal.shaded.org.jctools.queues.unpadded.MpscUnpaddedArrayQueueConsumerIndexField",
      "fields": [
        {
          "name": "consumerIndex"
        }
      ]
    },
    {
      "type": "io.netty.util.internal.shaded.org.jctools.queues.unpadded.MpscUnpaddedArrayQueueProducerIndexField",
      "fields": [
        {
          "name": "producerIndex"
        }
      ]
    },
    {
      "type": "io.netty.util.internal.shaded.org.jctools.queues.unpadded.MpscUnpaddedArrayQueueProducerLimitField",
      "fields": [
        {
          "name": "producerLimit"
        }
      ]
    },
    {
      "type": "io.netty5.buffer.Buffer"
    },
    {
      "type": "io.opentelemetry.context.ContextStorage"
    },
    {
      "type": "io.opentelemetry.sdk.autoconfigure.AutoConfiguredOpenTelemetrySdk"
    },
    {
      "type": "io.reactivex.rxjava3.core.Flowable"
    },
    {
      "type": "io.smallrye.mutiny.Multi"
    },
    {
      "type": "io.swagger.v3.core.converter.AnnotatedType"
    },
    {
      "type": "io.swagger.v3.core.converter.ModelConverter"
    },
    {
      "type": "io.swagger.v3.core.converter.ModelConverterContext"
    },
    {
      "type": "io.swagger.v3.core.converter.ModelConverters",
      "fields": [
        {
          "name": "converters"
        }
      ]
    },
    {
      "type": "io.swagger.v3.core.filter.OpenAPISpecFilter"
    },
    {
      "type": "io.swagger.v3.core.filter.SpecFilter",
      "allDeclaredFields": true
    },
    {
      "type": "io.swagger.v3.core.util.ObjectMapperFactory",
      "allDeclaredFields": true
    },
    {
      "type": "io.swagger.v3.oas.annotations.ExternalDocumentation"
    },
    {
      "type": "io.swagger.v3.oas.annotations.Hidden"
    },
    {
      "type": "io.swagger.v3.oas.annotations.OpenAPI31"
    },
    {
      "type": "io.swagger.v3.oas.annotations.OpenAPIDefinition"
    },
    {
      "type": "io.swagger.v3.oas.annotations.Operation"
    },
    {
      "type": "io.swagger.v3.oas.annotations.Parameter"
    },
    {
      "type": "io.swagger.v3.oas.annotations.Parameters"
    },
    {
      "type": "io.swagger.v3.oas.annotations.StringToClassMapItem"
    },
    {
      "type": "io.swagger.v3.oas.annotations.Webhook"
    },
    {
      "type": "io.swagger.v3.oas.annotations.Webhooks"
    },
    {
      "type": "io.swagger.v3.oas.annotations.extensions.Extension"
    },
    {
      "type": "io.swagger.v3.oas.annotations.extensions.ExtensionProperty"
    },
    {
      "type": "io.swagger.v3.oas.annotations.headers.Header"
    },
    {
      "type": "io.swagger.v3.oas.annotations.links.Link"
    },
    {
      "type": "io.swagger.v3.oas.annotations.links.LinkParameter"
    },
    {
      "type": "io.swagger.v3.oas.annotations.media.ArraySchema"
    },
    {
      "type": "io.swagger.v3.oas.annotations.media.Content"
    },
    {
      "type": "io.swagger.v3.oas.annotations.media.DependentRequired"
    },
    {
      "type": "io.swagger.v3.oas.annotations.media.DependentSchema"
    },
    {
      "type": "io.swagger.v3.oas.annotations.media.DiscriminatorMapping"
    },
    {
      "type": "io.swagger.v3.oas.annotations.media.Encoding"
    },
    {
      "type": "io.swagger.v3.oas.annotations.media.ExampleObject"
    },
    {
      "type": "io.swagger.v3.oas.annotations.media.Schema"
    },
    {
      "type": "io.swagger.v3.oas.annotations.media.SchemaProperty"
    },
    {
      "type": "io.swagger.v3.oas.annotations.parameters.RequestBody"
    },
    {
      "type": "io.swagger.v3.oas.annotations.responses.ApiResponse"
    },
    {
      "type": "io.swagger.v3.oas.annotations.responses.ApiResponses"
    },
    {
      "type": "io.swagger.v3.oas.annotations.security.OAuthFlow"
    },
    {
      "type": "io.swagger.v3.oas.annotations.security.OAuthFlows"
    },
    {
      "type": "io.swagger.v3.oas.annotations.security.OAuthScope"
    },
    {
      "type": "io.swagger.v3.oas.annotations.security.SecurityRequirement"
    },
    {
      "type": "io.swagger.v3.oas.annotations.security.SecurityScheme"
    },
    {
      "type": "io.swagger.v3.oas.annotations.servers.Server"
    },
    {
      "type": "io.swagger.v3.oas.annotations.servers.ServerVariable"
    },
    {
      "type": "io.swagger.v3.oas.annotations.tags.Tag"
    },
    {
      "type": "io.swagger.v3.oas.annotations.tags.Tags"
    },
    {
      "type": "io.swagger.v3.oas.models.Components",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "getSecuritySchemes",
          "parameterTypes": []
        },
        {
          "name": "setSecuritySchemes",
          "parameterTypes": [
            "java.util.Map"
          ]
        }
      ]
    },
    {
      "type": "io.swagger.v3.oas.models.ExternalDocumentation"
    },
    {
      "type": "io.swagger.v3.oas.models.OpenAPI",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "getComponents",
          "parameterTypes": []
        },
        {
          "name": "getInfo",
          "parameterTypes": []
        },
        {
          "name": "getServers",
          "parameterTypes": []
        },
        {
          "name": "setComponents",
          "parameterTypes": [
            "io.swagger.v3.oas.models.Components"
          ]
        },
        {
          "name": "setInfo",
          "parameterTypes": [
            "io.swagger.v3.oas.models.info.Info"
          ]
        },
        {
          "name": "setServers",
          "parameterTypes": [
            "java.util.List"
          ]
        }
      ]
    },
    {
      "type": "io.swagger.v3.oas.models.Operation"
    },
    {
      "type": "io.swagger.v3.oas.models.PathItem"
    },
    {
      "type": "io.swagger.v3.oas.models.Paths"
    },
    {
      "type": "io.swagger.v3.oas.models.SpecVersion"
    },
    {
      "type": "io.swagger.v3.oas.models.examples.Example"
    },
    {
      "type": "io.swagger.v3.oas.models.info.Contact",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "setEmail",
          "parameterTypes": [
            "java.lang.String"
          ]
        },
        {
          "name": "setName",
          "parameterTypes": [
            "java.lang.String"
          ]
        },
        {
          "name": "setUrl",
          "parameterTypes": [
            "java.lang.String"
          ]
        }
      ]
    },
    {
      "type": "io.swagger.v3.oas.models.info.Info",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "getContact",
          "parameterTypes": []
        },
        {
          "name": "getLicense",
          "parameterTypes": []
        },
        {
          "name": "setContact",
          "parameterTypes": [
            "io.swagger.v3.oas.models.info.Contact"
          ]
        },
        {
          "name": "setDescription",
          "parameterTypes": [
            "java.lang.String"
          ]
        },
        {
          "name": "setLicense",
          "parameterTypes": [
            "io.swagger.v3.oas.models.info.License"
          ]
        },
        {
          "name": "setTitle",
          "parameterTypes": [
            "java.lang.String"
          ]
        },
        {
          "name": "setVersion",
          "parameterTypes": [
            "java.lang.String"
          ]
        }
      ]
    },
    {
      "type": "io.swagger.v3.oas.models.info.License",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "setName",
          "parameterTypes": [
            "java.lang.String"
          ]
        },
        {
          "name": "setUrl",
          "parameterTypes": [
            "java.lang.String"
          ]
        }
      ]
    },
    {
      "type": "io.swagger.v3.oas.models.media.ComposedSchema"
    },
    {
      "type": "io.swagger.v3.oas.models.media.Content"
    },
    {
      "type": "io.swagger.v3.oas.models.media.MediaType"
    },
    {
      "type": "io.swagger.v3.oas.models.media.Schema"
    },
    {
      "type": "io.swagger.v3.oas.models.parameters.Parameter"
    },
    {
      "type": "io.swagger.v3.oas.models.parameters.RequestBody"
    },
    {
      "type": "io.swagger.v3.oas.models.responses.ApiResponse"
    },
    {
      "type": "io.swagger.v3.oas.models.responses.ApiResponses"
    },
    {
      "type": "io.swagger.v3.oas.models.security.OAuthFlow",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "getScopes",
          "parameterTypes": []
        },
        {
          "name": "setAuthorizationUrl",
          "parameterTypes": [
            "java.lang.String"
          ]
        },
        {
          "name": "setScopes",
          "parameterTypes": [
            "io.swagger.v3.oas.models.security.Scopes"
          ]
        }
      ]
    },
    {
      "type": "io.swagger.v3.oas.models.security.OAuthFlows",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "getImplicit",
          "parameterTypes": []
        },
        {
          "name": "setImplicit",
          "parameterTypes": [
            "io.swagger.v3.oas.models.security.OAuthFlow"
          ]
        }
      ]
    },
    {
      "type": "io.swagger.v3.oas.models.security.Scopes",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.swagger.v3.oas.models.security.SecurityRequirement"
    },
    {
      "type": "io.swagger.v3.oas.models.security.SecurityScheme",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "getFlows",
          "parameterTypes": []
        },
        {
          "name": "setFlows",
          "parameterTypes": [
            "io.swagger.v3.oas.models.security.OAuthFlows"
          ]
        },
        {
          "name": "setType",
          "parameterTypes": [
            "io.swagger.v3.oas.models.security.SecurityScheme$Type"
          ]
        }
      ]
    },
    {
      "type": "io.swagger.v3.oas.models.security.SecurityScheme$In"
    },
    {
      "type": "io.swagger.v3.oas.models.security.SecurityScheme$Type"
    },
    {
      "type": "io.swagger.v3.oas.models.security.SecurityScheme$TypeEditor"
    },
    {
      "type": "io.swagger.v3.oas.models.servers.Server",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "setDescription",
          "parameterTypes": [
            "java.lang.String"
          ]
        },
        {
          "name": "setUrl",
          "parameterTypes": [
            "java.lang.String"
          ]
        }
      ]
    },
    {
      "type": "io.swagger.v3.oas.models.tags.Tag"
    },
    {
      "type": "io.vavr.control.Option"
    },
    {
      "type": "io.vavr.control.Try"
    },
    {
      "type": "jakarta.ejb.Asynchronous"
    },
    {
      "type": "jakarta.ejb.EJB"
    },
    {
      "type": "jakarta.ejb.TransactionAttribute"
    },
    {
      "type": "jakarta.enterprise.concurrent.Asynchronous"
    },
    {
      "type": "jakarta.faces.context.FacesContext"
    },
    {
      "type": "jakarta.inject.Provider"
    },
    {
      "type": "jakarta.inject.Qualifier"
    },
    {
      "type": "jakarta.json.bind.Jsonb"
    },
    {
      "type": "jakarta.json.spi.JsonProvider"
    },
    {
      "type": "jakarta.json.stream.JsonGenerator"
    },
    {
      "type": "jakarta.json.stream.JsonParser"
    },
    {
      "type": "jakarta.json.stream.JsonParser$Event"
    },
    {
      "type": "jakarta.persistence.Persistence"
    },
    {
      "type": "jakarta.persistence.PersistenceContext"
    },
    {
      "type": "jakarta.servlet.DispatcherType"
    },
    {
      "type": "jakarta.servlet.Filter"
    },
    {
      "type": "jakarta.servlet.FilterChain"
    },
    {
      "type": "jakarta.servlet.FilterConfig"
    },
    {
      "type": "jakarta.servlet.FilterRegistration$Dynamic"
    },
    {
      "type": "jakarta.servlet.GenericFilter"
    },
    {
      "type": "jakarta.servlet.GenericServlet",
      "allDeclaredFields": true
    },
    {
      "type": "jakarta.servlet.MultipartConfigElement",
      "allDeclaredFields": true
    },
    {
      "type": "jakarta.servlet.Registration$Dynamic"
    },
    {
      "type": "jakarta.servlet.Servlet"
    },
    {
      "type": "jakarta.servlet.ServletConfig"
    },
    {
      "type": "jakarta.servlet.ServletContext"
    },
    {
      "type": "jakarta.servlet.ServletException"
    },
    {
      "type": "jakarta.servlet.ServletRegistration$Dynamic"
    },
    {
      "type": "jakarta.servlet.ServletRequest"
    },
    {
      "type": "jakarta.servlet.ServletResponse"
    },
    {
      "type": "jakarta.servlet.http.HttpServlet",
      "allDeclaredFields": true
    },
    {
      "type": "jakarta.servlet.http.HttpServletRequest"
    },
    {
      "type": "jakarta.servlet.http.HttpServletResponse"
    },
    {
      "type": "jakarta.servlet.jsp.jstl.core.Config"
    },
    {
      "type": "jakarta.transaction.Transactional"
    },
    {
      "type": "jakarta.validation.ClockProvider"
    },
    {
      "type": "jakarta.validation.Configuration"
    },
    {
      "type": "jakarta.validation.Constraint"
    },
    {
      "type": "jakarta.validation.ConstraintValidator"
    },
    {
      "type": "jakarta.validation.ConstraintValidatorContext"
    },
    {
      "type": "jakarta.validation.ConstraintValidatorFactory"
    },
    {
      "type": "jakarta.validation.ConstraintViolation"
    },
    {
      "type": "jakarta.validation.MessageInterpolator"
    },
    {
      "type": "jakarta.validation.ParameterNameProvider"
    },
    {
      "type": "jakarta.validation.TraversableResolver"
    },
    {
      "type": "jakarta.validation.Valid"
    },
    {
      "type": "jakarta.validation.ValidationProviderResolver"
    },
    {
      "type": "jakarta.validation.Validator"
    },
    {
      "type": "jakarta.validation.ValidatorContext"
    },
    {
      "type": "jakarta.validation.ValidatorFactory"
    },
    {
      "type": "jakarta.validation.bootstrap.GenericBootstrap"
    },
    {
      "type": "jakarta.validation.constraints.DecimalMax",
      "methods": [
        {
          "name": "groups",
          "parameterTypes": []
        },
        {
          "name": "inclusive",
          "parameterTypes": []
        },
        {
          "name": "message",
          "parameterTypes": []
        },
        {
          "name": "payload",
          "parameterTypes": []
        },
        {
          "name": "value",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "jakarta.validation.constraints.DecimalMin",
      "methods": [
        {
          "name": "groups",
          "parameterTypes": []
        },
        {
          "name": "inclusive",
          "parameterTypes": []
        },
        {
          "name": "message",
          "parameterTypes": []
        },
        {
          "name": "payload",
          "parameterTypes": []
        },
        {
          "name": "value",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "jakarta.validation.constraints.Min",
      "methods": [
        {
          "name": "groups",
          "parameterTypes": []
        },
        {
          "name": "message",
          "parameterTypes": []
        },
        {
          "name": "payload",
          "parameterTypes": []
        },
        {
          "name": "value",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "jakarta.validation.constraints.NotBlank",
      "methods": [
        {
          "name": "groups",
          "parameterTypes": []
        },
        {
          "name": "message",
          "parameterTypes": []
        },
        {
          "name": "payload",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "jakarta.validation.constraints.NotEmpty",
      "methods": [
        {
          "name": "groups",
          "parameterTypes": []
        },
        {
          "name": "message",
          "parameterTypes": []
        },
        {
          "name": "payload",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "jakarta.validation.constraints.NotNull",
      "methods": [
        {
          "name": "groups",
          "parameterTypes": []
        },
        {
          "name": "message",
          "parameterTypes": []
        },
        {
          "name": "payload",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "jakarta.validation.constraints.Pattern",
      "methods": [
        {
          "name": "flags",
          "parameterTypes": []
        },
        {
          "name": "groups",
          "parameterTypes": []
        },
        {
          "name": "message",
          "parameterTypes": []
        },
        {
          "name": "payload",
          "parameterTypes": []
        },
        {
          "name": "regexp",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "jakarta.validation.constraints.Size",
      "methods": [
        {
          "name": "groups",
          "parameterTypes": []
        },
        {
          "name": "max",
          "parameterTypes": []
        },
        {
          "name": "message",
          "parameterTypes": []
        },
        {
          "name": "min",
          "parameterTypes": []
        },
        {
          "name": "payload",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "jakarta.validation.executable.ExecutableValidator"
    },
    {
      "type": "jakarta.validation.metadata.BeanDescriptor"
    },
    {
      "type": "jakarta.validation.metadata.ConstraintDescriptor"
    },
    {
      "type": "jakarta.xml.bind.Binder"
    },
    {
      "type": "jakarta.xml.ws.WebServiceRef"
    },
    {
      "type": "java.beans.Introspector"
    },
    {
      "type": "java.beans.PropertyVetoException"
    },
    {
      "type": "java.io.Closeable"
    },
    {
      "type": "java.io.Console",
      "methods": [
        {
          "name": "isTerminal",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "java.io.DataInput"
    },
    {
      "type": "java.io.DataOutput"
    },
    {
      "type": "java.io.File"
    },
    {
      "type": "java.io.FileDescriptor"
    },
    {
      "type": "java.io.FilePermission"
    },
    {
      "type": "java.io.Flushable"
    },
    {
      "type": "java.io.IOException"
    },
    {
      "type": "java.io.InputStream"
    },
    {
      "type": "java.io.ObjectInputStream"
    },
    {
      "type": "java.io.ObjectOutputStream"
    },
    {
      "type": "java.io.ObjectStreamException"
    },
    {
      "type": "java.io.OutputStream"
    },
    {
      "type": "java.io.PrintWriter"
    },
    {
      "type": "java.io.Reader"
    },
    {
      "type": "java.io.Serializable",
      "allDeclaredFields": true
    },
    {
      "type": "java.io.Writer"
    },
    {
      "type": "java.lang.AutoCloseable"
    },
    {
      "type": "java.lang.Boolean",
      "fields": [
        {
          "name": "TYPE"
        }
      ]
    },
    {
      "type": "java.lang.Byte",
      "fields": [
        {
          "name": "TYPE"
        }
      ]
    },
    {
      "type": "java.lang.CharSequence"
    },
    {
      "type": "java.lang.Character",
      "fields": [
        {
          "name": "TYPE"
        }
      ]
    },
    {
      "type": "java.lang.Class",
      "methods": [
        {
          "name": "getModule",
          "parameterTypes": []
        },
        {
          "name": "getRecordComponents",
          "parameterTypes": []
        },
        {
          "name": "isRecord",
          "parameterTypes": []
        },
        {
          "name": "isSealed",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "java.lang.ClassLoader",
      "fields": [
        {
          "name": "classLoaderValueMap"
        }
      ]
    },
    {
      "type": "java.lang.ClassNotFoundException"
    },
    {
      "type": "java.lang.ClassValue"
    },
    {
      "type": "java.lang.CloneNotSupportedException"
    },
    {
      "type": "java.lang.Cloneable",
      "allDeclaredFields": true
    },
    {
      "type": "java.lang.Comparable"
    },
    {
      "type": "java.lang.Deprecated"
    },
    {
      "type": "java.lang.Double",
      "allDeclaredFields": true,
      "fields": [
        {
          "name": "TYPE"
        }
      ]
    },
    {
      "type": "java.lang.Enum",
      "allDeclaredFields": true
    },
    {
      "type": "java.lang.Enum$EnumDesc"
    },
    {
      "type": "java.lang.Exception"
    },
    {
      "type": "java.lang.Float",
      "allDeclaredFields": true,
      "fields": [
        {
          "name": "TYPE"
        }
      ]
    },
    {
      "type": "java.lang.FunctionalInterface"
    },
    {
      "type": "java.lang.IllegalArgumentException"
    },
    {
      "type": "java.lang.IllegalStateException"
    },
    {
      "type": "java.lang.Integer",
      "fields": [
        {
          "name": "TYPE"
        }
      ]
    },
    {
      "type": "java.lang.InterruptedException"
    },
    {
      "type": "java.lang.Iterable",
      "allDeclaredFields": true
    },
    {
      "type": "java.lang.Long",
      "fields": [
        {
          "name": "TYPE"
        }
      ]
    },
    {
      "type": "java.lang.Module",
      "methods": [
        {
          "name": "isNamed",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "java.lang.Number",
      "allDeclaredFields": true
    },
    {
      "type": "java.lang.Object",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "java.lang.ObjectBeanInfo"
    },
    {
      "type": "java.lang.ObjectCustomizer"
    },
    {
      "type": "java.lang.Package"
    },
    {
      "type": "java.lang.ProcessHandle",
      "methods": [
        {
          "name": "current",
          "parameterTypes": []
        },
        {
          "name": "pid",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "java.lang.Record",
      "allDeclaredFields": true
    },
    {
      "type": "java.lang.Runnable"
    },
    {
      "type": "java.lang.RuntimeException"
    },
    {
      "type": "java.lang.RuntimePermission"
    },
    {
      "type": "java.lang.SafeVarargs"
    },
    {
      "type": "java.lang.SecurityManager",
      "methods": [
        {
          "name": "checkPermission",
          "parameterTypes": [
            "java.security.Permission"
          ]
        }
      ]
    },
    {
      "type": "java.lang.Short",
      "fields": [
        {
          "name": "TYPE"
        }
      ]
    },
    {
      "type": "java.lang.StackTraceElement"
    },
    {
      "type": "java.lang.String",
      "allDeclaredFields": true,
      "fields": [
        {
          "name": "TYPE"
        }
      ]
    },
    {
      "type": "java.lang.StringBuilder"
    },
    {
      "type": "java.lang.System",
      "methods": [
        {
          "name": "getSecurityManager",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "java.lang.Thread",
      "fields": [
        {
          "name": "threadLocalRandomProbe"
        }
      ],
      "methods": [
        {
          "name": "ofVirtual",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "java.lang.Thread$Builder",
      "methods": [
        {
          "name": "name",
          "parameterTypes": [
            "java.lang.String",
            "long"
          ]
        },
        {
          "name": "start",
          "parameterTypes": [
            "java.lang.Runnable"
          ]
        }
      ]
    },
    {
      "type": "java.lang.Thread$State"
    },
    {
      "type": "java.lang.ThreadGroup"
    },
    {
      "type": "java.lang.Throwable",
      "allDeclaredFields": true
    },
    {
      "type": "java.lang.Void",
      "fields": [
        {
          "name": "TYPE"
        }
      ]
    },
    {
      "type": "java.lang.WrongThreadException"
    },
    {
      "type": "java.lang.annotation.Annotation"
    },
    {
      "type": "java.lang.annotation.Documented"
    },
    {
      "type": "java.lang.annotation.Inherited"
    },
    {
      "type": "java.lang.annotation.Retention",
      "methods": [
        {
          "name": "value",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "java.lang.annotation.Target",
      "methods": [
        {
          "name": "value",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "java.lang.constant.ClassDesc"
    },
    {
      "type": "java.lang.constant.Constable"
    },
    {
      "type": "java.lang.constant.ConstantDesc"
    },
    {
      "type": "java.lang.invoke.SerializedLambda"
    },
    {
      "type": "java.lang.invoke.TypeDescriptor$OfField"
    },
    {
      "type": "java.lang.management.BufferPoolMXBean"
    },
    {
      "type": "java.lang.management.ClassLoadingMXBean"
    },
    {
      "type": "java.lang.management.CompilationMXBean"
    },
    {
      "type": "java.lang.management.LockInfo"
    },
    {
      "type": "java.lang.management.ManagementPermission",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.String"
          ]
        }
      ]
    },
    {
      "type": "java.lang.management.MemoryMXBean"
    },
    {
      "type": "java.lang.management.MemoryManagerMXBean"
    },
    {
      "type": "java.lang.management.MemoryPoolMXBean"
    },
    {
      "type": "java.lang.management.MemoryUsage",
      "methods": [
        {
          "name": "from",
          "parameterTypes": [
            "javax.management.openmbean.CompositeData"
          ]
        }
      ]
    },
    {
      "type": "java.lang.management.MonitorInfo"
    },
    {
      "type": "java.lang.management.OperatingSystemMXBean"
    },
    {
      "type": "java.lang.management.PlatformLoggingMXBean"
    },
    {
      "type": "java.lang.management.RuntimeMXBean"
    },
    {
      "type": "java.lang.management.ThreadInfo"
    },
    {
      "type": "java.lang.management.ThreadMXBean"
    },
    {
      "type": "java.lang.reflect.AnnotatedElement"
    },
    {
      "type": "java.lang.reflect.Constructor"
    },
    {
      "type": "java.lang.reflect.Executable",
      "methods": [
        {
          "name": "getParameters",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "java.lang.reflect.Field"
    },
    {
      "type": "java.lang.reflect.GenericArrayType",
      "methods": [
        {
          "name": "getGenericComponentType",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "java.lang.reflect.GenericDeclaration"
    },
    {
      "type": "java.lang.reflect.Method"
    },
    {
      "type": "java.lang.reflect.Parameter",
      "methods": [
        {
          "name": "getName",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "java.lang.reflect.ParameterizedType",
      "methods": [
        {
          "name": "getActualTypeArguments",
          "parameterTypes": []
        },
        {
          "name": "getOwnerType",
          "parameterTypes": []
        },
        {
          "name": "getRawType",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "java.lang.reflect.Proxy",
      "allDeclaredFields": true
    },
    {
      "type": "java.lang.reflect.RecordComponent",
      "methods": [
        {
          "name": "getAccessor",
          "parameterTypes": []
        },
        {
          "name": "getName",
          "parameterTypes": []
        },
        {
          "name": "getType",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "java.lang.reflect.Type"
    },
    {
      "type": "java.lang.reflect.TypeVariable",
      "methods": [
        {
          "name": "getBounds",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "java.lang.reflect.WildcardType",
      "methods": [
        {
          "name": "getLowerBounds",
          "parameterTypes": []
        },
        {
          "name": "getUpperBounds",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "java.math.BigDecimal",
      "allDeclaredFields": true
    },
    {
      "type": "java.math.BigInteger"
    },
    {
      "type": "java.net.InetAddress"
    },
    {
      "type": "java.net.NetPermission"
    },
    {
      "type": "java.net.SocketAddress"
    },
    {
      "type": "java.net.SocketPermission"
    },
    {
      "type": "java.net.URI"
    },
    {
      "type": "java.net.URL"
    },
    {
      "type": "java.net.URLClassLoader"
    },
    {
      "type": "java.net.URLPermission",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.String",
            "java.lang.String"
          ]
        }
      ]
    },
    {
      "type": "java.net.UnixDomainSocketAddress"
    },
    {
      "type": "java.net.http.HttpClient"
    },
    {
      "type": "java.net.http.HttpClient$Builder"
    },
    {
      "type": "java.net.http.HttpClient$Redirect"
    },
    {
      "type": "java.net.http.HttpResponse"
    },
    {
      "type": "java.nio.Bits",
      "fields": [
        {
          "name": "MAX_MEMORY"
        },
        {
          "name": "UNALIGNED"
        }
      ]
    },
    {
      "type": "java.nio.Buffer",
      "fields": [
        {
          "name": "address"
        }
      ]
    },
    {
      "type": "java.nio.ByteBuffer"
    },
    {
      "type": "java.nio.DirectByteBuffer"
    },
    {
      "type": "java.nio.channels.FileChannel"
    },
    {
      "type": "java.nio.channels.ServerSocketChannel"
    },
    {
      "type": "java.nio.channels.SocketChannel"
    },
    {
      "type": "java.nio.channels.spi.SelectorProvider"
    },
    {
      "type": "java.nio.charset.Charset"
    },
    {
      "type": "java.nio.file.Path"
    },
    {
      "type": "java.security.AccessController",
      "methods": [
        {
          "name": "doPrivileged",
          "parameterTypes": [
            "java.security.PrivilegedExceptionAction"
          ]
        }
      ]
    },
    {
      "type": "java.security.AlgorithmParametersSpi"
    },
    {
      "type": "java.security.AllPermission"
    },
    {
      "type": "java.security.KeyStoreSpi"
    },
    {
      "type": "java.security.SecureClassLoader"
    },
    {
      "type": "java.security.SecurityPermission"
    },
    {
      "type": "java.security.cert.PKIXRevocationChecker"
    },
    {
      "type": "java.security.interfaces.ECPrivateKey"
    },
    {
      "type": "java.security.interfaces.ECPublicKey"
    },
    {
      "type": "java.security.interfaces.RSAPrivateKey"
    },
    {
      "type": "java.security.interfaces.RSAPublicKey"
    },
    {
      "type": "java.sql.Array"
    },
    {
      "type": "java.sql.CallableStatement"
    },
    {
      "type": "java.sql.Connection",
      "methods": [
        {
          "name": "close",
          "parameterTypes": []
        },
        {
          "name": "commit",
          "parameterTypes": []
        },
        {
          "name": "createStatement",
          "parameterTypes": []
        },
        {
          "name": "getAutoCommit",
          "parameterTypes": []
        },
        {
          "name": "getCatalog",
          "parameterTypes": []
        },
        {
          "name": "getMetaData",
          "parameterTypes": []
        },
        {
          "name": "isClosed",
          "parameterTypes": []
        },
        {
          "name": "isValid",
          "parameterTypes": [
            "int"
          ]
        },
        {
          "name": "prepareCall",
          "parameterTypes": [
            "java.lang.String"
          ]
        },
        {
          "name": "prepareStatement",
          "parameterTypes": [
            "java.lang.String"
          ]
        },
        {
          "name": "rollback",
          "parameterTypes": []
        },
        {
          "name": "setAutoCommit",
          "parameterTypes": [
            "boolean"
          ]
        },
        {
          "name": "setReadOnly",
          "parameterTypes": [
            "boolean"
          ]
        }
      ]
    },
    {
      "type": "java.sql.ConnectionBuilder"
    },
    {
      "type": "java.sql.Date"
    },
    {
      "type": "java.sql.Driver"
    },
    {
      "type": "java.sql.DriverManager"
    },
    {
      "type": "java.sql.PreparedStatement",
      "methods": [
        {
          "name": "addBatch",
          "parameterTypes": []
        },
        {
          "name": "execute",
          "parameterTypes": []
        },
        {
          "name": "executeQuery",
          "parameterTypes": []
        },
        {
          "name": "executeUpdate",
          "parameterTypes": []
        },
        {
          "name": "setBigDecimal",
          "parameterTypes": [
            "int",
            "java.math.BigDecimal"
          ]
        },
        {
          "name": "setNull",
          "parameterTypes": [
            "int",
            "int"
          ]
        },
        {
          "name": "setObject",
          "parameterTypes": [
            "int",
            "java.lang.Object"
          ]
        },
        {
          "name": "setObject",
          "parameterTypes": [
            "int",
            "java.lang.Object",
            "int"
          ]
        },
        {
          "name": "setString",
          "parameterTypes": [
            "int",
            "java.lang.String"
          ]
        },
        {
          "name": "setTimestamp",
          "parameterTypes": [
            "int",
            "java.sql.Timestamp"
          ]
        }
      ]
    },
    {
      "type": "java.sql.ResultSet",
      "methods": [
        {
          "name": "close",
          "parameterTypes": []
        },
        {
          "name": "findColumn",
          "parameterTypes": [
            "java.lang.String"
          ]
        },
        {
          "name": "getBigDecimal",
          "parameterTypes": [
            "int"
          ]
        },
        {
          "name": "getBoolean",
          "parameterTypes": [
            "int"
          ]
        },
        {
          "name": "getInt",
          "parameterTypes": [
            "int"
          ]
        },
        {
          "name": "getLong",
          "parameterTypes": [
            "int"
          ]
        },
        {
          "name": "getMetaData",
          "parameterTypes": []
        },
        {
          "name": "getObject",
          "parameterTypes": [
            "int"
          ]
        },
        {
          "name": "getObject",
          "parameterTypes": [
            "int",
            "java.lang.Class"
          ]
        },
        {
          "name": "getStatement",
          "parameterTypes": []
        },
        {
          "name": "getString",
          "parameterTypes": [
            "int"
          ]
        },
        {
          "name": "next",
          "parameterTypes": []
        },
        {
          "name": "wasNull",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "java.sql.SQLException",
      "fields": [
        {
          "name": "next"
        }
      ]
    },
    {
      "type": "java.sql.SQLFeatureNotSupportedException"
    },
    {
      "type": "java.sql.SQLType"
    },
    {
      "type": "java.sql.SQLWarning"
    },
    {
      "type": "java.sql.ShardingKeyBuilder"
    },
    {
      "type": "java.sql.Statement",
      "methods": [
        {
          "name": "close",
          "parameterTypes": []
        },
        {
          "name": "execute",
          "parameterTypes": [
            "java.lang.String"
          ]
        },
        {
          "name": "executeBatch",
          "parameterTypes": []
        },
        {
          "name": "executeQuery",
          "parameterTypes": [
            "java.lang.String"
          ]
        },
        {
          "name": "getWarnings",
          "parameterTypes": []
        },
        {
          "name": "setFetchSize",
          "parameterTypes": [
            "int"
          ]
        }
      ]
    },
    {
      "type": "java.sql.Time"
    },
    {
      "type": "java.sql.Timestamp",
      "methods": [
        {
          "name": "toInstant",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "java.sql.Types",
      "allPublicFields": true
    },
    {
      "type": "java.sql.Wrapper"
    },
    {
      "type": "java.text.DateFormat"
    },
    {
      "type": "java.text.ListFormat"
    },
    {
      "type": "java.text.MessageFormat"
    },
    {
      "type": "java.text.NumberFormat"
    },
    {
      "type": "java.time.Clock"
    },
    {
      "type": "java.time.Duration"
    },
    {
      "type": "java.time.DurationEditor"
    },
    {
      "type": "java.time.Instant"
    },
    {
      "type": "java.time.ZoneId"
    },
    {
      "type": "java.time.temporal.TemporalAccessor"
    },
    {
      "type": "java.util.AbstractCollection",
      "allDeclaredFields": true
    },
    {
      "type": "java.util.AbstractList",
      "allDeclaredFields": true
    },
    {
      "type": "java.util.AbstractMap",
      "allDeclaredFields": true
    },
    {
      "type": "java.util.AbstractMap$SimpleEntry"
    },
    {
      "type": "java.util.ArrayList",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "java.util.Collection",
      "allDeclaredFields": true
    },
    {
      "type": "java.util.Collections$SingletonList",
      "allDeclaredFields": true
    },
    {
      "type": "java.util.Collections$SingletonMap",
      "allDeclaredFields": true
    },
    {
      "type": "java.util.Collections$UnmodifiableCollection",
      "allDeclaredFields": true
    },
    {
      "type": "java.util.Collections$UnmodifiableList",
      "allDeclaredFields": true
    },
    {
      "type": "java.util.Collections$UnmodifiableMap",
      "allDeclaredFields": true
    },
    {
      "type": "java.util.Collections$UnmodifiableRandomAccessList",
      "allDeclaredFields": true
    },
    {
      "type": "java.util.Collections$UnmodifiableSet",
      "allDeclaredFields": true
    },
    {
      "type": "java.util.Comparator"
    },
    {
      "type": "java.util.Date"
    },
    {
      "type": "java.util.EnumMap"
    },
    {
      "type": "java.util.EnumSet"
    },
    {
      "type": "java.util.Enumeration"
    },
    {
      "type": "java.util.EventListener"
    },
    {
      "type": "java.util.HashMap",
      "allDeclaredFields": true
    },
    {
      "type": "java.util.HashMap$Node"
    },
    {
      "type": "java.util.HashMap$TreeNode"
    },
    {
      "type": "java.util.HashSet"
    },
    {
      "type": "java.util.ImmutableCollections$AbstractImmutableCollection",
      "allDeclaredFields": true
    },
    {
      "type": "java.util.ImmutableCollections$AbstractImmutableList",
      "allDeclaredFields": true
    },
    {
      "type": "java.util.ImmutableCollections$AbstractImmutableMap",
      "allDeclaredFields": true
    },
    {
      "type": "java.util.ImmutableCollections$List12",
      "allDeclaredFields": true
    },
    {
      "type": "java.util.ImmutableCollections$ListN",
      "allDeclaredFields": true
    },
    {
      "type": "java.util.ImmutableCollections$MapN",
      "allDeclaredFields": true
    },
    {
      "type": "java.util.Iterator"
    },
    {
      "type": "java.util.LinkedHashMap"
    },
    {
      "type": "java.util.List",
      "allDeclaredFields": true
    },
    {
      "type": "java.util.Locale"
    },
    {
      "type": "java.util.Map"
    },
    {
      "type": "java.util.Map$Entry"
    },
    {
      "type": "java.util.Map.Entry"
    },
    {
      "type": "java.util.MissingResourceException"
    },
    {
      "type": "java.util.Optional"
    },
    {
      "type": "java.util.Properties"
    },
    {
      "type": "java.util.PropertyPermission",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.String",
            "java.lang.String"
          ]
        }
      ]
    },
    {
      "type": "java.util.RandomAccess",
      "allDeclaredFields": true
    },
    {
      "type": "java.util.ResourceBundle"
    },
    {
      "type": "java.util.SequencedCollection",
      "allDeclaredFields": true
    },
    {
      "type": "java.util.ServiceLoader"
    },
    {
      "type": "java.util.Set"
    },
    {
      "type": "java.util.SortedSet"
    },
    {
      "type": "java.util.Spliterator"
    },
    {
      "type": "java.util.TimeZone"
    },
    {
      "type": "java.util.TreeMap"
    },
    {
      "type": "java.util.UUID",
      "allDeclaredFields": true
    },
    {
      "type": "java.util.concurrent.BlockingQueue"
    },
    {
      "type": "java.util.concurrent.Callable",
      "methods": [
        {
          "name": "call",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "java.util.concurrent.CompletableFuture"
    },
    {
      "type": "java.util.concurrent.ConcurrentHashMap"
    },
    {
      "type": "java.util.concurrent.CountDownLatch"
    },
    {
      "type": "java.util.concurrent.ExecutionException"
    },
    {
      "type": "java.util.concurrent.Executor"
    },
    {
      "type": "java.util.concurrent.ExecutorService"
    },
    {
      "type": "java.util.concurrent.ForkJoinTask",
      "fields": [
        {
          "name": "aux"
        },
        {
          "name": "status"
        }
      ]
    },
    {
      "type": "java.util.concurrent.Future"
    },
    {
      "type": "java.util.concurrent.ScheduledExecutorService"
    },
    {
      "type": "java.util.concurrent.ThreadFactory"
    },
    {
      "type": "java.util.concurrent.ThreadPoolExecutor"
    },
    {
      "type": "java.util.concurrent.TimeUnit"
    },
    {
      "type": "java.util.concurrent.TimeoutException"
    },
    {
      "type": "java.util.concurrent.atomic.AtomicBoolean",
      "fields": [
        {
          "name": "value"
        }
      ]
    },
    {
      "type": "java.util.concurrent.atomic.AtomicInteger"
    },
    {
      "type": "java.util.concurrent.atomic.AtomicLong"
    },
    {
      "type": "java.util.concurrent.atomic.AtomicMarkableReference",
      "fields": [
        {
          "name": "pair"
        }
      ]
    },
    {
      "type": "java.util.concurrent.atomic.AtomicReference"
    },
    {
      "type": "java.util.concurrent.atomic.Striped64",
      "fields": [
        {
          "name": "base"
        },
        {
          "name": "cellsBusy"
        }
      ]
    },
    {
      "type": "java.util.concurrent.atomic.Striped64$Cell",
      "fields": [
        {
          "name": "value"
        }
      ]
    },
    {
      "type": "java.util.function.BiConsumer"
    },
    {
      "type": "java.util.function.BiFunction"
    },
    {
      "type": "java.util.function.BiPredicate"
    },
    {
      "type": "java.util.function.Consumer"
    },
    {
      "type": "java.util.function.Function"
    },
    {
      "type": "java.util.function.ObjIntConsumer"
    },
    {
      "type": "java.util.function.Predicate"
    },
    {
      "type": "java.util.function.Supplier",
      "allDeclaredFields": true
    },
    {
      "type": "java.util.function.ToDoubleFunction"
    },
    {
      "type": "java.util.function.ToLongFunction"
    },
    {
      "type": "java.util.logging.LogManager",
      "methods": [
        {
          "name": "getLoggingMXBean",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "java.util.logging.Logger"
    },
    {
      "type": "java.util.logging.LoggingMXBean"
    },
    {
      "type": "java.util.logging.SimpleFormatter",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "java.util.regex.Pattern"
    },
    {
      "type": "java.util.stream.Collector"
    },
    {
      "type": "java.util.stream.Stream"
    },
    {
      "type": "java.util.zip.CRC32C",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "java.util.zip.Checksum",
      "methods": [
        {
          "name": "update",
          "parameterTypes": [
            "java.nio.ByteBuffer"
          ]
        }
      ]
    },
    {
      "type": "javafx.beans.value.ObservableValue"
    },
    {
      "type": "javax.annotation.CheckForNull"
    },
    {
      "type": "javax.annotation.Nonnull"
    },
    {
      "type": "javax.annotation.Nullable"
    },
    {
      "type": "javax.annotation.meta.TypeQualifier"
    },
    {
      "type": "javax.annotation.meta.TypeQualifierDefault"
    },
    {
      "type": "javax.inject.Qualifier"
    },
    {
      "type": "javax.management.MBeanNotificationInfo"
    },
    {
      "type": "javax.management.MBeanOperationInfo"
    },
    {
      "type": "javax.management.MBeanServerBuilder",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "javax.management.Notification"
    },
    {
      "type": "javax.management.NotificationEmitter"
    },
    {
      "type": "javax.management.NotificationListener"
    },
    {
      "type": "javax.management.ObjectName"
    },
    {
      "type": "javax.management.StandardEmitterMBean"
    },
    {
      "type": "javax.management.openmbean.CompositeData"
    },
    {
      "type": "javax.management.openmbean.OpenMBeanOperationInfoSupport"
    },
    {
      "type": "javax.management.openmbean.TabularData"
    },
    {
      "type": "javax.money.MonetaryAmount"
    },
    {
      "type": "javax.naming.InitialContext"
    },
    {
      "type": "javax.net.ssl.SSLParameters"
    },
    {
      "type": "javax.security.auth.Subject"
    },
    {
      "type": "javax.smartcardio.CardPermission"
    },
    {
      "type": "javax.sql.CommonDataSource"
    },
    {
      "type": "javax.sql.DataSource",
      "methods": [
        {
          "name": "getConnection",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "jdk.crac.management.CRaCMXBean"
    },
    {
      "type": "jdk.internal.ValueBased"
    },
    {
      "type": "jdk.internal.loader.ClassLoaders$AppClassLoader"
    },
    {
      "type": "jdk.internal.loader.ClassLoaders$PlatformClassLoader"
    },
    {
      "type": "jdk.internal.misc.Unsafe",
      "methods": [
        {
          "name": "getUnsafe",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "jdk.internal.vm.annotation.IntrinsicCandidate"
    },
    {
      "type": "jdk.jfr.Event"
    },
    {
      "type": "jdk.management.jfr.ConfigurationInfo"
    },
    {
      "type": "jdk.management.jfr.EventTypeInfo"
    },
    {
      "type": "jdk.management.jfr.FlightRecorderMXBean"
    },
    {
      "type": "jdk.management.jfr.FlightRecorderMXBeanImpl"
    },
    {
      "type": "jdk.management.jfr.RecordingInfo"
    },
    {
      "type": "jdk.management.jfr.SettingDescriptorInfo"
    },
    {
      "type": "kotlin.Any"
    },
    {
      "type": "kotlin.Array"
    },
    {
      "type": "kotlin.Boolean"
    },
    {
      "type": "kotlin.Cloneable"
    },
    {
      "type": "kotlin.Double"
    },
    {
      "type": "kotlin.Float"
    },
    {
      "type": "kotlin.Int"
    },
    {
      "type": "kotlin.KotlinVersion",
      "fields": [
        {
          "name": "CURRENT"
        }
      ]
    },
    {
      "type": "kotlin.Long"
    },
    {
      "type": "kotlin.Metadata",
      "methods": [
        {
          "name": "bv",
          "parameterTypes": []
        },
        {
          "name": "d1",
          "parameterTypes": []
        },
        {
          "name": "d2",
          "parameterTypes": []
        },
        {
          "name": "k",
          "parameterTypes": []
        },
        {
          "name": "mv",
          "parameterTypes": []
        },
        {
          "name": "pn",
          "parameterTypes": []
        },
        {
          "name": "xi",
          "parameterTypes": []
        },
        {
          "name": "xs",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "kotlin.Pair",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "getFirst",
          "parameterTypes": []
        },
        {
          "name": "getSecond",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "kotlin.SafePublicationLazyImpl",
      "fields": [
        {
          "name": "_value"
        }
      ]
    },
    {
      "type": "kotlin.String"
    },
    {
      "type": "kotlin.Throwable"
    },
    {
      "type": "kotlin.Unit"
    },
    {
      "type": "kotlin.annotation.AnnotationTarget"
    },
    {
      "type": "kotlin.annotation.MustBeDocumented"
    },
    {
      "type": "kotlin.annotation.Retention"
    },
    {
      "type": "kotlin.annotation.Target"
    },
    {
      "type": "kotlin.collections.Collection"
    },
    {
      "type": "kotlin.collections.Iterable"
    },
    {
      "type": "kotlin.collections.Iterator"
    },
    {
      "type": "kotlin.collections.List"
    },
    {
      "type": "kotlin.collections.Map"
    },
    {
      "type": "kotlin.collections.Map.Entry"
    },
    {
      "type": "kotlin.collections.MutableCollection"
    },
    {
      "type": "kotlin.collections.MutableIterable"
    },
    {
      "type": "kotlin.collections.MutableIterator"
    },
    {
      "type": "kotlin.collections.MutableList"
    },
    {
      "type": "kotlin.collections.MutableMap"
    },
    {
      "type": "kotlin.collections.MutableMap.MutableEntry"
    },
    {
      "type": "kotlin.collections.MutableSet"
    },
    {
      "type": "kotlin.collections.Set"
    },
    {
      "type": "kotlin.coroutines.Continuation"
    },
    {
      "type": "kotlin.io.Serializable"
    },
    {
      "type": "kotlin.jvm.JvmInline"
    },
    {
      "type": "kotlin.jvm.functions.Function1"
    },
    {
      "type": "kotlin.jvm.internal.DefaultConstructorMarker"
    },
    {
      "type": "kotlin.jvm.internal.SourceDebugExtension"
    },
    {
      "type": "kotlin.properties.ReadWriteProperty"
    },
    {
      "type": "kotlin.reflect.KParameter"
    },
    {
      "type": "kotlin.reflect.full.KClasses"
    },
    {
      "type": "kotlin.reflect.jvm.internal.ReflectionFactoryImpl",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "kotlin.reflect.jvm.internal.impl.load.java.ErasedOverridabilityCondition"
    },
    {
      "type": "kotlin.reflect.jvm.internal.impl.load.java.FieldOverridabilityCondition"
    },
    {
      "type": "kotlin.reflect.jvm.internal.impl.load.java.JavaIncompatibilityRulesOverridabilityCondition"
    },
    {
      "type": "kotlin.reflect.jvm.internal.impl.resolve.scopes.DescriptorKindFilter",
      "allPublicFields": true
    },
    {
      "type": "kotlin.reflect.jvm.internal.impl.serialization.deserialization.builtins.BuiltInsLoaderImpl"
    },
    {
      "type": "kotlinx.coroutines.flow.Flow"
    },
    {
      "type": "kotlinx.coroutines.reactor.MonoKt"
    },
    {
      "type": "kotlinx.serialization.cbor.Cbor"
    },
    {
      "type": "kotlinx.serialization.json.Json"
    },
    {
      "type": "kotlinx.serialization.protobuf.ProtoBuf"
    },
    {
      "type": "liquibase.AbstractExtensibleObject"
    },
    {
      "type": "liquibase.AbstractExtensibleObjectBeanInfo"
    },
    {
      "type": "liquibase.AbstractExtensibleObjectCustomizer"
    },
    {
      "type": "liquibase.ExtensibleObject"
    },
    {
      "type": "liquibase.GlobalConfiguration"
    },
    {
      "type": "liquibase.Liquibase"
    },
    {
      "type": "liquibase.UpdateSummaryEnum"
    },
    {
      "type": "liquibase.UpdateSummaryOutputEnum"
    },
    {
      "type": "liquibase.change.AbstractChange"
    },
    {
      "type": "liquibase.change.AbstractChangeBeanInfo"
    },
    {
      "type": "liquibase.change.AbstractChangeCustomizer"
    },
    {
      "type": "liquibase.change.AbstractSQLChange"
    },
    {
      "type": "liquibase.change.AbstractSQLChangeBeanInfo"
    },
    {
      "type": "liquibase.change.AbstractSQLChangeCustomizer"
    },
    {
      "type": "liquibase.change.AbstractTableChange"
    },
    {
      "type": "liquibase.change.AbstractTableChangeBeanInfo"
    },
    {
      "type": "liquibase.change.AbstractTableChangeCustomizer"
    },
    {
      "type": "liquibase.change.Change"
    },
    {
      "type": "liquibase.change.ChangeFactory",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "liquibase.change.ChangeWithColumns"
    },
    {
      "type": "liquibase.change.DbmsTargetedChange"
    },
    {
      "type": "liquibase.change.ReplaceIfExists"
    },
    {
      "type": "liquibase.change.core.AbstractModifyDataChange"
    },
    {
      "type": "liquibase.change.core.AbstractModifyDataChangeBeanInfo"
    },
    {
      "type": "liquibase.change.core.AbstractModifyDataChangeCustomizer"
    },
    {
      "type": "liquibase.change.core.AddAutoIncrementChange",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "liquibase.change.core.AddAutoIncrementChangeBeanInfo"
    },
    {
      "type": "liquibase.change.core.AddAutoIncrementChangeCustomizer"
    },
    {
      "type": "liquibase.change.core.AddColumnChange",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "liquibase.change.core.AddColumnChangeBeanInfo"
    },
    {
      "type": "liquibase.change.core.AddColumnChangeCustomizer"
    },
    {
      "type": "liquibase.change.core.AddDefaultValueChange",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "liquibase.change.core.AddDefaultValueChangeBeanInfo"
    },
    {
      "type": "liquibase.change.core.AddDefaultValueChangeCustomizer"
    },
    {
      "type": "liquibase.change.core.AddForeignKeyConstraintChange",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "liquibase.change.core.AddForeignKeyConstraintChangeBeanInfo"
    },
    {
      "type": "liquibase.change.core.AddForeignKeyConstraintChangeCustomizer"
    },
    {
      "type": "liquibase.change.core.AddLookupTableChange",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "liquibase.change.core.AddLookupTableChangeBeanInfo"
    },
    {
      "type": "liquibase.change.core.AddLookupTableChangeCustomizer"
    },
    {
      "type": "liquibase.change.core.AddNotNullConstraintChange",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "liquibase.change.core.AddNotNullConstraintChangeBeanInfo"
    },
    {
      "type": "liquibase.change.core.AddNotNullConstraintChangeCustomizer"
    },
    {
      "type": "liquibase.change.core.AddPrimaryKeyChange",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "liquibase.change.core.AddPrimaryKeyChangeBeanInfo"
    },
    {
      "type": "liquibase.change.core.AddPrimaryKeyChangeCustomizer"
    },
    {
      "type": "liquibase.change.core.AddUniqueConstraintChange",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "liquibase.change.core.AddUniqueConstraintChangeBeanInfo"
    },
    {
      "type": "liquibase.change.core.AddUniqueConstraintChangeCustomizer"
    },
    {
      "type": "liquibase.change.core.AlterSequenceChange",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "liquibase.change.core.AlterSequenceChangeBeanInfo"
    },
    {
      "type": "liquibase.change.core.AlterSequenceChangeCustomizer"
    },
    {
      "type": "liquibase.change.core.CreateIndexChange",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "liquibase.change.core.CreateIndexChangeBeanInfo"
    },
    {
      "type": "liquibase.change.core.CreateIndexChangeCustomizer"
    },
    {
      "type": "liquibase.change.core.CreateProcedureChange",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "liquibase.change.core.CreateProcedureChangeBeanInfo"
    },
    {
      "type": "liquibase.change.core.CreateProcedureChangeCustomizer"
    },
    {
      "type": "liquibase.change.core.CreateSequenceChange",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "liquibase.change.core.CreateSequenceChangeBeanInfo"
    },
    {
      "type": "liquibase.change.core.CreateSequenceChangeCustomizer"
    },
    {
      "type": "liquibase.change.core.CreateTableChange",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "liquibase.change.core.CreateTableChangeBeanInfo"
    },
    {
      "type": "liquibase.change.core.CreateTableChangeCustomizer"
    },
    {
      "type": "liquibase.change.core.CreateViewChange",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "liquibase.change.core.CreateViewChangeBeanInfo"
    },
    {
      "type": "liquibase.change.core.CreateViewChangeCustomizer"
    },
    {
      "type": "liquibase.change.core.DeleteDataChange",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "liquibase.change.core.DeleteDataChangeBeanInfo"
    },
    {
      "type": "liquibase.change.core.DeleteDataChangeCustomizer"
    },
    {
      "type": "liquibase.change.core.DropAllForeignKeyConstraintsChange",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "liquibase.change.core.DropAllForeignKeyConstraintsChangeBeanInfo"
    },
    {
      "type": "liquibase.change.core.DropAllForeignKeyConstraintsChangeCustomizer"
    },
    {
      "type": "liquibase.change.core.DropColumnChange",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "liquibase.change.core.DropColumnChangeBeanInfo"
    },
    {
      "type": "liquibase.change.core.DropColumnChangeCustomizer"
    },
    {
      "type": "liquibase.change.core.DropDefaultValueChange",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "liquibase.change.core.DropDefaultValueChangeBeanInfo"
    },
    {
      "type": "liquibase.change.core.DropDefaultValueChangeCustomizer"
    },
    {
      "type": "liquibase.change.core.DropForeignKeyConstraintChange",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "liquibase.change.core.DropForeignKeyConstraintChangeBeanInfo"
    },
    {
      "type": "liquibase.change.core.DropForeignKeyConstraintChangeCustomizer"
    },
    {
      "type": "liquibase.change.core.DropIndexChange",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "liquibase.change.core.DropIndexChangeBeanInfo"
    },
    {
      "type": "liquibase.change.core.DropIndexChangeCustomizer"
    },
    {
      "type": "liquibase.change.core.DropNotNullConstraintChange",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "liquibase.change.core.DropNotNullConstraintChangeBeanInfo"
    },
    {
      "type": "liquibase.change.core.DropNotNullConstraintChangeCustomizer"
    },
    {
      "type": "liquibase.change.core.DropPrimaryKeyChange",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "liquibase.change.core.DropPrimaryKeyChangeBeanInfo"
    },
    {
      "type": "liquibase.change.core.DropPrimaryKeyChangeCustomizer"
    },
    {
      "type": "liquibase.change.core.DropProcedureChange",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "liquibase.change.core.DropProcedureChangeBeanInfo"
    },
    {
      "type": "liquibase.change.core.DropProcedureChangeCustomizer"
    },
    {
      "type": "liquibase.change.core.DropSequenceChange",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "liquibase.change.core.DropSequenceChangeBeanInfo"
    },
    {
      "type": "liquibase.change.core.DropSequenceChangeCustomizer"
    },
    {
      "type": "liquibase.change.core.DropTableChange",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "liquibase.change.core.DropTableChangeBeanInfo"
    },
    {
      "type": "liquibase.change.core.DropTableChangeCustomizer"
    },
    {
      "type": "liquibase.change.core.DropUniqueConstraintChange",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "liquibase.change.core.DropUniqueConstraintChangeBeanInfo"
    },
    {
      "type": "liquibase.change.core.DropUniqueConstraintChangeCustomizer"
    },
    {
      "type": "liquibase.change.core.DropViewChange",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "liquibase.change.core.DropViewChangeBeanInfo"
    },
    {
      "type": "liquibase.change.core.DropViewChangeCustomizer"
    },
    {
      "type": "liquibase.change.core.EmptyChange",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "liquibase.change.core.EmptyChangeBeanInfo"
    },
    {
      "type": "liquibase.change.core.EmptyChangeCustomizer"
    },
    {
      "type": "liquibase.change.core.ExecuteShellCommandChange",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "liquibase.change.core.ExecuteShellCommandChangeBeanInfo"
    },
    {
      "type": "liquibase.change.core.ExecuteShellCommandChangeCustomizer"
    },
    {
      "type": "liquibase.change.core.InsertDataChange",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "liquibase.change.core.InsertDataChangeBeanInfo"
    },
    {
      "type": "liquibase.change.core.InsertDataChangeCustomizer"
    },
    {
      "type": "liquibase.change.core.LoadDataChange",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "liquibase.change.core.LoadDataChangeBeanInfo"
    },
    {
      "type": "liquibase.change.core.LoadDataChangeCustomizer"
    },
    {
      "type": "liquibase.change.core.LoadUpdateDataChange",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "liquibase.change.core.LoadUpdateDataChangeBeanInfo"
    },
    {
      "type": "liquibase.change.core.LoadUpdateDataChangeCustomizer"
    },
    {
      "type": "liquibase.change.core.MergeColumnChange",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "liquibase.change.core.MergeColumnChangeBeanInfo"
    },
    {
      "type": "liquibase.change.core.MergeColumnChangeCustomizer"
    },
    {
      "type": "liquibase.change.core.ModifyDataTypeChange",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "liquibase.change.core.ModifyDataTypeChangeBeanInfo"
    },
    {
      "type": "liquibase.change.core.ModifyDataTypeChangeCustomizer"
    },
    {
      "type": "liquibase.change.core.OutputChange",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "liquibase.change.core.OutputChangeBeanInfo"
    },
    {
      "type": "liquibase.change.core.OutputChangeCustomizer"
    },
    {
      "type": "liquibase.change.core.RawSQLChange",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "liquibase.change.core.RawSQLChangeBeanInfo"
    },
    {
      "type": "liquibase.change.core.RawSQLChangeCustomizer"
    },
    {
      "type": "liquibase.change.core.RenameColumnChange",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "liquibase.change.core.RenameColumnChangeBeanInfo"
    },
    {
      "type": "liquibase.change.core.RenameColumnChangeCustomizer"
    },
    {
      "type": "liquibase.change.core.RenameSequenceChange",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "liquibase.change.core.RenameSequenceChangeBeanInfo"
    },
    {
      "type": "liquibase.change.core.RenameSequenceChangeCustomizer"
    },
    {
      "type": "liquibase.change.core.RenameTableChange",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "liquibase.change.core.RenameTableChangeBeanInfo"
    },
    {
      "type": "liquibase.change.core.RenameTableChangeCustomizer"
    },
    {
      "type": "liquibase.change.core.RenameViewChange",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "liquibase.change.core.RenameViewChangeBeanInfo"
    },
    {
      "type": "liquibase.change.core.RenameViewChangeCustomizer"
    },
    {
      "type": "liquibase.change.core.SQLFileChange",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "liquibase.change.core.SQLFileChangeBeanInfo"
    },
    {
      "type": "liquibase.change.core.SQLFileChangeCustomizer"
    },
    {
      "type": "liquibase.change.core.SetColumnRemarksChange",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "liquibase.change.core.SetColumnRemarksChangeBeanInfo"
    },
    {
      "type": "liquibase.change.core.SetColumnRemarksChangeCustomizer"
    },
    {
      "type": "liquibase.change.core.SetTableRemarksChange",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "liquibase.change.core.SetTableRemarksChangeBeanInfo"
    },
    {
      "type": "liquibase.change.core.SetTableRemarksChangeCustomizer"
    },
    {
      "type": "liquibase.change.core.StopChange",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "liquibase.change.core.StopChangeBeanInfo"
    },
    {
      "type": "liquibase.change.core.StopChangeCustomizer"
    },
    {
      "type": "liquibase.change.core.TagDatabaseChange",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "liquibase.change.core.TagDatabaseChangeBeanInfo"
    },
    {
      "type": "liquibase.change.core.TagDatabaseChangeCustomizer"
    },
    {
      "type": "liquibase.change.core.UpdateDataChange",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "liquibase.change.core.UpdateDataChangeBeanInfo"
    },
    {
      "type": "liquibase.change.core.UpdateDataChangeCustomizer"
    },
    {
      "type": "liquibase.change.custom.CustomChangeWrapper",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "liquibase.change.custom.CustomChangeWrapperBeanInfo"
    },
    {
      "type": "liquibase.change.custom.CustomChangeWrapperCustomizer"
    },
    {
      "type": "liquibase.changelog.ChangeLogHistoryServiceFactory",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "liquibase.changelog.FastCheckService",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "liquibase.changelog.MockChangeLogHistoryService"
    },
    {
      "type": "liquibase.changelog.StandardChangeLogHistoryService",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "liquibase.changelog.visitor.StandardValidatingVisitorGenerator"
    },
    {
      "type": "liquibase.changelog.visitor.ValidatingVisitorGeneratorFactory",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "liquibase.changeset.StandardChangeSetService"
    },
    {
      "type": "liquibase.command.CommandFactory",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "liquibase.command.core.CalculateChecksumCommandStep"
    },
    {
      "type": "liquibase.command.core.ChangelogSyncCommandStep"
    },
    {
      "type": "liquibase.command.core.ChangelogSyncSqlCommandStep"
    },
    {
      "type": "liquibase.command.core.ChangelogSyncToTagCommandStep"
    },
    {
      "type": "liquibase.command.core.ChangelogSyncToTagSqlCommandStep"
    },
    {
      "type": "liquibase.command.core.ClearChecksumsCommandStep"
    },
    {
      "type": "liquibase.command.core.DbDocCommandStep"
    },
    {
      "type": "liquibase.command.core.DiffChangelogCommandStep"
    },
    {
      "type": "liquibase.command.core.DiffCommandStep"
    },
    {
      "type": "liquibase.command.core.DropAllCommandStep"
    },
    {
      "type": "liquibase.command.core.ExecuteSqlCommandStep"
    },
    {
      "type": "liquibase.command.core.FutureRollbackCountSqlCommandStep"
    },
    {
      "type": "liquibase.command.core.FutureRollbackFromTagSqlCommandStep"
    },
    {
      "type": "liquibase.command.core.FutureRollbackSqlCommandStep"
    },
    {
      "type": "liquibase.command.core.GenerateChangelogCommandStep"
    },
    {
      "type": "liquibase.command.core.HistoryCommandStep"
    },
    {
      "type": "liquibase.command.core.InternalSnapshotCommandStep"
    },
    {
      "type": "liquibase.command.core.ListLocksCommandStep"
    },
    {
      "type": "liquibase.command.core.MarkNextChangesetRanCommandStep"
    },
    {
      "type": "liquibase.command.core.MarkNextChangesetRanSqlCommandStep"
    },
    {
      "type": "liquibase.command.core.ReleaseLocksCommandStep"
    },
    {
      "type": "liquibase.command.core.RollbackCommandStep"
    },
    {
      "type": "liquibase.command.core.RollbackCountCommandStep"
    },
    {
      "type": "liquibase.command.core.RollbackCountSqlCommandStep"
    },
    {
      "type": "liquibase.command.core.RollbackSqlCommandStep"
    },
    {
      "type": "liquibase.command.core.RollbackToDateCommandStep"
    },
    {
      "type": "liquibase.command.core.RollbackToDateSqlCommandStep"
    },
    {
      "type": "liquibase.command.core.SnapshotCommandStep"
    },
    {
      "type": "liquibase.command.core.SnapshotReferenceCommandStep"
    },
    {
      "type": "liquibase.command.core.StartH2CommandStep"
    },
    {
      "type": "liquibase.command.core.StatusCommandStep"
    },
    {
      "type": "liquibase.command.core.StopH2CommandStep"
    },
    {
      "type": "liquibase.command.core.TagCommandStep"
    },
    {
      "type": "liquibase.command.core.TagExistsCommandStep"
    },
    {
      "type": "liquibase.command.core.UnexpectedChangesetsCommandStep"
    },
    {
      "type": "liquibase.command.core.UpdateCommandStep",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "liquibase.command.core.UpdateCountCommandStep"
    },
    {
      "type": "liquibase.command.core.UpdateCountSqlCommandStep"
    },
    {
      "type": "liquibase.command.core.UpdateSqlCommandStep"
    },
    {
      "type": "liquibase.command.core.UpdateTestingRollbackCommandStep"
    },
    {
      "type": "liquibase.command.core.UpdateToTagCommandStep"
    },
    {
      "type": "liquibase.command.core.UpdateToTagSqlCommandStep"
    },
    {
      "type": "liquibase.command.core.ValidateCommandStep"
    },
    {
      "type": "liquibase.command.core.helpers.ChangeExecListenerCommandStep",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "liquibase.command.core.helpers.DatabaseChangelogCommandStep",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "liquibase.command.core.helpers.DbUrlConnectionArgumentsCommandStep",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "liquibase.command.core.helpers.DbUrlConnectionCommandStep",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "liquibase.command.core.helpers.DiffOutputControlCommandStep"
    },
    {
      "type": "liquibase.command.core.helpers.LockServiceCommandStep"
    },
    {
      "type": "liquibase.command.core.helpers.OutputWriterCommandStep"
    },
    {
      "type": "liquibase.command.core.helpers.PreCompareCommandStep"
    },
    {
      "type": "liquibase.command.core.helpers.ReferenceDatabaseOutputWriterCommandStep"
    },
    {
      "type": "liquibase.command.core.helpers.ReferenceDbUrlConnectionCommandStep"
    },
    {
      "type": "liquibase.command.core.helpers.ShowSummaryArgument",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "liquibase.configuration.ConfiguredValueModifierFactory",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "liquibase.configuration.LiquibaseConfiguration",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "liquibase.configuration.core.DeprecatedConfigurationValueProvider"
    },
    {
      "type": "liquibase.configuration.core.EnvironmentValueProvider"
    },
    {
      "type": "liquibase.configuration.core.ScopeValueProvider"
    },
    {
      "type": "liquibase.configuration.core.SystemPropertyValueProvider"
    },
    {
      "type": "liquibase.database.Database"
    },
    {
      "type": "liquibase.database.LiquibaseTableNamesFactory",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "liquibase.database.StandardLiquibaseTableNames"
    },
    {
      "type": "liquibase.database.core.CockroachDatabase"
    },
    {
      "type": "liquibase.database.core.DB2Database"
    },
    {
      "type": "liquibase.database.core.Db2zDatabase"
    },
    {
      "type": "liquibase.database.core.DerbyDatabase"
    },
    {
      "type": "liquibase.database.core.EnterpriseDBDatabase"
    },
    {
      "type": "liquibase.database.core.FirebirdDatabase"
    },
    {
      "type": "liquibase.database.core.H2Database"
    },
    {
      "type": "liquibase.database.core.HsqlDatabase"
    },
    {
      "type": "liquibase.database.core.InformixDatabase"
    },
    {
      "type": "liquibase.database.core.Ingres9Database"
    },
    {
      "type": "liquibase.database.core.MSSQLDatabase"
    },
    {
      "type": "liquibase.database.core.MariaDBDatabase"
    },
    {
      "type": "liquibase.database.core.MockDatabase"
    },
    {
      "type": "liquibase.database.core.MySQLDatabase"
    },
    {
      "type": "liquibase.database.core.OracleDatabase"
    },
    {
      "type": "liquibase.database.core.PostgresDatabase",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "liquibase.database.core.SQLiteDatabase"
    },
    {
      "type": "liquibase.database.core.SnowflakeDatabase"
    },
    {
      "type": "liquibase.database.core.SybaseASADatabase"
    },
    {
      "type": "liquibase.database.core.SybaseDatabase"
    },
    {
      "type": "liquibase.database.core.UnsupportedDatabase"
    },
    {
      "type": "liquibase.database.jvm.JdbcConnectionPatterns"
    },
    {
      "type": "liquibase.diff.compare.core.CatalogComparator"
    },
    {
      "type": "liquibase.diff.compare.core.ColumnComparator"
    },
    {
      "type": "liquibase.diff.compare.core.DefaultDatabaseObjectComparator"
    },
    {
      "type": "liquibase.diff.compare.core.ForeignKeyComparator"
    },
    {
      "type": "liquibase.diff.compare.core.IndexComparator"
    },
    {
      "type": "liquibase.diff.compare.core.PrimaryKeyComparator"
    },
    {
      "type": "liquibase.diff.compare.core.SchemaComparator"
    },
    {
      "type": "liquibase.diff.compare.core.TableComparator"
    },
    {
      "type": "liquibase.diff.compare.core.UniqueConstraintComparator"
    },
    {
      "type": "liquibase.exception.DatabaseException"
    },
    {
      "type": "liquibase.exception.LiquibaseException"
    },
    {
      "type": "liquibase.executor.ExecutorService",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "liquibase.executor.jvm.JdbcExecutor",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "liquibase.executor.jvm.SnowflakeJdbcExecutor"
    },
    {
      "type": "liquibase.integration.commandline.LiquibaseCommandLineConfiguration"
    },
    {
      "type": "liquibase.integration.spring.Customizer"
    },
    {
      "type": "liquibase.integration.spring.SpringLiquibase",
      "allDeclaredFields": true
    },
    {
      "type": "liquibase.integration.spring.SpringResourceAccessor"
    },
    {
      "type": "liquibase.lockservice.LockServiceImpl"
    },
    {
      "type": "liquibase.lockservice.MockLockService"
    },
    {
      "type": "liquibase.lockservice.OfflineLockService"
    },
    {
      "type": "liquibase.lockservice.StandardLockService",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "liquibase.logging.core.BufferedLogService"
    },
    {
      "type": "liquibase.logging.core.CompositeLogService"
    },
    {
      "type": "liquibase.logging.core.DefaultLoggerConfiguration"
    },
    {
      "type": "liquibase.logging.core.JavaLogService"
    },
    {
      "type": "liquibase.logging.core.LogServiceFactory",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "liquibase.logging.mdc.MdcManagerFactory",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "liquibase.logging.mdc.NoOpMdcManager"
    },
    {
      "type": "liquibase.parser.ChangeLogParserConfiguration"
    },
    {
      "type": "liquibase.parser.core.formattedsql.FormattedSqlChangeLogParser"
    },
    {
      "type": "liquibase.parser.core.json.JsonChangeLogParser"
    },
    {
      "type": "liquibase.parser.core.sql.SqlChangeLogParser"
    },
    {
      "type": "liquibase.parser.core.xml.XMLChangeLogSAXParser"
    },
    {
      "type": "liquibase.parser.core.yaml.YamlChangeLogParser"
    },
    {
      "type": "liquibase.plugin.AbstractPlugin"
    },
    {
      "type": "liquibase.plugin.AbstractPluginBeanInfo"
    },
    {
      "type": "liquibase.plugin.AbstractPluginCustomizer"
    },
    {
      "type": "liquibase.plugin.Plugin"
    },
    {
      "type": "liquibase.report.ShowSummaryGeneratorFactory",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "liquibase.report.StandardShowSummaryGenerator"
    },
    {
      "type": "liquibase.resource.ResourceAccessor"
    },
    {
      "type": "liquibase.servicelocator.StandardServiceLocator"
    },
    {
      "type": "liquibase.snapshot.jvm.CatalogSnapshotGenerator"
    },
    {
      "type": "liquibase.snapshot.jvm.ColumnSnapshotGenerator"
    },
    {
      "type": "liquibase.snapshot.jvm.ColumnSnapshotGeneratorH2"
    },
    {
      "type": "liquibase.snapshot.jvm.ColumnSnapshotGeneratorInformix"
    },
    {
      "type": "liquibase.snapshot.jvm.ColumnSnapshotGeneratorOracle"
    },
    {
      "type": "liquibase.snapshot.jvm.DataSnapshotGenerator"
    },
    {
      "type": "liquibase.snapshot.jvm.ForeignKeySnapshotGenerator"
    },
    {
      "type": "liquibase.snapshot.jvm.IndexSnapshotGenerator"
    },
    {
      "type": "liquibase.snapshot.jvm.PrimaryKeySnapshotGenerator"
    },
    {
      "type": "liquibase.snapshot.jvm.SchemaSnapshotGenerator"
    },
    {
      "type": "liquibase.snapshot.jvm.SchemaSnapshotGeneratorSnowflake"
    },
    {
      "type": "liquibase.snapshot.jvm.SequenceSnapshotGenerator"
    },
    {
      "type": "liquibase.snapshot.jvm.SequenceSnapshotGeneratorSnowflake"
    },
    {
      "type": "liquibase.snapshot.jvm.TableSnapshotGenerator"
    },
    {
      "type": "liquibase.snapshot.jvm.UniqueConstraintSnapshotGenerator"
    },
    {
      "type": "liquibase.snapshot.jvm.UniqueConstraintSnapshotGeneratorSnowflake"
    },
    {
      "type": "liquibase.snapshot.jvm.ViewSnapshotGenerator"
    },
    {
      "type": "liquibase.sql.SqlConfiguration"
    },
    {
      "type": "liquibase.sqlgenerator.core.AddAutoIncrementGenerator"
    },
    {
      "type": "liquibase.sqlgenerator.core.AddAutoIncrementGeneratorDB2"
    },
    {
      "type": "liquibase.sqlgenerator.core.AddAutoIncrementGeneratorHsqlH2"
    },
    {
      "type": "liquibase.sqlgenerator.core.AddAutoIncrementGeneratorInformix"
    },
    {
      "type": "liquibase.sqlgenerator.core.AddAutoIncrementGeneratorMySQL"
    },
    {
      "type": "liquibase.sqlgenerator.core.AddAutoIncrementGeneratorSQLite"
    },
    {
      "type": "liquibase.sqlgenerator.core.AddColumnGenerator"
    },
    {
      "type": "liquibase.sqlgenerator.core.AddColumnGeneratorDefaultClauseBeforeNotNull"
    },
    {
      "type": "liquibase.sqlgenerator.core.AddColumnGeneratorSQLite"
    },
    {
      "type": "liquibase.sqlgenerator.core.AddDefaultValueGenerator"
    },
    {
      "type": "liquibase.sqlgenerator.core.AddDefaultValueGeneratorDerby"
    },
    {
      "type": "liquibase.sqlgenerator.core.AddDefaultValueGeneratorInformix"
    },
    {
      "type": "liquibase.sqlgenerator.core.AddDefaultValueGeneratorMSSQL"
    },
    {
      "type": "liquibase.sqlgenerator.core.AddDefaultValueGeneratorMySQL"
    },
    {
      "type": "liquibase.sqlgenerator.core.AddDefaultValueGeneratorOracle"
    },
    {
      "type": "liquibase.sqlgenerator.core.AddDefaultValueGeneratorPostgres"
    },
    {
      "type": "liquibase.sqlgenerator.core.AddDefaultValueGeneratorSQLite"
    },
    {
      "type": "liquibase.sqlgenerator.core.AddDefaultValueGeneratorSybase"
    },
    {
      "type": "liquibase.sqlgenerator.core.AddDefaultValueGeneratorSybaseASA"
    },
    {
      "type": "liquibase.sqlgenerator.core.AddForeignKeyConstraintGenerator"
    },
    {
      "type": "liquibase.sqlgenerator.core.AddPrimaryKeyGenerator"
    },
    {
      "type": "liquibase.sqlgenerator.core.AddPrimaryKeyGeneratorInformix"
    },
    {
      "type": "liquibase.sqlgenerator.core.AddUniqueConstraintGenerator"
    },
    {
      "type": "liquibase.sqlgenerator.core.AddUniqueConstraintGeneratorInformix"
    },
    {
      "type": "liquibase.sqlgenerator.core.AddUniqueConstraintGeneratorTDS"
    },
    {
      "type": "liquibase.sqlgenerator.core.AlterSequenceGenerator"
    },
    {
      "type": "liquibase.sqlgenerator.core.BatchDmlExecutablePreparedStatementGenerator"
    },
    {
      "type": "liquibase.sqlgenerator.core.ClearDatabaseChangeLogTableGenerator"
    },
    {
      "type": "liquibase.sqlgenerator.core.CommentGenerator"
    },
    {
      "type": "liquibase.sqlgenerator.core.CopyRowsGenerator"
    },
    {
      "type": "liquibase.sqlgenerator.core.CreateDatabaseChangeLogLockTableGenerator"
    },
    {
      "type": "liquibase.sqlgenerator.core.CreateDatabaseChangeLogTableGenerator"
    },
    {
      "type": "liquibase.sqlgenerator.core.CreateDatabaseChangeLogTableGeneratorSybase"
    },
    {
      "type": "liquibase.sqlgenerator.core.CreateIndexGenerator"
    },
    {
      "type": "liquibase.sqlgenerator.core.CreateIndexGeneratorFirebird"
    },
    {
      "type": "liquibase.sqlgenerator.core.CreateIndexGeneratorPostgres"
    },
    {
      "type": "liquibase.sqlgenerator.core.CreateProcedureGenerator"
    },
    {
      "type": "liquibase.sqlgenerator.core.CreateSequenceGenerator"
    },
    {
      "type": "liquibase.sqlgenerator.core.CreateSequenceGeneratorSnowflake"
    },
    {
      "type": "liquibase.sqlgenerator.core.CreateTableGenerator"
    },
    {
      "type": "liquibase.sqlgenerator.core.CreateTableGeneratorInformix"
    },
    {
      "type": "liquibase.sqlgenerator.core.CreateViewGenerator"
    },
    {
      "type": "liquibase.sqlgenerator.core.CreateViewGeneratorInformix"
    },
    {
      "type": "liquibase.sqlgenerator.core.DeleteGenerator"
    },
    {
      "type": "liquibase.sqlgenerator.core.DropColumnGenerator"
    },
    {
      "type": "liquibase.sqlgenerator.core.DropDefaultValueGenerator"
    },
    {
      "type": "liquibase.sqlgenerator.core.DropDefaultValueGeneratorSnowflake"
    },
    {
      "type": "liquibase.sqlgenerator.core.DropForeignKeyConstraintGenerator"
    },
    {
      "type": "liquibase.sqlgenerator.core.DropIndexGenerator"
    },
    {
      "type": "liquibase.sqlgenerator.core.DropPrimaryKeyGenerator"
    },
    {
      "type": "liquibase.sqlgenerator.core.DropProcedureGenerator"
    },
    {
      "type": "liquibase.sqlgenerator.core.DropProcedureGeneratorSnowflake"
    },
    {
      "type": "liquibase.sqlgenerator.core.DropSequenceGenerator"
    },
    {
      "type": "liquibase.sqlgenerator.core.DropTableGenerator"
    },
    {
      "type": "liquibase.sqlgenerator.core.DropUniqueConstraintGenerator"
    },
    {
      "type": "liquibase.sqlgenerator.core.DropViewGenerator"
    },
    {
      "type": "liquibase.sqlgenerator.core.GetNextChangeSetSequenceValueGenerator"
    },
    {
      "type": "liquibase.sqlgenerator.core.GetViewDefinitionGenerator"
    },
    {
      "type": "liquibase.sqlgenerator.core.GetViewDefinitionGeneratorDB2"
    },
    {
      "type": "liquibase.sqlgenerator.core.GetViewDefinitionGeneratorDerby"
    },
    {
      "type": "liquibase.sqlgenerator.core.GetViewDefinitionGeneratorFirebird"
    },
    {
      "type": "liquibase.sqlgenerator.core.GetViewDefinitionGeneratorHsql"
    },
    {
      "type": "liquibase.sqlgenerator.core.GetViewDefinitionGeneratorInformix"
    },
    {
      "type": "liquibase.sqlgenerator.core.GetViewDefinitionGeneratorMSSQL"
    },
    {
      "type": "liquibase.sqlgenerator.core.GetViewDefinitionGeneratorOracle"
    },
    {
      "type": "liquibase.sqlgenerator.core.GetViewDefinitionGeneratorPostgres"
    },
    {
      "type": "liquibase.sqlgenerator.core.GetViewDefinitionGeneratorSnowflake"
    },
    {
      "type": "liquibase.sqlgenerator.core.GetViewDefinitionGeneratorSybase"
    },
    {
      "type": "liquibase.sqlgenerator.core.GetViewDefinitionGeneratorSybaseASA"
    },
    {
      "type": "liquibase.sqlgenerator.core.InitializeDatabaseChangeLogLockTableGenerator"
    },
    {
      "type": "liquibase.sqlgenerator.core.InsertDataChangeGenerator"
    },
    {
      "type": "liquibase.sqlgenerator.core.InsertGenerator"
    },
    {
      "type": "liquibase.sqlgenerator.core.InsertOrUpdateGeneratorDB2"
    },
    {
      "type": "liquibase.sqlgenerator.core.InsertOrUpdateGeneratorH2"
    },
    {
      "type": "liquibase.sqlgenerator.core.InsertOrUpdateGeneratorHsql"
    },
    {
      "type": "liquibase.sqlgenerator.core.InsertOrUpdateGeneratorInformix"
    },
    {
      "type": "liquibase.sqlgenerator.core.InsertOrUpdateGeneratorMSSQL"
    },
    {
      "type": "liquibase.sqlgenerator.core.InsertOrUpdateGeneratorMySQL"
    },
    {
      "type": "liquibase.sqlgenerator.core.InsertOrUpdateGeneratorOracle"
    },
    {
      "type": "liquibase.sqlgenerator.core.InsertOrUpdateGeneratorPostgres"
    },
    {
      "type": "liquibase.sqlgenerator.core.InsertOrUpdateGeneratorSQLite"
    },
    {
      "type": "liquibase.sqlgenerator.core.InsertOrUpdateGeneratorSnowflake"
    },
    {
      "type": "liquibase.sqlgenerator.core.InsertOrUpdateGeneratorSybaseASA"
    },
    {
      "type": "liquibase.sqlgenerator.core.InsertSetGenerator"
    },
    {
      "type": "liquibase.sqlgenerator.core.LockDatabaseChangeLogGenerator"
    },
    {
      "type": "liquibase.sqlgenerator.core.MarkChangeSetRanGenerator"
    },
    {
      "type": "liquibase.sqlgenerator.core.ModifyDataTypeGenerator"
    },
    {
      "type": "liquibase.sqlgenerator.core.RawParameterizedSqlGenerator"
    },
    {
      "type": "liquibase.sqlgenerator.core.RawSqlGenerator"
    },
    {
      "type": "liquibase.sqlgenerator.core.ReindexGeneratorSQLite"
    },
    {
      "type": "liquibase.sqlgenerator.core.RemoveChangeSetRanStatusGenerator"
    },
    {
      "type": "liquibase.sqlgenerator.core.RenameColumnGenerator"
    },
    {
      "type": "liquibase.sqlgenerator.core.RenameSequenceGenerator"
    },
    {
      "type": "liquibase.sqlgenerator.core.RenameTableGenerator"
    },
    {
      "type": "liquibase.sqlgenerator.core.RenameTableGeneratorSnowflake"
    },
    {
      "type": "liquibase.sqlgenerator.core.RenameViewGenerator"
    },
    {
      "type": "liquibase.sqlgenerator.core.RenameViewGeneratorSnowflake"
    },
    {
      "type": "liquibase.sqlgenerator.core.ReorganizeTableGeneratorDB2"
    },
    {
      "type": "liquibase.sqlgenerator.core.RuntimeGenerator"
    },
    {
      "type": "liquibase.sqlgenerator.core.SelectFromDatabaseChangeLogGenerator"
    },
    {
      "type": "liquibase.sqlgenerator.core.SelectFromDatabaseChangeLogLockGenerator"
    },
    {
      "type": "liquibase.sqlgenerator.core.SetColumnRemarksGenerator"
    },
    {
      "type": "liquibase.sqlgenerator.core.SetColumnRemarksGeneratorSnowflake"
    },
    {
      "type": "liquibase.sqlgenerator.core.SetNullableGenerator"
    },
    {
      "type": "liquibase.sqlgenerator.core.SetTableRemarksGenerator"
    },
    {
      "type": "liquibase.sqlgenerator.core.SetTableRemarksGeneratorSnowflake"
    },
    {
      "type": "liquibase.sqlgenerator.core.SetViewRemarksGenerator"
    },
    {
      "type": "liquibase.sqlgenerator.core.StoredProcedureGenerator"
    },
    {
      "type": "liquibase.sqlgenerator.core.TableIsEmptyGenerator"
    },
    {
      "type": "liquibase.sqlgenerator.core.TableRowCountGenerator"
    },
    {
      "type": "liquibase.sqlgenerator.core.TagDatabaseGenerator"
    },
    {
      "type": "liquibase.sqlgenerator.core.UnlockDatabaseChangeLogGenerator"
    },
    {
      "type": "liquibase.sqlgenerator.core.UpdateChangeSetChecksumGenerator"
    },
    {
      "type": "liquibase.sqlgenerator.core.UpdateDataChangeGenerator"
    },
    {
      "type": "liquibase.sqlgenerator.core.UpdateGenerator"
    },
    {
      "type": "liquibase.ui.LoggerUIService",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "liquibase.ui.UIServiceEnum"
    },
    {
      "type": "net.ttddyy.dsproxy.ExecutionInfo"
    },
    {
      "type": "net.ttddyy.dsproxy.listener.MethodExecutionContext"
    },
    {
      "type": "net.ttddyy.dsproxy.listener.MethodExecutionListener"
    },
    {
      "type": "net.ttddyy.dsproxy.listener.QueryExecutionListener"
    },
    {
      "type": "net.ttddyy.dsproxy.proxy.ProxyLogicSupport"
    },
    {
      "type": "net.ttddyy.dsproxy.support.ProxyDataSource"
    },
    {
      "type": "net.ttddyy.dsproxy.support.ProxyDataSourceBuilder"
    },
    {
      "type": "net.ttddyy.observation.boot.autoconfigure.DataSourceNameResolver"
    },
    {
      "type": "net.ttddyy.observation.boot.autoconfigure.DataSourceObservationAutoConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "net.ttddyy.observation.boot.autoconfigure.DataSourceObservationAutoConfiguration$ConditionalOnTraceType"
    },
    {
      "type": "net.ttddyy.observation.boot.autoconfigure.DataSourceObservationAutoConfiguration$DataSourceTracing",
      "allDeclaredFields": true
    },
    {
      "type": "net.ttddyy.observation.boot.autoconfigure.DataSourceObservationAutoConfiguration$Hikari",
      "allDeclaredFields": true
    },
    {
      "type": "net.ttddyy.observation.boot.autoconfigure.DataSourceObservationBeanPostProcessor",
      "allDeclaredFields": true
    },
    {
      "type": "net.ttddyy.observation.boot.autoconfigure.DataSourceProxyBuilderConfigurer"
    },
    {
      "type": "net.ttddyy.observation.boot.autoconfigure.DataSourceProxyConnectionIdManagerProvider"
    },
    {
      "type": "net.ttddyy.observation.boot.autoconfigure.DefaultDataSourceNameResolver",
      "allDeclaredFields": true
    },
    {
      "type": "net.ttddyy.observation.boot.autoconfigure.JdbcProperties",
      "allDeclaredFields": true
    },
    {
      "type": "net.ttddyy.observation.boot.autoconfigure.JdbcProperties$DataSourceProxy"
    },
    {
      "type": "net.ttddyy.observation.boot.autoconfigure.JdbcProperties$TraceType"
    },
    {
      "type": "net.ttddyy.observation.boot.autoconfigure.ProxyDataSourceBuilderCustomizer"
    },
    {
      "type": "net.ttddyy.observation.tracing.ConnectionAttributesManager"
    },
    {
      "type": "net.ttddyy.observation.tracing.ConnectionObservationConvention"
    },
    {
      "type": "net.ttddyy.observation.tracing.ConnectionTracingObservationHandler",
      "allDeclaredFields": true
    },
    {
      "type": "net.ttddyy.observation.tracing.DataSourceBaseContext"
    },
    {
      "type": "net.ttddyy.observation.tracing.DataSourceBaseObservationHandler",
      "allDeclaredFields": true
    },
    {
      "type": "net.ttddyy.observation.tracing.DataSourceObservationListener",
      "allDeclaredFields": true
    },
    {
      "type": "net.ttddyy.observation.tracing.HikariJdbcObservationFilter",
      "allDeclaredFields": true
    },
    {
      "type": "net.ttddyy.observation.tracing.JdbcObservationDocumentation"
    },
    {
      "type": "net.ttddyy.observation.tracing.QueryContext"
    },
    {
      "type": "net.ttddyy.observation.tracing.QueryObservationConvention"
    },
    {
      "type": "net.ttddyy.observation.tracing.QueryParametersSpanTagProvider"
    },
    {
      "type": "net.ttddyy.observation.tracing.QueryTracingObservationHandler",
      "allDeclaredFields": true
    },
    {
      "type": "net.ttddyy.observation.tracing.ResultSetObservationConvention"
    },
    {
      "type": "net.ttddyy.observation.tracing.ResultSetTracingObservationHandler",
      "allDeclaredFields": true
    },
    {
      "type": "org.aopalliance.aop.Advice"
    },
    {
      "type": "org.aopalliance.intercept.Interceptor"
    },
    {
      "type": "org.aopalliance.intercept.MethodInterceptor"
    },
    {
      "type": "org.apache.catalina.Context"
    },
    {
      "type": "org.apache.catalina.Engine"
    },
    {
      "type": "org.apache.catalina.Host"
    },
    {
      "type": "org.apache.catalina.LifecycleEvent"
    },
    {
      "type": "org.apache.catalina.LifecycleListener"
    },
    {
      "type": "org.apache.catalina.Manager"
    },
    {
      "type": "org.apache.catalina.Valve"
    },
    {
      "type": "org.apache.catalina.connector.Connector"
    },
    {
      "type": "org.apache.catalina.core.ApplicationContextFacade"
    },
    {
      "type": "org.apache.catalina.loader.JdbcLeakPrevention",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "clearJdbcDriverRegistrations",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.apache.catalina.startup.Tomcat"
    },
    {
      "type": "org.apache.catalina.util.CharsetMapper",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.apache.commons.logging.Log"
    },
    {
      "type": "org.apache.commons.pool2.ObjectPool"
    },
    {
      "type": "org.apache.coyote.AbstractProtocol",
      "methods": [
        {
          "name": "getAddress",
          "parameterTypes": []
        },
        {
          "name": "getLocalPort",
          "parameterTypes": []
        },
        {
          "name": "getProperty",
          "parameterTypes": [
            "java.lang.String"
          ]
        },
        {
          "name": "setPort",
          "parameterTypes": [
            "int"
          ]
        },
        {
          "name": "setProperty",
          "parameterTypes": [
            "java.lang.String",
            "java.lang.String"
          ]
        }
      ]
    },
    {
      "type": "org.apache.coyote.ProtocolHandler"
    },
    {
      "type": "org.apache.coyote.http11.AbstractHttp11Protocol",
      "methods": [
        {
          "name": "isSSLEnabled",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.apache.coyote.http11.Http11NioProtocol"
    },
    {
      "type": "org.apache.derby.jdbc.EmbeddedDriver"
    },
    {
      "type": "org.apache.el.ExpressionFactoryImpl",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.apache.hc.client5.http.classic.HttpClient"
    },
    {
      "type": "org.apache.hc.client5.http.impl.async.CloseableHttpAsyncClient"
    },
    {
      "type": "org.apache.hc.client5.http.impl.classic.HttpClients"
    },
    {
      "type": "org.apache.http.Header"
    },
    {
      "type": "org.apache.http.HttpEntity"
    },
    {
      "type": "org.apache.http.HttpHost"
    },
    {
      "type": "org.apache.http.HttpResponse"
    },
    {
      "type": "org.apache.http.client.config.RequestConfig$Builder",
      "methods": [
        {
          "name": "setNormalizeUri",
          "parameterTypes": [
            "boolean"
          ]
        }
      ]
    },
    {
      "type": "org.apache.http.client.methods.HttpRequestBase"
    },
    {
      "type": "org.apache.http.impl.nio.client.CloseableHttpAsyncClient"
    },
    {
      "type": "org.apache.http.impl.nio.client.HttpAsyncClientBuilder"
    },
    {
      "type": "org.apache.http.nio.client.HttpAsyncClient"
    },
    {
      "type": "org.apache.http.util.VersionInfo"
    },
    {
      "type": "org.apache.jasper.compiler.JspConfig"
    },
    {
      "type": "org.apache.jasper.servlet.JspServlet"
    },
    {
      "type": "org.apache.kafka.clients.admin.Admin"
    },
    {
      "type": "org.apache.kafka.clients.admin.DescribeTopicsResult"
    },
    {
      "type": "org.apache.kafka.clients.admin.NewTopic"
    },
    {
      "type": "org.apache.kafka.clients.admin.TopicDescription"
    },
    {
      "type": "org.apache.kafka.clients.consumer.Consumer"
    },
    {
      "type": "org.apache.kafka.clients.consumer.ConsumerGroupMetadata"
    },
    {
      "type": "org.apache.kafka.clients.consumer.ConsumerRecord"
    },
    {
      "type": "org.apache.kafka.clients.consumer.ConsumerRecords"
    },
    {
      "type": "org.apache.kafka.clients.consumer.CooperativeStickyAssignor",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.apache.kafka.clients.producer.Callback"
    },
    {
      "type": "org.apache.kafka.clients.producer.Producer"
    },
    {
      "type": "org.apache.kafka.clients.producer.ProducerInterceptor"
    },
    {
      "type": "org.apache.kafka.clients.producer.ProducerRecord"
    },
    {
      "type": "org.apache.kafka.clients.producer.RecordMetadata"
    },
    {
      "type": "org.apache.kafka.common.Configurable"
    },
    {
      "type": "org.apache.kafka.common.KafkaFuture"
    },
    {
      "type": "org.apache.kafka.common.TopicPartition"
    },
    {
      "type": "org.apache.kafka.common.config.ConfigResource"
    },
    {
      "type": "org.apache.kafka.common.metrics.stats.CumulativeCount"
    },
    {
      "type": "org.apache.kafka.common.metrics.stats.CumulativeSum"
    },
    {
      "type": "org.apache.kafka.common.serialization.Deserializer"
    },
    {
      "type": "org.apache.kafka.common.serialization.Serializer"
    },
    {
      "type": "org.apache.kafka.common.serialization.StringDeserializer",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.apache.kafka.common.serialization.StringSerializer",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.apache.kafka.common.utils.AppInfoParser$AppInfo"
    },
    {
      "type": "org.apache.kafka.common.utils.AppInfoParser$AppInfoMBean"
    },
    {
      "type": "org.apache.kafka.shaded.com.google.protobuf.ExtensionRegistry",
      "methods": [
        {
          "name": "getEmptyRegistry",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.apache.logging.log4j.core.impl.Log4jContextFactory"
    },
    {
      "type": "org.apache.logging.log4j.spi.ExtendedLogger"
    },
    {
      "type": "org.apache.logging.slf4j.SLF4JProvider"
    },
    {
      "type": "org.apache.tomcat.util.net.AbstractEndpoint",
      "methods": [
        {
          "name": "setBindOnInit",
          "parameterTypes": [
            "boolean"
          ]
        }
      ]
    },
    {
      "type": "org.apache.tomcat.util.net.NioEndpoint"
    },
    {
      "type": "org.apache.tomcat.websocket.server.WsFilter"
    },
    {
      "type": "org.aspectj.lang.annotation.Around"
    },
    {
      "type": "org.aspectj.lang.annotation.Aspect"
    },
    {
      "type": "org.aspectj.weaver.reflect.Java15AnnotationFinder",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.aspectj.weaver.reflect.Java15GenericSignatureInformationProvider",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.aspectj.weaver.World"
          ]
        }
      ]
    },
    {
      "type": "org.aspectj.weaver.reflect.Java15ReflectionBasedReferenceTypeDelegate",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.aspectj.weaver.tools.Jdk14TraceFactory",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.bouncycastle.asn1.ASN1Sequence"
    },
    {
      "type": "org.bouncycastle.jcajce.provider.asymmetric.COMPOSITE$Mappings",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.bouncycastle.jcajce.provider.asymmetric.CompositeSignatures$Mappings",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.bouncycastle.jcajce.provider.asymmetric.DH$Mappings",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.bouncycastle.jcajce.provider.asymmetric.DSA$Mappings",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.bouncycastle.jcajce.provider.asymmetric.DSTU4145$Mappings",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.bouncycastle.jcajce.provider.asymmetric.Dilithium$Mappings",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.bouncycastle.jcajce.provider.asymmetric.EC$Mappings",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.bouncycastle.jcajce.provider.asymmetric.ECGOST$Mappings",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.bouncycastle.jcajce.provider.asymmetric.EXTERNAL$Mappings",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.bouncycastle.jcajce.provider.asymmetric.EdEC$Mappings",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.bouncycastle.jcajce.provider.asymmetric.ElGamal$Mappings",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.bouncycastle.jcajce.provider.asymmetric.Falcon$Mappings",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.bouncycastle.jcajce.provider.asymmetric.GM$Mappings",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.bouncycastle.jcajce.provider.asymmetric.GOST$Mappings",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.bouncycastle.jcajce.provider.asymmetric.IES$Mappings",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.bouncycastle.jcajce.provider.asymmetric.LMS$Mappings",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.bouncycastle.jcajce.provider.asymmetric.NTRU$Mappings",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.bouncycastle.jcajce.provider.asymmetric.RSA$Mappings",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.bouncycastle.jcajce.provider.asymmetric.SPHINCSPlus$Mappings",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.bouncycastle.jcajce.provider.asymmetric.X509$Mappings",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.bouncycastle.jcajce.provider.asymmetric.rsa.KeyFactorySpi",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.bouncycastle.jcajce.provider.digest.Blake2b$Mappings",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.bouncycastle.jcajce.provider.digest.Blake2s$Mappings",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.bouncycastle.jcajce.provider.digest.Blake3$Mappings",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.bouncycastle.jcajce.provider.digest.DSTU7564$Mappings",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.bouncycastle.jcajce.provider.digest.GOST3411$Mappings",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.bouncycastle.jcajce.provider.digest.Haraka$Mappings",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.bouncycastle.jcajce.provider.digest.Keccak$Mappings",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.bouncycastle.jcajce.provider.digest.MD2$Mappings",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.bouncycastle.jcajce.provider.digest.MD4$Mappings",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.bouncycastle.jcajce.provider.digest.MD5$Mappings",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.bouncycastle.jcajce.provider.digest.RIPEMD128$Mappings",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.bouncycastle.jcajce.provider.digest.RIPEMD160$Mappings",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.bouncycastle.jcajce.provider.digest.RIPEMD256$Mappings",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.bouncycastle.jcajce.provider.digest.RIPEMD320$Mappings",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.bouncycastle.jcajce.provider.digest.SHA1$Mappings",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.bouncycastle.jcajce.provider.digest.SHA224$Mappings",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.bouncycastle.jcajce.provider.digest.SHA256$Mappings",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.bouncycastle.jcajce.provider.digest.SHA3$Mappings",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.bouncycastle.jcajce.provider.digest.SHA384$Mappings",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.bouncycastle.jcajce.provider.digest.SHA512$Mappings",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.bouncycastle.jcajce.provider.digest.SM3$Mappings",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.bouncycastle.jcajce.provider.digest.Skein$Mappings",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.bouncycastle.jcajce.provider.digest.Tiger$Mappings",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.bouncycastle.jcajce.provider.digest.Whirlpool$Mappings",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.bouncycastle.jcajce.provider.drbg.DRBG$Mappings",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.bouncycastle.jcajce.provider.keystore.BC$Mappings",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.bouncycastle.jcajce.provider.keystore.BCFKS$Mappings",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.bouncycastle.jcajce.provider.keystore.PKCS12$Mappings",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.bouncycastle.jcajce.provider.symmetric.AES$Mappings",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.bouncycastle.jcajce.provider.symmetric.ARC4$Mappings",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.bouncycastle.jcajce.provider.symmetric.ARIA$Mappings",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.bouncycastle.jcajce.provider.symmetric.Blowfish$Mappings",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.bouncycastle.jcajce.provider.symmetric.CAST5$Mappings",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.bouncycastle.jcajce.provider.symmetric.CAST6$Mappings",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.bouncycastle.jcajce.provider.symmetric.Camellia$Mappings",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.bouncycastle.jcajce.provider.symmetric.ChaCha$Mappings",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.bouncycastle.jcajce.provider.symmetric.DES$Mappings",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.bouncycastle.jcajce.provider.symmetric.DESede$Mappings",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.bouncycastle.jcajce.provider.symmetric.DSTU7624$Mappings",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.bouncycastle.jcajce.provider.symmetric.GOST28147$Mappings",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.bouncycastle.jcajce.provider.symmetric.GOST3412_2015$Mappings",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.bouncycastle.jcajce.provider.symmetric.Grain128$Mappings",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.bouncycastle.jcajce.provider.symmetric.Grainv1$Mappings",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.bouncycastle.jcajce.provider.symmetric.HC128$Mappings",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.bouncycastle.jcajce.provider.symmetric.HC256$Mappings",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.bouncycastle.jcajce.provider.symmetric.IDEA$Mappings",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.bouncycastle.jcajce.provider.symmetric.Noekeon$Mappings",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.bouncycastle.jcajce.provider.symmetric.OpenSSLPBKDF$Mappings",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.bouncycastle.jcajce.provider.symmetric.PBEPBKDF1$Mappings",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.bouncycastle.jcajce.provider.symmetric.PBEPBKDF2$Mappings",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.bouncycastle.jcajce.provider.symmetric.PBEPKCS12$Mappings",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.bouncycastle.jcajce.provider.symmetric.Poly1305$Mappings",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.bouncycastle.jcajce.provider.symmetric.RC2$Mappings",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.bouncycastle.jcajce.provider.symmetric.RC5$Mappings",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.bouncycastle.jcajce.provider.symmetric.RC6$Mappings",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.bouncycastle.jcajce.provider.symmetric.Rijndael$Mappings",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.bouncycastle.jcajce.provider.symmetric.SCRYPT$Mappings",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.bouncycastle.jcajce.provider.symmetric.SEED$Mappings",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.bouncycastle.jcajce.provider.symmetric.SM4$Mappings",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.bouncycastle.jcajce.provider.symmetric.Salsa20$Mappings",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.bouncycastle.jcajce.provider.symmetric.Serpent$Mappings",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.bouncycastle.jcajce.provider.symmetric.Shacal2$Mappings",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.bouncycastle.jcajce.provider.symmetric.SipHash$Mappings",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.bouncycastle.jcajce.provider.symmetric.SipHash128$Mappings",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.bouncycastle.jcajce.provider.symmetric.Skipjack$Mappings",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.bouncycastle.jcajce.provider.symmetric.TEA$Mappings",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.bouncycastle.jcajce.provider.symmetric.TLSKDF$Mappings",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.bouncycastle.jcajce.provider.symmetric.Threefish$Mappings",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.bouncycastle.jcajce.provider.symmetric.Twofish$Mappings",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.bouncycastle.jcajce.provider.symmetric.VMPC$Mappings",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.bouncycastle.jcajce.provider.symmetric.VMPCKSA3$Mappings",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.bouncycastle.jcajce.provider.symmetric.XSalsa20$Mappings",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.bouncycastle.jcajce.provider.symmetric.XTEA$Mappings",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.bouncycastle.jcajce.provider.symmetric.Zuc$Mappings",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.crac.Core"
    },
    {
      "type": "org.eclipse.collections.api.list.ImmutableList"
    },
    {
      "type": "org.eclipse.core.runtime.FileLocator"
    },
    {
      "type": "org.eclipse.jetty.client.HttpClient"
    },
    {
      "type": "org.eclipse.parsson.JsonProviderImpl"
    },
    {
      "type": "org.elasticsearch.client.Cancellable"
    },
    {
      "type": "org.elasticsearch.client.Node"
    },
    {
      "type": "org.elasticsearch.client.NodeSelector"
    },
    {
      "type": "org.elasticsearch.client.Request"
    },
    {
      "type": "org.elasticsearch.client.Response"
    },
    {
      "type": "org.elasticsearch.client.ResponseListener"
    },
    {
      "type": "org.elasticsearch.client.RestClient",
      "allDeclaredFields": true
    },
    {
      "type": "org.elasticsearch.client.RestClient$FailureListener"
    },
    {
      "type": "org.elasticsearch.client.RestClient$FailureTrackingResponseListener"
    },
    {
      "type": "org.elasticsearch.client.RestClient$InternalRequest"
    },
    {
      "type": "org.elasticsearch.client.RestClient$NodeTuple"
    },
    {
      "type": "org.elasticsearch.client.RestClient$ResponseOrResponseException"
    },
    {
      "type": "org.elasticsearch.client.RestClientBuilder",
      "allDeclaredFields": true
    },
    {
      "type": "org.elasticsearch.client.RestClientBuilder$HttpClientConfigCallback"
    },
    {
      "type": "org.elasticsearch.client.RestClientBuilder$RequestConfigCallback"
    },
    {
      "type": "org.elasticsearch.client.WarningsHandler"
    },
    {
      "type": "org.graalvm.nativeimage.ImageInfo",
      "methods": [
        {
          "name": "inImageCode",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.h2.Driver"
    },
    {
      "type": "org.hibernate.validator.HibernateValidator"
    },
    {
      "type": "org.hibernate.validator.internal.constraintvalidators.bv.NotBlankValidator",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.hibernate.validator.internal.constraintvalidators.bv.NotNullValidator",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.hibernate.validator.internal.constraintvalidators.bv.PatternValidator",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.hibernate.validator.internal.constraintvalidators.bv.notempty.NotEmptyValidatorForCollection",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.hibernate.validator.internal.constraintvalidators.bv.number.bound.AbstractMinValidator",
      "allDeclaredFields": true
    },
    {
      "type": "org.hibernate.validator.internal.constraintvalidators.bv.number.bound.MinValidatorForInteger",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.hibernate.validator.internal.constraintvalidators.bv.number.bound.decimal.AbstractDecimalMaxValidator",
      "allDeclaredFields": true
    },
    {
      "type": "org.hibernate.validator.internal.constraintvalidators.bv.number.bound.decimal.AbstractDecimalMinValidator",
      "allDeclaredFields": true
    },
    {
      "type": "org.hibernate.validator.internal.constraintvalidators.bv.number.bound.decimal.DecimalMaxValidatorForBigDecimal",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.hibernate.validator.internal.constraintvalidators.bv.number.bound.decimal.DecimalMinValidatorForBigDecimal",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.hibernate.validator.internal.constraintvalidators.bv.size.SizeValidatorForCharSequence",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.hibernate.validator.internal.engine.AbstractConfigurationImpl",
      "methods": [
        {
          "name": "externalClassLoader",
          "parameterTypes": [
            "java.lang.ClassLoader"
          ]
        }
      ]
    },
    {
      "type": "org.hibernate.validator.internal.engine.ConfigurationImpl"
    },
    {
      "type": "org.hibernate.validator.internal.util.logging.Log_$logger",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.jboss.logging.Logger"
          ]
        }
      ]
    },
    {
      "type": "org.hibernate.validator.internal.util.logging.Log_$logger_nl"
    },
    {
      "type": "org.hibernate.validator.internal.util.logging.Log_$logger_nl_NL"
    },
    {
      "type": "org.hibernate.validator.internal.util.logging.Messages_$bundle",
      "fields": [
        {
          "name": "INSTANCE"
        }
      ]
    },
    {
      "type": "org.hibernate.validator.internal.util.logging.Messages_$bundle_nl"
    },
    {
      "type": "org.hibernate.validator.internal.util.logging.Messages_$bundle_nl_NL"
    },
    {
      "type": "org.hsqldb.jdbc.JDBCDriver"
    },
    {
      "type": "org.jboss.logging.Logger"
    },
    {
      "type": "org.jmolecules.ddd.annotation.Identity"
    },
    {
      "type": "org.jmolecules.ddd.types.Association"
    },
    {
      "type": "org.jmolecules.spring.IdentifierToPrimitivesConverter"
    },
    {
      "type": "org.joda.time.ReadableInstant"
    },
    {
      "type": "org.jruby.runtime.Constants"
    },
    {
      "type": "org.openapi.petstore.v2.model.Pet"
    },
    {
      "type": "org.openapi.petstore.v2.model.Pet$Status"
    },
    {
      "type": "org.postgresql.Driver"
    },
    {
      "type": "org.postgresql.core.QueryExecutorCloseAction",
      "fields": [
        {
          "name": "pgStream"
        }
      ]
    },
    {
      "type": "org.postgresql.geometric.PGBox"
    },
    {
      "type": "org.postgresql.geometric.PGbox"
    },
    {
      "type": "org.postgresql.geometric.PGcircle"
    },
    {
      "type": "org.postgresql.geometric.PGline"
    },
    {
      "type": "org.postgresql.geometric.PGlseg"
    },
    {
      "type": "org.postgresql.geometric.PGpath"
    },
    {
      "type": "org.postgresql.geometric.PGpoint"
    },
    {
      "type": "org.postgresql.geometric.PGpolygon"
    },
    {
      "type": "org.postgresql.jdbc.PgStatement",
      "fields": [
        {
          "name": "cancelTimerTask"
        },
        {
          "name": "isClosed"
        },
        {
          "name": "statementState"
        }
      ]
    },
    {
      "type": "org.postgresql.jdbc.TypeInfoCache"
    },
    {
      "type": "org.postgresql.util.PGobject"
    },
    {
      "type": "org.postgresql.util.PSQLException"
    },
    {
      "type": "org.reactivestreams.Publisher"
    },
    {
      "type": "org.slf4j.Logger"
    },
    {
      "type": "org.slf4j.bridge.SLF4JBridgeHandler"
    },
    {
      "type": "org.slf4j.spi.LocationAwareLogger"
    },
    {
      "type": "org.springdoc.api.AbstractOpenApiResource",
      "allDeclaredFields": true
    },
    {
      "type": "org.springdoc.api.AbstractOpenApiResource$ConditionType"
    },
    {
      "type": "org.springdoc.api.OpenApiResourceNotFoundException"
    },
    {
      "type": "org.springdoc.core.annotations.RouterOperation"
    },
    {
      "type": "org.springdoc.core.configuration.SpringDocConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springdoc.core.configuration.SpringDocConfiguration$OpenApiResourceAdvice",
      "allDeclaredFields": true
    },
    {
      "type": "org.springdoc.core.configuration.SpringDocConfiguration$QuerydslProvider",
      "allDeclaredFields": true
    },
    {
      "type": "org.springdoc.core.configuration.SpringDocConfiguration$SpringDocSpringDataWebPropertiesProvider",
      "allDeclaredFields": true
    },
    {
      "type": "org.springdoc.core.configuration.SpringDocConfiguration$SpringDocWebFluxSupportConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springdoc.core.configuration.SpringDocConfiguration$WebConversionServiceConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springdoc.core.configuration.SpringDocJacksonKotlinModuleConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springdoc.core.configuration.SpringDocKotlinConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springdoc.core.configuration.SpringDocPageableConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springdoc.core.configuration.SpringDocSortConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springdoc.core.configuration.SpringDocUIConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springdoc.core.converters.AdditionalModelsConverter",
      "allDeclaredFields": true
    },
    {
      "type": "org.springdoc.core.converters.FileSupportConverter",
      "allDeclaredFields": true
    },
    {
      "type": "org.springdoc.core.converters.ModelConverterRegistrar",
      "allDeclaredFields": true
    },
    {
      "type": "org.springdoc.core.converters.PageOpenAPIConverter",
      "allDeclaredFields": true
    },
    {
      "type": "org.springdoc.core.converters.PageableOpenAPIConverter",
      "allDeclaredFields": true
    },
    {
      "type": "org.springdoc.core.converters.PolymorphicModelConverter",
      "allDeclaredFields": true
    },
    {
      "type": "org.springdoc.core.converters.PropertyCustomizingConverter"
    },
    {
      "type": "org.springdoc.core.converters.ResponseSupportConverter",
      "allDeclaredFields": true
    },
    {
      "type": "org.springdoc.core.converters.SchemaPropertyDeprecatingConverter",
      "allDeclaredFields": true
    },
    {
      "type": "org.springdoc.core.converters.SortOpenAPIConverter",
      "allDeclaredFields": true
    },
    {
      "type": "org.springdoc.core.converters.WebFluxSupportConverter",
      "allDeclaredFields": true
    },
    {
      "type": "org.springdoc.core.customizers.DataRestDelegatingMethodParameterCustomizer",
      "allDeclaredFields": true
    },
    {
      "type": "org.springdoc.core.customizers.DataRestDelegatingMethodParameterCustomizer$DefaultSort"
    },
    {
      "type": "org.springdoc.core.customizers.DelegatingMethodParameterCustomizer"
    },
    {
      "type": "org.springdoc.core.customizers.GlobalOpenApiCustomizer"
    },
    {
      "type": "org.springdoc.core.customizers.GlobalOperationCustomizer"
    },
    {
      "type": "org.springdoc.core.customizers.OpenApiBuilderCustomizer"
    },
    {
      "type": "org.springdoc.core.customizers.OpenApiCustomizer"
    },
    {
      "type": "org.springdoc.core.customizers.OpenApiLocaleCustomizer"
    },
    {
      "type": "org.springdoc.core.customizers.OperationCustomizer"
    },
    {
      "type": "org.springdoc.core.customizers.OperationIdCustomizer",
      "allDeclaredFields": true
    },
    {
      "type": "org.springdoc.core.customizers.ParameterCustomizer"
    },
    {
      "type": "org.springdoc.core.customizers.ParameterObjectNamingStrategyCustomizer",
      "allDeclaredFields": true
    },
    {
      "type": "org.springdoc.core.customizers.QuerydslPredicateOperationCustomizer"
    },
    {
      "type": "org.springdoc.core.customizers.SpringDocCustomizers",
      "allDeclaredFields": true
    },
    {
      "type": "org.springdoc.core.discoverer.SpringDocParameterNameDiscoverer",
      "allDeclaredFields": true
    },
    {
      "type": "org.springdoc.core.filters.OpenApiMethodFilter"
    },
    {
      "type": "org.springdoc.core.fn.AbstractRouterFunctionVisitor"
    },
    {
      "type": "org.springdoc.core.fn.RouterFunctionData"
    },
    {
      "type": "org.springdoc.core.fn.RouterOperation"
    },
    {
      "type": "org.springdoc.core.models.ControllerAdviceInfo"
    },
    {
      "type": "org.springdoc.core.models.MethodAttributes"
    },
    {
      "type": "org.springdoc.core.models.ParameterId"
    },
    {
      "type": "org.springdoc.core.models.ParameterInfo"
    },
    {
      "type": "org.springdoc.core.models.RequestBodyInfo"
    },
    {
      "type": "org.springdoc.core.properties.AbstractSwaggerUiConfigProperties",
      "allDeclaredFields": true
    },
    {
      "type": "org.springdoc.core.properties.AbstractSwaggerUiConfigProperties$Direction"
    },
    {
      "type": "org.springdoc.core.properties.AbstractSwaggerUiConfigProperties$SwaggerUrl"
    },
    {
      "type": "org.springdoc.core.properties.SpringDocConfigProperties",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "getPathsToMatch",
          "parameterTypes": []
        },
        {
          "name": "setPathsToMatch",
          "parameterTypes": [
            "java.util.List"
          ]
        }
      ]
    },
    {
      "type": "org.springdoc.core.properties.SpringDocConfigProperties$ApiDocs"
    },
    {
      "type": "org.springdoc.core.properties.SpringDocConfigProperties$Cache"
    },
    {
      "type": "org.springdoc.core.properties.SpringDocConfigProperties$GroupConfig"
    },
    {
      "type": "org.springdoc.core.properties.SpringDocConfigProperties$ModelConverters"
    },
    {
      "type": "org.springdoc.core.properties.SpringDocConfigProperties$SortConverter"
    },
    {
      "type": "org.springdoc.core.properties.SpringDocConfigProperties$Webjars"
    },
    {
      "type": "org.springdoc.core.properties.SwaggerUiConfigParameters"
    },
    {
      "type": "org.springdoc.core.properties.SwaggerUiConfigProperties",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "setDisableSwaggerDefaultUrl",
          "parameterTypes": [
            "boolean"
          ]
        }
      ]
    },
    {
      "type": "org.springdoc.core.properties.SwaggerUiConfigProperties$Csrf"
    },
    {
      "type": "org.springdoc.core.properties.SwaggerUiConfigProperties$SyntaxHighlight"
    },
    {
      "type": "org.springdoc.core.properties.SwaggerUiOAuthProperties",
      "allDeclaredFields": true
    },
    {
      "type": "org.springdoc.core.providers.ActuatorProvider"
    },
    {
      "type": "org.springdoc.core.providers.CloudFunctionProvider"
    },
    {
      "type": "org.springdoc.core.providers.JavadocProvider"
    },
    {
      "type": "org.springdoc.core.providers.ObjectMapperProvider",
      "allDeclaredFields": true
    },
    {
      "type": "org.springdoc.core.providers.RepositoryRestResourceProvider"
    },
    {
      "type": "org.springdoc.core.providers.RouterFunctionProvider"
    },
    {
      "type": "org.springdoc.core.providers.SpringDataWebPropertiesProvider",
      "allDeclaredFields": true
    },
    {
      "type": "org.springdoc.core.providers.SpringDocProviders",
      "allDeclaredFields": true
    },
    {
      "type": "org.springdoc.core.providers.SpringWebProvider",
      "allDeclaredFields": true
    },
    {
      "type": "org.springdoc.core.providers.WebConversionServiceProvider",
      "allDeclaredFields": true
    },
    {
      "type": "org.springdoc.core.service.AbstractRequestService",
      "allDeclaredFields": true
    },
    {
      "type": "org.springdoc.core.service.GenericParameterService",
      "allDeclaredFields": true
    },
    {
      "type": "org.springdoc.core.service.GenericResponseService",
      "allDeclaredFields": true
    },
    {
      "type": "org.springdoc.core.service.OpenAPIService",
      "allDeclaredFields": true
    },
    {
      "type": "org.springdoc.core.service.OperationService",
      "allDeclaredFields": true
    },
    {
      "type": "org.springdoc.core.service.RequestBodyService",
      "allDeclaredFields": true
    },
    {
      "type": "org.springdoc.core.service.SecurityService",
      "allDeclaredFields": true
    },
    {
      "type": "org.springdoc.core.utils.Constants",
      "allPublicFields": true
    },
    {
      "type": "org.springdoc.core.utils.PropertyResolverUtils",
      "allDeclaredFields": true
    },
    {
      "type": "org.springdoc.ui.AbstractSwaggerIndexTransformer",
      "allDeclaredFields": true
    },
    {
      "type": "org.springdoc.ui.AbstractSwaggerWelcome",
      "allDeclaredFields": true
    },
    {
      "type": "org.springdoc.webmvc.api.OpenApiActuatorResource"
    },
    {
      "type": "org.springdoc.webmvc.api.OpenApiResource",
      "allDeclaredFields": true
    },
    {
      "type": "org.springdoc.webmvc.api.OpenApiWebMvcResource",
      "allDeclaredFields": true
    },
    {
      "type": "org.springdoc.webmvc.core.configuration.SpringDocWebMvcConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springdoc.webmvc.core.configuration.SpringDocWebMvcConfiguration$SpringDocWebMvcActuatorConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springdoc.webmvc.core.configuration.SpringDocWebMvcConfiguration$SpringDocWebMvcRouterConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springdoc.webmvc.core.providers.RouterFunctionWebMvcProvider",
      "allDeclaredFields": true
    },
    {
      "type": "org.springdoc.webmvc.core.providers.SpringWebMvcProvider",
      "allDeclaredFields": true
    },
    {
      "type": "org.springdoc.webmvc.core.service.RequestService",
      "allDeclaredFields": true
    },
    {
      "type": "org.springdoc.webmvc.ui.SwaggerConfig",
      "allDeclaredFields": true
    },
    {
      "type": "org.springdoc.webmvc.ui.SwaggerConfigResource",
      "allDeclaredFields": true
    },
    {
      "type": "org.springdoc.webmvc.ui.SwaggerIndexPageTransformer",
      "allDeclaredFields": true
    },
    {
      "type": "org.springdoc.webmvc.ui.SwaggerIndexTransformer"
    },
    {
      "type": "org.springdoc.webmvc.ui.SwaggerResourceResolver",
      "allDeclaredFields": true
    },
    {
      "type": "org.springdoc.webmvc.ui.SwaggerUiHome"
    },
    {
      "type": "org.springdoc.webmvc.ui.SwaggerWebMvcConfigurer",
      "allDeclaredFields": true
    },
    {
      "type": "org.springdoc.webmvc.ui.SwaggerWelcomeCommon",
      "allDeclaredFields": true
    },
    {
      "type": "org.springdoc.webmvc.ui.SwaggerWelcomeWebMvc",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.ai.autoconfigure.chat.client.ChatClientAutoConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.ai.autoconfigure.chat.client.ChatClientBuilderConfigurer",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.ai.autoconfigure.chat.client.ChatClientBuilderProperties",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.ai.autoconfigure.chat.client.ChatClientBuilderProperties$Observations"
    },
    {
      "type": "org.springframework.ai.autoconfigure.chat.observation.ChatObservationAutoConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.ai.autoconfigure.chat.observation.ChatObservationAutoConfiguration$FallbackChatContentObservationConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.ai.autoconfigure.chat.observation.ChatObservationAutoConfiguration$TracingChatContentObservationConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.ai.autoconfigure.chat.observation.ChatObservationProperties",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.ai.autoconfigure.embedding.observation.EmbeddingObservationAutoConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.ai.autoconfigure.image.observation.ImageObservationAutoConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.ai.autoconfigure.image.observation.ImageObservationProperties",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.ai.autoconfigure.ollama.OllamaAutoConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.ai.autoconfigure.ollama.OllamaAutoConfiguration$PropertiesOllamaConnectionDetails",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.ai.autoconfigure.ollama.OllamaChatProperties",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "setModel",
          "parameterTypes": [
            "java.lang.String"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.ai.autoconfigure.ollama.OllamaConnectionDetails"
    },
    {
      "type": "org.springframework.ai.autoconfigure.ollama.OllamaConnectionProperties",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "setBaseUrl",
          "parameterTypes": [
            "java.lang.String"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.ai.autoconfigure.ollama.OllamaEmbeddingProperties",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "setModel",
          "parameterTypes": [
            "java.lang.String"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.ai.autoconfigure.ollama.OllamaInitializationProperties",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.ai.autoconfigure.ollama.OllamaInitializationProperties$ModelTypeInit"
    },
    {
      "type": "org.springframework.ai.autoconfigure.retry.SpringAiRetryAutoConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.ai.autoconfigure.retry.SpringAiRetryAutoConfiguration$2",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.ai.autoconfigure.retry.SpringAiRetryProperties",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.ai.autoconfigure.retry.SpringAiRetryProperties$Backoff"
    },
    {
      "type": "org.springframework.ai.autoconfigure.vectorstore.CommonVectorStoreProperties",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "setInitializeSchema",
          "parameterTypes": [
            "boolean"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.ai.autoconfigure.vectorstore.observation.VectorStoreObservationAutoConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.ai.autoconfigure.vectorstore.observation.VectorStoreObservationAutoConfiguration$FallbackVectorStoreQueryResponseContentObservationConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.ai.autoconfigure.vectorstore.observation.VectorStoreObservationProperties",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.ai.autoconfigure.vectorstore.pgvector.PgVectorStoreAutoConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.ai.autoconfigure.vectorstore.pgvector.PgVectorStoreProperties",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.ai.chat.client.ChatClient"
    },
    {
      "type": "org.springframework.ai.chat.client.ChatClient$AdvisorSpec"
    },
    {
      "type": "org.springframework.ai.chat.client.ChatClient$Builder"
    },
    {
      "type": "org.springframework.ai.chat.client.ChatClient$ChatClientRequestSpec"
    },
    {
      "type": "org.springframework.ai.chat.client.ChatClient$PromptSystemSpec"
    },
    {
      "type": "org.springframework.ai.chat.client.DefaultChatClient",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.ai.chat.client.DefaultChatClient$DefaultChatClientRequestSpec"
    },
    {
      "type": "org.springframework.ai.chat.client.DefaultChatClientBuilder",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.ai.chat.client.advisor.MessageChatMemoryAdvisor"
    },
    {
      "type": "org.springframework.ai.chat.client.advisor.RetrievalAugmentationAdvisor"
    },
    {
      "type": "org.springframework.ai.chat.client.advisor.SimpleLoggerAdvisor"
    },
    {
      "type": "org.springframework.ai.chat.client.advisor.api.AdvisedRequest"
    },
    {
      "type": "org.springframework.ai.chat.client.advisor.api.Advisor"
    },
    {
      "type": "org.springframework.ai.chat.client.observation.ChatClientInputContentObservationFilter"
    },
    {
      "type": "org.springframework.ai.chat.client.observation.ChatClientObservationConvention"
    },
    {
      "type": "org.springframework.ai.chat.memory.ChatMemory"
    },
    {
      "type": "org.springframework.ai.chat.messages.AbstractMessage",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "getMessageType",
          "parameterTypes": []
        },
        {
          "name": "getMetadata",
          "parameterTypes": []
        },
        {
          "name": "getText",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.ai.chat.messages.AssistantMessage",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "getMedia",
          "parameterTypes": []
        },
        {
          "name": "getToolCalls",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.ai.chat.messages.AssistantMessage$ToolCall",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.ai.chat.messages.Message",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.ai.chat.messages.MessageType",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.ai.chat.messages.ToolResponseMessage"
    },
    {
      "type": "org.springframework.ai.chat.messages.ToolResponseMessage$ToolResponse"
    },
    {
      "type": "org.springframework.ai.chat.metadata.ChatGenerationMetadata",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.ai.chat.metadata.ChatResponseMetadata",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "getId",
          "parameterTypes": []
        },
        {
          "name": "getModel",
          "parameterTypes": []
        },
        {
          "name": "getPromptMetadata",
          "parameterTypes": []
        },
        {
          "name": "getRateLimit",
          "parameterTypes": []
        },
        {
          "name": "getUsage",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.ai.chat.metadata.ChatResponseMetadata$Builder"
    },
    {
      "type": "org.springframework.ai.chat.metadata.DefaultChatGenerationMetadata",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "getContentFilters",
          "parameterTypes": []
        },
        {
          "name": "getFinishReason",
          "parameterTypes": []
        },
        {
          "name": "isEmpty",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.ai.chat.metadata.EmptyRateLimit",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "getRequestsLimit",
          "parameterTypes": []
        },
        {
          "name": "getRequestsRemaining",
          "parameterTypes": []
        },
        {
          "name": "getRequestsReset",
          "parameterTypes": []
        },
        {
          "name": "getTokensLimit",
          "parameterTypes": []
        },
        {
          "name": "getTokensRemaining",
          "parameterTypes": []
        },
        {
          "name": "getTokensReset",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.ai.chat.metadata.PromptMetadata"
    },
    {
      "type": "org.springframework.ai.chat.metadata.RateLimit",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.ai.chat.metadata.Usage",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.ai.chat.model.AbstractToolCallSupport",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.ai.chat.model.ChatModel"
    },
    {
      "type": "org.springframework.ai.chat.model.ChatResponse",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "getMetadata",
          "parameterTypes": []
        },
        {
          "name": "getResult",
          "parameterTypes": []
        },
        {
          "name": "getResults",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.ai.chat.model.ChatResponse$Builder"
    },
    {
      "type": "org.springframework.ai.chat.model.Generation",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "getMetadata",
          "parameterTypes": []
        },
        {
          "name": "getOutput",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.ai.chat.model.MessageAggregator"
    },
    {
      "type": "org.springframework.ai.chat.model.MessageAggregator$DefaultUsage",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "getGenerationTokens",
          "parameterTypes": []
        },
        {
          "name": "getPromptTokens",
          "parameterTypes": []
        },
        {
          "name": "getTotalTokens",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.ai.chat.model.StreamingChatModel"
    },
    {
      "type": "org.springframework.ai.chat.model.ToolContext"
    },
    {
      "type": "org.springframework.ai.chat.observation.ChatModelCompletionObservationFilter"
    },
    {
      "type": "org.springframework.ai.chat.observation.ChatModelMeterObservationHandler",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.ai.chat.observation.ChatModelObservationContext"
    },
    {
      "type": "org.springframework.ai.chat.observation.ChatModelObservationConvention"
    },
    {
      "type": "org.springframework.ai.chat.observation.ChatModelPromptContentObservationFilter"
    },
    {
      "type": "org.springframework.ai.chat.prompt.ChatOptions",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.ai.chat.prompt.Prompt"
    },
    {
      "type": "org.springframework.ai.document.Document"
    },
    {
      "type": "org.springframework.ai.document.DocumentWriter"
    },
    {
      "type": "org.springframework.ai.embedding.AbstractEmbeddingModel",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.ai.embedding.BatchingStrategy"
    },
    {
      "type": "org.springframework.ai.embedding.Embedding"
    },
    {
      "type": "org.springframework.ai.embedding.EmbeddingModel"
    },
    {
      "type": "org.springframework.ai.embedding.EmbeddingOptions",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.ai.embedding.EmbeddingRequest"
    },
    {
      "type": "org.springframework.ai.embedding.EmbeddingResponse"
    },
    {
      "type": "org.springframework.ai.embedding.TokenCountBatchingStrategy",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.ai.embedding.observation.EmbeddingModelMeterObservationHandler",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.ai.embedding.observation.EmbeddingModelObservationContext"
    },
    {
      "type": "org.springframework.ai.embedding.observation.EmbeddingModelObservationConvention"
    },
    {
      "type": "org.springframework.ai.image.observation.ImageModelPromptContentObservationFilter"
    },
    {
      "type": "org.springframework.ai.model.AbstractResponseMetadata",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "isEmpty",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.ai.model.Content",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.ai.model.Media"
    },
    {
      "type": "org.springframework.ai.model.MediaContent",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.ai.model.Model"
    },
    {
      "type": "org.springframework.ai.model.ModelOptions",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.ai.model.ModelResponse",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.ai.model.ModelResult",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.ai.model.ResponseMetadata",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.ai.model.ResultMetadata",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.ai.model.StreamingModel"
    },
    {
      "type": "org.springframework.ai.model.function.AbstractFunctionCallback",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.ai.model.function.DefaultFunctionCallbackResolver",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.ai.model.function.FunctionCallback"
    },
    {
      "type": "org.springframework.ai.model.function.FunctionCallback$Builder"
    },
    {
      "type": "org.springframework.ai.model.function.FunctionCallback$SchemaType"
    },
    {
      "type": "org.springframework.ai.model.function.FunctionCallbackResolver"
    },
    {
      "type": "org.springframework.ai.model.function.FunctionCallingOptions",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.ai.model.function.FunctionInvokingFunctionCallback",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.ai.model.observation.ErrorLoggingObservationHandler"
    },
    {
      "type": "org.springframework.ai.ollama.OllamaChatModel",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.ai.ollama.OllamaChatModel$Builder"
    },
    {
      "type": "org.springframework.ai.ollama.OllamaEmbeddingModel",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.ai.ollama.OllamaEmbeddingModel$Builder"
    },
    {
      "type": "org.springframework.ai.ollama.api.OllamaApi",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.ai.ollama.api.OllamaApi$ChatRequest",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "format",
          "parameterTypes": []
        },
        {
          "name": "keepAlive",
          "parameterTypes": []
        },
        {
          "name": "messages",
          "parameterTypes": []
        },
        {
          "name": "model",
          "parameterTypes": []
        },
        {
          "name": "options",
          "parameterTypes": []
        },
        {
          "name": "stream",
          "parameterTypes": []
        },
        {
          "name": "tools",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.ai.ollama.api.OllamaApi$ChatRequest$Builder"
    },
    {
      "type": "org.springframework.ai.ollama.api.OllamaApi$ChatRequest$Tool",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "function",
          "parameterTypes": []
        },
        {
          "name": "type",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.ai.ollama.api.OllamaApi$ChatRequest$Tool$Function",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "description",
          "parameterTypes": []
        },
        {
          "name": "name",
          "parameterTypes": []
        },
        {
          "name": "parameters",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.ai.ollama.api.OllamaApi$ChatRequest$Tool$Type",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.ai.ollama.api.OllamaApi$ChatResponse",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.String",
            "java.time.Instant",
            "org.springframework.ai.ollama.api.OllamaApi$Message",
            "java.lang.String",
            "java.lang.Boolean",
            "java.lang.Long",
            "java.lang.Long",
            "java.lang.Integer",
            "java.lang.Long",
            "java.lang.Integer",
            "java.lang.Long"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.ai.ollama.api.OllamaApi$CopyModelRequest"
    },
    {
      "type": "org.springframework.ai.ollama.api.OllamaApi$DeleteModelRequest"
    },
    {
      "type": "org.springframework.ai.ollama.api.OllamaApi$EmbeddingsRequest",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "input",
          "parameterTypes": []
        },
        {
          "name": "keepAlive",
          "parameterTypes": []
        },
        {
          "name": "model",
          "parameterTypes": []
        },
        {
          "name": "options",
          "parameterTypes": []
        },
        {
          "name": "truncate",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.ai.ollama.api.OllamaApi$EmbeddingsResponse",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.String",
            "java.util.List",
            "java.lang.Long",
            "java.lang.Long",
            "java.lang.Integer"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.ai.ollama.api.OllamaApi$ListModelResponse"
    },
    {
      "type": "org.springframework.ai.ollama.api.OllamaApi$Message",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.springframework.ai.ollama.api.OllamaApi$Message$Role",
            "java.lang.String",
            "java.util.List",
            "java.util.List"
          ]
        },
        {
          "name": "content",
          "parameterTypes": []
        },
        {
          "name": "images",
          "parameterTypes": []
        },
        {
          "name": "role",
          "parameterTypes": []
        },
        {
          "name": "toolCalls",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.ai.ollama.api.OllamaApi$Message$Builder"
    },
    {
      "type": "org.springframework.ai.ollama.api.OllamaApi$Message$Role",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.ai.ollama.api.OllamaApi$Message$ToolCall",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.springframework.ai.ollama.api.OllamaApi$Message$ToolCallFunction"
          ]
        },
        {
          "name": "function",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.ai.ollama.api.OllamaApi$Message$ToolCallFunction",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.String",
            "java.util.Map"
          ]
        },
        {
          "name": "arguments",
          "parameterTypes": []
        },
        {
          "name": "name",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.ai.ollama.api.OllamaApi$PullModelRequest"
    },
    {
      "type": "org.springframework.ai.ollama.api.OllamaApi$ShowModelRequest"
    },
    {
      "type": "org.springframework.ai.ollama.api.OllamaApi$ShowModelResponse"
    },
    {
      "type": "org.springframework.ai.ollama.api.OllamaOptions",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "getF16KV",
          "parameterTypes": []
        },
        {
          "name": "getFormat",
          "parameterTypes": []
        },
        {
          "name": "getFrequencyPenalty",
          "parameterTypes": []
        },
        {
          "name": "getKeepAlive",
          "parameterTypes": []
        },
        {
          "name": "getLogitsAll",
          "parameterTypes": []
        },
        {
          "name": "getLowVRAM",
          "parameterTypes": []
        },
        {
          "name": "getMainGPU",
          "parameterTypes": []
        },
        {
          "name": "getMirostat",
          "parameterTypes": []
        },
        {
          "name": "getMirostatEta",
          "parameterTypes": []
        },
        {
          "name": "getMirostatTau",
          "parameterTypes": []
        },
        {
          "name": "getModel",
          "parameterTypes": []
        },
        {
          "name": "getNumBatch",
          "parameterTypes": []
        },
        {
          "name": "getNumCtx",
          "parameterTypes": []
        },
        {
          "name": "getNumGPU",
          "parameterTypes": []
        },
        {
          "name": "getNumKeep",
          "parameterTypes": []
        },
        {
          "name": "getNumPredict",
          "parameterTypes": []
        },
        {
          "name": "getNumThread",
          "parameterTypes": []
        },
        {
          "name": "getPenalizeNewline",
          "parameterTypes": []
        },
        {
          "name": "getPresencePenalty",
          "parameterTypes": []
        },
        {
          "name": "getRepeatLastN",
          "parameterTypes": []
        },
        {
          "name": "getRepeatPenalty",
          "parameterTypes": []
        },
        {
          "name": "getSeed",
          "parameterTypes": []
        },
        {
          "name": "getStop",
          "parameterTypes": []
        },
        {
          "name": "getTemperature",
          "parameterTypes": []
        },
        {
          "name": "getTfsZ",
          "parameterTypes": []
        },
        {
          "name": "getTopK",
          "parameterTypes": []
        },
        {
          "name": "getTopP",
          "parameterTypes": []
        },
        {
          "name": "getTruncate",
          "parameterTypes": []
        },
        {
          "name": "getTypicalP",
          "parameterTypes": []
        },
        {
          "name": "getUseMLock",
          "parameterTypes": []
        },
        {
          "name": "getUseMMap",
          "parameterTypes": []
        },
        {
          "name": "getUseNUMA",
          "parameterTypes": []
        },
        {
          "name": "getVocabOnly",
          "parameterTypes": []
        },
        {
          "name": "setModel",
          "parameterTypes": [
            "java.lang.String"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.ai.ollama.api.OllamaOptions$Builder"
    },
    {
      "type": "org.springframework.ai.ollama.management.PullModelStrategy"
    },
    {
      "type": "org.springframework.ai.vectorstore.SearchRequest"
    },
    {
      "type": "org.springframework.ai.vectorstore.VectorStore"
    },
    {
      "type": "org.springframework.ai.vectorstore.filter.Filter$Expression"
    },
    {
      "type": "org.springframework.ai.vectorstore.observation.AbstractObservationVectorStore",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.ai.vectorstore.observation.VectorStoreObservationContext"
    },
    {
      "type": "org.springframework.ai.vectorstore.observation.VectorStoreObservationContext$Builder"
    },
    {
      "type": "org.springframework.ai.vectorstore.observation.VectorStoreObservationConvention"
    },
    {
      "type": "org.springframework.ai.vectorstore.observation.VectorStoreQueryResponseObservationFilter"
    },
    {
      "type": "org.springframework.ai.vectorstore.pgvector.PgVectorStore",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.ai.vectorstore.pgvector.PgVectorStore$PgDistanceType"
    },
    {
      "type": "org.springframework.ai.vectorstore.pgvector.PgVectorStore$PgIndexType"
    },
    {
      "type": "org.springframework.ai.vectorstore.pgvector.PgVectorStore$PgVectorStoreBuilder"
    },
    {
      "type": "org.springframework.aop.Advisor"
    },
    {
      "type": "org.springframework.aop.IntroductionAdvisor"
    },
    {
      "type": "org.springframework.aop.IntroductionInfo"
    },
    {
      "type": "org.springframework.aop.PointcutAdvisor"
    },
    {
      "type": "org.springframework.aop.SpringProxy"
    },
    {
      "type": "org.springframework.aop.TargetClassAware",
      "methods": [
        {
          "name": "getTargetClass",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.aop.TargetSource"
    },
    {
      "type": "org.springframework.aop.aspectj.annotation.AnnotationAwareAspectJAutoProxyCreator"
    },
    {
      "type": "org.springframework.aop.framework.Advised",
      "methods": [
        {
          "name": "isFrozen",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.aop.framework.AdvisedSupport",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "setTargetSource",
          "parameterTypes": [
            "org.springframework.aop.TargetSource"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.aop.framework.AdvisedSupportListener"
    },
    {
      "type": "org.springframework.aop.framework.AdvisorChainFactory"
    },
    {
      "type": "org.springframework.aop.framework.AopConfigException"
    },
    {
      "type": "org.springframework.aop.framework.AopInfrastructureBean"
    },
    {
      "type": "org.springframework.aop.framework.AopProxy"
    },
    {
      "type": "org.springframework.aop.framework.AopProxyFactory"
    },
    {
      "type": "org.springframework.aop.framework.ProxyConfig",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "setProxyTargetClass",
          "parameterTypes": [
            "boolean"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.aop.framework.ProxyCreatorSupport",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.aop.framework.ProxyFactoryBean",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.aop.framework.ProxyProcessorSupport",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "setOrder",
          "parameterTypes": [
            "int"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.aop.framework.adapter.AdvisorAdapterRegistry"
    },
    {
      "type": "org.springframework.aop.scope.ScopedObject"
    },
    {
      "type": "org.springframework.aop.support.AbstractBeanFactoryPointcutAdvisor"
    },
    {
      "type": "org.springframework.aop.support.AbstractPointcutAdvisor"
    },
    {
      "type": "org.springframework.aop.target.AbstractBeanFactoryBasedTargetSource",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "setTargetBeanName",
          "parameterTypes": [
            "java.lang.String"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.aop.target.LazyInitTargetSource",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.aot.generate.Generated"
    },
    {
      "type": "org.springframework.aot.hint.annotation.Reflective"
    },
    {
      "type": "org.springframework.beans.BeanWrapper"
    },
    {
      "type": "org.springframework.beans.BeansException"
    },
    {
      "type": "org.springframework.beans.TypeConverter"
    },
    {
      "type": "org.springframework.beans.factory.Aware"
    },
    {
      "type": "org.springframework.beans.factory.BeanClassLoaderAware"
    },
    {
      "type": "org.springframework.beans.factory.BeanFactory"
    },
    {
      "type": "org.springframework.beans.factory.BeanFactoryAware"
    },
    {
      "type": "org.springframework.beans.factory.BeanNameAware"
    },
    {
      "type": "org.springframework.beans.factory.DisposableBean"
    },
    {
      "type": "org.springframework.beans.factory.FactoryBean"
    },
    {
      "type": "org.springframework.beans.factory.InitializingBean"
    },
    {
      "type": "org.springframework.beans.factory.ListableBeanFactory"
    },
    {
      "type": "org.springframework.beans.factory.NoSuchBeanDefinitionException"
    },
    {
      "type": "org.springframework.beans.factory.ObjectFactory"
    },
    {
      "type": "org.springframework.beans.factory.ObjectProvider"
    },
    {
      "type": "org.springframework.beans.factory.SmartInitializingSingleton"
    },
    {
      "type": "org.springframework.beans.factory.annotation.Autowired"
    },
    {
      "type": "org.springframework.beans.factory.annotation.Qualifier"
    },
    {
      "type": "org.springframework.beans.factory.annotation.Value"
    },
    {
      "type": "org.springframework.beans.factory.config.AbstractFactoryBean",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.beans.factory.config.BeanDefinition"
    },
    {
      "type": "org.springframework.beans.factory.config.BeanFactoryPostProcessor"
    },
    {
      "type": "org.springframework.beans.factory.config.BeanPostProcessor"
    },
    {
      "type": "org.springframework.beans.factory.config.ConfigurableBeanFactory"
    },
    {
      "type": "org.springframework.beans.factory.config.ConfigurableListableBeanFactory"
    },
    {
      "type": "org.springframework.beans.factory.config.InstantiationAwareBeanPostProcessor"
    },
    {
      "type": "org.springframework.beans.factory.config.ObjectFactoryCreatingFactoryBean",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "setTargetBeanName",
          "parameterTypes": [
            "java.lang.String"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.beans.factory.config.ObjectFactoryCreatingFactoryBean$TargetBeanObjectFactory",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.beans.factory.config.SmartInstantiationAwareBeanPostProcessor"
    },
    {
      "type": "org.springframework.beans.factory.support.BeanDefinitionRegistry"
    },
    {
      "type": "org.springframework.beans.factory.support.NullBean",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.ApplicationProperties",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "setBannerMode",
          "parameterTypes": [
            "org.springframework.boot.Banner$Mode"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.Banner$ModeEditor"
    },
    {
      "type": "org.springframework.boot.ClearCachesApplicationListener",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.LazyInitializationExcludeFilter"
    },
    {
      "type": "org.springframework.boot.SpringApplication"
    },
    {
      "type": "org.springframework.boot.SpringBootConfiguration"
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.availability.AvailabilityHealthContributorAutoConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.data.elasticsearch.ElasticsearchReactiveHealthContributorAutoConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.data.redis.RedisHealthContributorAutoConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.data.redis.RedisReactiveHealthContributorAutoConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.elasticsearch.ElasticsearchRestHealthContributorAutoConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.endpoint.EndpointAutoConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.endpoint.PropertiesEndpointAccessResolver",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.endpoint.condition.ConditionalOnAvailableEndpoint"
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.endpoint.expose.IncludeExcludeEndpointFilter",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.endpoint.jackson.JacksonEndpointAutoConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.endpoint.web.CorsEndpointProperties",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.endpoint.web.MappingWebEndpointPathMapper",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.endpoint.web.ServletEndpointManagementContextConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.endpoint.web.ServletEndpointManagementContextConfiguration$WebMvcServletEndpointManagementContextConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointAutoConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointAutoConfiguration$WebEndpointServletConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointProperties",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "getExposure",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointProperties$Discovery"
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointProperties$Exposure",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "getInclude",
          "parameterTypes": []
        },
        {
          "name": "setInclude",
          "parameterTypes": [
            "java.util.Set"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.endpoint.web.servlet.WebMvcEndpointManagementContextConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.endpoint.web.servlet.WebMvcEndpointManagementContextConfiguration$EndpointObjectMapperWebMvcConfigurer",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.health.AbstractCompositeHealthContributorConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.health.AutoConfiguredHealthContributorRegistry",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.health.AutoConfiguredHealthEndpointGroups",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.health.AutoConfiguredReactiveHealthContributorRegistry",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.health.CompositeHealthContributorConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.health.CompositeReactiveHealthContributorConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.health.ConditionalOnEnabledHealthIndicator"
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.health.HealthContributorAutoConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.health.HealthEndpointAutoConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.health.HealthEndpointConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.health.HealthEndpointConfiguration$HealthEndpointGroupMembershipValidator",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.health.HealthEndpointConfiguration$HealthEndpointGroupsBeanPostProcessor",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.health.HealthEndpointProperties",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "setShowDetails",
          "parameterTypes": [
            "org.springframework.boot.actuate.endpoint.Show"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.health.HealthEndpointProperties$Group"
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.health.HealthEndpointProperties$Logging"
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.health.HealthEndpointWebExtensionConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.health.HealthEndpointWebExtensionConfiguration$MvcAdditionalHealthEndpointPathsConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.health.HealthProperties",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.health.HealthProperties$Status"
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.health.ReactiveHealthEndpointConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.info.ConditionalOnEnabledInfoContributor"
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.info.InfoContributorAutoConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.info.InfoContributorProperties",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.info.InfoContributorProperties$Git"
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.jdbc.DataSourceHealthContributorAutoConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.jdbc.DataSourceHealthIndicatorProperties",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.metrics.CompositeMeterRegistryAutoConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.metrics.JvmMetricsAutoConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.metrics.KafkaMetricsAutoConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.metrics.KafkaMetricsAutoConfiguration$KafkaStreamsMetricsConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.metrics.LogbackMetricsAutoConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.metrics.MeterRegistryCustomizer"
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.metrics.MeterRegistryPostProcessor",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.metrics.MetricsAutoConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.metrics.MetricsAutoConfiguration$MeterRegistryCloser",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties$Data"
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties$Distribution"
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties$System"
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties$Web"
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.metrics.PropertiesMeterFilter",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.metrics.ServiceLevelObjectiveBoundary"
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.metrics.SystemMetricsAutoConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.metrics.cache.CacheMeterBinderProvidersConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.metrics.cache.CacheMeterBinderProvidersConfiguration$RedisCacheMeterBinderProviderConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.metrics.cache.CacheMetricsAutoConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.metrics.cache.CacheMetricsRegistrarConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.metrics.data.MetricsRepositoryMethodInvocationListenerBeanPostProcessor",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.metrics.data.RepositoryMetricsAutoConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.metrics.export.properties.PropertiesConfigAdapter",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.metrics.export.properties.PushRegistryProperties",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "setEnabled",
          "parameterTypes": [
            "boolean"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.metrics.export.properties.PushRegistryPropertiesConfigAdapter",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.metrics.export.properties.StepRegistryProperties",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.metrics.export.properties.StepRegistryPropertiesConfigAdapter",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.metrics.integration.IntegrationMetricsAutoConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.metrics.jdbc.DataSourcePoolMetricsAutoConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.metrics.jdbc.DataSourcePoolMetricsAutoConfiguration$DataSourcePoolMetadataMetricsConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.metrics.jdbc.DataSourcePoolMetricsAutoConfiguration$DataSourcePoolMetadataMetricsConfiguration$DataSourcePoolMetadataMeterBinder",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.metrics.jdbc.DataSourcePoolMetricsAutoConfiguration$HikariDataSourceMetricsConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.metrics.jdbc.DataSourcePoolMetricsAutoConfiguration$HikariDataSourceMetricsConfiguration$HikariDataSourceMeterBinder",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.metrics.redis.LettuceMetricsAutoConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.metrics.startup.StartupTimeMetricsListenerAutoConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.metrics.task.TaskExecutorMetricsAutoConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.metrics.web.tomcat.TomcatMetricsAutoConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.observation.ObservationAutoConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.observation.ObservationAutoConfiguration$MeterObservationHandlerConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.observation.ObservationAutoConfiguration$MeterObservationHandlerConfiguration$TracingAndMetricsObservationHandlerConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.observation.ObservationAutoConfiguration$MetricsWithTracingConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.observation.ObservationAutoConfiguration$ObservedAspectConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.observation.ObservationHandlerGrouping",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.observation.ObservationProperties",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.observation.ObservationProperties$Http"
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.observation.ObservationProperties$LongTaskTimer"
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.observation.ObservationRegistryConfigurer"
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.observation.ObservationRegistryCustomizer"
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.observation.ObservationRegistryPostProcessor",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.observation.PropertiesObservationFilterPredicate",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.observation.web.client.HttpClientObservationsAutoConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.observation.web.client.HttpClientObservationsAutoConfiguration$MeterFilterConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.observation.web.client.RestClientObservationConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.observation.web.client.RestTemplateObservationConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.observation.web.client.WebClientObservationConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.observation.web.servlet.WebMvcObservationAutoConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.observation.web.servlet.WebMvcObservationAutoConfiguration$MeterFilterConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.scheduling.ScheduledTasksObservabilityAutoConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.scheduling.ScheduledTasksObservabilityAutoConfiguration$ObservabilitySchedulingConfigurer",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.ssl.SslHealthContributorAutoConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.ssl.SslHealthIndicatorProperties",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.system.DiskSpaceHealthContributorAutoConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.system.DiskSpaceHealthIndicatorProperties",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.tracing.BraveAutoConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.tracing.BravePropagationConfigurations$NoPropagation",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.tracing.BravePropagationConfigurations$PropagationWithBaggage",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.tracing.CompositePropagationFactory",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.tracing.ConditionalOnEnabledTracing"
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.tracing.LocalBaggageFields"
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.tracing.LogCorrelationEnvironmentPostProcessor",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.tracing.MicrometerTracingAutoConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.tracing.OpenTelemetryEventPublisherBeansApplicationListener",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.tracing.TracingProperties",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "getSampling",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.tracing.TracingProperties$Baggage"
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.tracing.TracingProperties$Brave"
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.tracing.TracingProperties$Propagation"
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.tracing.TracingProperties$Sampling",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "setProbability",
          "parameterTypes": [
            "float"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.tracing.zipkin.HttpSender",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.tracing.zipkin.PropertiesZipkinConnectionDetails",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.tracing.zipkin.ZipkinAutoConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.tracing.zipkin.ZipkinConfigurations$BraveConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.tracing.zipkin.ZipkinConfigurations$HttpClientSenderConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.tracing.zipkin.ZipkinConfigurations$RestTemplateSenderConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.tracing.zipkin.ZipkinConfigurations$SenderConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.tracing.zipkin.ZipkinConfigurations$WebClientSenderConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.tracing.zipkin.ZipkinConnectionDetails"
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.tracing.zipkin.ZipkinHttpClientBuilderCustomizer"
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.tracing.zipkin.ZipkinHttpClientSender"
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.tracing.zipkin.ZipkinProperties",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "setEndpoint",
          "parameterTypes": [
            "java.lang.String"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.tracing.zipkin.ZipkinProperties$Encoding"
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.tracing.zipkin.ZipkinRestTemplateSender"
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.tracing.zipkin.ZipkinWebClientBuilderCustomizer"
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.tracing.zipkin.ZipkinWebClientSender",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.web.ManagementContextConfiguration"
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.web.ManagementContextFactory",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.web.server.ConditionalOnManagementPort"
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.web.server.EnableManagementContext"
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.web.server.ManagementContextAutoConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.web.server.ManagementContextAutoConfiguration$SameManagementContextConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.web.server.ManagementContextAutoConfiguration$SameManagementContextConfiguration$EnableSameManagementContextConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.web.server.ManagementServerProperties",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.web.servlet.ManagementServletContext"
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.web.servlet.ServletManagementContextAutoConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.availability.LivenessStateHealthIndicator"
    },
    {
      "type": "org.springframework.boot.actuate.availability.ReadinessStateHealthIndicator"
    },
    {
      "type": "org.springframework.boot.actuate.data.elasticsearch.ElasticsearchReactiveHealthIndicator",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.data.redis.RedisHealthIndicator"
    },
    {
      "type": "org.springframework.boot.actuate.data.redis.RedisReactiveHealthIndicator",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.elasticsearch.ElasticsearchRestClientHealthIndicator"
    },
    {
      "type": "org.springframework.boot.actuate.endpoint.Access"
    },
    {
      "type": "org.springframework.boot.actuate.endpoint.ApiVersion"
    },
    {
      "type": "org.springframework.boot.actuate.endpoint.EndpointAccessResolver"
    },
    {
      "type": "org.springframework.boot.actuate.endpoint.EndpointFilter"
    },
    {
      "type": "org.springframework.boot.actuate.endpoint.EndpointId"
    },
    {
      "type": "org.springframework.boot.actuate.endpoint.EndpointsSupplier"
    },
    {
      "type": "org.springframework.boot.actuate.endpoint.ExposableEndpoint"
    },
    {
      "type": "org.springframework.boot.actuate.endpoint.Operation"
    },
    {
      "type": "org.springframework.boot.actuate.endpoint.OperationFilter"
    },
    {
      "type": "org.springframework.boot.actuate.endpoint.OperationResponseBody",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.endpoint.OperationType"
    },
    {
      "type": "org.springframework.boot.actuate.endpoint.SecurityContext"
    },
    {
      "type": "org.springframework.boot.actuate.endpoint.Show"
    },
    {
      "type": "org.springframework.boot.actuate.endpoint.ShowEditor"
    },
    {
      "type": "org.springframework.boot.actuate.endpoint.annotation.DiscoveredOperationMethod"
    },
    {
      "type": "org.springframework.boot.actuate.endpoint.annotation.DiscoveredOperationsFactory"
    },
    {
      "type": "org.springframework.boot.actuate.endpoint.annotation.Endpoint"
    },
    {
      "type": "org.springframework.boot.actuate.endpoint.annotation.EndpointConverter"
    },
    {
      "type": "org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$EndpointBean"
    },
    {
      "type": "org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$ExtensionBean"
    },
    {
      "type": "org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$OperationKey"
    },
    {
      "type": "org.springframework.boot.actuate.endpoint.annotation.EndpointExtension"
    },
    {
      "type": "org.springframework.boot.actuate.endpoint.annotation.ReadOperation"
    },
    {
      "type": "org.springframework.boot.actuate.endpoint.annotation.Selector"
    },
    {
      "type": "org.springframework.boot.actuate.endpoint.invoke.OperationInvoker"
    },
    {
      "type": "org.springframework.boot.actuate.endpoint.invoke.OperationInvokerAdvisor"
    },
    {
      "type": "org.springframework.boot.actuate.endpoint.invoke.OperationParameter"
    },
    {
      "type": "org.springframework.boot.actuate.endpoint.invoke.OperationParameters"
    },
    {
      "type": "org.springframework.boot.actuate.endpoint.invoke.ParameterMappingException"
    },
    {
      "type": "org.springframework.boot.actuate.endpoint.invoke.ParameterValueMapper"
    },
    {
      "type": "org.springframework.boot.actuate.endpoint.invoke.convert.ConversionServiceParameterValueMapper",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.endpoint.invoker.cache.CachingOperationInvokerAdvisor",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.endpoint.jackson.EndpointObjectMapper"
    },
    {
      "type": "org.springframework.boot.actuate.endpoint.web.AdditionalPathsMapper"
    },
    {
      "type": "org.springframework.boot.actuate.endpoint.web.EndpointMediaTypes",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.endpoint.web.ExposableServletEndpoint"
    },
    {
      "type": "org.springframework.boot.actuate.endpoint.web.ExposableWebEndpoint"
    },
    {
      "type": "org.springframework.boot.actuate.endpoint.web.PathMappedEndpoint"
    },
    {
      "type": "org.springframework.boot.actuate.endpoint.web.PathMappedEndpoints",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.endpoint.web.PathMapper"
    },
    {
      "type": "org.springframework.boot.actuate.endpoint.web.ServletEndpointRegistrar",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.endpoint.web.WebEndpointResponse"
    },
    {
      "type": "org.springframework.boot.actuate.endpoint.web.WebEndpointsSupplier"
    },
    {
      "type": "org.springframework.boot.actuate.endpoint.web.WebOperation"
    },
    {
      "type": "org.springframework.boot.actuate.endpoint.web.WebOperationRequestPredicate"
    },
    {
      "type": "org.springframework.boot.actuate.endpoint.web.WebServerNamespace"
    },
    {
      "type": "org.springframework.boot.actuate.endpoint.web.annotation.ControllerEndpointDiscoverer",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.endpoint.web.annotation.ControllerEndpointsSupplier"
    },
    {
      "type": "org.springframework.boot.actuate.endpoint.web.annotation.EndpointWebExtension"
    },
    {
      "type": "org.springframework.boot.actuate.endpoint.web.annotation.ExposableControllerEndpoint"
    },
    {
      "type": "org.springframework.boot.actuate.endpoint.web.annotation.ServletEndpointDiscoverer",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.endpoint.web.annotation.ServletEndpointsSupplier"
    },
    {
      "type": "org.springframework.boot.actuate.endpoint.web.annotation.WebEndpointDiscoverer",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.endpoint.web.annotation.WebEndpointFilter",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$LinksHandler"
    },
    {
      "type": "org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler",
      "methods": [
        {
          "name": "handle",
          "parameterTypes": [
            "jakarta.servlet.http.HttpServletRequest",
            "java.util.Map"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$ServletWebOperation"
    },
    {
      "type": "org.springframework.boot.actuate.endpoint.web.servlet.AdditionalHealthEndpointPathsWebMvcHandlerMapping",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.endpoint.web.servlet.ControllerEndpointHandlerMapping",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping$WebMvcLinksHandler"
    },
    {
      "type": "org.springframework.boot.actuate.health.AbstractHealthIndicator",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.health.AbstractReactiveHealthIndicator",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.health.AdditionalHealthEndpointPath"
    },
    {
      "type": "org.springframework.boot.actuate.health.CompositeHealth",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "getComponents",
          "parameterTypes": []
        },
        {
          "name": "getDetails",
          "parameterTypes": []
        },
        {
          "name": "getStatus",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.actuate.health.CompositeHealthContributor"
    },
    {
      "type": "org.springframework.boot.actuate.health.CompositeHealthContributorMapAdapter",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.health.CompositeReactiveHealthContributor"
    },
    {
      "type": "org.springframework.boot.actuate.health.ContributorRegistry"
    },
    {
      "type": "org.springframework.boot.actuate.health.DefaultContributorRegistry",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.health.DefaultHealthContributorRegistry",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.health.DefaultReactiveHealthContributorRegistry",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.health.Health",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "getDetails",
          "parameterTypes": []
        },
        {
          "name": "getStatus",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.actuate.health.Health$Builder"
    },
    {
      "type": "org.springframework.boot.actuate.health.HealthComponent",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.health.HealthContributor"
    },
    {
      "type": "org.springframework.boot.actuate.health.HealthContributorRegistry"
    },
    {
      "type": "org.springframework.boot.actuate.health.HealthEndpoint",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.health.HealthEndpointGroup"
    },
    {
      "type": "org.springframework.boot.actuate.health.HealthEndpointGroups"
    },
    {
      "type": "org.springframework.boot.actuate.health.HealthEndpointGroupsPostProcessor"
    },
    {
      "type": "org.springframework.boot.actuate.health.HealthEndpointSupport",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.health.HealthEndpointSupport$HealthResult"
    },
    {
      "type": "org.springframework.boot.actuate.health.HealthEndpointWebExtension",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "health",
          "parameterTypes": [
            "org.springframework.boot.actuate.endpoint.ApiVersion",
            "org.springframework.boot.actuate.endpoint.web.WebServerNamespace",
            "org.springframework.boot.actuate.endpoint.SecurityContext"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.actuate.health.HealthIndicator"
    },
    {
      "type": "org.springframework.boot.actuate.health.HttpCodeStatusMapper"
    },
    {
      "type": "org.springframework.boot.actuate.health.NamedContributor"
    },
    {
      "type": "org.springframework.boot.actuate.health.NamedContributors"
    },
    {
      "type": "org.springframework.boot.actuate.health.NamedContributorsMapAdapter",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.health.PingHealthIndicator",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.health.ReactiveHealthContributor"
    },
    {
      "type": "org.springframework.boot.actuate.health.ReactiveHealthContributorRegistry"
    },
    {
      "type": "org.springframework.boot.actuate.health.ReactiveHealthIndicator"
    },
    {
      "type": "org.springframework.boot.actuate.health.SimpleHttpCodeStatusMapper",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.health.SimpleStatusAggregator",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.health.Status",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "getCode",
          "parameterTypes": []
        },
        {
          "name": "getDescription",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.actuate.health.StatusAggregator"
    },
    {
      "type": "org.springframework.boot.actuate.health.SystemHealth",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "getGroups",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.actuate.info.EnvironmentInfoContributor"
    },
    {
      "type": "org.springframework.boot.actuate.info.GitInfoContributor"
    },
    {
      "type": "org.springframework.boot.actuate.info.InfoContributor"
    },
    {
      "type": "org.springframework.boot.actuate.info.JavaInfoContributor"
    },
    {
      "type": "org.springframework.boot.actuate.info.OsInfoContributor"
    },
    {
      "type": "org.springframework.boot.actuate.info.ProcessInfoContributor"
    },
    {
      "type": "org.springframework.boot.actuate.info.SslInfoContributor"
    },
    {
      "type": "org.springframework.boot.actuate.metrics.cache.CacheMeterBinderProvider"
    },
    {
      "type": "org.springframework.boot.actuate.metrics.cache.CacheMetricsRegistrar",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.metrics.cache.RedisCacheMeterBinderProvider",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.metrics.data.DefaultRepositoryTagsProvider",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.metrics.data.MetricsRepositoryMethodInvocationListener",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.metrics.data.RepositoryTagsProvider"
    },
    {
      "type": "org.springframework.boot.actuate.metrics.startup.StartupTimeMetricsListener",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.metrics.system.DiskSpaceMetricsBinder",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.metrics.web.client.ObservationRestClientCustomizer",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.metrics.web.client.ObservationRestTemplateCustomizer",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.metrics.web.reactive.client.ObservationWebClientCustomizer",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.metrics.web.tomcat.TomcatMetricsBinder",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.ssl.SslHealthIndicator",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.system.DiskSpaceHealthIndicator",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.ansi.AnsiOutput$Enabled"
    },
    {
      "type": "org.springframework.boot.autoconfigure.AutoConfiguration"
    },
    {
      "type": "org.springframework.boot.autoconfigure.AutoConfigurationPackage"
    },
    {
      "type": "org.springframework.boot.autoconfigure.AutoConfigurationPackages$BasePackages",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.AutoConfigureAfter"
    },
    {
      "type": "org.springframework.boot.autoconfigure.AutoConfigureBefore"
    },
    {
      "type": "org.springframework.boot.autoconfigure.AutoConfigureOrder"
    },
    {
      "type": "org.springframework.boot.autoconfigure.BackgroundPreinitializer",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.EnableAutoConfiguration"
    },
    {
      "type": "org.springframework.boot.autoconfigure.ImportAutoConfiguration"
    },
    {
      "type": "org.springframework.boot.autoconfigure.SharedMetadataReaderFactoryContextInitializer",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.SpringBootApplication"
    },
    {
      "type": "org.springframework.boot.autoconfigure.aop.AopAutoConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.aop.AopAutoConfiguration$AspectJAutoProxyingConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.aop.AopAutoConfiguration$AspectJAutoProxyingConfiguration$CglibAutoProxyConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.availability.ApplicationAvailabilityAutoConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration$CacheManagerValidator",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.cache.CacheManagerCustomizer"
    },
    {
      "type": "org.springframework.boot.autoconfigure.cache.CacheManagerCustomizers",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.cache.CacheProperties",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "getRedis",
          "parameterTypes": []
        },
        {
          "name": "setType",
          "parameterTypes": [
            "org.springframework.boot.autoconfigure.cache.CacheType"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.cache.CacheProperties$Caffeine"
    },
    {
      "type": "org.springframework.boot.autoconfigure.cache.CacheProperties$Couchbase"
    },
    {
      "type": "org.springframework.boot.autoconfigure.cache.CacheProperties$Infinispan"
    },
    {
      "type": "org.springframework.boot.autoconfigure.cache.CacheProperties$JCache"
    },
    {
      "type": "org.springframework.boot.autoconfigure.cache.CacheProperties$Redis",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "setTimeToLive",
          "parameterTypes": [
            "java.time.Duration"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.cache.CacheType"
    },
    {
      "type": "org.springframework.boot.autoconfigure.cache.CacheTypeEditor"
    },
    {
      "type": "org.springframework.boot.autoconfigure.cache.RedisCacheConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.cache.RedisCacheManagerBuilderCustomizer"
    },
    {
      "type": "org.springframework.boot.autoconfigure.codec.CodecProperties",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.condition.ConditionalOnBean"
    },
    {
      "type": "org.springframework.boot.autoconfigure.condition.ConditionalOnClass"
    },
    {
      "type": "org.springframework.boot.autoconfigure.condition.ConditionalOnExpression"
    },
    {
      "type": "org.springframework.boot.autoconfigure.condition.ConditionalOnMissingBean"
    },
    {
      "type": "org.springframework.boot.autoconfigure.condition.ConditionalOnMissingClass"
    },
    {
      "type": "org.springframework.boot.autoconfigure.condition.ConditionalOnNotWarDeployment"
    },
    {
      "type": "org.springframework.boot.autoconfigure.condition.ConditionalOnProperty"
    },
    {
      "type": "org.springframework.boot.autoconfigure.condition.ConditionalOnResource"
    },
    {
      "type": "org.springframework.boot.autoconfigure.condition.ConditionalOnSingleCandidate"
    },
    {
      "type": "org.springframework.boot.autoconfigure.condition.ConditionalOnThreading"
    },
    {
      "type": "org.springframework.boot.autoconfigure.condition.ConditionalOnWebApplication"
    },
    {
      "type": "org.springframework.boot.autoconfigure.context.ConfigurationPropertiesAutoConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.context.LifecycleAutoConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.context.LifecycleProperties",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.context.MessageSourceAutoConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.context.MessageSourceProperties",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "getBasename",
          "parameterTypes": []
        },
        {
          "name": "setBasename",
          "parameterTypes": [
            "java.util.List"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.context.PropertyPlaceholderAutoConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.dao.PersistenceExceptionTranslationAutoConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.data.elasticsearch.ElasticsearchDataAutoConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.data.elasticsearch.ElasticsearchDataConfiguration$BaseConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.data.elasticsearch.ElasticsearchDataConfiguration$JavaClientConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.data.elasticsearch.ElasticsearchDataConfiguration$ReactiveRestClientConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.data.elasticsearch.ElasticsearchRepositoriesAutoConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.data.jdbc.JdbcDataProperties",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.data.jdbc.JdbcDatabaseDialect"
    },
    {
      "type": "org.springframework.boot.autoconfigure.data.jdbc.JdbcRepositoriesAutoConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.data.jdbc.JdbcRepositoriesAutoConfiguration$JdbcRepositoriesConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.data.jdbc.JdbcRepositoriesAutoConfiguration$SpringBootJdbcConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.data.redis.ClientResourcesBuilderCustomizer"
    },
    {
      "type": "org.springframework.boot.autoconfigure.data.redis.LettuceClientConfigurationBuilderCustomizer"
    },
    {
      "type": "org.springframework.boot.autoconfigure.data.redis.LettuceClientOptionsBuilderCustomizer"
    },
    {
      "type": "org.springframework.boot.autoconfigure.data.redis.LettuceConnectionConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.data.redis.PropertiesRedisConnectionDetails",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.data.redis.RedisAutoConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.data.redis.RedisConnectionConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.data.redis.RedisConnectionDetails"
    },
    {
      "type": "org.springframework.boot.autoconfigure.data.redis.RedisConnectionDetails$Cluster"
    },
    {
      "type": "org.springframework.boot.autoconfigure.data.redis.RedisConnectionDetails$Node"
    },
    {
      "type": "org.springframework.boot.autoconfigure.data.redis.RedisConnectionDetails$Sentinel"
    },
    {
      "type": "org.springframework.boot.autoconfigure.data.redis.RedisConnectionDetails$Standalone"
    },
    {
      "type": "org.springframework.boot.autoconfigure.data.redis.RedisProperties",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "getSsl",
          "parameterTypes": []
        },
        {
          "name": "setHost",
          "parameterTypes": [
            "java.lang.String"
          ]
        },
        {
          "name": "setPassword",
          "parameterTypes": [
            "java.lang.String"
          ]
        },
        {
          "name": "setPort",
          "parameterTypes": [
            "int"
          ]
        },
        {
          "name": "setUsername",
          "parameterTypes": [
            "java.lang.String"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.data.redis.RedisProperties$ClientType"
    },
    {
      "type": "org.springframework.boot.autoconfigure.data.redis.RedisProperties$Cluster"
    },
    {
      "type": "org.springframework.boot.autoconfigure.data.redis.RedisProperties$Jedis"
    },
    {
      "type": "org.springframework.boot.autoconfigure.data.redis.RedisProperties$Lettuce"
    },
    {
      "type": "org.springframework.boot.autoconfigure.data.redis.RedisProperties$Pool"
    },
    {
      "type": "org.springframework.boot.autoconfigure.data.redis.RedisProperties$Sentinel"
    },
    {
      "type": "org.springframework.boot.autoconfigure.data.redis.RedisProperties$Ssl",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "setEnabled",
          "parameterTypes": [
            "boolean"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.data.redis.RedisReactiveAutoConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.data.web.SpringDataWebProperties"
    },
    {
      "type": "org.springframework.boot.autoconfigure.elasticsearch.ElasticsearchClientAutoConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.elasticsearch.ElasticsearchClientConfigurations$ElasticsearchClientConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.elasticsearch.ElasticsearchClientConfigurations$ElasticsearchTransportConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.elasticsearch.ElasticsearchClientConfigurations$JacksonJsonpMapperConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.elasticsearch.ElasticsearchClientConfigurations$JsonpMapperConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.elasticsearch.ElasticsearchConnectionDetails"
    },
    {
      "type": "org.springframework.boot.autoconfigure.elasticsearch.ElasticsearchConnectionDetails$Node"
    },
    {
      "type": "org.springframework.boot.autoconfigure.elasticsearch.ElasticsearchProperties",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "getUris",
          "parameterTypes": []
        },
        {
          "name": "setPassword",
          "parameterTypes": [
            "java.lang.String"
          ]
        },
        {
          "name": "setUris",
          "parameterTypes": [
            "java.util.List"
          ]
        },
        {
          "name": "setUsername",
          "parameterTypes": [
            "java.lang.String"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.elasticsearch.ElasticsearchProperties$Restclient"
    },
    {
      "type": "org.springframework.boot.autoconfigure.elasticsearch.ElasticsearchRestClientAutoConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.elasticsearch.ElasticsearchRestClientConfigurations$DefaultRestClientBuilderCustomizer",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.elasticsearch.ElasticsearchRestClientConfigurations$PropertiesElasticsearchConnectionDetails",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.elasticsearch.ElasticsearchRestClientConfigurations$RestClientBuilderConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.elasticsearch.ElasticsearchRestClientConfigurations$RestClientConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.elasticsearch.ReactiveElasticsearchClientAutoConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.elasticsearch.RestClientBuilderCustomizer"
    },
    {
      "type": "org.springframework.boot.autoconfigure.freemarker.FreeMarkerTemplateAvailabilityProvider",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.groovy.template.GroovyTemplateAvailabilityProvider",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.http.HttpMessageConverters",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration$StringHttpMessageConverterConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.http.JacksonHttpMessageConvertersConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.http.JacksonHttpMessageConvertersConfiguration$MappingJackson2HttpMessageConverterConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.http.client.HttpClientAutoConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.http.client.HttpClientProperties",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.http.client.HttpClientProperties$Factory"
    },
    {
      "type": "org.springframework.boot.autoconfigure.http.client.HttpClientProperties$Ssl"
    },
    {
      "type": "org.springframework.boot.autoconfigure.http.codec.CodecsAutoConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.http.codec.CodecsAutoConfiguration$DefaultCodecsConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.http.codec.CodecsAutoConfiguration$JacksonCodecConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.info.ProjectInfoProperties",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.info.ProjectInfoProperties$Build"
    },
    {
      "type": "org.springframework.boot.autoconfigure.info.ProjectInfoProperties$Git"
    },
    {
      "type": "org.springframework.boot.autoconfigure.integration.IntegrationPropertiesEnvironmentPostProcessor",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.jackson.Jackson2ObjectMapperBuilderCustomizer"
    },
    {
      "type": "org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$StandardJackson2ObjectMapperBuilderCustomizer",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonMixinConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.jackson.JacksonProperties",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "setDefaultPropertyInclusion",
          "parameterTypes": [
            "com.fasterxml.jackson.annotation.JsonInclude$Include"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.jackson.JacksonProperties$ConstructorDetectorStrategy"
    },
    {
      "type": "org.springframework.boot.autoconfigure.jackson.JacksonProperties$Datatype"
    },
    {
      "type": "org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.jdbc.DataSourceProperties",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "setPassword",
          "parameterTypes": [
            "java.lang.String"
          ]
        },
        {
          "name": "setUsername",
          "parameterTypes": [
            "java.lang.String"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.jdbc.DataSourceProperties$Xa"
    },
    {
      "type": "org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration$JdbcTransactionManagerConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.jdbc.JdbcClientAutoConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.jdbc.JdbcProperties",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.jdbc.JdbcProperties$Template"
    },
    {
      "type": "org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.jdbc.JdbcTemplateConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.jdbc.NamedParameterJdbcTemplateConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.jdbc.metadata.DataSourcePoolMetadataProvidersConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.jdbc.metadata.DataSourcePoolMetadataProvidersConfiguration$HikariPoolDataSourceMetadataProviderConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.kafka.ConcurrentKafkaListenerContainerFactoryConfigurer",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.kafka.DefaultKafkaConsumerFactoryCustomizer"
    },
    {
      "type": "org.springframework.boot.autoconfigure.kafka.DefaultKafkaProducerFactoryCustomizer"
    },
    {
      "type": "org.springframework.boot.autoconfigure.kafka.KafkaAnnotationDrivenConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.kafka.KafkaAutoConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.kafka.KafkaConnectionDetails"
    },
    {
      "type": "org.springframework.boot.autoconfigure.kafka.KafkaProperties",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "getBootstrapServers",
          "parameterTypes": []
        },
        {
          "name": "getConsumer",
          "parameterTypes": []
        },
        {
          "name": "getJaas",
          "parameterTypes": []
        },
        {
          "name": "getListener",
          "parameterTypes": []
        },
        {
          "name": "getProducer",
          "parameterTypes": []
        },
        {
          "name": "getProperties",
          "parameterTypes": []
        },
        {
          "name": "getSecurity",
          "parameterTypes": []
        },
        {
          "name": "getTemplate",
          "parameterTypes": []
        },
        {
          "name": "setBootstrapServers",
          "parameterTypes": [
            "java.util.List"
          ]
        },
        {
          "name": "setClientId",
          "parameterTypes": [
            "java.lang.String"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.kafka.KafkaProperties$Admin"
    },
    {
      "type": "org.springframework.boot.autoconfigure.kafka.KafkaProperties$Consumer",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "getProperties",
          "parameterTypes": []
        },
        {
          "name": "setGroupId",
          "parameterTypes": [
            "java.lang.String"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.kafka.KafkaProperties$Jaas",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "getOptions",
          "parameterTypes": []
        },
        {
          "name": "setEnabled",
          "parameterTypes": [
            "boolean"
          ]
        },
        {
          "name": "setLoginModule",
          "parameterTypes": [
            "java.lang.String"
          ]
        },
        {
          "name": "setOptions",
          "parameterTypes": [
            "java.util.Map"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.kafka.KafkaProperties$Listener",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "setAckMode",
          "parameterTypes": [
            "org.springframework.kafka.listener.ContainerProperties$AckMode"
          ]
        },
        {
          "name": "setObservationEnabled",
          "parameterTypes": [
            "boolean"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.kafka.KafkaProperties$Producer",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "setAcks",
          "parameterTypes": [
            "java.lang.String"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.kafka.KafkaProperties$Retry"
    },
    {
      "type": "org.springframework.boot.autoconfigure.kafka.KafkaProperties$Retry$Topic$Backoff"
    },
    {
      "type": "org.springframework.boot.autoconfigure.kafka.KafkaProperties$Security",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "setProtocol",
          "parameterTypes": [
            "java.lang.String"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.kafka.KafkaProperties$Ssl"
    },
    {
      "type": "org.springframework.boot.autoconfigure.kafka.KafkaProperties$Streams"
    },
    {
      "type": "org.springframework.boot.autoconfigure.kafka.KafkaProperties$Template",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "setObservationEnabled",
          "parameterTypes": [
            "boolean"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.kafka.PropertiesKafkaConnectionDetails",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.kafka.StreamsBuilderFactoryBeanCustomizer"
    },
    {
      "type": "org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration$CustomizerConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration$LiquibaseConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "liquibase",
          "parameterTypes": [
            "org.springframework.beans.factory.ObjectProvider",
            "org.springframework.beans.factory.ObjectProvider",
            "org.springframework.boot.autoconfigure.liquibase.LiquibaseProperties",
            "org.springframework.beans.factory.ObjectProvider",
            "org.springframework.boot.autoconfigure.liquibase.LiquibaseConnectionDetails"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration$PropertiesLiquibaseConnectionDetails",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration$SpringLiquibaseCustomizer"
    },
    {
      "type": "org.springframework.boot.autoconfigure.liquibase.LiquibaseConnectionDetails"
    },
    {
      "type": "org.springframework.boot.autoconfigure.liquibase.LiquibaseDataSource"
    },
    {
      "type": "org.springframework.boot.autoconfigure.liquibase.LiquibaseProperties",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.liquibase.LiquibaseProperties$ShowSummary"
    },
    {
      "type": "org.springframework.boot.autoconfigure.liquibase.LiquibaseProperties$ShowSummaryOutput"
    },
    {
      "type": "org.springframework.boot.autoconfigure.liquibase.LiquibaseProperties$UiService"
    },
    {
      "type": "org.springframework.boot.autoconfigure.liquibase.LiquibaseSchemaManagementProvider",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLoggingListener",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.mustache.MustacheTemplateAvailabilityProvider",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.netty.NettyAutoConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.netty.NettyProperties",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.netty.NettyProperties$LeakDetection"
    },
    {
      "type": "org.springframework.boot.autoconfigure.reactor.ReactorAutoConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.reactor.ReactorProperties",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.reactor.ReactorProperties$ContextPropagationMode"
    },
    {
      "type": "org.springframework.boot.autoconfigure.service.connection.ConnectionDetails"
    },
    {
      "type": "org.springframework.boot.autoconfigure.sql.init.DataSourceInitializationConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.sql.init.SqlDataSourceScriptDatabaseInitializer",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.sql.init.SqlInitializationAutoConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.sql.init.SqlInitializationProperties",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.ssl.BundleContentProperty"
    },
    {
      "type": "org.springframework.boot.autoconfigure.ssl.FileWatcher",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.ssl.SslAutoConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.ssl.SslBundleProperties"
    },
    {
      "type": "org.springframework.boot.autoconfigure.ssl.SslBundleRegistrar"
    },
    {
      "type": "org.springframework.boot.autoconfigure.ssl.SslProperties",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.ssl.SslProperties$Bundles"
    },
    {
      "type": "org.springframework.boot.autoconfigure.ssl.SslPropertiesBundleRegistrar",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.ssl.SslPropertiesBundleRegistrar$Bundle"
    },
    {
      "type": "org.springframework.boot.autoconfigure.task.TaskExecutionAutoConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.task.TaskExecutionProperties",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.task.TaskExecutionProperties$Pool"
    },
    {
      "type": "org.springframework.boot.autoconfigure.task.TaskExecutionProperties$Shutdown"
    },
    {
      "type": "org.springframework.boot.autoconfigure.task.TaskExecutionProperties$Simple"
    },
    {
      "type": "org.springframework.boot.autoconfigure.task.TaskExecutorConfigurations$SimpleAsyncTaskExecutorBuilderConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.task.TaskExecutorConfigurations$TaskExecutorConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.task.TaskExecutorConfigurations$ThreadPoolTaskExecutorBuilderConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.task.TaskSchedulingAutoConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.task.TaskSchedulingConfigurations$SimpleAsyncTaskSchedulerBuilderConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.task.TaskSchedulingConfigurations$ThreadPoolTaskSchedulerBuilderConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.task.TaskSchedulingProperties",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.task.TaskSchedulingProperties$Pool"
    },
    {
      "type": "org.springframework.boot.autoconfigure.task.TaskSchedulingProperties$Shutdown"
    },
    {
      "type": "org.springframework.boot.autoconfigure.task.TaskSchedulingProperties$Simple"
    },
    {
      "type": "org.springframework.boot.autoconfigure.thymeleaf.ThymeleafTemplateAvailabilityProvider",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.transaction.ExecutionListenersTransactionManagerCustomizer",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration$EnableTransactionManagementConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration$EnableTransactionManagementConfiguration$CglibAutoProxyConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration$TransactionTemplateConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.transaction.TransactionManagerCustomizationAutoConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.transaction.TransactionManagerCustomizer"
    },
    {
      "type": "org.springframework.boot.autoconfigure.transaction.TransactionManagerCustomizers",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.transaction.TransactionProperties",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.validation.ValidationConfigurationCustomizer"
    },
    {
      "type": "org.springframework.boot.autoconfigure.validation.ValidatorAdapter",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.ConditionalOnEnabledResourceChain"
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.ErrorProperties",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "getWhitelabel",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.ErrorProperties$Whitelabel",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "setEnabled",
          "parameterTypes": [
            "boolean"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.ServerProperties",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "getError",
          "parameterTypes": []
        },
        {
          "name": "getHttp2",
          "parameterTypes": []
        },
        {
          "name": "setPort",
          "parameterTypes": [
            "java.lang.Integer"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.ServerProperties$ForwardHeadersStrategy"
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.ServerProperties$Jetty"
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.ServerProperties$Netty"
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.ServerProperties$Reactive"
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.ServerProperties$Servlet"
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.ServerProperties$Tomcat"
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.ServerProperties$Tomcat$Accesslog"
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.ServerProperties$Tomcat$Resource"
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.ServerProperties$Undertow"
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.WebProperties",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.WebProperties$LocaleResolver"
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.WebProperties$Resources"
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.WebProperties$Resources$Chain"
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.WebProperties$Resources$Chain$Strategy"
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.client.AutoConfiguredRestClientSsl",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.client.HttpMessageConvertersRestClientCustomizer",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.client.RestClientAutoConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.client.RestClientBuilderConfigurer",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.client.RestClientSsl"
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.client.RestTemplateAutoConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.client.RestTemplateBuilderConfigurer"
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.embedded.EmbeddedWebServerFactoryCustomizerAutoConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.embedded.EmbeddedWebServerFactoryCustomizerAutoConfiguration$TomcatWebServerFactoryCustomizerConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.embedded.TomcatVirtualThreadsWebServerFactoryCustomizer",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.embedded.TomcatWebServerFactoryCustomizer",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.format.DateTimeFormatters"
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.format.WebConversionService",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.reactive.function.client.AutoConfiguredWebClientSsl",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.reactive.function.client.ClientHttpConnectorAutoConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.reactive.function.client.ClientHttpConnectorFactory"
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.reactive.function.client.ClientHttpConnectorFactoryConfiguration$JdkClient",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.reactive.function.client.JdkClientHttpConnectorFactory",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.reactive.function.client.WebClientAutoConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.reactive.function.client.WebClientAutoConfiguration$WebClientCodecsConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.reactive.function.client.WebClientCodecCustomizer",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.reactive.function.client.WebClientSsl"
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.servlet.ConditionalOnMissingFilterBean"
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration$DispatcherServletConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration$DispatcherServletRegistrationConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.servlet.DispatcherServletPath"
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.servlet.DispatcherServletRegistrationBean",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.servlet.HttpEncodingAutoConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.servlet.HttpEncodingAutoConfiguration$LocaleCharsetMappingsCustomizer",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.servlet.JspTemplateAvailabilityProvider",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.servlet.MultipartAutoConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.servlet.MultipartProperties",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryAutoConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryConfiguration$EmbeddedTomcat",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryCustomizer",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.servlet.TomcatServletWebServerFactoryCustomizer",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$ResourceChainCustomizerConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$ResourceChainResourceHandlerRegistrationCustomizer",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$ResourceHandlerRegistrationCustomizer"
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$WelcomePageHandlerMappingFactory"
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "getAsync",
          "parameterTypes": []
        },
        {
          "name": "setLogResolvedException",
          "parameterTypes": [
            "boolean"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties$Async",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "setRequestTimeout",
          "parameterTypes": [
            "java.time.Duration"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties$Contentnegotiation"
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties$Format"
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties$Pathmatch"
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties$Problemdetails"
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties$Servlet"
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties$View"
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.servlet.WelcomePage"
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.servlet.WelcomePageNotAcceptableHandlerMapping",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.servlet.error.AbstractErrorController",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.servlet.error.DefaultErrorViewResolver",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$DefaultErrorViewResolverConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$ErrorPageCustomizer",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$PreserveErrorControllerTargetClassPostProcessor"
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.servlet.error.ErrorViewResolver"
    },
    {
      "type": "org.springframework.boot.autoconfigure.websocket.servlet.TomcatWebSocketServletWebServerCustomizer",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.websocket.servlet.WebSocketServletAutoConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.websocket.servlet.WebSocketServletAutoConfiguration$TomcatWebSocketConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.availability.ApplicationAvailability"
    },
    {
      "type": "org.springframework.boot.availability.ApplicationAvailabilityBean",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.availability.AvailabilityChangeEvent"
    },
    {
      "type": "org.springframework.boot.availability.AvailabilityState"
    },
    {
      "type": "org.springframework.boot.availability.LivenessState"
    },
    {
      "type": "org.springframework.boot.availability.ReadinessState"
    },
    {
      "type": "org.springframework.boot.builder.ParentContextCloserApplicationListener",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.cloud.CloudFoundryVcapEnvironmentPostProcessor",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.springframework.boot.logging.DeferredLogFactory"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.context.ConfigurationWarningsApplicationContextInitializer",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.context.ContextIdApplicationContextInitializer",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.context.FileEncodingApplicationListener",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.context.config.AnsiOutputApplicationListener",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.context.config.ConfigDataEnvironmentPostProcessor",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.springframework.boot.logging.DeferredLogFactory",
            "org.springframework.boot.ConfigurableBootstrapContext"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.context.config.ConfigDataNotFoundAction"
    },
    {
      "type": "org.springframework.boot.context.config.ConfigDataProperties",
      "fields": [
        {
          "name": "this$0"
        }
      ]
    },
    {
      "type": "org.springframework.boot.context.config.ConfigTreeConfigDataLoader",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.context.config.ConfigTreeConfigDataLocationResolver",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.springframework.core.io.ResourceLoader"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.context.config.StandardConfigDataLoader",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.context.config.StandardConfigDataLocationResolver",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.springframework.boot.logging.DeferredLogFactory",
            "org.springframework.boot.context.properties.bind.Binder",
            "org.springframework.core.io.ResourceLoader"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.context.event.ApplicationReadyEvent"
    },
    {
      "type": "org.springframework.boot.context.event.ApplicationStartedEvent"
    },
    {
      "type": "org.springframework.boot.context.event.EventPublishingRunListener",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.springframework.boot.SpringApplication",
            "java.lang.String[]"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.context.logging.LoggingApplicationListener",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.context.properties.BoundConfigurationProperties",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.context.properties.ConfigurationProperties"
    },
    {
      "type": "org.springframework.boot.context.properties.ConfigurationPropertiesBindHandlerAdvisor"
    },
    {
      "type": "org.springframework.boot.context.properties.EnableConfigurationProperties"
    },
    {
      "type": "org.springframework.boot.context.properties.bind.BindHandler"
    },
    {
      "type": "org.springframework.boot.context.properties.bind.Binder"
    },
    {
      "type": "org.springframework.boot.context.properties.bind.Name"
    },
    {
      "type": "org.springframework.boot.context.properties.source.ConfigurationProperty"
    },
    {
      "type": "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
    },
    {
      "type": "org.springframework.boot.env.EnvironmentPostProcessorApplicationListener",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.env.PropertiesPropertySourceLoader",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.env.RandomValuePropertySourceEnvironmentPostProcessor",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.springframework.boot.logging.DeferredLogFactory"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.env.SpringApplicationJsonEnvironmentPostProcessor",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.env.YamlPropertySourceLoader",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.http.client.AbstractClientHttpRequestFactoryBuilder",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.http.client.ClientHttpRequestFactoryBuilder"
    },
    {
      "type": "org.springframework.boot.http.client.ClientHttpRequestFactorySettings",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.http.client.ClientHttpRequestFactorySettings$Redirects"
    },
    {
      "type": "org.springframework.boot.http.client.HttpComponentsClientHttpRequestFactoryBuilder"
    },
    {
      "type": "org.springframework.boot.http.client.JdkClientHttpRequestFactoryBuilder",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.http.client.JettyClientHttpRequestFactoryBuilder"
    },
    {
      "type": "org.springframework.boot.http.client.ReactorClientHttpRequestFactoryBuilder"
    },
    {
      "type": "org.springframework.boot.http.client.SimpleClientHttpRequestFactoryBuilder"
    },
    {
      "type": "org.springframework.boot.info.BuildProperties"
    },
    {
      "type": "org.springframework.boot.info.GitProperties"
    },
    {
      "type": "org.springframework.boot.info.SslInfo",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.info.SslInfo$BundleInfo"
    },
    {
      "type": "org.springframework.boot.info.SslInfo$CertificateChainInfo"
    },
    {
      "type": "org.springframework.boot.info.SslInfo$CertificateInfo"
    },
    {
      "type": "org.springframework.boot.io.Base64ProtocolResolver",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.io.ProtocolResolverApplicationContextInitializer",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.jackson.JsonComponent$Scope"
    },
    {
      "type": "org.springframework.boot.jackson.JsonComponentModule",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.jackson.JsonMixinModule",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.jackson.JsonMixinModuleEntries",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.jackson.JsonMixinModuleEntries$Builder"
    },
    {
      "type": "org.springframework.boot.jdbc.DataSourceBuilder"
    },
    {
      "type": "org.springframework.boot.jdbc.EmbeddedDatabaseConnection"
    },
    {
      "type": "org.springframework.boot.jdbc.SchemaManagement"
    },
    {
      "type": "org.springframework.boot.jdbc.SchemaManagementProvider"
    },
    {
      "type": "org.springframework.boot.jdbc.init.DataSourceScriptDatabaseInitializer",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.jdbc.metadata.DataSourcePoolMetadata"
    },
    {
      "type": "org.springframework.boot.jdbc.metadata.DataSourcePoolMetadataProvider"
    },
    {
      "type": "org.springframework.boot.loader.launch.LaunchedClassLoader"
    },
    {
      "type": "org.springframework.boot.loader.net.protocol.jar.JarUrlClassLoader"
    },
    {
      "type": "org.springframework.boot.logging.LogLevelEditor"
    },
    {
      "type": "org.springframework.boot.logging.java.JavaLoggingSystem$Factory",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.logging.java.JavaLoggingSystem.Factory"
    },
    {
      "type": "org.springframework.boot.logging.log4j2.Log4J2LoggingSystem$Factory",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.logging.log4j2.Log4J2LoggingSystem.Factory"
    },
    {
      "type": "org.springframework.boot.logging.logback.ColorConverter",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.logging.logback.CorrelationIdConverter",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.logging.logback.EnclosedInSquareBracketsConverter",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.logging.logback.ExtendedWhitespaceThrowableProxyConverter",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.logging.logback.LogbackLoggingSystem$Factory",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.logging.logback.LogbackLoggingSystem.Factory"
    },
    {
      "type": "org.springframework.boot.logging.logback.RootLogLevelConfigurator"
    },
    {
      "type": "org.springframework.boot.reactor.ReactorEnvironmentPostProcessor",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.rsocket.context.RSocketPortInfoApplicationContextInitializer",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer$ScriptLocationResolver"
    },
    {
      "type": "org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer$Scripts"
    },
    {
      "type": "org.springframework.boot.sql.init.DatabaseInitializationMode"
    },
    {
      "type": "org.springframework.boot.sql.init.DatabaseInitializationSettings"
    },
    {
      "type": "org.springframework.boot.ssl.DefaultSslBundleRegistry",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.ssl.DefaultSslBundleRegistry$RegisteredSslBundle"
    },
    {
      "type": "org.springframework.boot.ssl.NoSuchSslBundleException"
    },
    {
      "type": "org.springframework.boot.ssl.SslBundle"
    },
    {
      "type": "org.springframework.boot.ssl.SslBundleRegistry"
    },
    {
      "type": "org.springframework.boot.ssl.SslBundles"
    },
    {
      "type": "org.springframework.boot.task.SimpleAsyncTaskExecutorBuilder",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.task.SimpleAsyncTaskExecutorCustomizer"
    },
    {
      "type": "org.springframework.boot.task.SimpleAsyncTaskSchedulerBuilder",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.task.SimpleAsyncTaskSchedulerCustomizer"
    },
    {
      "type": "org.springframework.boot.task.ThreadPoolTaskExecutorBuilder",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.task.ThreadPoolTaskExecutorCustomizer"
    },
    {
      "type": "org.springframework.boot.task.ThreadPoolTaskSchedulerBuilder",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.task.ThreadPoolTaskSchedulerCustomizer"
    },
    {
      "type": "org.springframework.boot.validation.beanvalidation.MethodValidationExcludeFilter"
    },
    {
      "type": "org.springframework.boot.web.client.RestClientCustomizer"
    },
    {
      "type": "org.springframework.boot.web.client.RestTemplateBuilder"
    },
    {
      "type": "org.springframework.boot.web.client.RestTemplateCustomizer"
    },
    {
      "type": "org.springframework.boot.web.codec.CodecCustomizer"
    },
    {
      "type": "org.springframework.boot.web.context.ServerPortInfoApplicationContextInitializer",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.web.context.WebServerInitializedEvent"
    },
    {
      "type": "org.springframework.boot.web.embedded.tomcat.ConfigurableTomcatWebServerFactory"
    },
    {
      "type": "org.springframework.boot.web.embedded.tomcat.SslConnectorCustomizer"
    },
    {
      "type": "org.springframework.boot.web.embedded.tomcat.TomcatConnectorCustomizer"
    },
    {
      "type": "org.springframework.boot.web.embedded.tomcat.TomcatContextCustomizer"
    },
    {
      "type": "org.springframework.boot.web.embedded.tomcat.TomcatEmbeddedContext"
    },
    {
      "type": "org.springframework.boot.web.embedded.tomcat.TomcatProtocolHandlerCustomizer"
    },
    {
      "type": "org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.web.embedded.tomcat.TomcatWebServer"
    },
    {
      "type": "org.springframework.boot.web.error.ErrorAttributeOptions"
    },
    {
      "type": "org.springframework.boot.web.reactive.context.ReactiveWebServerApplicationContextFactory",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.web.reactive.function.client.WebClientCustomizer"
    },
    {
      "type": "org.springframework.boot.web.server.AbstractConfigurableWebServerFactory",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.web.server.Compression"
    },
    {
      "type": "org.springframework.boot.web.server.ConfigurableWebServerFactory"
    },
    {
      "type": "org.springframework.boot.web.server.ErrorPage"
    },
    {
      "type": "org.springframework.boot.web.server.ErrorPageRegistrar"
    },
    {
      "type": "org.springframework.boot.web.server.ErrorPageRegistry"
    },
    {
      "type": "org.springframework.boot.web.server.Http2",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "setEnabled",
          "parameterTypes": [
            "boolean"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.web.server.MimeMappings"
    },
    {
      "type": "org.springframework.boot.web.server.MimeMappings$Mapping"
    },
    {
      "type": "org.springframework.boot.web.server.Shutdown"
    },
    {
      "type": "org.springframework.boot.web.server.Ssl"
    },
    {
      "type": "org.springframework.boot.web.server.Ssl$ServerNameSslBundle"
    },
    {
      "type": "org.springframework.boot.web.server.WebServer"
    },
    {
      "type": "org.springframework.boot.web.server.WebServerFactory"
    },
    {
      "type": "org.springframework.boot.web.server.WebServerFactoryCustomizer"
    },
    {
      "type": "org.springframework.boot.web.servlet.AbstractFilterRegistrationBean",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.web.servlet.DynamicRegistrationBean",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.web.servlet.FilterRegistrationBean",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.web.servlet.RegistrationBean",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.web.servlet.ServletContextInitializer"
    },
    {
      "type": "org.springframework.boot.web.servlet.ServletRegistrationBean",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.web.servlet.WebListenerRegistrar"
    },
    {
      "type": "org.springframework.boot.web.servlet.WebListenerRegistry"
    },
    {
      "type": "org.springframework.boot.web.servlet.context.ServletWebServerApplicationContextFactory",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.web.servlet.error.DefaultErrorAttributes",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.web.servlet.error.ErrorAttributes"
    },
    {
      "type": "org.springframework.boot.web.servlet.error.ErrorController"
    },
    {
      "type": "org.springframework.boot.web.servlet.filter.OrderedCharacterEncodingFilter",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.web.servlet.filter.OrderedFilter"
    },
    {
      "type": "org.springframework.boot.web.servlet.filter.OrderedFormContentFilter",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.web.servlet.filter.OrderedHiddenHttpMethodFilter"
    },
    {
      "type": "org.springframework.boot.web.servlet.filter.OrderedRequestContextFilter",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.web.servlet.server.AbstractServletWebServerFactory",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.web.servlet.server.ConfigurableServletWebServerFactory"
    },
    {
      "type": "org.springframework.boot.web.servlet.server.CookieSameSiteSupplier"
    },
    {
      "type": "org.springframework.boot.web.servlet.server.Encoding",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.web.servlet.server.Jsp"
    },
    {
      "type": "org.springframework.boot.web.servlet.server.ServletWebServerFactory"
    },
    {
      "type": "org.springframework.boot.web.servlet.server.Session"
    },
    {
      "type": "org.springframework.cache.Cache"
    },
    {
      "type": "org.springframework.cache.CacheManager"
    },
    {
      "type": "org.springframework.cache.annotation.AbstractCachingConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.cache.annotation.AbstractCachingConfiguration$CachingConfigurerSupplier"
    },
    {
      "type": "org.springframework.cache.annotation.AnnotationCacheOperationSource",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.cache.annotation.AnnotationCacheOperationSource$CacheOperationProvider"
    },
    {
      "type": "org.springframework.cache.annotation.CacheAnnotationParser"
    },
    {
      "type": "org.springframework.cache.annotation.CachingConfigurer"
    },
    {
      "type": "org.springframework.cache.annotation.EnableCaching"
    },
    {
      "type": "org.springframework.cache.annotation.ProxyCachingConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.cache.interceptor.AbstractCacheInvoker"
    },
    {
      "type": "org.springframework.cache.interceptor.AbstractFallbackCacheOperationSource",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.cache.interceptor.BeanFactoryCacheOperationSourceAdvisor"
    },
    {
      "type": "org.springframework.cache.interceptor.CacheAspectSupport"
    },
    {
      "type": "org.springframework.cache.interceptor.CacheInterceptor"
    },
    {
      "type": "org.springframework.cache.interceptor.CacheOperationSource"
    },
    {
      "type": "org.springframework.cache.support.AbstractCacheManager",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.cache.transaction.AbstractTransactionSupportingCacheManager",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.cglib.proxy.Factory"
    },
    {
      "type": "org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.cloud.autoconfigure.LifecycleMvcEndpointAutoConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.cloud.autoconfigure.PauseResumeEndpointsConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.cloud.autoconfigure.RefreshEndpointAutoConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.cloud.autoconfigure.RefreshEndpointAutoConfiguration$RefreshEndpointConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.cloud.autoconfigure.RestartEndpointWithoutIntegrationConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.cloud.bootstrap.BootstrapApplicationListener",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.cloud.bootstrap.BootstrapConfigFileApplicationListener",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.cloud.bootstrap.LoggingSystemShutdownListener",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.cloud.bootstrap.RefreshBootstrapRegistryInitializer",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.cloud.bootstrap.TextEncryptorConfigBootstrapper",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.cloud.bootstrap.encrypt.DecryptEnvironmentPostProcessor",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.cloud.bootstrap.encrypt.KeyProperties",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "setKey",
          "parameterTypes": [
            "java.lang.String"
          ]
        },
        {
          "name": "setSalt",
          "parameterTypes": [
            "java.lang.String"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.cloud.bootstrap.encrypt.KeyProperties$KeyStore",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.cloud.bootstrap.encrypt.RsaProperties",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.cloud.bootstrap.marker.Marker"
    },
    {
      "type": "org.springframework.cloud.client.CommonsClientAutoConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.cloud.client.CommonsClientAutoConfiguration$ActuatorConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.cloud.client.CommonsClientAutoConfiguration$DiscoveryLoadBalancerConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.cloud.client.ConditionalOnBlockingDiscoveryEnabled"
    },
    {
      "type": "org.springframework.cloud.client.ConditionalOnDiscoveryEnabled"
    },
    {
      "type": "org.springframework.cloud.client.ConditionalOnDiscoveryHealthIndicatorEnabled"
    },
    {
      "type": "org.springframework.cloud.client.ConditionalOnReactiveDiscoveryEnabled"
    },
    {
      "type": "org.springframework.cloud.client.DefaultServiceInstance"
    },
    {
      "type": "org.springframework.cloud.client.HostInfoEnvironmentPostProcessor",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.cloud.client.ReactiveCommonsClientAutoConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.cloud.client.ReactiveCommonsClientAutoConfiguration$ReactiveDiscoveryLoadBalancerConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.cloud.client.actuator.FeaturesEndpoint"
    },
    {
      "type": "org.springframework.cloud.client.actuator.HasFeatures",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.cloud.client.actuator.NamedFeature"
    },
    {
      "type": "org.springframework.cloud.client.discovery.DiscoveryClient"
    },
    {
      "type": "org.springframework.cloud.client.discovery.ReactiveDiscoveryClient"
    },
    {
      "type": "org.springframework.cloud.client.discovery.composite.CompositeDiscoveryClient",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.cloud.client.discovery.composite.CompositeDiscoveryClientAutoConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.cloud.client.discovery.composite.reactive.ReactiveCompositeDiscoveryClient",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.cloud.client.discovery.composite.reactive.ReactiveCompositeDiscoveryClientAutoConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.cloud.client.discovery.event.InstanceRegisteredEvent"
    },
    {
      "type": "org.springframework.cloud.client.discovery.health.DiscoveryClientHealthIndicator",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.cloud.client.discovery.health.DiscoveryClientHealthIndicatorProperties",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.cloud.client.discovery.health.DiscoveryCompositeHealthContributor",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.cloud.client.discovery.health.DiscoveryHealthIndicator"
    },
    {
      "type": "org.springframework.cloud.client.discovery.health.reactive.ReactiveDiscoveryClientHealthIndicator",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.cloud.client.discovery.health.reactive.ReactiveDiscoveryCompositeHealthContributor",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.cloud.client.discovery.health.reactive.ReactiveDiscoveryHealthIndicator"
    },
    {
      "type": "org.springframework.cloud.client.discovery.simple.SimpleDiscoveryClient",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.cloud.client.discovery.simple.SimpleDiscoveryClientAutoConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.cloud.client.discovery.simple.SimpleDiscoveryProperties",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.cloud.client.discovery.simple.reactive.SimpleReactiveDiscoveryClient",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.cloud.client.discovery.simple.reactive.SimpleReactiveDiscoveryClientAutoConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.cloud.client.discovery.simple.reactive.SimpleReactiveDiscoveryClientAutoConfiguration$HealthConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.cloud.client.discovery.simple.reactive.SimpleReactiveDiscoveryProperties",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.cloud.client.serviceregistry.AutoServiceRegistrationAutoConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.cloud.client.serviceregistry.AutoServiceRegistrationConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.cloud.client.serviceregistry.AutoServiceRegistrationProperties",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.cloud.client.serviceregistry.ServiceRegistryAutoConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.cloud.commons.config.DefaultsBindHandlerAdvisor",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.cloud.commons.config.DefaultsBindHandlerAdvisor$MappingsProvider"
    },
    {
      "type": "org.springframework.cloud.commons.security.ResourceServerTokenRelayAutoConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.cloud.commons.security.ResourceServerTokenRelayAutoConfiguration$ResourceServerTokenRelayRegistrationAutoConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.cloud.commons.util.InetUtils",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.cloud.commons.util.InetUtils$HostInfo"
    },
    {
      "type": "org.springframework.cloud.commons.util.InetUtilsProperties",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.cloud.commons.util.UtilAutoConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.cloud.configuration.CompatibilityPredicate"
    },
    {
      "type": "org.springframework.cloud.configuration.CompatibilityVerifier"
    },
    {
      "type": "org.springframework.cloud.configuration.CompatibilityVerifierAutoConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.cloud.configuration.CompatibilityVerifierProperties",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.cloud.configuration.CompositeCompatibilityVerifier",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.cloud.configuration.SleuthPresentVerifier",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.cloud.configuration.SpringBootVersionVerifier",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.cloud.configuration.VerificationResult"
    },
    {
      "type": "org.springframework.cloud.context.environment.EnvironmentChangeEvent"
    },
    {
      "type": "org.springframework.cloud.context.environment.EnvironmentManager",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.cloud.context.named.NamedContextFactory",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.cloud.context.named.NamedContextFactory$Specification"
    },
    {
      "type": "org.springframework.cloud.context.properties.ConfigurationPropertiesBeans",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.cloud.context.properties.ConfigurationPropertiesRebinder",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.cloud.context.refresh.ContextRefresher"
    },
    {
      "type": "org.springframework.cloud.context.restart.RestartEndpoint"
    },
    {
      "type": "org.springframework.cloud.context.restart.RestartEndpoint$PauseEndpoint"
    },
    {
      "type": "org.springframework.cloud.context.restart.RestartEndpoint$ResumeEndpoint"
    },
    {
      "type": "org.springframework.cloud.context.restart.RestartListener",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.cloud.endpoint.RefreshEndpoint"
    },
    {
      "type": "org.springframework.cloud.health.RefreshScopeHealthIndicator",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.cloud.openfeign.CachingCapability",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "enrich",
          "parameterTypes": [
            "feign.InvocationHandlerFactory"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.cloud.openfeign.DefaultTargeter",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.cloud.openfeign.EnableFeignClients"
    },
    {
      "type": "org.springframework.cloud.openfeign.FeignAutoConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.cloud.openfeign.FeignAutoConfiguration$DefaultFeignTargeterConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.cloud.openfeign.FeignAutoConfiguration$FeignJacksonConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.cloud.openfeign.FeignBuilderCustomizer"
    },
    {
      "type": "org.springframework.cloud.openfeign.FeignClient"
    },
    {
      "type": "org.springframework.cloud.openfeign.FeignClientFactory",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.cloud.openfeign.FeignClientFactoryBean",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "setContextId",
          "parameterTypes": [
            "java.lang.String"
          ]
        },
        {
          "name": "setDismiss404",
          "parameterTypes": [
            "boolean"
          ]
        },
        {
          "name": "setFallback",
          "parameterTypes": [
            "java.lang.Class"
          ]
        },
        {
          "name": "setFallbackFactory",
          "parameterTypes": [
            "java.lang.Class"
          ]
        },
        {
          "name": "setName",
          "parameterTypes": [
            "java.lang.String"
          ]
        },
        {
          "name": "setPath",
          "parameterTypes": [
            "java.lang.String"
          ]
        },
        {
          "name": "setType",
          "parameterTypes": [
            "java.lang.Class"
          ]
        },
        {
          "name": "setUrl",
          "parameterTypes": [
            "java.lang.String"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.cloud.openfeign.FeignClientProperties",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "getConfig",
          "parameterTypes": []
        },
        {
          "name": "setConfig",
          "parameterTypes": [
            "java.util.Map"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.cloud.openfeign.FeignClientProperties$FeignClientConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "setUrl",
          "parameterTypes": [
            "java.lang.String"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.cloud.openfeign.FeignClientSpecification",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.cloud.openfeign.FeignClientsConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.cloud.openfeign.FeignClientsConfiguration$DefaultFeignBuilderConfiguration"
    },
    {
      "type": "org.springframework.cloud.openfeign.FeignClientsConfiguration$MicrometerConfiguration"
    },
    {
      "type": "org.springframework.cloud.openfeign.Targeter"
    },
    {
      "type": "org.springframework.cloud.openfeign.aot.FeignChildContextInitializer"
    },
    {
      "type": "org.springframework.cloud.openfeign.aot.FeignClientBeanFactoryInitializationAotProcessor"
    },
    {
      "type": "org.springframework.cloud.openfeign.support.FeignEncoderProperties",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.cloud.openfeign.support.FeignHttpClientProperties",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.cloud.openfeign.support.FeignHttpClientProperties$Hc5Properties"
    },
    {
      "type": "org.springframework.cloud.openfeign.support.FeignHttpClientProperties$Http2Properties"
    },
    {
      "type": "org.springframework.cloud.openfeign.support.FeignHttpClientProperties$OkHttp"
    },
    {
      "type": "org.springframework.cloud.openfeign.support.PageJacksonModule",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.cloud.openfeign.support.SortJacksonModule",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.cloud.sleuth.Tracer"
    },
    {
      "type": "org.springframework.cloud.util.random.CachedRandomPropertySourceEnvironmentPostProcessor",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.context.ApplicationContext"
    },
    {
      "type": "org.springframework.context.ApplicationContextAware"
    },
    {
      "type": "org.springframework.context.ApplicationContextException"
    },
    {
      "type": "org.springframework.context.ApplicationContextInitializer"
    },
    {
      "type": "org.springframework.context.ApplicationEvent"
    },
    {
      "type": "org.springframework.context.ApplicationEventPublisher"
    },
    {
      "type": "org.springframework.context.ApplicationEventPublisherAware"
    },
    {
      "type": "org.springframework.context.ApplicationListener"
    },
    {
      "type": "org.springframework.context.ConfigurableApplicationContext"
    },
    {
      "type": "org.springframework.context.EmbeddedValueResolverAware"
    },
    {
      "type": "org.springframework.context.EnvironmentAware"
    },
    {
      "type": "org.springframework.context.HierarchicalMessageSource"
    },
    {
      "type": "org.springframework.context.Lifecycle"
    },
    {
      "type": "org.springframework.context.LifecycleProcessor"
    },
    {
      "type": "org.springframework.context.MessageSource"
    },
    {
      "type": "org.springframework.context.MessageSourceResolvable"
    },
    {
      "type": "org.springframework.context.NoSuchMessageException"
    },
    {
      "type": "org.springframework.context.PayloadApplicationEvent"
    },
    {
      "type": "org.springframework.context.Phased"
    },
    {
      "type": "org.springframework.context.ResourceLoaderAware"
    },
    {
      "type": "org.springframework.context.SmartLifecycle"
    },
    {
      "type": "org.springframework.context.annotation.AnnotationConfigRegistry"
    },
    {
      "type": "org.springframework.context.annotation.Bean"
    },
    {
      "type": "org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider"
    },
    {
      "type": "org.springframework.context.annotation.ComponentScan"
    },
    {
      "type": "org.springframework.context.annotation.Conditional"
    },
    {
      "type": "org.springframework.context.annotation.Configuration"
    },
    {
      "type": "org.springframework.context.annotation.ConfigurationClassEnhancer$EnhancedConfiguration"
    },
    {
      "type": "org.springframework.context.annotation.EnableAspectJAutoProxy"
    },
    {
      "type": "org.springframework.context.annotation.Import"
    },
    {
      "type": "org.springframework.context.annotation.ImportAware"
    },
    {
      "type": "org.springframework.context.annotation.ImportRuntimeHints"
    },
    {
      "type": "org.springframework.context.annotation.Lazy"
    },
    {
      "type": "org.springframework.context.annotation.Primary"
    },
    {
      "type": "org.springframework.context.annotation.Role"
    },
    {
      "type": "org.springframework.context.annotation.Scope"
    },
    {
      "type": "org.springframework.context.event.ContextClosedEvent"
    },
    {
      "type": "org.springframework.context.event.ContextRefreshedEvent"
    },
    {
      "type": "org.springframework.context.event.ContextStoppedEvent"
    },
    {
      "type": "org.springframework.context.event.SmartApplicationListener"
    },
    {
      "type": "org.springframework.context.i18n.LocaleContext"
    },
    {
      "type": "org.springframework.context.support.AbstractMessageSource",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.context.support.AbstractResourceBasedMessageSource",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.context.support.ApplicationObjectSupport",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.context.support.DefaultLifecycleProcessor",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup"
    },
    {
      "type": "org.springframework.context.support.GenericApplicationContext"
    },
    {
      "type": "org.springframework.context.support.MessageSourceAccessor"
    },
    {
      "type": "org.springframework.context.support.MessageSourceSupport",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.context.support.PropertySourcesPlaceholderConfigurer"
    },
    {
      "type": "org.springframework.context.support.ResourceBundleMessageSource",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.core.DecoratingProxy"
    },
    {
      "type": "org.springframework.core.DefaultParameterNameDiscoverer",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.core.MethodParameter"
    },
    {
      "type": "org.springframework.core.Ordered"
    },
    {
      "type": "org.springframework.core.ParameterNameDiscoverer"
    },
    {
      "type": "org.springframework.core.PrioritizedParameterNameDiscoverer",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.core.ReactiveAdapterRegistry"
    },
    {
      "type": "org.springframework.core.ResolvableType"
    },
    {
      "type": "org.springframework.core.annotation.AliasFor"
    },
    {
      "type": "org.springframework.core.annotation.MergedAnnotation"
    },
    {
      "type": "org.springframework.core.annotation.Order"
    },
    {
      "type": "org.springframework.core.convert.ConversionService"
    },
    {
      "type": "org.springframework.core.convert.TypeDescriptor"
    },
    {
      "type": "org.springframework.core.convert.converter.Converter"
    },
    {
      "type": "org.springframework.core.convert.converter.ConverterFactory"
    },
    {
      "type": "org.springframework.core.convert.converter.ConverterRegistry"
    },
    {
      "type": "org.springframework.core.convert.converter.GenericConverter"
    },
    {
      "type": "org.springframework.core.convert.converter.GenericConverter$ConvertiblePair"
    },
    {
      "type": "org.springframework.core.convert.support.ConfigurableConversionService"
    },
    {
      "type": "org.springframework.core.convert.support.DefaultConversionService"
    },
    {
      "type": "org.springframework.core.convert.support.GenericConversionService",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.core.env.ConfigurableEnvironment"
    },
    {
      "type": "org.springframework.core.env.Environment"
    },
    {
      "type": "org.springframework.core.env.EnvironmentCapable"
    },
    {
      "type": "org.springframework.core.env.PropertyResolver"
    },
    {
      "type": "org.springframework.core.io.ProtocolResolver"
    },
    {
      "type": "org.springframework.core.io.Resource"
    },
    {
      "type": "org.springframework.core.io.ResourceLoader"
    },
    {
      "type": "org.springframework.core.io.buffer.DataBufferFactory"
    },
    {
      "type": "org.springframework.core.io.support.PropertiesLoaderSupport",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "setIgnoreResourceNotFound",
          "parameterTypes": [
            "boolean"
          ]
        },
        {
          "name": "setLocations",
          "parameterTypes": [
            "org.springframework.core.io.Resource[]"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.core.task.AsyncListenableTaskExecutor"
    },
    {
      "type": "org.springframework.core.task.AsyncTaskExecutor"
    },
    {
      "type": "org.springframework.core.task.SimpleAsyncTaskExecutor",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.core.task.TaskDecorator"
    },
    {
      "type": "org.springframework.core.task.TaskExecutor"
    },
    {
      "type": "org.springframework.core.type.AnnotationMetadata"
    },
    {
      "type": "org.springframework.dao.DataAccessException"
    },
    {
      "type": "org.springframework.dao.OptimisticLockingFailureException"
    },
    {
      "type": "org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor"
    },
    {
      "type": "org.springframework.dao.support.PersistenceExceptionTranslator"
    },
    {
      "type": "org.springframework.data.annotation.CreatedBy"
    },
    {
      "type": "org.springframework.data.annotation.CreatedDate"
    },
    {
      "type": "org.springframework.data.annotation.Id"
    },
    {
      "type": "org.springframework.data.annotation.LastModifiedBy"
    },
    {
      "type": "org.springframework.data.annotation.LastModifiedDate"
    },
    {
      "type": "org.springframework.data.annotation.Persistent"
    },
    {
      "type": "org.springframework.data.annotation.QueryAnnotation"
    },
    {
      "type": "org.springframework.data.annotation.Transient"
    },
    {
      "type": "org.springframework.data.annotation.Version"
    },
    {
      "type": "org.springframework.data.auditing.AuditableBeanWrapper"
    },
    {
      "type": "org.springframework.data.auditing.AuditingHandler",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "setAuditorAware",
          "parameterTypes": [
            "org.springframework.data.domain.AuditorAware"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.data.auditing.AuditingHandlerSupport",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "setDateTimeForNow",
          "parameterTypes": [
            "boolean"
          ]
        },
        {
          "name": "setDateTimeProvider",
          "parameterTypes": [
            "org.springframework.data.auditing.DateTimeProvider"
          ]
        },
        {
          "name": "setModifyOnCreation",
          "parameterTypes": [
            "boolean"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.data.auditing.Auditor"
    },
    {
      "type": "org.springframework.data.auditing.CurrentDateTimeProvider"
    },
    {
      "type": "org.springframework.data.auditing.DateTimeProvider"
    },
    {
      "type": "org.springframework.data.auditing.IsNewAwareAuditingHandler",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.data.convert.CustomConversions",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.data.convert.CustomConversions$ConverterConfiguration"
    },
    {
      "type": "org.springframework.data.convert.CustomConversions$ConverterRegistration"
    },
    {
      "type": "org.springframework.data.convert.CustomConversions$ConverterRegistrationIntent"
    },
    {
      "type": "org.springframework.data.convert.CustomConversions$StoreConversions"
    },
    {
      "type": "org.springframework.data.convert.EntityConverter"
    },
    {
      "type": "org.springframework.data.convert.EntityReader"
    },
    {
      "type": "org.springframework.data.convert.EntityWriter"
    },
    {
      "type": "org.springframework.data.convert.PropertyValueConversions"
    },
    {
      "type": "org.springframework.data.convert.ReadingConverter"
    },
    {
      "type": "org.springframework.data.convert.WritingConverter"
    },
    {
      "type": "org.springframework.data.domain.AuditorAware",
      "methods": [
        {
          "name": "getCurrentAuditor",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.data.domain.Chunk",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.data.domain.ManagedTypes"
    },
    {
      "type": "org.springframework.data.domain.OffsetScrollPosition"
    },
    {
      "type": "org.springframework.data.domain.Page",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.data.domain.PageImpl",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.data.domain.PageRequest"
    },
    {
      "type": "org.springframework.data.domain.Pageable"
    },
    {
      "type": "org.springframework.data.domain.Persistable",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.data.domain.Slice",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.data.domain.Sort"
    },
    {
      "type": "org.springframework.data.domain.Sort$Order"
    },
    {
      "type": "org.springframework.data.domain.Unpaged"
    },
    {
      "type": "org.springframework.data.elasticsearch.NoSuchIndexException"
    },
    {
      "type": "org.springframework.data.elasticsearch.annotations.Alias"
    },
    {
      "type": "org.springframework.data.elasticsearch.annotations.CompletionContext"
    },
    {
      "type": "org.springframework.data.elasticsearch.annotations.CompletionField"
    },
    {
      "type": "org.springframework.data.elasticsearch.annotations.Document"
    },
    {
      "type": "org.springframework.data.elasticsearch.annotations.Field"
    },
    {
      "type": "org.springframework.data.elasticsearch.annotations.MultiField"
    },
    {
      "type": "org.springframework.data.elasticsearch.annotations.Query"
    },
    {
      "type": "org.springframework.data.elasticsearch.client.elc.ClusterTemplate"
    },
    {
      "type": "org.springframework.data.elasticsearch.client.elc.ElasticsearchTemplate",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.data.elasticsearch.client.elc.ElasticsearchTemplate$ClientCallback"
    },
    {
      "type": "org.springframework.data.elasticsearch.client.elc.ElasticsearchTemplate$MultiSearchQueryParameter"
    },
    {
      "type": "org.springframework.data.elasticsearch.client.elc.ElasticsearchTemplate$MultiSearchTemplateQueryParameter"
    },
    {
      "type": "org.springframework.data.elasticsearch.client.elc.EntityAsMap",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.data.elasticsearch.client.elc.ReactiveClusterTemplate"
    },
    {
      "type": "org.springframework.data.elasticsearch.client.elc.ReactiveElasticsearchClient",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.data.elasticsearch.client.elc.ReactiveElasticsearchClusterClient"
    },
    {
      "type": "org.springframework.data.elasticsearch.client.elc.ReactiveElasticsearchIndicesClient"
    },
    {
      "type": "org.springframework.data.elasticsearch.client.elc.ReactiveElasticsearchSqlClient"
    },
    {
      "type": "org.springframework.data.elasticsearch.client.elc.ReactiveElasticsearchTemplate",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.data.elasticsearch.client.elc.ReactiveElasticsearchTemplate$ClientCallback"
    },
    {
      "type": "org.springframework.data.elasticsearch.client.elc.ReactiveElasticsearchTemplate$PitSearchAfter"
    },
    {
      "type": "org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate$ReadDocumentCallback"
    },
    {
      "type": "org.springframework.data.elasticsearch.core.AbstractReactiveElasticsearchTemplate",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.data.elasticsearch.core.AbstractReactiveElasticsearchTemplate$Entities"
    },
    {
      "type": "org.springframework.data.elasticsearch.core.AbstractReactiveElasticsearchTemplate$IndexResponseMetaData"
    },
    {
      "type": "org.springframework.data.elasticsearch.core.AbstractReactiveElasticsearchTemplate$ReadDocumentCallback"
    },
    {
      "type": "org.springframework.data.elasticsearch.core.AbstractReactiveElasticsearchTemplate$SearchDocumentCallback"
    },
    {
      "type": "org.springframework.data.elasticsearch.core.DocumentOperations"
    },
    {
      "type": "org.springframework.data.elasticsearch.core.ElasticsearchOperations"
    },
    {
      "type": "org.springframework.data.elasticsearch.core.EntityOperations$AdaptableEntity"
    },
    {
      "type": "org.springframework.data.elasticsearch.core.IndexOperations"
    },
    {
      "type": "org.springframework.data.elasticsearch.core.IndexedObjectInformation"
    },
    {
      "type": "org.springframework.data.elasticsearch.core.MultiGetItem"
    },
    {
      "type": "org.springframework.data.elasticsearch.core.ReactiveDocumentOperations"
    },
    {
      "type": "org.springframework.data.elasticsearch.core.ReactiveElasticsearchOperations"
    },
    {
      "type": "org.springframework.data.elasticsearch.core.ReactiveIndexOperations"
    },
    {
      "type": "org.springframework.data.elasticsearch.core.ReactiveSearchOperations"
    },
    {
      "type": "org.springframework.data.elasticsearch.core.RefreshPolicy"
    },
    {
      "type": "org.springframework.data.elasticsearch.core.SearchHit"
    },
    {
      "type": "org.springframework.data.elasticsearch.core.SearchHits"
    },
    {
      "type": "org.springframework.data.elasticsearch.core.SearchHitsIterator"
    },
    {
      "type": "org.springframework.data.elasticsearch.core.SearchOperations"
    },
    {
      "type": "org.springframework.data.elasticsearch.core.SearchPage"
    },
    {
      "type": "org.springframework.data.elasticsearch.core.SearchScrollHits"
    },
    {
      "type": "org.springframework.data.elasticsearch.core.cluster.ClusterOperations"
    },
    {
      "type": "org.springframework.data.elasticsearch.core.cluster.ReactiveClusterOperations"
    },
    {
      "type": "org.springframework.data.elasticsearch.core.convert.ElasticsearchConverter"
    },
    {
      "type": "org.springframework.data.elasticsearch.core.convert.ElasticsearchCustomConversions",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.data.elasticsearch.core.convert.ElasticsearchTypeMapper"
    },
    {
      "type": "org.springframework.data.elasticsearch.core.convert.MappingElasticsearchConverter",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.data.elasticsearch.core.document.Document"
    },
    {
      "type": "org.springframework.data.elasticsearch.core.document.MapDocument",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.data.elasticsearch.core.document.SearchDocument"
    },
    {
      "type": "org.springframework.data.elasticsearch.core.document.SearchDocumentResponse"
    },
    {
      "type": "org.springframework.data.elasticsearch.core.document.SearchDocumentResponse$EntityCreator"
    },
    {
      "type": "org.springframework.data.elasticsearch.core.event.AfterConvertCallback"
    },
    {
      "type": "org.springframework.data.elasticsearch.core.event.AfterLoadCallback"
    },
    {
      "type": "org.springframework.data.elasticsearch.core.event.AfterSaveCallback"
    },
    {
      "type": "org.springframework.data.elasticsearch.core.event.BeforeConvertCallback"
    },
    {
      "type": "org.springframework.data.elasticsearch.core.mapping.ElasticsearchPersistentEntity"
    },
    {
      "type": "org.springframework.data.elasticsearch.core.mapping.ElasticsearchPersistentProperty"
    },
    {
      "type": "org.springframework.data.elasticsearch.core.mapping.IndexCoordinates"
    },
    {
      "type": "org.springframework.data.elasticsearch.core.mapping.PropertyValueConverter"
    },
    {
      "type": "org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchMappingContext",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity"
    },
    {
      "type": "org.springframework.data.elasticsearch.core.query.BaseQuery"
    },
    {
      "type": "org.springframework.data.elasticsearch.core.query.BaseQueryBuilder"
    },
    {
      "type": "org.springframework.data.elasticsearch.core.query.BulkOptions"
    },
    {
      "type": "org.springframework.data.elasticsearch.core.query.ByQueryResponse"
    },
    {
      "type": "org.springframework.data.elasticsearch.core.query.Criteria"
    },
    {
      "type": "org.springframework.data.elasticsearch.core.query.Criteria$CriteriaEntry"
    },
    {
      "type": "org.springframework.data.elasticsearch.core.query.CriteriaQuery"
    },
    {
      "type": "org.springframework.data.elasticsearch.core.query.DeleteQuery"
    },
    {
      "type": "org.springframework.data.elasticsearch.core.query.IndexQuery"
    },
    {
      "type": "org.springframework.data.elasticsearch.core.query.MoreLikeThisQuery"
    },
    {
      "type": "org.springframework.data.elasticsearch.core.query.Query"
    },
    {
      "type": "org.springframework.data.elasticsearch.core.query.SearchTemplateQuery"
    },
    {
      "type": "org.springframework.data.elasticsearch.core.query.SeqNoPrimaryTerm"
    },
    {
      "type": "org.springframework.data.elasticsearch.core.query.SqlQuery"
    },
    {
      "type": "org.springframework.data.elasticsearch.core.query.UpdateQuery"
    },
    {
      "type": "org.springframework.data.elasticsearch.core.query.UpdateResponse"
    },
    {
      "type": "org.springframework.data.elasticsearch.core.reindex.ReindexRequest"
    },
    {
      "type": "org.springframework.data.elasticsearch.core.reindex.ReindexResponse"
    },
    {
      "type": "org.springframework.data.elasticsearch.core.routing.RoutingResolver"
    },
    {
      "type": "org.springframework.data.elasticsearch.core.script.ReactiveScriptOperations"
    },
    {
      "type": "org.springframework.data.elasticsearch.core.script.Script"
    },
    {
      "type": "org.springframework.data.elasticsearch.core.script.ScriptOperations"
    },
    {
      "type": "org.springframework.data.elasticsearch.core.sql.ReactiveSqlOperations"
    },
    {
      "type": "org.springframework.data.elasticsearch.core.sql.SqlOperations"
    },
    {
      "type": "org.springframework.data.elasticsearch.core.sql.SqlResponse"
    },
    {
      "type": "org.springframework.data.elasticsearch.core.suggest.Completion",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.data.elasticsearch.core.suggest.Completion_Accessor_4z9m63",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.springframework.data.elasticsearch.core.suggest.Completion"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.data.elasticsearch.core.suggest.Completion_Instantiator_4z9m63",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.data.elasticsearch.core.suggest.response.Suggest"
    },
    {
      "type": "org.springframework.data.elasticsearch.repository.ElasticsearchRepository",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.data.elasticsearch.repository.support.ElasticsearchRepositoryFactoryBean",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "setElasticsearchOperations",
          "parameterTypes": [
            "org.springframework.data.elasticsearch.core.ElasticsearchOperations"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.data.elasticsearch.repository.support.SimpleElasticsearchRepository",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.springframework.data.elasticsearch.repository.support.ElasticsearchEntityInformation",
            "org.springframework.data.elasticsearch.core.ElasticsearchOperations"
          ]
        },
        {
          "name": "deleteById",
          "parameterTypes": [
            "java.lang.Object"
          ]
        },
        {
          "name": "existsById",
          "parameterTypes": [
            "java.lang.Object"
          ]
        },
        {
          "name": "save",
          "parameterTypes": [
            "java.lang.Object"
          ]
        },
        {
          "name": "saveAll",
          "parameterTypes": [
            "java.lang.Iterable"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.data.elasticsearch.support.DefaultStringObjectMap",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.data.elasticsearch.support.StringObjectMap"
    },
    {
      "type": "org.springframework.data.geo.GeoModule",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.data.jdbc.core.JdbcAggregateOperations"
    },
    {
      "type": "org.springframework.data.jdbc.core.JdbcAggregateTemplate",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.data.jdbc.core.JdbcAggregateTemplate$EntityAndChangeCreator"
    },
    {
      "type": "org.springframework.data.jdbc.core.JdbcAggregateTemplate$EntityAndPreviousVersion"
    },
    {
      "type": "org.springframework.data.jdbc.core.convert.DataAccessStrategy"
    },
    {
      "type": "org.springframework.data.jdbc.core.convert.DefaultDataAccessStrategy",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.data.jdbc.core.convert.EntityRowMapper"
    },
    {
      "type": "org.springframework.data.jdbc.core.convert.Identifier"
    },
    {
      "type": "org.springframework.data.jdbc.core.convert.InsertSubject"
    },
    {
      "type": "org.springframework.data.jdbc.core.convert.JdbcArrayColumns"
    },
    {
      "type": "org.springframework.data.jdbc.core.convert.JdbcConverter"
    },
    {
      "type": "org.springframework.data.jdbc.core.convert.JdbcCustomConversions",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.data.jdbc.core.convert.MappingJdbcConverter",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.data.jdbc.core.convert.ReadingDataAccessStrategy"
    },
    {
      "type": "org.springframework.data.jdbc.core.convert.RelationResolver"
    },
    {
      "type": "org.springframework.data.jdbc.core.convert.SqlGenerator"
    },
    {
      "type": "org.springframework.data.jdbc.core.convert.SqlIdentifierParameterSource"
    },
    {
      "type": "org.springframework.data.jdbc.core.dialect.JdbcDialect"
    },
    {
      "type": "org.springframework.data.jdbc.core.dialect.JdbcPostgresDialect",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.data.jdbc.core.mapping.JdbcMappingContext",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.data.jdbc.core.mapping.JdbcValue"
    },
    {
      "type": "org.springframework.data.jdbc.repository.QueryMappingConfiguration"
    },
    {
      "type": "org.springframework.data.jdbc.repository.config.AbstractJdbcConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.data.jdbc.repository.config.DialectResolver$DefaultDialectProvider",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.data.jdbc.repository.config.DialectResolver.DefaultDialectProvider"
    },
    {
      "type": "org.springframework.data.jdbc.repository.config.EnableJdbcAuditing"
    },
    {
      "type": "org.springframework.data.jdbc.repository.query.Modifying"
    },
    {
      "type": "org.springframework.data.jdbc.repository.query.Query"
    },
    {
      "type": "org.springframework.data.jdbc.repository.support.JdbcRepositoryFactoryBean",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "setConverter",
          "parameterTypes": [
            "org.springframework.data.jdbc.core.convert.JdbcConverter"
          ]
        },
        {
          "name": "setDialect",
          "parameterTypes": [
            "org.springframework.data.relational.core.dialect.Dialect"
          ]
        },
        {
          "name": "setMappingContext",
          "parameterTypes": [
            "org.springframework.data.relational.core.mapping.RelationalMappingContext"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.data.jdbc.repository.support.SimpleJdbcRepository",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.springframework.data.jdbc.core.JdbcAggregateOperations",
            "org.springframework.data.mapping.PersistentEntity",
            "org.springframework.data.jdbc.core.convert.JdbcConverter"
          ]
        },
        {
          "name": "deleteById",
          "parameterTypes": [
            "java.lang.Object"
          ]
        },
        {
          "name": "existsById",
          "parameterTypes": [
            "java.lang.Object"
          ]
        },
        {
          "name": "findById",
          "parameterTypes": [
            "java.lang.Object"
          ]
        },
        {
          "name": "save",
          "parameterTypes": [
            "java.lang.Object"
          ]
        },
        {
          "name": "saveAll",
          "parameterTypes": [
            "java.lang.Iterable"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.data.mapping.MappingException"
    },
    {
      "type": "org.springframework.data.mapping.PersistentEntity"
    },
    {
      "type": "org.springframework.data.mapping.PersistentProperty"
    },
    {
      "type": "org.springframework.data.mapping.PersistentPropertyAccessor"
    },
    {
      "type": "org.springframework.data.mapping.PersistentPropertyPath"
    },
    {
      "type": "org.springframework.data.mapping.PersistentPropertyPathAccessor"
    },
    {
      "type": "org.springframework.data.mapping.PersistentPropertyPaths"
    },
    {
      "type": "org.springframework.data.mapping.PropertyPath"
    },
    {
      "type": "org.springframework.data.mapping.callback.EntityCallback"
    },
    {
      "type": "org.springframework.data.mapping.callback.EntityCallbacks"
    },
    {
      "type": "org.springframework.data.mapping.callback.ReactiveEntityCallbacks"
    },
    {
      "type": "org.springframework.data.mapping.context.AbstractMappingContext",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.data.mapping.context.MappingContext"
    },
    {
      "type": "org.springframework.data.mapping.model.ClassGeneratingEntityInstantiator$ObjectInstantiator"
    },
    {
      "type": "org.springframework.data.mapping.model.EntityInstantiators"
    },
    {
      "type": "org.springframework.data.mapping.model.FieldNamingStrategy"
    },
    {
      "type": "org.springframework.data.mapping.model.MutablePersistentEntity"
    },
    {
      "type": "org.springframework.data.mapping.model.ParameterValueProvider"
    },
    {
      "type": "org.springframework.data.mapping.model.Property"
    },
    {
      "type": "org.springframework.data.mapping.model.SimpleTypeHolder"
    },
    {
      "type": "org.springframework.data.mapping.model.ValueExpressionEvaluator"
    },
    {
      "type": "org.springframework.data.projection.EntityProjection"
    },
    {
      "type": "org.springframework.data.projection.EntityProjectionIntrospector"
    },
    {
      "type": "org.springframework.data.projection.ProjectionFactory"
    },
    {
      "type": "org.springframework.data.querydsl.QuerydslPredicateExecutor"
    },
    {
      "type": "org.springframework.data.querydsl.ReactiveQuerydslPredicateExecutor"
    },
    {
      "type": "org.springframework.data.redis.cache.RedisCache"
    },
    {
      "type": "org.springframework.data.redis.cache.RedisCacheConfiguration"
    },
    {
      "type": "org.springframework.data.redis.cache.RedisCacheManager",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.data.redis.cache.RedisCacheManager$RedisCacheManagerBuilder"
    },
    {
      "type": "org.springframework.data.redis.cache.RedisCacheWriter"
    },
    {
      "type": "org.springframework.data.redis.connection.ClusterCommandExecutor"
    },
    {
      "type": "org.springframework.data.redis.connection.ClusterInfo"
    },
    {
      "type": "org.springframework.data.redis.connection.ClusterTopologyProvider"
    },
    {
      "type": "org.springframework.data.redis.connection.DataType"
    },
    {
      "type": "org.springframework.data.redis.connection.ReactiveRedisConnection"
    },
    {
      "type": "org.springframework.data.redis.connection.ReactiveRedisConnectionFactory"
    },
    {
      "type": "org.springframework.data.redis.connection.RedisClusterConfiguration"
    },
    {
      "type": "org.springframework.data.redis.connection.RedisClusterConnection"
    },
    {
      "type": "org.springframework.data.redis.connection.RedisConfiguration"
    },
    {
      "type": "org.springframework.data.redis.connection.RedisConfiguration$ClusterConfiguration"
    },
    {
      "type": "org.springframework.data.redis.connection.RedisConnection"
    },
    {
      "type": "org.springframework.data.redis.connection.RedisConnectionFactory"
    },
    {
      "type": "org.springframework.data.redis.connection.RedisKeyCommands"
    },
    {
      "type": "org.springframework.data.redis.connection.RedisNode"
    },
    {
      "type": "org.springframework.data.redis.connection.RedisPassword"
    },
    {
      "type": "org.springframework.data.redis.connection.RedisSentinelConfiguration"
    },
    {
      "type": "org.springframework.data.redis.connection.RedisSentinelConnection"
    },
    {
      "type": "org.springframework.data.redis.connection.RedisSocketConfiguration"
    },
    {
      "type": "org.springframework.data.redis.connection.RedisStandaloneConfiguration"
    },
    {
      "type": "org.springframework.data.redis.connection.RedisTxCommands",
      "methods": [
        {
          "name": "exec",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.data.redis.connection.SortParameters"
    },
    {
      "type": "org.springframework.data.redis.connection.lettuce.ClusterConnectionProvider"
    },
    {
      "type": "org.springframework.data.redis.connection.lettuce.LettuceClientConfiguration"
    },
    {
      "type": "org.springframework.data.redis.connection.lettuce.LettuceClientConfiguration$LettuceClientConfigurationBuilder"
    },
    {
      "type": "org.springframework.data.redis.connection.lettuce.LettuceClusterConnection"
    },
    {
      "type": "org.springframework.data.redis.connection.lettuce.LettuceConnection"
    },
    {
      "type": "org.springframework.data.redis.connection.lettuce.LettuceConnection$PipeliningFlushPolicy"
    },
    {
      "type": "org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$MutableLettuceClientConfiguration"
    },
    {
      "type": "org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$SharedConnection"
    },
    {
      "type": "org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$State"
    },
    {
      "type": "org.springframework.data.redis.connection.lettuce.LettuceConnectionProvider"
    },
    {
      "type": "org.springframework.data.redis.connection.lettuce.LettuceReactiveRedisClusterConnection"
    },
    {
      "type": "org.springframework.data.redis.connection.lettuce.LettuceReactiveRedisConnection"
    },
    {
      "type": "org.springframework.data.redis.connection.lettuce.LettuceReactiveRedisConnection$AsyncConnect",
      "fields": [
        {
          "name": "state"
        }
      ]
    },
    {
      "type": "org.springframework.data.redis.connection.lettuce.RedisCredentialsProviderFactory"
    },
    {
      "type": "org.springframework.data.redis.connection.lettuce.StandaloneConnectionProvider"
    },
    {
      "type": "org.springframework.data.redis.connection.lettuce.StaticMasterReplicaConnectionProvider"
    },
    {
      "type": "org.springframework.data.redis.core.BoundGeoOperations"
    },
    {
      "type": "org.springframework.data.redis.core.BoundHashOperations"
    },
    {
      "type": "org.springframework.data.redis.core.BoundListOperations"
    },
    {
      "type": "org.springframework.data.redis.core.BoundSetOperations"
    },
    {
      "type": "org.springframework.data.redis.core.BoundStreamOperations"
    },
    {
      "type": "org.springframework.data.redis.core.BoundValueOperations"
    },
    {
      "type": "org.springframework.data.redis.core.BoundZSetOperations"
    },
    {
      "type": "org.springframework.data.redis.core.BulkMapper"
    },
    {
      "type": "org.springframework.data.redis.core.ClusterOperations"
    },
    {
      "type": "org.springframework.data.redis.core.Cursor"
    },
    {
      "type": "org.springframework.data.redis.core.GeoOperations"
    },
    {
      "type": "org.springframework.data.redis.core.HashOperations"
    },
    {
      "type": "org.springframework.data.redis.core.HyperLogLogOperations"
    },
    {
      "type": "org.springframework.data.redis.core.ListOperations"
    },
    {
      "type": "org.springframework.data.redis.core.ReactiveGeoOperations"
    },
    {
      "type": "org.springframework.data.redis.core.ReactiveHashOperations"
    },
    {
      "type": "org.springframework.data.redis.core.ReactiveHyperLogLogOperations"
    },
    {
      "type": "org.springframework.data.redis.core.ReactiveListOperations"
    },
    {
      "type": "org.springframework.data.redis.core.ReactiveRedisCallback"
    },
    {
      "type": "org.springframework.data.redis.core.ReactiveRedisOperations"
    },
    {
      "type": "org.springframework.data.redis.core.ReactiveRedisSessionCallback"
    },
    {
      "type": "org.springframework.data.redis.core.ReactiveRedisTemplate",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.data.redis.core.ReactiveSetOperations"
    },
    {
      "type": "org.springframework.data.redis.core.ReactiveStreamOperations"
    },
    {
      "type": "org.springframework.data.redis.core.ReactiveStringRedisTemplate",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.data.redis.core.ReactiveValueOperations"
    },
    {
      "type": "org.springframework.data.redis.core.ReactiveZSetOperations"
    },
    {
      "type": "org.springframework.data.redis.core.RedisAccessor",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.data.redis.core.RedisCallback"
    },
    {
      "type": "org.springframework.data.redis.core.RedisOperations"
    },
    {
      "type": "org.springframework.data.redis.core.RedisTemplate",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.data.redis.core.ScanOptions"
    },
    {
      "type": "org.springframework.data.redis.core.SessionCallback"
    },
    {
      "type": "org.springframework.data.redis.core.SetOperations"
    },
    {
      "type": "org.springframework.data.redis.core.StreamOperations"
    },
    {
      "type": "org.springframework.data.redis.core.StringRedisTemplate",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.data.redis.core.ValueOperations"
    },
    {
      "type": "org.springframework.data.redis.core.ZSetOperations"
    },
    {
      "type": "org.springframework.data.redis.core.convert.RedisCustomConversions",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.data.redis.core.query.SortQuery"
    },
    {
      "type": "org.springframework.data.redis.core.script.RedisScript"
    },
    {
      "type": "org.springframework.data.redis.core.script.ScriptExecutor"
    },
    {
      "type": "org.springframework.data.redis.hash.HashMapper"
    },
    {
      "type": "org.springframework.data.redis.listener.ChannelTopic"
    },
    {
      "type": "org.springframework.data.redis.listener.PatternTopic"
    },
    {
      "type": "org.springframework.data.redis.listener.ReactiveRedisMessageListenerContainer"
    },
    {
      "type": "org.springframework.data.redis.listener.Topic"
    },
    {
      "type": "org.springframework.data.redis.serializer.RedisElementReader"
    },
    {
      "type": "org.springframework.data.redis.serializer.RedisElementWriter"
    },
    {
      "type": "org.springframework.data.redis.serializer.RedisSerializationContext"
    },
    {
      "type": "org.springframework.data.redis.serializer.RedisSerializer"
    },
    {
      "type": "org.springframework.data.relational.RelationalManagedTypes",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.data.relational.auditing.RelationalAuditingCallback",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.data.relational.core.conversion.AbstractRelationalConverter",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.data.relational.core.conversion.AggregateChange"
    },
    {
      "type": "org.springframework.data.relational.core.conversion.BatchingAggregateChange"
    },
    {
      "type": "org.springframework.data.relational.core.conversion.DeleteAggregateChange"
    },
    {
      "type": "org.springframework.data.relational.core.conversion.IdValueSource"
    },
    {
      "type": "org.springframework.data.relational.core.conversion.MappingRelationalConverter",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.data.relational.core.conversion.MappingRelationalConverter$ConversionContext"
    },
    {
      "type": "org.springframework.data.relational.core.conversion.MappingRelationalConverter$ProjectingConversionContext"
    },
    {
      "type": "org.springframework.data.relational.core.conversion.MappingRelationalConverter$RelationalPropertyValueProvider"
    },
    {
      "type": "org.springframework.data.relational.core.conversion.MutableAggregateChange"
    },
    {
      "type": "org.springframework.data.relational.core.conversion.ObjectPath"
    },
    {
      "type": "org.springframework.data.relational.core.conversion.RelationalConverter"
    },
    {
      "type": "org.springframework.data.relational.core.conversion.RootAggregateChange"
    },
    {
      "type": "org.springframework.data.relational.core.conversion.RowDocumentAccessor"
    },
    {
      "type": "org.springframework.data.relational.core.dialect.AbstractDialect",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.data.relational.core.dialect.Dialect"
    },
    {
      "type": "org.springframework.data.relational.core.dialect.Escaper"
    },
    {
      "type": "org.springframework.data.relational.core.dialect.IdGeneration"
    },
    {
      "type": "org.springframework.data.relational.core.dialect.InsertRenderContext"
    },
    {
      "type": "org.springframework.data.relational.core.dialect.LimitClause"
    },
    {
      "type": "org.springframework.data.relational.core.dialect.LockClause"
    },
    {
      "type": "org.springframework.data.relational.core.dialect.OrderByNullPrecedence"
    },
    {
      "type": "org.springframework.data.relational.core.dialect.PostgresDialect",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.data.relational.core.mapping.AggregatePath"
    },
    {
      "type": "org.springframework.data.relational.core.mapping.BasicRelationalPersistentProperty"
    },
    {
      "type": "org.springframework.data.relational.core.mapping.NamingStrategy"
    },
    {
      "type": "org.springframework.data.relational.core.mapping.RelationalMappingContext",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.data.relational.core.mapping.RelationalPersistentEntity"
    },
    {
      "type": "org.springframework.data.relational.core.mapping.RelationalPersistentProperty"
    },
    {
      "type": "org.springframework.data.relational.core.mapping.SqlIdentifierSanitizer"
    },
    {
      "type": "org.springframework.data.relational.core.mapping.Table"
    },
    {
      "type": "org.springframework.data.relational.core.mapping.event.AfterConvertCallback"
    },
    {
      "type": "org.springframework.data.relational.core.mapping.event.AfterSaveCallback"
    },
    {
      "type": "org.springframework.data.relational.core.mapping.event.BeforeConvertCallback",
      "methods": [
        {
          "name": "onBeforeConvert",
          "parameterTypes": [
            "java.lang.Object"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.data.relational.core.mapping.event.BeforeSaveCallback"
    },
    {
      "type": "org.springframework.data.relational.core.query.Query"
    },
    {
      "type": "org.springframework.data.relational.core.sql.IdentifierProcessing"
    },
    {
      "type": "org.springframework.data.relational.core.sql.LockMode"
    },
    {
      "type": "org.springframework.data.relational.core.sql.Select"
    },
    {
      "type": "org.springframework.data.relational.core.sql.SimpleFunction"
    },
    {
      "type": "org.springframework.data.relational.core.sql.SqlIdentifier"
    },
    {
      "type": "org.springframework.data.relational.core.sql.render.SelectRenderContext"
    },
    {
      "type": "org.springframework.data.relational.domain.RowDocument"
    },
    {
      "type": "org.springframework.data.repository.CrudRepository",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.data.repository.ListCrudRepository",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.data.repository.NoRepositoryBean"
    },
    {
      "type": "org.springframework.data.repository.PagingAndSortingRepository",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.data.repository.Repository",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.data.repository.config.PropertiesBasedNamedQueriesFactoryBean",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.data.repository.core.EntityInformation"
    },
    {
      "type": "org.springframework.data.repository.core.NamedQueries"
    },
    {
      "type": "org.springframework.data.repository.core.RepositoryInformation"
    },
    {
      "type": "org.springframework.data.repository.core.support.MethodLookup"
    },
    {
      "type": "org.springframework.data.repository.core.support.MethodLookup$InvokedMethod"
    },
    {
      "type": "org.springframework.data.repository.core.support.MethodLookup$MethodPredicate"
    },
    {
      "type": "org.springframework.data.repository.core.support.PropertiesBasedNamedQueries",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "setLazyInit",
          "parameterTypes": [
            "boolean"
          ]
        },
        {
          "name": "setNamedQueries",
          "parameterTypes": [
            "org.springframework.data.repository.core.NamedQueries"
          ]
        },
        {
          "name": "setQueryLookupStrategyKey",
          "parameterTypes": [
            "org.springframework.data.repository.query.QueryLookupStrategy$Key"
          ]
        },
        {
          "name": "setRepositoryFragments",
          "parameterTypes": [
            "org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.data.repository.core.support.RepositoryFactoryCustomizer"
    },
    {
      "type": "org.springframework.data.repository.core.support.RepositoryFactoryInformation"
    },
    {
      "type": "org.springframework.data.repository.core.support.RepositoryFactorySupport"
    },
    {
      "type": "org.springframework.data.repository.core.support.RepositoryFragment"
    },
    {
      "type": "org.springframework.data.repository.core.support.RepositoryFragment$ImplementedRepositoryFragment",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.data.repository.core.support.RepositoryFragmentsFactoryBean",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.data.repository.core.support.RepositoryInvocationMulticaster"
    },
    {
      "type": "org.springframework.data.repository.core.support.RepositoryMethodInvocationListener"
    },
    {
      "type": "org.springframework.data.repository.core.support.RepositoryMethodInvocationListener$RepositoryMethodInvocation"
    },
    {
      "type": "org.springframework.data.repository.core.support.TransactionalRepositoryFactoryBeanSupport",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "setTransactionManager",
          "parameterTypes": [
            "java.lang.String"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.data.repository.query.QueryByExampleExecutor"
    },
    {
      "type": "org.springframework.data.repository.query.QueryLookupStrategy$Key"
    },
    {
      "type": "org.springframework.data.repository.query.QueryMethodEvaluationContextProvider"
    },
    {
      "type": "org.springframework.data.repository.query.ReactiveQueryByExampleExecutor"
    },
    {
      "type": "org.springframework.data.spel.EvaluationContextProvider"
    },
    {
      "type": "org.springframework.data.util.CustomCollections$EclipseCollections",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.data.util.CustomCollections$VavrCollections",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.data.util.CustomCollections.EclipseCollections"
    },
    {
      "type": "org.springframework.data.util.CustomCollections.VavrCollections"
    },
    {
      "type": "org.springframework.data.util.KotlinBeanInfoFactory",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.data.util.Streamable",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.data.util.TypeInformation"
    },
    {
      "type": "org.springframework.data.web.OffsetScrollPositionArgumentResolver"
    },
    {
      "type": "org.springframework.data.web.OffsetScrollPositionHandlerMethodArgumentResolver",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.data.web.OffsetScrollPositionHandlerMethodArgumentResolverSupport",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.data.web.PageableArgumentResolver"
    },
    {
      "type": "org.springframework.data.web.PageableDefault"
    },
    {
      "type": "org.springframework.data.web.PageableHandlerMethodArgumentResolver",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.data.web.PageableHandlerMethodArgumentResolverSupport",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.data.web.PagedModel",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "getContent",
          "parameterTypes": []
        },
        {
          "name": "getMetadata",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.data.web.PagedModel$PageMetadata",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "number",
          "parameterTypes": []
        },
        {
          "name": "size",
          "parameterTypes": []
        },
        {
          "name": "totalElements",
          "parameterTypes": []
        },
        {
          "name": "totalPages",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.data.web.SortArgumentResolver"
    },
    {
      "type": "org.springframework.data.web.SortDefault"
    },
    {
      "type": "org.springframework.data.web.SortDefault$SortDefaults"
    },
    {
      "type": "org.springframework.data.web.SortHandlerMethodArgumentResolver",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.data.web.SortHandlerMethodArgumentResolverSupport",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.data.web.config.EnableSpringDataWebSupport"
    },
    {
      "type": "org.springframework.data.web.config.EnableSpringDataWebSupport$PageSerializationMode"
    },
    {
      "type": "org.springframework.data.web.config.OffsetScrollPositionHandlerMethodArgumentResolverCustomizer"
    },
    {
      "type": "org.springframework.data.web.config.PageableHandlerMethodArgumentResolverCustomizer"
    },
    {
      "type": "org.springframework.data.web.config.ProjectingArgumentResolverRegistrar",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.data.web.config.ProjectingArgumentResolverRegistrar$ProjectingArgumentResolverBeanPostProcessor",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.data.web.config.SortHandlerMethodArgumentResolverCustomizer"
    },
    {
      "type": "org.springframework.data.web.config.SpringDataJacksonConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.data.web.config.SpringDataJacksonConfiguration$PageModule",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.data.web.config.SpringDataJacksonConfiguration$PageModule$PageModelConverter",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.data.web.config.SpringDataJacksonModules"
    },
    {
      "type": "org.springframework.data.web.config.SpringDataWebConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.data.web.config.SpringDataWebSettings",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.expression.EvaluationContext"
    },
    {
      "type": "org.springframework.format.AnnotationFormatterFactory"
    },
    {
      "type": "org.springframework.format.Formatter"
    },
    {
      "type": "org.springframework.format.FormatterRegistry"
    },
    {
      "type": "org.springframework.format.Parser"
    },
    {
      "type": "org.springframework.format.Printer"
    },
    {
      "type": "org.springframework.format.support.DefaultFormattingConversionService",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.format.support.FormattingConversionService",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.hateoas.server.mvc.TypeConstrainedMappingJackson2HttpMessageConverter"
    },
    {
      "type": "org.springframework.http.CacheControl"
    },
    {
      "type": "org.springframework.http.HttpHeaders"
    },
    {
      "type": "org.springframework.http.HttpInputMessage"
    },
    {
      "type": "org.springframework.http.HttpMethod"
    },
    {
      "type": "org.springframework.http.HttpOutputMessage"
    },
    {
      "type": "org.springframework.http.HttpRequest"
    },
    {
      "type": "org.springframework.http.HttpStatus"
    },
    {
      "type": "org.springframework.http.MediaType"
    },
    {
      "type": "org.springframework.http.ResponseEntity"
    },
    {
      "type": "org.springframework.http.client.ClientHttpRequestFactory"
    },
    {
      "type": "org.springframework.http.client.ClientHttpRequestInitializer"
    },
    {
      "type": "org.springframework.http.client.ClientHttpRequestInterceptor"
    },
    {
      "type": "org.springframework.http.client.ClientHttpResponse"
    },
    {
      "type": "org.springframework.http.client.JdkClientHttpRequestFactory"
    },
    {
      "type": "org.springframework.http.client.observation.ClientRequestObservationConvention"
    },
    {
      "type": "org.springframework.http.client.reactive.ClientHttpConnector"
    },
    {
      "type": "org.springframework.http.client.reactive.ClientHttpResponse"
    },
    {
      "type": "org.springframework.http.client.reactive.JdkClientHttpConnector",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.http.client.reactive.JdkClientHttpRequest"
    },
    {
      "type": "org.springframework.http.codec.ClientCodecConfigurer"
    },
    {
      "type": "org.springframework.http.codec.CodecConfigurer"
    },
    {
      "type": "org.springframework.http.codec.ServerCodecConfigurer"
    },
    {
      "type": "org.springframework.http.codec.support.DefaultClientCodecConfigurer",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.http.codec.support.DefaultServerCodecConfigurer"
    },
    {
      "type": "org.springframework.http.converter.AbstractGenericHttpMessageConverter",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.http.converter.AbstractHttpMessageConverter",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.http.converter.FormHttpMessageConverter"
    },
    {
      "type": "org.springframework.http.converter.GenericHttpMessageConverter"
    },
    {
      "type": "org.springframework.http.converter.HttpMessageConverter"
    },
    {
      "type": "org.springframework.http.converter.HttpMessageNotReadableException"
    },
    {
      "type": "org.springframework.http.converter.HttpMessageNotWritableException"
    },
    {
      "type": "org.springframework.http.converter.StringHttpMessageConverter",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.http.converter.json.AbstractJackson2HttpMessageConverter",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.http.converter.json.GsonHttpMessageConverter"
    },
    {
      "type": "org.springframework.http.converter.json.Jackson2ObjectMapperBuilder",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.http.converter.json.MappingJackson2HttpMessageConverter",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.http.converter.support.AllEncompassingFormHttpMessageConverter"
    },
    {
      "type": "org.springframework.http.server.PathContainer"
    },
    {
      "type": "org.springframework.http.server.PathContainer$Options"
    },
    {
      "type": "org.springframework.http.server.RequestPath"
    },
    {
      "type": "org.springframework.http.server.observation.ServerRequestObservationContext"
    },
    {
      "type": "org.springframework.http.server.observation.ServerRequestObservationConvention"
    },
    {
      "type": "org.springframework.jdbc.SQLWarningException"
    },
    {
      "type": "org.springframework.jdbc.core.BatchPreparedStatementSetter"
    },
    {
      "type": "org.springframework.jdbc.core.CallableStatementCallback"
    },
    {
      "type": "org.springframework.jdbc.core.CallableStatementCreator"
    },
    {
      "type": "org.springframework.jdbc.core.ConnectionCallback"
    },
    {
      "type": "org.springframework.jdbc.core.JdbcOperations"
    },
    {
      "type": "org.springframework.jdbc.core.JdbcTemplate",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.jdbc.core.ParameterizedPreparedStatementSetter"
    },
    {
      "type": "org.springframework.jdbc.core.PreparedStatementCallback"
    },
    {
      "type": "org.springframework.jdbc.core.PreparedStatementCreator"
    },
    {
      "type": "org.springframework.jdbc.core.PreparedStatementCreatorFactory"
    },
    {
      "type": "org.springframework.jdbc.core.PreparedStatementSetter"
    },
    {
      "type": "org.springframework.jdbc.core.ResultSetExtractor"
    },
    {
      "type": "org.springframework.jdbc.core.ResultSetSupportingSqlParameter"
    },
    {
      "type": "org.springframework.jdbc.core.RowCallbackHandler"
    },
    {
      "type": "org.springframework.jdbc.core.RowMapper"
    },
    {
      "type": "org.springframework.jdbc.core.StatementCallback"
    },
    {
      "type": "org.springframework.jdbc.core.namedparam.NamedParameterJdbcOperations"
    },
    {
      "type": "org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.jdbc.core.namedparam.ParsedSql"
    },
    {
      "type": "org.springframework.jdbc.core.namedparam.SqlParameterSource"
    },
    {
      "type": "org.springframework.jdbc.core.simple.DefaultJdbcClient",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.jdbc.core.simple.JdbcClient"
    },
    {
      "type": "org.springframework.jdbc.core.simple.JdbcClient$StatementSpec"
    },
    {
      "type": "org.springframework.jdbc.datasource.AbstractDataSource",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.jdbc.datasource.DataSourceTransactionManager",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.jdbc.datasource.DelegatingDataSource"
    },
    {
      "type": "org.springframework.jdbc.datasource.init.ResourceDatabasePopulator"
    },
    {
      "type": "org.springframework.jdbc.datasource.lookup.AbstractRoutingDataSource",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.jdbc.datasource.lookup.DataSourceLookup"
    },
    {
      "type": "org.springframework.jdbc.support.JdbcAccessor",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.jdbc.support.JdbcTransactionManager",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.jdbc.support.KeyHolder"
    },
    {
      "type": "org.springframework.jdbc.support.SQLExceptionTranslator"
    },
    {
      "type": "org.springframework.jdbc.support.rowset.SqlRowSet"
    },
    {
      "type": "org.springframework.jmx.export.annotation.ManagedAttribute"
    },
    {
      "type": "org.springframework.jmx.export.annotation.ManagedOperation"
    },
    {
      "type": "org.springframework.jmx.export.annotation.ManagedResource"
    },
    {
      "type": "org.springframework.kafka.annotation.EnableKafka"
    },
    {
      "type": "org.springframework.kafka.annotation.KafkaListener"
    },
    {
      "type": "org.springframework.kafka.annotation.KafkaListenerAnnotationBeanPostProcessor"
    },
    {
      "type": "org.springframework.kafka.annotation.KafkaListenerAnnotationBeanPostProcessor$AnnotationEnhancer"
    },
    {
      "type": "org.springframework.kafka.annotation.PartitionOffset"
    },
    {
      "type": "org.springframework.kafka.annotation.RetryableTopic"
    },
    {
      "type": "org.springframework.kafka.annotation.TopicPartition"
    },
    {
      "type": "org.springframework.kafka.config.AbstractKafkaListenerContainerFactory",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.kafka.config.AbstractKafkaListenerEndpoint"
    },
    {
      "type": "org.springframework.kafka.config.ConcurrentKafkaListenerContainerFactory",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.kafka.config.ContainerCustomizer"
    },
    {
      "type": "org.springframework.kafka.config.KafkaListenerContainerFactory"
    },
    {
      "type": "org.springframework.kafka.config.KafkaListenerEndpoint"
    },
    {
      "type": "org.springframework.kafka.config.KafkaListenerEndpointRegistrar"
    },
    {
      "type": "org.springframework.kafka.config.KafkaListenerEndpointRegistry",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.kafka.config.MethodKafkaListenerEndpoint"
    },
    {
      "type": "org.springframework.kafka.config.StreamsBuilderFactoryBean"
    },
    {
      "type": "org.springframework.kafka.core.ConsumerFactory"
    },
    {
      "type": "org.springframework.kafka.core.ConsumerFactory$Listener"
    },
    {
      "type": "org.springframework.kafka.core.ConsumerPostProcessor"
    },
    {
      "type": "org.springframework.kafka.core.DefaultKafkaConsumerFactory",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.kafka.core.DefaultKafkaProducerFactory",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.kafka.core.DefaultKafkaProducerFactory$CloseSafeProducer"
    },
    {
      "type": "org.springframework.kafka.core.KafkaAdmin",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.kafka.core.KafkaAdmin$NewTopics"
    },
    {
      "type": "org.springframework.kafka.core.KafkaAdminOperations"
    },
    {
      "type": "org.springframework.kafka.core.KafkaOperations"
    },
    {
      "type": "org.springframework.kafka.core.KafkaOperations$OperationsCallback"
    },
    {
      "type": "org.springframework.kafka.core.KafkaOperations$ProducerCallback"
    },
    {
      "type": "org.springframework.kafka.core.KafkaResourceFactory",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.kafka.core.KafkaTemplate",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.kafka.core.ProducerFactory"
    },
    {
      "type": "org.springframework.kafka.core.ProducerFactory$Listener"
    },
    {
      "type": "org.springframework.kafka.core.ProducerPostProcessor"
    },
    {
      "type": "org.springframework.kafka.core.TransactionIdSuffixStrategy"
    },
    {
      "type": "org.springframework.kafka.listener.AbstractMessageListenerContainer"
    },
    {
      "type": "org.springframework.kafka.listener.AfterRollbackProcessor"
    },
    {
      "type": "org.springframework.kafka.listener.BatchInterceptor"
    },
    {
      "type": "org.springframework.kafka.listener.CommonErrorHandler"
    },
    {
      "type": "org.springframework.kafka.listener.ConcurrentMessageListenerContainer"
    },
    {
      "type": "org.springframework.kafka.listener.ConsumerAwareRebalanceListener"
    },
    {
      "type": "org.springframework.kafka.listener.ConsumerProperties",
      "methods": [
        {
          "name": "getAuthExceptionRetryInterval",
          "parameterTypes": []
        },
        {
          "name": "getClientId",
          "parameterTypes": []
        },
        {
          "name": "getCommitCallback",
          "parameterTypes": []
        },
        {
          "name": "getCommitLogLevel",
          "parameterTypes": []
        },
        {
          "name": "getCommitRetries",
          "parameterTypes": []
        },
        {
          "name": "getConsumerRebalanceListener",
          "parameterTypes": []
        },
        {
          "name": "getGroupId",
          "parameterTypes": []
        },
        {
          "name": "getKafkaConsumerProperties",
          "parameterTypes": []
        },
        {
          "name": "getOffsetAndMetadataProvider",
          "parameterTypes": []
        },
        {
          "name": "getPollTimeout",
          "parameterTypes": []
        },
        {
          "name": "getSyncCommitTimeout",
          "parameterTypes": []
        },
        {
          "name": "isCheckDeserExWhenKeyNull",
          "parameterTypes": []
        },
        {
          "name": "isCheckDeserExWhenValueNull",
          "parameterTypes": []
        },
        {
          "name": "isFixTxOffsets",
          "parameterTypes": []
        },
        {
          "name": "isSyncCommits",
          "parameterTypes": []
        },
        {
          "name": "setAuthExceptionRetryInterval",
          "parameterTypes": [
            "java.time.Duration"
          ]
        },
        {
          "name": "setCheckDeserExWhenKeyNull",
          "parameterTypes": [
            "boolean"
          ]
        },
        {
          "name": "setCheckDeserExWhenValueNull",
          "parameterTypes": [
            "boolean"
          ]
        },
        {
          "name": "setClientId",
          "parameterTypes": [
            "java.lang.String"
          ]
        },
        {
          "name": "setCommitCallback",
          "parameterTypes": [
            "org.apache.kafka.clients.consumer.OffsetCommitCallback"
          ]
        },
        {
          "name": "setCommitLogLevel",
          "parameterTypes": [
            "org.springframework.kafka.support.LogIfLevelEnabled$Level"
          ]
        },
        {
          "name": "setCommitRetries",
          "parameterTypes": [
            "int"
          ]
        },
        {
          "name": "setConsumerRebalanceListener",
          "parameterTypes": [
            "org.apache.kafka.clients.consumer.ConsumerRebalanceListener"
          ]
        },
        {
          "name": "setFixTxOffsets",
          "parameterTypes": [
            "boolean"
          ]
        },
        {
          "name": "setGroupId",
          "parameterTypes": [
            "java.lang.String"
          ]
        },
        {
          "name": "setKafkaConsumerProperties",
          "parameterTypes": [
            "java.util.Properties"
          ]
        },
        {
          "name": "setOffsetAndMetadataProvider",
          "parameterTypes": [
            "org.springframework.kafka.listener.OffsetAndMetadataProvider"
          ]
        },
        {
          "name": "setPollTimeout",
          "parameterTypes": [
            "long"
          ]
        },
        {
          "name": "setSyncCommits",
          "parameterTypes": [
            "boolean"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.kafka.listener.ContainerPartitionPausingBackOffManagerFactory"
    },
    {
      "type": "org.springframework.kafka.listener.ContainerProperties",
      "fields": [
        {
          "name": "getSubBatchPerPartition"
        },
        {
          "name": "toString"
        }
      ],
      "methods": [
        {
          "name": "getAckMode",
          "parameterTypes": []
        },
        {
          "name": "getAdviceChain",
          "parameterTypes": []
        },
        {
          "name": "getAssignmentCommitOption",
          "parameterTypes": []
        },
        {
          "name": "getConsumerStartTimeout",
          "parameterTypes": []
        },
        {
          "name": "getEosMode",
          "parameterTypes": []
        },
        {
          "name": "getIdleBeforeDataMultiplier",
          "parameterTypes": []
        },
        {
          "name": "getIdleBetweenPolls",
          "parameterTypes": []
        },
        {
          "name": "getIdleEventInterval",
          "parameterTypes": []
        },
        {
          "name": "getIdlePartitionEventInterval",
          "parameterTypes": []
        },
        {
          "name": "getKafkaAwareTransactionManager",
          "parameterTypes": []
        },
        {
          "name": "getListenerTaskExecutor",
          "parameterTypes": []
        },
        {
          "name": "getMessageListener",
          "parameterTypes": []
        },
        {
          "name": "getMicrometerTags",
          "parameterTypes": []
        },
        {
          "name": "getMicrometerTagsProvider",
          "parameterTypes": []
        },
        {
          "name": "getMonitorInterval",
          "parameterTypes": []
        },
        {
          "name": "getNoPollThreshold",
          "parameterTypes": []
        },
        {
          "name": "getObservationConvention",
          "parameterTypes": []
        },
        {
          "name": "getObservationRegistry",
          "parameterTypes": []
        },
        {
          "name": "getPollTimeoutWhilePaused",
          "parameterTypes": []
        },
        {
          "name": "getScheduler",
          "parameterTypes": []
        },
        {
          "name": "getShutdownTimeout",
          "parameterTypes": []
        },
        {
          "name": "getTransactionDefinition",
          "parameterTypes": []
        },
        {
          "name": "getTransactionManager",
          "parameterTypes": []
        },
        {
          "name": "isAsyncAcks",
          "parameterTypes": []
        },
        {
          "name": "isBatchRecoverAfterRollback",
          "parameterTypes": []
        },
        {
          "name": "isDeliveryAttemptHeader",
          "parameterTypes": []
        },
        {
          "name": "isLogContainerConfig",
          "parameterTypes": []
        },
        {
          "name": "isMicrometerEnabled",
          "parameterTypes": []
        },
        {
          "name": "isMissingTopicsFatal",
          "parameterTypes": []
        },
        {
          "name": "isObservationEnabled",
          "parameterTypes": []
        },
        {
          "name": "isPauseImmediate",
          "parameterTypes": []
        },
        {
          "name": "isRestartAfterAuthExceptions",
          "parameterTypes": []
        },
        {
          "name": "isStopContainerWhenFenced",
          "parameterTypes": []
        },
        {
          "name": "isStopImmediate",
          "parameterTypes": []
        },
        {
          "name": "setAckMode",
          "parameterTypes": [
            "org.springframework.kafka.listener.ContainerProperties$AckMode"
          ]
        },
        {
          "name": "setAdviceChain",
          "parameterTypes": [
            "org.aopalliance.aop.Advice[]"
          ]
        },
        {
          "name": "setAssignmentCommitOption",
          "parameterTypes": [
            "org.springframework.kafka.listener.ContainerProperties$AssignmentCommitOption"
          ]
        },
        {
          "name": "setAsyncAcks",
          "parameterTypes": [
            "boolean"
          ]
        },
        {
          "name": "setBatchRecoverAfterRollback",
          "parameterTypes": [
            "boolean"
          ]
        },
        {
          "name": "setConsumerStartTimeout",
          "parameterTypes": [
            "java.time.Duration"
          ]
        },
        {
          "name": "setDeliveryAttemptHeader",
          "parameterTypes": [
            "boolean"
          ]
        },
        {
          "name": "setEosMode",
          "parameterTypes": [
            "org.springframework.kafka.listener.ContainerProperties$EOSMode"
          ]
        },
        {
          "name": "setIdleBeforeDataMultiplier",
          "parameterTypes": [
            "double"
          ]
        },
        {
          "name": "setIdleBetweenPolls",
          "parameterTypes": [
            "long"
          ]
        },
        {
          "name": "setIdleEventInterval",
          "parameterTypes": [
            "java.lang.Long"
          ]
        },
        {
          "name": "setIdlePartitionEventInterval",
          "parameterTypes": [
            "java.lang.Long"
          ]
        },
        {
          "name": "setKafkaAwareTransactionManager",
          "parameterTypes": [
            "org.springframework.kafka.transaction.KafkaAwareTransactionManager"
          ]
        },
        {
          "name": "setListenerTaskExecutor",
          "parameterTypes": [
            "org.springframework.core.task.AsyncTaskExecutor"
          ]
        },
        {
          "name": "setLogContainerConfig",
          "parameterTypes": [
            "boolean"
          ]
        },
        {
          "name": "setMessageListener",
          "parameterTypes": [
            "java.lang.Object"
          ]
        },
        {
          "name": "setMicrometerEnabled",
          "parameterTypes": [
            "boolean"
          ]
        },
        {
          "name": "setMicrometerTags",
          "parameterTypes": [
            "java.util.Map"
          ]
        },
        {
          "name": "setMicrometerTagsProvider",
          "parameterTypes": [
            "java.util.function.Function"
          ]
        },
        {
          "name": "setMissingTopicsFatal",
          "parameterTypes": [
            "boolean"
          ]
        },
        {
          "name": "setMonitorInterval",
          "parameterTypes": [
            "int"
          ]
        },
        {
          "name": "setNoPollThreshold",
          "parameterTypes": [
            "float"
          ]
        },
        {
          "name": "setObservationConvention",
          "parameterTypes": [
            "org.springframework.kafka.support.micrometer.KafkaListenerObservationConvention"
          ]
        },
        {
          "name": "setObservationEnabled",
          "parameterTypes": [
            "boolean"
          ]
        },
        {
          "name": "setObservationRegistry",
          "parameterTypes": [
            "io.micrometer.observation.ObservationRegistry"
          ]
        },
        {
          "name": "setPauseImmediate",
          "parameterTypes": [
            "boolean"
          ]
        },
        {
          "name": "setPollTimeoutWhilePaused",
          "parameterTypes": [
            "java.time.Duration"
          ]
        },
        {
          "name": "setRestartAfterAuthExceptions",
          "parameterTypes": [
            "boolean"
          ]
        },
        {
          "name": "setScheduler",
          "parameterTypes": [
            "org.springframework.scheduling.TaskScheduler"
          ]
        },
        {
          "name": "setShutdownTimeout",
          "parameterTypes": [
            "long"
          ]
        },
        {
          "name": "setStopContainerWhenFenced",
          "parameterTypes": [
            "boolean"
          ]
        },
        {
          "name": "setStopImmediate",
          "parameterTypes": [
            "boolean"
          ]
        },
        {
          "name": "setSyncCommitTimeout",
          "parameterTypes": [
            "java.time.Duration"
          ]
        },
        {
          "name": "setTransactionDefinition",
          "parameterTypes": [
            "org.springframework.transaction.TransactionDefinition"
          ]
        },
        {
          "name": "setTransactionManager",
          "parameterTypes": [
            "org.springframework.transaction.PlatformTransactionManager"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.kafka.listener.ContainerProperties$AckModeEditor"
    },
    {
      "type": "org.springframework.kafka.listener.KafkaConsumerBackoffManager"
    },
    {
      "type": "org.springframework.kafka.listener.ListenerContainerRegistry"
    },
    {
      "type": "org.springframework.kafka.listener.MessageListenerContainer"
    },
    {
      "type": "org.springframework.kafka.listener.RecordInterceptor"
    },
    {
      "type": "org.springframework.kafka.listener.ThreadStateProcessor"
    },
    {
      "type": "org.springframework.kafka.listener.adapter.BatchToRecordAdapter"
    },
    {
      "type": "org.springframework.kafka.listener.adapter.RecordFilterStrategy"
    },
    {
      "type": "org.springframework.kafka.listener.adapter.ReplyHeadersConfigurer"
    },
    {
      "type": "org.springframework.kafka.retrytopic.DeadLetterPublishingRecovererFactory"
    },
    {
      "type": "org.springframework.kafka.retrytopic.DefaultDestinationTopicResolver"
    },
    {
      "type": "org.springframework.kafka.retrytopic.DestinationTopic$Properties"
    },
    {
      "type": "org.springframework.kafka.retrytopic.DestinationTopicProcessor$Context"
    },
    {
      "type": "org.springframework.kafka.retrytopic.DestinationTopicResolver"
    },
    {
      "type": "org.springframework.kafka.retrytopic.EndpointCustomizer"
    },
    {
      "type": "org.springframework.kafka.retrytopic.EndpointCustomizer$TopicNamesHolder"
    },
    {
      "type": "org.springframework.kafka.retrytopic.ListenerContainerFactoryConfigurer"
    },
    {
      "type": "org.springframework.kafka.retrytopic.RetryTopicComponentFactory"
    },
    {
      "type": "org.springframework.kafka.retrytopic.RetryTopicConfiguration"
    },
    {
      "type": "org.springframework.kafka.retrytopic.RetryTopicConfiguration$TopicCreation"
    },
    {
      "type": "org.springframework.kafka.retrytopic.RetryTopicConfigurationBuilder"
    },
    {
      "type": "org.springframework.kafka.retrytopic.RetryTopicConfigurationSupport",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.kafka.retrytopic.RetryTopicConfigurationSupport$BlockingRetriesConfigurer"
    },
    {
      "type": "org.springframework.kafka.retrytopic.RetryTopicConfigurationSupport$CustomizersConfigurer"
    },
    {
      "type": "org.springframework.kafka.retrytopic.RetryTopicConfigurer",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.kafka.retrytopic.RetryTopicConfigurer$EndpointProcessor"
    },
    {
      "type": "org.springframework.kafka.retrytopic.RetryTopicConfigurer$LoggingDltListenerHandlerMethod",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.kafka.retrytopic.RetryTopicSchedulerWrapper",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.kafka.security.jaas.KafkaJaasLoginModuleInitializer",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.kafka.security.jaas.KafkaJaasLoginModuleInitializer$ControlFlag"
    },
    {
      "type": "org.springframework.kafka.support.Acknowledgment"
    },
    {
      "type": "org.springframework.kafka.support.EndpointHandlerMethod"
    },
    {
      "type": "org.springframework.kafka.support.LoggingProducerListener",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.kafka.support.ProducerListener"
    },
    {
      "type": "org.springframework.kafka.support.TopicPartitionOffset"
    },
    {
      "type": "org.springframework.kafka.support.converter.BatchMessageConverter"
    },
    {
      "type": "org.springframework.kafka.support.converter.RecordMessageConverter"
    },
    {
      "type": "org.springframework.kafka.support.micrometer.KafkaRecordSenderContext"
    },
    {
      "type": "org.springframework.kafka.support.micrometer.KafkaTemplateObservationConvention"
    },
    {
      "type": "org.springframework.kafka.support.micrometer.MicrometerHolder"
    },
    {
      "type": "org.springframework.kafka.transaction.KafkaAwareTransactionManager"
    },
    {
      "type": "org.springframework.kafka.transaction.KafkaTransactionManager"
    },
    {
      "type": "org.springframework.lang.NonNull"
    },
    {
      "type": "org.springframework.lang.NonNullApi"
    },
    {
      "type": "org.springframework.lang.Nullable"
    },
    {
      "type": "org.springframework.messaging.Message"
    },
    {
      "type": "org.springframework.messaging.converter.SmartMessageConverter"
    },
    {
      "type": "org.springframework.messaging.handler.annotation.MessageMapping"
    },
    {
      "type": "org.springframework.retry.ExhaustedRetryException"
    },
    {
      "type": "org.springframework.retry.RecoveryCallback"
    },
    {
      "type": "org.springframework.retry.RetryCallback"
    },
    {
      "type": "org.springframework.retry.RetryContext"
    },
    {
      "type": "org.springframework.retry.RetryException"
    },
    {
      "type": "org.springframework.retry.RetryListener"
    },
    {
      "type": "org.springframework.retry.RetryOperations"
    },
    {
      "type": "org.springframework.retry.RetryPolicy"
    },
    {
      "type": "org.springframework.retry.RetryState"
    },
    {
      "type": "org.springframework.retry.annotation.Backoff"
    },
    {
      "type": "org.springframework.retry.annotation.EnableRetry"
    },
    {
      "type": "org.springframework.retry.annotation.RetryConfiguration"
    },
    {
      "type": "org.springframework.retry.annotation.Retryable"
    },
    {
      "type": "org.springframework.retry.backoff.BackOffPolicy"
    },
    {
      "type": "org.springframework.retry.interceptor.Retryable"
    },
    {
      "type": "org.springframework.retry.policy.RetryContextCache"
    },
    {
      "type": "org.springframework.retry.support.RetryTemplate",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.retry.support.RetryTemplateBuilder"
    },
    {
      "type": "org.springframework.scheduling.TaskScheduler"
    },
    {
      "type": "org.springframework.scheduling.annotation.AbstractAsyncConfiguration"
    },
    {
      "type": "org.springframework.scheduling.annotation.EnableAsync"
    },
    {
      "type": "org.springframework.scheduling.annotation.ProxyAsyncConfiguration"
    },
    {
      "type": "org.springframework.scheduling.annotation.SchedulingConfigurer"
    },
    {
      "type": "org.springframework.scheduling.concurrent.SimpleAsyncTaskScheduler"
    },
    {
      "type": "org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor"
    },
    {
      "type": "org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler"
    },
    {
      "type": "org.springframework.scheduling.config.ScheduledTaskRegistrar"
    },
    {
      "type": "org.springframework.security.crypto.encrypt.RsaAlgorithm"
    },
    {
      "type": "org.springframework.security.crypto.encrypt.RsaSecretEncryptor"
    },
    {
      "type": "org.springframework.security.crypto.encrypt.TextEncryptor"
    },
    {
      "type": "org.springframework.stereotype.Component"
    },
    {
      "type": "org.springframework.stereotype.Controller"
    },
    {
      "type": "org.springframework.stereotype.Indexed"
    },
    {
      "type": "org.springframework.stereotype.Repository"
    },
    {
      "type": "org.springframework.stereotype.Service"
    },
    {
      "type": "org.springframework.transaction.ConfigurableTransactionManager"
    },
    {
      "type": "org.springframework.transaction.PlatformTransactionManager"
    },
    {
      "type": "org.springframework.transaction.ReactiveTransactionManager"
    },
    {
      "type": "org.springframework.transaction.TransactionDefinition"
    },
    {
      "type": "org.springframework.transaction.TransactionException"
    },
    {
      "type": "org.springframework.transaction.TransactionExecutionListener"
    },
    {
      "type": "org.springframework.transaction.TransactionManager"
    },
    {
      "type": "org.springframework.transaction.TransactionStatus"
    },
    {
      "type": "org.springframework.transaction.annotation.AbstractTransactionManagementConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.transaction.annotation.AnnotationTransactionAttributeSource",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.transaction.annotation.EnableTransactionManagement"
    },
    {
      "type": "org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.transaction.annotation.Transactional"
    },
    {
      "type": "org.springframework.transaction.event.TransactionalEventListenerFactory"
    },
    {
      "type": "org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.transaction.interceptor.BeanFactoryTransactionAttributeSourceAdvisor"
    },
    {
      "type": "org.springframework.transaction.interceptor.RollbackRuleAttribute"
    },
    {
      "type": "org.springframework.transaction.interceptor.TransactionAspectSupport"
    },
    {
      "type": "org.springframework.transaction.interceptor.TransactionAttribute"
    },
    {
      "type": "org.springframework.transaction.interceptor.TransactionAttributeSource"
    },
    {
      "type": "org.springframework.transaction.interceptor.TransactionInterceptor"
    },
    {
      "type": "org.springframework.transaction.interceptor.TransactionalProxy"
    },
    {
      "type": "org.springframework.transaction.reactive.TransactionalOperator"
    },
    {
      "type": "org.springframework.transaction.support.AbstractPlatformTransactionManager",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.transaction.support.AbstractPlatformTransactionManager$SuspendedResourcesHolder"
    },
    {
      "type": "org.springframework.transaction.support.DefaultTransactionDefinition",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.transaction.support.DefaultTransactionStatus"
    },
    {
      "type": "org.springframework.transaction.support.ResourceTransactionManager"
    },
    {
      "type": "org.springframework.transaction.support.TransactionCallback"
    },
    {
      "type": "org.springframework.transaction.support.TransactionOperations"
    },
    {
      "type": "org.springframework.transaction.support.TransactionTemplate",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.ui.context.ThemeSource"
    },
    {
      "type": "org.springframework.util.AntPathMatcher",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.util.AntPathMatcher$AntPathStringMatcher"
    },
    {
      "type": "org.springframework.util.Assert"
    },
    {
      "type": "org.springframework.util.CustomizableThreadCreator",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.util.MultiValueMap"
    },
    {
      "type": "org.springframework.util.PathMatcher"
    },
    {
      "type": "org.springframework.util.PropertiesPersister"
    },
    {
      "type": "org.springframework.util.StringValueResolver"
    },
    {
      "type": "org.springframework.util.concurrent.ListenableFuture"
    },
    {
      "type": "org.springframework.util.unit.DataSize"
    },
    {
      "type": "org.springframework.validation.BindException"
    },
    {
      "type": "org.springframework.validation.BindingResult"
    },
    {
      "type": "org.springframework.validation.DefaultMessageCodesResolver$Format"
    },
    {
      "type": "org.springframework.validation.Errors"
    },
    {
      "type": "org.springframework.validation.MessageCodesResolver"
    },
    {
      "type": "org.springframework.validation.ObjectError"
    },
    {
      "type": "org.springframework.validation.SmartValidator"
    },
    {
      "type": "org.springframework.validation.Validator"
    },
    {
      "type": "org.springframework.validation.beanvalidation.LocalValidatorFactoryBean",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.validation.beanvalidation.MethodValidationPostProcessor"
    },
    {
      "type": "org.springframework.validation.beanvalidation.SpringValidatorAdapter",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.validation.method.MethodValidationResult"
    },
    {
      "type": "org.springframework.web.HttpMediaTypeNotAcceptableException"
    },
    {
      "type": "org.springframework.web.HttpRequestMethodNotSupportedException"
    },
    {
      "type": "org.springframework.web.accept.ContentNegotiationManager",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.web.accept.ContentNegotiationStrategy"
    },
    {
      "type": "org.springframework.web.accept.MediaTypeFileExtensionResolver"
    },
    {
      "type": "org.springframework.web.bind.annotation.ControllerAdvice"
    },
    {
      "type": "org.springframework.web.bind.annotation.CrossOrigin"
    },
    {
      "type": "org.springframework.web.bind.annotation.DeleteMapping"
    },
    {
      "type": "org.springframework.web.bind.annotation.ExceptionHandler"
    },
    {
      "type": "org.springframework.web.bind.annotation.GetMapping"
    },
    {
      "type": "org.springframework.web.bind.annotation.Mapping"
    },
    {
      "type": "org.springframework.web.bind.annotation.PathVariable"
    },
    {
      "type": "org.springframework.web.bind.annotation.PostMapping"
    },
    {
      "type": "org.springframework.web.bind.annotation.PutMapping"
    },
    {
      "type": "org.springframework.web.bind.annotation.RequestBody"
    },
    {
      "type": "org.springframework.web.bind.annotation.RequestMapping"
    },
    {
      "type": "org.springframework.web.bind.annotation.RequestMethod"
    },
    {
      "type": "org.springframework.web.bind.annotation.RequestParam"
    },
    {
      "type": "org.springframework.web.bind.annotation.ResponseBody"
    },
    {
      "type": "org.springframework.web.bind.annotation.ResponseStatus"
    },
    {
      "type": "org.springframework.web.bind.annotation.RestController"
    },
    {
      "type": "org.springframework.web.bind.annotation.RestControllerAdvice"
    },
    {
      "type": "org.springframework.web.bind.support.ConfigurableWebBindingInitializer"
    },
    {
      "type": "org.springframework.web.bind.support.SessionAttributeStore"
    },
    {
      "type": "org.springframework.web.bind.support.WebBindingInitializer"
    },
    {
      "type": "org.springframework.web.bind.support.WebDataBinderFactory"
    },
    {
      "type": "org.springframework.web.client.DefaultRestClientBuilder",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.web.client.HttpClientErrorException"
    },
    {
      "type": "org.springframework.web.client.ResponseErrorHandler"
    },
    {
      "type": "org.springframework.web.client.RestClient"
    },
    {
      "type": "org.springframework.web.client.RestClient$Builder"
    },
    {
      "type": "org.springframework.web.client.RestClient$ResponseSpec$ErrorHandler"
    },
    {
      "type": "org.springframework.web.client.RestTemplate"
    },
    {
      "type": "org.springframework.web.client.StatusHandler"
    },
    {
      "type": "org.springframework.web.context.ConfigurableWebApplicationContext"
    },
    {
      "type": "org.springframework.web.context.ServletContextAware"
    },
    {
      "type": "org.springframework.web.context.WebApplicationContext"
    },
    {
      "type": "org.springframework.web.context.request.NativeWebRequest"
    },
    {
      "type": "org.springframework.web.context.request.RequestAttributes"
    },
    {
      "type": "org.springframework.web.context.request.ServletRequestAttributes"
    },
    {
      "type": "org.springframework.web.context.request.WebRequest"
    },
    {
      "type": "org.springframework.web.context.request.async.WebAsyncManager"
    },
    {
      "type": "org.springframework.web.context.support.ServletContextResource"
    },
    {
      "type": "org.springframework.web.context.support.WebApplicationObjectSupport",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.web.cors.CorsConfiguration"
    },
    {
      "type": "org.springframework.web.cors.CorsConfigurationSource"
    },
    {
      "type": "org.springframework.web.cors.CorsProcessor"
    },
    {
      "type": "org.springframework.web.filter.CharacterEncodingFilter",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.web.filter.FormContentFilter",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.web.filter.GenericFilterBean",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.web.filter.OncePerRequestFilter",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.web.filter.RequestContextFilter",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.web.filter.ServerHttpObservationFilter"
    },
    {
      "type": "org.springframework.web.method.ControllerAdviceBean"
    },
    {
      "type": "org.springframework.web.method.HandlerMethod"
    },
    {
      "type": "org.springframework.web.method.annotation.ExceptionHandlerMethodResolver"
    },
    {
      "type": "org.springframework.web.method.annotation.HandlerMethodValidationException"
    },
    {
      "type": "org.springframework.web.method.annotation.InitBinderDataBinderFactory"
    },
    {
      "type": "org.springframework.web.method.annotation.MethodArgumentTypeMismatchException"
    },
    {
      "type": "org.springframework.web.method.annotation.ModelFactory"
    },
    {
      "type": "org.springframework.web.method.annotation.SessionAttributesHandler"
    },
    {
      "type": "org.springframework.web.method.support.CompositeUriComponentsContributor",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.web.method.support.HandlerMethodArgumentResolver"
    },
    {
      "type": "org.springframework.web.method.support.InvocableHandlerMethod"
    },
    {
      "type": "org.springframework.web.method.support.ModelAndViewContainer"
    },
    {
      "type": "org.springframework.web.method.support.UriComponentsContributor"
    },
    {
      "type": "org.springframework.web.multipart.MultipartException"
    },
    {
      "type": "org.springframework.web.multipart.MultipartHttpServletRequest"
    },
    {
      "type": "org.springframework.web.multipart.MultipartResolver"
    },
    {
      "type": "org.springframework.web.multipart.support.MissingServletRequestPartException"
    },
    {
      "type": "org.springframework.web.multipart.support.StandardServletMultipartResolver",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.web.reactive.DispatcherHandler"
    },
    {
      "type": "org.springframework.web.reactive.function.client.ClientRequestObservationConvention"
    },
    {
      "type": "org.springframework.web.reactive.function.client.DefaultWebClientBuilder",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.web.reactive.function.client.ExchangeFilterFunction"
    },
    {
      "type": "org.springframework.web.reactive.function.client.ExchangeFunction"
    },
    {
      "type": "org.springframework.web.reactive.function.client.ExchangeStrategies"
    },
    {
      "type": "org.springframework.web.reactive.function.client.ExchangeStrategies$Builder"
    },
    {
      "type": "org.springframework.web.reactive.function.client.WebClient"
    },
    {
      "type": "org.springframework.web.reactive.function.client.WebClient$Builder"
    },
    {
      "type": "org.springframework.web.service.annotation.HttpExchange"
    },
    {
      "type": "org.springframework.web.servlet.DispatcherServlet",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.web.servlet.FlashMap"
    },
    {
      "type": "org.springframework.web.servlet.FlashMapManager"
    },
    {
      "type": "org.springframework.web.servlet.FrameworkServlet",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.web.servlet.HandlerAdapter"
    },
    {
      "type": "org.springframework.web.servlet.HandlerExceptionResolver"
    },
    {
      "type": "org.springframework.web.servlet.HandlerExecutionChain"
    },
    {
      "type": "org.springframework.web.servlet.HandlerInterceptor"
    },
    {
      "type": "org.springframework.web.servlet.HandlerMapping"
    },
    {
      "type": "org.springframework.web.servlet.HttpServletBean",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.web.servlet.LocaleResolver"
    },
    {
      "type": "org.springframework.web.servlet.ModelAndView"
    },
    {
      "type": "org.springframework.web.servlet.RequestToViewNameTranslator"
    },
    {
      "type": "org.springframework.web.servlet.ThemeResolver"
    },
    {
      "type": "org.springframework.web.servlet.View"
    },
    {
      "type": "org.springframework.web.servlet.ViewResolver"
    },
    {
      "type": "org.springframework.web.servlet.config.annotation.AsyncSupportConfigurer"
    },
    {
      "type": "org.springframework.web.servlet.config.annotation.ContentNegotiationConfigurer"
    },
    {
      "type": "org.springframework.web.servlet.config.annotation.CorsRegistry"
    },
    {
      "type": "org.springframework.web.servlet.config.annotation.DefaultServletHandlerConfigurer"
    },
    {
      "type": "org.springframework.web.servlet.config.annotation.DelegatingWebMvcConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.web.servlet.config.annotation.InterceptorRegistry"
    },
    {
      "type": "org.springframework.web.servlet.config.annotation.PathMatchConfigurer"
    },
    {
      "type": "org.springframework.web.servlet.config.annotation.ResourceChainRegistration"
    },
    {
      "type": "org.springframework.web.servlet.config.annotation.ResourceHandlerRegistration"
    },
    {
      "type": "org.springframework.web.servlet.config.annotation.ResourceHandlerRegistry"
    },
    {
      "type": "org.springframework.web.servlet.config.annotation.ViewControllerRegistry"
    },
    {
      "type": "org.springframework.web.servlet.config.annotation.ViewResolverRegistry"
    },
    {
      "type": "org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.web.servlet.config.annotation.WebMvcConfigurer"
    },
    {
      "type": "org.springframework.web.servlet.function.HandlerFunction"
    },
    {
      "type": "org.springframework.web.servlet.function.RouterFunction"
    },
    {
      "type": "org.springframework.web.servlet.function.ServerRequest"
    },
    {
      "type": "org.springframework.web.servlet.function.ServerResponse"
    },
    {
      "type": "org.springframework.web.servlet.function.support.HandlerFunctionAdapter",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.web.servlet.function.support.RouterFunctionMapping",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.web.servlet.handler.AbstractDetectingUrlHandlerMapping",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.web.servlet.handler.AbstractHandlerMapping",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.web.servlet.handler.AbstractHandlerMethodMapping",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$EmptyHandler"
    },
    {
      "type": "org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry"
    },
    {
      "type": "org.springframework.web.servlet.handler.AbstractUrlHandlerMapping",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.web.servlet.handler.BeanNameUrlHandlerMapping",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.web.servlet.handler.HandlerExceptionResolverComposite",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.web.servlet.handler.HandlerMappingIntrospector"
    },
    {
      "type": "org.springframework.web.servlet.handler.HandlerMethodMappingNamingStrategy"
    },
    {
      "type": "org.springframework.web.servlet.handler.MappedInterceptor"
    },
    {
      "type": "org.springframework.web.servlet.handler.MatchableHandlerMapping"
    },
    {
      "type": "org.springframework.web.servlet.handler.RequestMatchResult"
    },
    {
      "type": "org.springframework.web.servlet.handler.SimpleUrlHandlerMapping",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.web.servlet.i18n.AbstractLocaleResolver",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.web.servlet.i18n.AcceptHeaderLocaleResolver",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.web.servlet.mvc.HttpRequestHandlerAdapter",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.web.servlet.mvc.condition.PathPatternsRequestCondition"
    },
    {
      "type": "org.springframework.web.servlet.mvc.condition.PatternsRequestCondition"
    },
    {
      "type": "org.springframework.web.servlet.mvc.condition.RequestCondition"
    },
    {
      "type": "org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.web.servlet.mvc.method.RequestMappingInfo"
    },
    {
      "type": "org.springframework.web.servlet.mvc.method.RequestMappingInfo$BuilderConfiguration"
    },
    {
      "type": "org.springframework.web.servlet.mvc.method.RequestMappingInfoHandlerMapping",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.web.servlet.mvc.method.RequestMappingInfoHandlerMapping$HttpOptionsHandler"
    },
    {
      "type": "org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver"
    },
    {
      "type": "org.springframework.web.servlet.mvc.method.annotation.ReactiveTypeHandler$CollectedValuesList",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping$AnnotationDescriptor"
    },
    {
      "type": "org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod"
    },
    {
      "type": "org.springframework.web.servlet.resource.AbstractResourceResolver",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.web.servlet.resource.LiteWebJarsResourceResolver",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.web.servlet.resource.NoResourceFoundException"
    },
    {
      "type": "org.springframework.web.servlet.resource.ResourceResolver"
    },
    {
      "type": "org.springframework.web.servlet.resource.ResourceResolverChain"
    },
    {
      "type": "org.springframework.web.servlet.resource.ResourceTransformer"
    },
    {
      "type": "org.springframework.web.servlet.resource.ResourceTransformerChain"
    },
    {
      "type": "org.springframework.web.servlet.resource.ResourceUrlProvider",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.web.servlet.support.AbstractFlashMapManager",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.web.servlet.support.SessionFlashMapManager",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.web.servlet.support.WebContentGenerator",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.web.servlet.theme.AbstractThemeResolver",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.web.servlet.theme.FixedThemeResolver",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.web.servlet.view.AbstractCachingViewResolver",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.web.servlet.view.AbstractCachingViewResolver$CacheFilter"
    },
    {
      "type": "org.springframework.web.servlet.view.AbstractUrlBasedView"
    },
    {
      "type": "org.springframework.web.servlet.view.BeanNameViewResolver"
    },
    {
      "type": "org.springframework.web.servlet.view.ContentNegotiatingViewResolver",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.web.servlet.view.InternalResourceViewResolver",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.web.servlet.view.UrlBasedViewResolver",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.web.servlet.view.ViewResolverComposite",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.web.util.DefaultUriBuilderFactory"
    },
    {
      "type": "org.springframework.web.util.UriBuilderFactory"
    },
    {
      "type": "org.springframework.web.util.UriComponentsBuilder"
    },
    {
      "type": "org.springframework.web.util.UrlPathHelper",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.web.util.pattern.PathPattern"
    },
    {
      "type": "org.springframework.web.util.pattern.PathPatternParser",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.web.util.pattern.PatternParseException"
    },
    {
      "type": "org.stringtemplate.v4.misc.ObjectModelAdaptor",
      "fields": [
        {
          "name": "INVALID_MEMBER"
        }
      ]
    },
    {
      "type": "org.synchronoss.cloud.nio.multipart.NioMultipartParser"
    },
    {
      "type": "org.thymeleaf.spring6.SpringTemplateEngine"
    },
    {
      "type": "org.webjars.WebJarAssetLocator"
    },
    {
      "type": "org.webjars.WebJarVersionLocator"
    },
    {
      "type": "org.xmlbeam.XBProjector"
    },
    {
      "type": "org.yaml.snakeyaml.Yaml"
    },
    {
      "type": "reactor.core.publisher.FlatMapTracker",
      "fields": [
        {
          "name": "size"
        }
      ]
    },
    {
      "type": "reactor.core.publisher.Flux"
    },
    {
      "type": "reactor.core.publisher.FluxArray$ArraySubscription",
      "fields": [
        {
          "name": "requested"
        }
      ]
    },
    {
      "type": "reactor.core.publisher.FluxAutoConnect",
      "fields": [
        {
          "name": "remaining"
        }
      ]
    },
    {
      "type": "reactor.core.publisher.FluxConcatArray$ConcatArraySubscriber",
      "fields": [
        {
          "name": "requested"
        }
      ]
    },
    {
      "type": "reactor.core.publisher.FluxConcatIterable$ConcatIterableSubscriber",
      "fields": [
        {
          "name": "wip"
        }
      ]
    },
    {
      "type": "reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber",
      "fields": [
        {
          "name": "fallbackValue"
        }
      ]
    },
    {
      "type": "reactor.core.publisher.FluxDoFinally$DoFinallySubscriber",
      "fields": [
        {
          "name": "once"
        }
      ]
    },
    {
      "type": "reactor.core.publisher.FluxFlatMap$FlatMapInner",
      "fields": [
        {
          "name": "s"
        }
      ]
    },
    {
      "type": "reactor.core.publisher.FluxFlatMap$FlatMapMain",
      "fields": [
        {
          "name": "error"
        },
        {
          "name": "requested"
        },
        {
          "name": "wip"
        }
      ]
    },
    {
      "type": "reactor.core.publisher.FluxFlattenIterable$FlattenIterableSubscriber",
      "fields": [
        {
          "name": "error"
        },
        {
          "name": "requested"
        },
        {
          "name": "wip"
        }
      ]
    },
    {
      "type": "reactor.core.publisher.FluxOnErrorReturn$ReturnSubscriber",
      "fields": [
        {
          "name": "requested"
        }
      ]
    },
    {
      "type": "reactor.core.publisher.FluxPublish",
      "fields": [
        {
          "name": "connection"
        }
      ]
    },
    {
      "type": "reactor.core.publisher.FluxPublish$PubSubInner",
      "fields": [
        {
          "name": "requested"
        }
      ]
    },
    {
      "type": "reactor.core.publisher.FluxPublish$PublishSubscriber",
      "fields": [
        {
          "name": "error"
        },
        {
          "name": "state"
        },
        {
          "name": "subscribers"
        }
      ]
    },
    {
      "type": "reactor.core.publisher.FluxPublishOn$PublishOnConditionalSubscriber",
      "fields": [
        {
          "name": "discardGuard"
        },
        {
          "name": "requested"
        },
        {
          "name": "wip"
        }
      ]
    },
    {
      "type": "reactor.core.publisher.FluxSubscribeOnCallable$CallableSubscribeOnSubscription",
      "fields": [
        {
          "name": "mainFuture"
        },
        {
          "name": "requestFuture"
        },
        {
          "name": "state"
        }
      ]
    },
    {
      "type": "reactor.core.publisher.FluxSubscribeOnValue$ScheduledScalar",
      "fields": [
        {
          "name": "future"
        },
        {
          "name": "once"
        }
      ]
    },
    {
      "type": "reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber",
      "fields": [
        {
          "name": "index"
        },
        {
          "name": "timeout"
        }
      ]
    },
    {
      "type": "reactor.core.publisher.FluxTimeout$TimeoutTimeoutSubscriber",
      "fields": [
        {
          "name": "s"
        }
      ]
    },
    {
      "type": "reactor.core.publisher.FluxWindowPredicate$WindowFlux",
      "fields": [
        {
          "name": "actual"
        },
        {
          "name": "once"
        },
        {
          "name": "parent"
        },
        {
          "name": "requested"
        },
        {
          "name": "wip"
        }
      ]
    },
    {
      "type": "reactor.core.publisher.FluxWindowPredicate$WindowPredicateMain",
      "fields": [
        {
          "name": "cancelled"
        },
        {
          "name": "error"
        },
        {
          "name": "requested"
        },
        {
          "name": "windowCount"
        },
        {
          "name": "wip"
        }
      ]
    },
    {
      "type": "reactor.core.publisher.Hooks",
      "fields": [
        {
          "name": "onOperatorErrorHook"
        }
      ]
    },
    {
      "type": "reactor.core.publisher.LambdaMonoSubscriber",
      "fields": [
        {
          "name": "subscription"
        }
      ]
    },
    {
      "type": "reactor.core.publisher.Mono"
    },
    {
      "type": "reactor.core.publisher.MonoCacheTime",
      "fields": [
        {
          "name": "state"
        }
      ]
    },
    {
      "type": "reactor.core.publisher.MonoCallable$MonoCallableSubscription",
      "fields": [
        {
          "name": "requestedOnce"
        }
      ]
    },
    {
      "type": "reactor.core.publisher.MonoCompletionStage$MonoCompletionStageSubscription",
      "fields": [
        {
          "name": "requestedOnce"
        }
      ]
    },
    {
      "type": "reactor.core.publisher.MonoDelay$MonoDelayRunnable",
      "fields": [
        {
          "name": "state"
        }
      ]
    },
    {
      "type": "reactor.core.publisher.MonoFlatMap$FlatMapMain",
      "fields": [
        {
          "name": "second"
        }
      ]
    },
    {
      "type": "reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain",
      "fields": [
        {
          "name": "inner"
        },
        {
          "name": "requested"
        }
      ]
    },
    {
      "type": "reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain",
      "fields": [
        {
          "name": "state"
        }
      ]
    },
    {
      "type": "reactor.core.publisher.MonoNext$NextSubscriber",
      "fields": [
        {
          "name": "wip"
        }
      ]
    },
    {
      "type": "reactor.core.publisher.Operators$BaseFluxToMonoOperator",
      "fields": [
        {
          "name": "state"
        }
      ]
    },
    {
      "type": "reactor.core.publisher.Operators$MonoInnerProducerBase",
      "fields": [
        {
          "name": "state"
        }
      ]
    },
    {
      "type": "reactor.core.publisher.Operators$MultiSubscriptionSubscriber",
      "fields": [
        {
          "name": "missedProduced"
        },
        {
          "name": "missedRequested"
        },
        {
          "name": "missedSubscription"
        },
        {
          "name": "wip"
        }
      ]
    },
    {
      "type": "reactor.core.publisher.Operators$ScalarSubscription",
      "fields": [
        {
          "name": "once"
        }
      ]
    },
    {
      "type": "reactor.core.publisher.SignalType"
    },
    {
      "type": "reactor.core.publisher.SinkManyBestEffort",
      "fields": [
        {
          "name": "subscribers"
        }
      ]
    },
    {
      "type": "reactor.core.publisher.SinksSpecs$AbstractSerializedSink",
      "fields": [
        {
          "name": "lockedAt"
        },
        {
          "name": "wip"
        }
      ]
    },
    {
      "type": "reactor.core.publisher.StrictSubscriber",
      "fields": [
        {
          "name": "error"
        },
        {
          "name": "requested"
        },
        {
          "name": "s"
        },
        {
          "name": "wip"
        }
      ]
    },
    {
      "type": "reactor.core.publisher.SynchronousSink"
    },
    {
      "type": "reactor.core.scheduler.BoundedElasticThreadPerTaskScheduler",
      "fields": [
        {
          "name": "state"
        }
      ]
    },
    {
      "type": "reactor.core.scheduler.BoundedElasticThreadPerTaskScheduler$BoundedServices",
      "fields": [
        {
          "name": "activeExecutorsState"
        }
      ]
    },
    {
      "type": "reactor.core.scheduler.BoundedElasticThreadPerTaskScheduler$SequentialThreadPerTaskExecutor",
      "fields": [
        {
          "name": "size"
        },
        {
          "name": "wipAndRefCnt"
        }
      ]
    },
    {
      "type": "reactor.core.scheduler.DelegateServiceScheduler",
      "fields": [
        {
          "name": "state"
        }
      ]
    },
    {
      "type": "reactor.core.scheduler.ParallelScheduler",
      "fields": [
        {
          "name": "state"
        }
      ]
    },
    {
      "type": "reactor.core.scheduler.SchedulerTask",
      "fields": [
        {
          "name": "future"
        },
        {
          "name": "parent"
        }
      ]
    },
    {
      "type": "reactor.netty.http.client.HttpClient"
    },
    {
      "type": "reactor.netty5.http.client.HttpClient"
    },
    {
      "type": "reactor.tools.agent.ReactorDebugAgent"
    },
    {
      "type": "reactor.util.concurrent.MpscLinkedQueue",
      "fields": [
        {
          "name": "consumerNode"
        },
        {
          "name": "producerNode"
        }
      ]
    },
    {
      "type": "reactor.util.concurrent.MpscLinkedQueue$LinkedQueueNode",
      "fields": [
        {
          "name": "next"
        }
      ]
    },
    {
      "type": "reactor.util.concurrent.Queues",
      "methods": [
        {
          "name": "unbounded",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "reactor.util.concurrent.SpscArrayQueueConsumer",
      "fields": [
        {
          "name": "consumerIndex"
        }
      ]
    },
    {
      "type": "reactor.util.concurrent.SpscArrayQueueProducer",
      "fields": [
        {
          "name": "producerIndex"
        }
      ]
    },
    {
      "type": "reactor.util.concurrent.SpscLinkedArrayQueue",
      "fields": [
        {
          "name": "consumerIndex"
        },
        {
          "name": "producerIndex"
        }
      ]
    },
    {
      "type": "reactor.util.context.Context"
    },
    {
      "type": "reactor.util.context.ContextView"
    },
    {
      "type": "reactor.util.context.ReactorContextAccessor"
    },
    {
      "type": "reactor.util.function.Tuple2"
    },
    {
      "type": "reactor.util.lang.NonNullApi"
    },
    {
      "type": "scala.Option"
    },
    {
      "type": "scala.util.Properties"
    },
    {
      "type": "software.amazon.awssdk.annotations.Immutable"
    },
    {
      "type": "software.amazon.awssdk.annotations.SdkInternalApi"
    },
    {
      "type": "software.amazon.awssdk.annotations.SdkProtectedApi"
    },
    {
      "type": "software.amazon.awssdk.annotations.SdkPublicApi"
    },
    {
      "type": "software.amazon.awssdk.annotations.ThreadSafe"
    },
    {
      "type": "software.amazon.awssdk.auth.credentials.AwsCredentials"
    },
    {
      "type": "software.amazon.awssdk.auth.credentials.AwsCredentialsProvider"
    },
    {
      "type": "software.amazon.awssdk.auth.credentials.AwsCredentialsProviderChain",
      "allDeclaredFields": true
    },
    {
      "type": "software.amazon.awssdk.auth.credentials.AwsCredentialsProviderChain$Builder"
    },
    {
      "type": "software.amazon.awssdk.auth.credentials.ProfileCredentialsProvider"
    },
    {
      "type": "software.amazon.awssdk.auth.credentials.StaticCredentialsProvider"
    },
    {
      "type": "software.amazon.awssdk.awscore.AwsClient"
    },
    {
      "type": "software.amazon.awssdk.awscore.AwsRequestOverrideConfiguration"
    },
    {
      "type": "software.amazon.awssdk.awscore.client.builder.AwsClientBuilder"
    },
    {
      "type": "software.amazon.awssdk.awscore.client.builder.AwsDefaultClientBuilder",
      "allDeclaredFields": true
    },
    {
      "type": "software.amazon.awssdk.awscore.client.builder.AwsSyncClientBuilder"
    },
    {
      "type": "software.amazon.awssdk.awscore.defaultsmode.DefaultsMode"
    },
    {
      "type": "software.amazon.awssdk.awscore.exception.AwsServiceException"
    },
    {
      "type": "software.amazon.awssdk.awscore.presigner.PresignRequest"
    },
    {
      "type": "software.amazon.awssdk.awscore.presigner.PresignedRequest$Builder"
    },
    {
      "type": "software.amazon.awssdk.awscore.presigner.SdkPresigner"
    },
    {
      "type": "software.amazon.awssdk.core.ClientEndpointProvider"
    },
    {
      "type": "software.amazon.awssdk.core.ClientType"
    },
    {
      "type": "software.amazon.awssdk.core.CompressionConfiguration"
    },
    {
      "type": "software.amazon.awssdk.core.RequestOverrideConfiguration"
    },
    {
      "type": "software.amazon.awssdk.core.ResponseBytes"
    },
    {
      "type": "software.amazon.awssdk.core.ResponseInputStream"
    },
    {
      "type": "software.amazon.awssdk.core.SdkBytes"
    },
    {
      "type": "software.amazon.awssdk.core.SdkClient"
    },
    {
      "type": "software.amazon.awssdk.core.SdkPlugin"
    },
    {
      "type": "software.amazon.awssdk.core.SdkRequest"
    },
    {
      "type": "software.amazon.awssdk.core.SelectedAuthScheme"
    },
    {
      "type": "software.amazon.awssdk.core.client.builder.SdkClientBuilder"
    },
    {
      "type": "software.amazon.awssdk.core.client.builder.SdkDefaultClientBuilder",
      "allDeclaredFields": true
    },
    {
      "type": "software.amazon.awssdk.core.client.builder.SdkSyncClientBuilder"
    },
    {
      "type": "software.amazon.awssdk.core.client.config.ClientAsyncConfiguration"
    },
    {
      "type": "software.amazon.awssdk.core.client.config.ClientOverrideConfiguration"
    },
    {
      "type": "software.amazon.awssdk.core.client.config.SdkClientConfiguration"
    },
    {
      "type": "software.amazon.awssdk.core.client.config.SdkClientConfiguration$Builder"
    },
    {
      "type": "software.amazon.awssdk.core.exception.SdkClientException"
    },
    {
      "type": "software.amazon.awssdk.core.http.ExecutionContext"
    },
    {
      "type": "software.amazon.awssdk.core.interceptor.InterceptorContext$Builder"
    },
    {
      "type": "software.amazon.awssdk.core.retry.RetryMode"
    },
    {
      "type": "software.amazon.awssdk.core.sync.RequestBody"
    },
    {
      "type": "software.amazon.awssdk.core.sync.ResponseTransformer"
    },
    {
      "type": "software.amazon.awssdk.http.ContentStreamProvider"
    },
    {
      "type": "software.amazon.awssdk.http.SdkHttpClient"
    },
    {
      "type": "software.amazon.awssdk.http.SdkHttpClient$Builder"
    },
    {
      "type": "software.amazon.awssdk.http.SdkHttpFullRequest"
    },
    {
      "type": "software.amazon.awssdk.http.SdkHttpRequest"
    },
    {
      "type": "software.amazon.awssdk.http.SdkHttpRequest$Builder"
    },
    {
      "type": "software.amazon.awssdk.http.apache.ApacheSdkHttpService"
    },
    {
      "type": "software.amazon.awssdk.http.async.SdkAsyncHttpClient"
    },
    {
      "type": "software.amazon.awssdk.http.async.SdkAsyncHttpClient$Builder"
    },
    {
      "type": "software.amazon.awssdk.http.auth.spi.scheme.AuthScheme"
    },
    {
      "type": "software.amazon.awssdk.http.auth.spi.signer.SignedRequest"
    },
    {
      "type": "software.amazon.awssdk.http.nio.netty.NettySdkAsyncHttpService"
    },
    {
      "type": "software.amazon.awssdk.http.nio.netty.internal.FutureCancelHandler"
    },
    {
      "type": "software.amazon.awssdk.http.nio.netty.internal.IdleConnectionReaperHandler"
    },
    {
      "type": "software.amazon.awssdk.http.nio.netty.internal.ResponseHandler"
    },
    {
      "type": "software.amazon.awssdk.http.nio.netty.internal.SslCloseCompletionEventHandler"
    },
    {
      "type": "software.amazon.awssdk.http.nio.netty.internal.UnusedChannelExceptionHandler"
    },
    {
      "type": "software.amazon.awssdk.http.nio.netty.internal.nrs.HttpStreamsClientHandler"
    },
    {
      "type": "software.amazon.awssdk.http.nio.netty.internal.nrs.HttpStreamsHandler$1"
    },
    {
      "type": "software.amazon.awssdk.http.nio.netty.internal.nrs.HttpStreamsHandler$3"
    },
    {
      "type": "software.amazon.awssdk.identity.spi.Identity"
    },
    {
      "type": "software.amazon.awssdk.identity.spi.IdentityProvider"
    },
    {
      "type": "software.amazon.awssdk.identity.spi.IdentityProviders"
    },
    {
      "type": "software.amazon.awssdk.identity.spi.ResolveIdentityRequest"
    },
    {
      "type": "software.amazon.awssdk.metrics.MetricCollector"
    },
    {
      "type": "software.amazon.awssdk.metrics.MetricPublisher"
    },
    {
      "type": "software.amazon.awssdk.profiles.Profile"
    },
    {
      "type": "software.amazon.awssdk.profiles.ProfileFile"
    },
    {
      "type": "software.amazon.awssdk.protocols.query.AwsQueryProtocolFactory"
    },
    {
      "type": "software.amazon.awssdk.protocols.xml.AwsS3ProtocolFactory"
    },
    {
      "type": "software.amazon.awssdk.protocols.xml.AwsXmlProtocolFactory"
    },
    {
      "type": "software.amazon.awssdk.regions.Region"
    },
    {
      "type": "software.amazon.awssdk.regions.ServiceMetadata"
    },
    {
      "type": "software.amazon.awssdk.regions.providers.AwsProfileRegionProvider"
    },
    {
      "type": "software.amazon.awssdk.regions.providers.AwsRegionProvider"
    },
    {
      "type": "software.amazon.awssdk.regions.providers.AwsRegionProviderChain",
      "allDeclaredFields": true
    },
    {
      "type": "software.amazon.awssdk.retries.api.RetryStrategy"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.CloudFrontClient"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.CloudFrontClientBuilder"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.CloudFrontServiceClientConfiguration"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.CloudFrontUtilities"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.DefaultCloudFrontClient",
      "allDeclaredFields": true
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.AccessDeniedException"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.AssociateAliasRequest"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.AssociateAliasResponse"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.BatchTooLargeException"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.CachePolicyAlreadyExistsException"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.CachePolicyInUseException"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.CannotChangeImmutablePublicKeyFieldsException"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.CannotDeleteEntityWhileInUseException"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.CannotUpdateEntityWhileInUseException"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.CloudFrontException"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.CloudFrontOriginAccessIdentityAlreadyExistsException"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.CloudFrontOriginAccessIdentityInUseException"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.CnameAlreadyExistsException"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.ContinuousDeploymentPolicyAlreadyExistsException"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.ContinuousDeploymentPolicyInUseException"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.CopyDistributionRequest"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.CopyDistributionResponse"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.CreateAnycastIpListRequest"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.CreateAnycastIpListResponse"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.CreateCachePolicyRequest"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.CreateCachePolicyResponse"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.CreateCloudFrontOriginAccessIdentityRequest"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.CreateCloudFrontOriginAccessIdentityResponse"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.CreateContinuousDeploymentPolicyRequest"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.CreateContinuousDeploymentPolicyResponse"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.CreateDistributionRequest"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.CreateDistributionResponse"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.CreateDistributionWithTagsRequest"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.CreateDistributionWithTagsResponse"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.CreateFieldLevelEncryptionConfigRequest"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.CreateFieldLevelEncryptionConfigResponse"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.CreateFieldLevelEncryptionProfileRequest"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.CreateFieldLevelEncryptionProfileResponse"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.CreateFunctionRequest"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.CreateFunctionResponse"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.CreateInvalidationRequest"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.CreateInvalidationResponse"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.CreateKeyGroupRequest"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.CreateKeyGroupResponse"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.CreateKeyValueStoreRequest"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.CreateKeyValueStoreResponse"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.CreateMonitoringSubscriptionRequest"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.CreateMonitoringSubscriptionResponse"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.CreateOriginAccessControlRequest"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.CreateOriginAccessControlResponse"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.CreateOriginRequestPolicyRequest"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.CreateOriginRequestPolicyResponse"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.CreatePublicKeyRequest"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.CreatePublicKeyResponse"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.CreateRealtimeLogConfigRequest"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.CreateRealtimeLogConfigResponse"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.CreateResponseHeadersPolicyRequest"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.CreateResponseHeadersPolicyResponse"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.CreateStreamingDistributionRequest"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.CreateStreamingDistributionResponse"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.CreateStreamingDistributionWithTagsRequest"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.CreateStreamingDistributionWithTagsResponse"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.CreateVpcOriginRequest"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.CreateVpcOriginResponse"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.DeleteAnycastIpListRequest"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.DeleteAnycastIpListResponse"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.DeleteCachePolicyRequest"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.DeleteCachePolicyResponse"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.DeleteCloudFrontOriginAccessIdentityRequest"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.DeleteCloudFrontOriginAccessIdentityResponse"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.DeleteContinuousDeploymentPolicyRequest"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.DeleteContinuousDeploymentPolicyResponse"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.DeleteDistributionRequest"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.DeleteDistributionResponse"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.DeleteFieldLevelEncryptionConfigRequest"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.DeleteFieldLevelEncryptionConfigResponse"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.DeleteFieldLevelEncryptionProfileRequest"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.DeleteFieldLevelEncryptionProfileResponse"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.DeleteFunctionRequest"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.DeleteFunctionResponse"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.DeleteKeyGroupRequest"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.DeleteKeyGroupResponse"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.DeleteKeyValueStoreRequest"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.DeleteKeyValueStoreResponse"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.DeleteMonitoringSubscriptionRequest"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.DeleteMonitoringSubscriptionResponse"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.DeleteOriginAccessControlRequest"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.DeleteOriginAccessControlResponse"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.DeleteOriginRequestPolicyRequest"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.DeleteOriginRequestPolicyResponse"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.DeletePublicKeyRequest"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.DeletePublicKeyResponse"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.DeleteRealtimeLogConfigRequest"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.DeleteRealtimeLogConfigResponse"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.DeleteResponseHeadersPolicyRequest"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.DeleteResponseHeadersPolicyResponse"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.DeleteStreamingDistributionRequest"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.DeleteStreamingDistributionResponse"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.DeleteVpcOriginRequest"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.DeleteVpcOriginResponse"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.DescribeFunctionRequest"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.DescribeFunctionResponse"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.DescribeKeyValueStoreRequest"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.DescribeKeyValueStoreResponse"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.DistributionAlreadyExistsException"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.DistributionNotDisabledException"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.EntityAlreadyExistsException"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.EntityLimitExceededException"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.EntityNotFoundException"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.EntitySizeLimitExceededException"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.FieldLevelEncryptionConfigAlreadyExistsException"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.FieldLevelEncryptionConfigInUseException"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.FieldLevelEncryptionProfileAlreadyExistsException"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.FieldLevelEncryptionProfileInUseException"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.FieldLevelEncryptionProfileSizeExceededException"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.FunctionAlreadyExistsException"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.FunctionInUseException"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.FunctionSizeLimitExceededException"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.GetAnycastIpListRequest"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.GetAnycastIpListResponse"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.GetCachePolicyConfigRequest"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.GetCachePolicyConfigResponse"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.GetCachePolicyRequest"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.GetCachePolicyResponse"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.GetCloudFrontOriginAccessIdentityConfigRequest"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.GetCloudFrontOriginAccessIdentityConfigResponse"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.GetCloudFrontOriginAccessIdentityRequest"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.GetCloudFrontOriginAccessIdentityResponse"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.GetContinuousDeploymentPolicyConfigRequest"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.GetContinuousDeploymentPolicyConfigResponse"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.GetContinuousDeploymentPolicyRequest"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.GetContinuousDeploymentPolicyResponse"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.GetDistributionConfigRequest"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.GetDistributionConfigResponse"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.GetDistributionRequest"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.GetDistributionResponse"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.GetFieldLevelEncryptionConfigRequest"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.GetFieldLevelEncryptionConfigResponse"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.GetFieldLevelEncryptionProfileConfigRequest"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.GetFieldLevelEncryptionProfileConfigResponse"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.GetFieldLevelEncryptionProfileRequest"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.GetFieldLevelEncryptionProfileResponse"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.GetFieldLevelEncryptionRequest"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.GetFieldLevelEncryptionResponse"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.GetFunctionRequest"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.GetFunctionResponse"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.GetInvalidationRequest"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.GetInvalidationResponse"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.GetKeyGroupConfigRequest"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.GetKeyGroupConfigResponse"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.GetKeyGroupRequest"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.GetKeyGroupResponse"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.GetMonitoringSubscriptionRequest"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.GetMonitoringSubscriptionResponse"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.GetOriginAccessControlConfigRequest"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.GetOriginAccessControlConfigResponse"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.GetOriginAccessControlRequest"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.GetOriginAccessControlResponse"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.GetOriginRequestPolicyConfigRequest"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.GetOriginRequestPolicyConfigResponse"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.GetOriginRequestPolicyRequest"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.GetOriginRequestPolicyResponse"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.GetPublicKeyConfigRequest"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.GetPublicKeyConfigResponse"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.GetPublicKeyRequest"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.GetPublicKeyResponse"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.GetRealtimeLogConfigRequest"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.GetRealtimeLogConfigResponse"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.GetResponseHeadersPolicyConfigRequest"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.GetResponseHeadersPolicyConfigResponse"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.GetResponseHeadersPolicyRequest"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.GetResponseHeadersPolicyResponse"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.GetStreamingDistributionConfigRequest"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.GetStreamingDistributionConfigResponse"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.GetStreamingDistributionRequest"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.GetStreamingDistributionResponse"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.GetVpcOriginRequest"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.GetVpcOriginResponse"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.IllegalDeleteException"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.IllegalFieldLevelEncryptionConfigAssociationWithCacheBehaviorException"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.IllegalOriginAccessConfigurationException"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.IllegalUpdateException"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.InconsistentQuantitiesException"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.InvalidArgumentException"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.InvalidDefaultRootObjectException"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.InvalidDomainNameForOriginAccessControlException"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.InvalidErrorCodeException"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.InvalidForwardCookiesException"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.InvalidFunctionAssociationException"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.InvalidGeoRestrictionParameterException"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.InvalidHeadersForS3OriginException"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.InvalidIfMatchVersionException"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.InvalidLambdaFunctionAssociationException"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.InvalidLocationCodeException"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.InvalidMinimumProtocolVersionException"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.InvalidOriginAccessControlException"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.InvalidOriginAccessIdentityException"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.InvalidOriginException"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.InvalidOriginKeepaliveTimeoutException"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.InvalidOriginReadTimeoutException"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.InvalidProtocolSettingsException"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.InvalidQueryStringParametersException"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.InvalidRelativePathException"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.InvalidRequiredProtocolException"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.InvalidResponseCodeException"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.InvalidTaggingException"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.InvalidTtlOrderException"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.InvalidViewerCertificateException"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.InvalidWebAclIdException"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.KeyGroupAlreadyExistsException"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.ListAnycastIpListsRequest"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.ListAnycastIpListsResponse"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.ListCachePoliciesRequest"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.ListCachePoliciesResponse"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.ListCloudFrontOriginAccessIdentitiesRequest"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.ListCloudFrontOriginAccessIdentitiesResponse"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.ListConflictingAliasesRequest"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.ListConflictingAliasesResponse"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.ListContinuousDeploymentPoliciesRequest"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.ListContinuousDeploymentPoliciesResponse"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.ListDistributionsByAnycastIpListIdRequest"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.ListDistributionsByAnycastIpListIdResponse"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.ListDistributionsByCachePolicyIdRequest"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.ListDistributionsByCachePolicyIdResponse"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.ListDistributionsByKeyGroupRequest"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.ListDistributionsByKeyGroupResponse"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.ListDistributionsByOriginRequestPolicyIdRequest"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.ListDistributionsByOriginRequestPolicyIdResponse"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.ListDistributionsByRealtimeLogConfigRequest"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.ListDistributionsByRealtimeLogConfigResponse"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.ListDistributionsByResponseHeadersPolicyIdRequest"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.ListDistributionsByResponseHeadersPolicyIdResponse"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.ListDistributionsByVpcOriginIdRequest"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.ListDistributionsByVpcOriginIdResponse"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.ListDistributionsByWebAclIdRequest"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.ListDistributionsByWebAclIdResponse"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.ListDistributionsRequest"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.ListDistributionsResponse"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.ListFieldLevelEncryptionConfigsRequest"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.ListFieldLevelEncryptionConfigsResponse"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.ListFieldLevelEncryptionProfilesRequest"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.ListFieldLevelEncryptionProfilesResponse"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.ListFunctionsRequest"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.ListFunctionsResponse"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.ListInvalidationsRequest"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.ListInvalidationsResponse"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.ListKeyGroupsRequest"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.ListKeyGroupsResponse"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.ListKeyValueStoresRequest"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.ListKeyValueStoresResponse"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.ListOriginAccessControlsRequest"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.ListOriginAccessControlsResponse"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.ListOriginRequestPoliciesRequest"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.ListOriginRequestPoliciesResponse"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.ListPublicKeysRequest"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.ListPublicKeysResponse"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.ListRealtimeLogConfigsRequest"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.ListRealtimeLogConfigsResponse"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.ListResponseHeadersPoliciesRequest"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.ListResponseHeadersPoliciesResponse"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.ListStreamingDistributionsRequest"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.ListStreamingDistributionsResponse"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.ListTagsForResourceRequest"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.ListTagsForResourceResponse"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.ListVpcOriginsRequest"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.ListVpcOriginsResponse"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.MissingBodyException"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.MonitoringSubscriptionAlreadyExistsException"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.NoSuchCachePolicyException"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.NoSuchCloudFrontOriginAccessIdentityException"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.NoSuchContinuousDeploymentPolicyException"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.NoSuchDistributionException"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.NoSuchFieldLevelEncryptionConfigException"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.NoSuchFieldLevelEncryptionProfileException"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.NoSuchFunctionExistsException"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.NoSuchInvalidationException"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.NoSuchMonitoringSubscriptionException"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.NoSuchOriginAccessControlException"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.NoSuchOriginException"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.NoSuchOriginRequestPolicyException"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.NoSuchPublicKeyException"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.NoSuchRealtimeLogConfigException"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.NoSuchResourceException"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.NoSuchResponseHeadersPolicyException"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.NoSuchStreamingDistributionException"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.OriginAccessControlAlreadyExistsException"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.OriginAccessControlInUseException"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.OriginRequestPolicyAlreadyExistsException"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.OriginRequestPolicyInUseException"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.Paths$Builder"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.PreconditionFailedException"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.PublicKeyAlreadyExistsException"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.PublicKeyInUseException"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.PublishFunctionRequest"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.PublishFunctionResponse"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.QueryArgProfileEmptyException"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.RealtimeLogConfigAlreadyExistsException"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.RealtimeLogConfigInUseException"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.RealtimeLogConfigOwnerMismatchException"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.ResourceInUseException"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.ResponseHeadersPolicyAlreadyExistsException"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.ResponseHeadersPolicyInUseException"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.StagingDistributionInUseException"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.StreamingDistributionAlreadyExistsException"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.StreamingDistributionNotDisabledException"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.TagResourceRequest"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.TagResourceResponse"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.TestFunctionFailedException"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.TestFunctionRequest"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.TestFunctionResponse"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.TooLongCspInResponseHeadersPolicyException"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.TooManyCacheBehaviorsException"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.TooManyCachePoliciesException"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.TooManyCertificatesException"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.TooManyCloudFrontOriginAccessIdentitiesException"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.TooManyContinuousDeploymentPoliciesException"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.TooManyCookieNamesInWhiteListException"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.TooManyCookiesInCachePolicyException"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.TooManyCookiesInOriginRequestPolicyException"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.TooManyCustomHeadersInResponseHeadersPolicyException"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.TooManyDistributionCnamEsException"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.TooManyDistributionsAssociatedToCachePolicyException"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.TooManyDistributionsAssociatedToFieldLevelEncryptionConfigException"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.TooManyDistributionsAssociatedToKeyGroupException"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.TooManyDistributionsAssociatedToOriginAccessControlException"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.TooManyDistributionsAssociatedToOriginRequestPolicyException"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.TooManyDistributionsAssociatedToResponseHeadersPolicyException"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.TooManyDistributionsException"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.TooManyDistributionsWithFunctionAssociationsException"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.TooManyDistributionsWithLambdaAssociationsException"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.TooManyDistributionsWithSingleFunctionArnException"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.TooManyFieldLevelEncryptionConfigsException"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.TooManyFieldLevelEncryptionContentTypeProfilesException"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.TooManyFieldLevelEncryptionEncryptionEntitiesException"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.TooManyFieldLevelEncryptionFieldPatternsException"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.TooManyFieldLevelEncryptionProfilesException"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.TooManyFieldLevelEncryptionQueryArgProfilesException"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.TooManyFunctionAssociationsException"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.TooManyFunctionsException"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.TooManyHeadersInCachePolicyException"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.TooManyHeadersInForwardedValuesException"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.TooManyHeadersInOriginRequestPolicyException"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.TooManyInvalidationsInProgressException"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.TooManyKeyGroupsAssociatedToDistributionException"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.TooManyKeyGroupsException"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.TooManyLambdaFunctionAssociationsException"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.TooManyOriginAccessControlsException"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.TooManyOriginCustomHeadersException"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.TooManyOriginGroupsPerDistributionException"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.TooManyOriginRequestPoliciesException"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.TooManyOriginsException"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.TooManyPublicKeysException"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.TooManyPublicKeysInKeyGroupException"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.TooManyQueryStringParametersException"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.TooManyQueryStringsInCachePolicyException"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.TooManyQueryStringsInOriginRequestPolicyException"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.TooManyRealtimeLogConfigsException"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.TooManyRemoveHeadersInResponseHeadersPolicyException"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.TooManyResponseHeadersPoliciesException"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.TooManyStreamingDistributionCnamEsException"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.TooManyStreamingDistributionsException"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.TooManyTrustedSignersException"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.TrustedKeyGroupDoesNotExistException"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.TrustedSignerDoesNotExistException"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.UnsupportedOperationException"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.UntagResourceRequest"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.UntagResourceResponse"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.UpdateCachePolicyRequest"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.UpdateCachePolicyResponse"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.UpdateCloudFrontOriginAccessIdentityRequest"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.UpdateCloudFrontOriginAccessIdentityResponse"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.UpdateContinuousDeploymentPolicyRequest"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.UpdateContinuousDeploymentPolicyResponse"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.UpdateDistributionRequest"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.UpdateDistributionResponse"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.UpdateDistributionWithStagingConfigRequest"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.UpdateDistributionWithStagingConfigResponse"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.UpdateFieldLevelEncryptionConfigRequest"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.UpdateFieldLevelEncryptionConfigResponse"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.UpdateFieldLevelEncryptionProfileRequest"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.UpdateFieldLevelEncryptionProfileResponse"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.UpdateFunctionRequest"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.UpdateFunctionResponse"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.UpdateKeyGroupRequest"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.UpdateKeyGroupResponse"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.UpdateKeyValueStoreRequest"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.UpdateKeyValueStoreResponse"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.UpdateOriginAccessControlRequest"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.UpdateOriginAccessControlResponse"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.UpdateOriginRequestPolicyRequest"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.UpdateOriginRequestPolicyResponse"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.UpdatePublicKeyRequest"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.UpdatePublicKeyResponse"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.UpdateRealtimeLogConfigRequest"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.UpdateRealtimeLogConfigResponse"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.UpdateResponseHeadersPolicyRequest"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.UpdateResponseHeadersPolicyResponse"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.UpdateStreamingDistributionRequest"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.UpdateStreamingDistributionResponse"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.UpdateVpcOriginRequest"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.model.UpdateVpcOriginResponse"
    },
    {
      "type": "software.amazon.awssdk.services.cloudfront.waiters.CloudFrontWaiter"
    },
    {
      "type": "software.amazon.awssdk.services.cloudwatch.CloudWatchAsyncClient"
    },
    {
      "type": "software.amazon.awssdk.services.cloudwatch.CloudWatchAsyncClientBuilder"
    },
    {
      "type": "software.amazon.awssdk.services.cloudwatch.CloudWatchServiceClientConfiguration"
    },
    {
      "type": "software.amazon.awssdk.services.cloudwatch.DefaultCloudWatchAsyncClient",
      "allDeclaredFields": true
    },
    {
      "type": "software.amazon.awssdk.services.cloudwatch.model.DeleteAlarmsRequest"
    },
    {
      "type": "software.amazon.awssdk.services.cloudwatch.model.DeleteAlarmsResponse"
    },
    {
      "type": "software.amazon.awssdk.services.cloudwatch.model.DeleteAnomalyDetectorRequest"
    },
    {
      "type": "software.amazon.awssdk.services.cloudwatch.model.DeleteAnomalyDetectorResponse"
    },
    {
      "type": "software.amazon.awssdk.services.cloudwatch.model.DeleteDashboardsRequest"
    },
    {
      "type": "software.amazon.awssdk.services.cloudwatch.model.DeleteDashboardsResponse"
    },
    {
      "type": "software.amazon.awssdk.services.cloudwatch.model.DeleteInsightRulesRequest"
    },
    {
      "type": "software.amazon.awssdk.services.cloudwatch.model.DeleteInsightRulesResponse"
    },
    {
      "type": "software.amazon.awssdk.services.cloudwatch.model.DeleteMetricStreamRequest"
    },
    {
      "type": "software.amazon.awssdk.services.cloudwatch.model.DeleteMetricStreamResponse"
    },
    {
      "type": "software.amazon.awssdk.services.cloudwatch.model.DescribeAlarmHistoryRequest"
    },
    {
      "type": "software.amazon.awssdk.services.cloudwatch.model.DescribeAlarmHistoryResponse"
    },
    {
      "type": "software.amazon.awssdk.services.cloudwatch.model.DescribeAlarmsForMetricRequest"
    },
    {
      "type": "software.amazon.awssdk.services.cloudwatch.model.DescribeAlarmsForMetricResponse"
    },
    {
      "type": "software.amazon.awssdk.services.cloudwatch.model.DescribeAlarmsRequest"
    },
    {
      "type": "software.amazon.awssdk.services.cloudwatch.model.DescribeAlarmsResponse"
    },
    {
      "type": "software.amazon.awssdk.services.cloudwatch.model.DescribeAnomalyDetectorsRequest"
    },
    {
      "type": "software.amazon.awssdk.services.cloudwatch.model.DescribeAnomalyDetectorsResponse"
    },
    {
      "type": "software.amazon.awssdk.services.cloudwatch.model.DescribeInsightRulesRequest"
    },
    {
      "type": "software.amazon.awssdk.services.cloudwatch.model.DescribeInsightRulesResponse"
    },
    {
      "type": "software.amazon.awssdk.services.cloudwatch.model.DisableAlarmActionsRequest"
    },
    {
      "type": "software.amazon.awssdk.services.cloudwatch.model.DisableAlarmActionsResponse"
    },
    {
      "type": "software.amazon.awssdk.services.cloudwatch.model.DisableInsightRulesRequest"
    },
    {
      "type": "software.amazon.awssdk.services.cloudwatch.model.DisableInsightRulesResponse"
    },
    {
      "type": "software.amazon.awssdk.services.cloudwatch.model.EnableAlarmActionsRequest"
    },
    {
      "type": "software.amazon.awssdk.services.cloudwatch.model.EnableAlarmActionsResponse"
    },
    {
      "type": "software.amazon.awssdk.services.cloudwatch.model.EnableInsightRulesRequest"
    },
    {
      "type": "software.amazon.awssdk.services.cloudwatch.model.EnableInsightRulesResponse"
    },
    {
      "type": "software.amazon.awssdk.services.cloudwatch.model.GetDashboardRequest"
    },
    {
      "type": "software.amazon.awssdk.services.cloudwatch.model.GetDashboardResponse"
    },
    {
      "type": "software.amazon.awssdk.services.cloudwatch.model.GetInsightRuleReportRequest"
    },
    {
      "type": "software.amazon.awssdk.services.cloudwatch.model.GetInsightRuleReportResponse"
    },
    {
      "type": "software.amazon.awssdk.services.cloudwatch.model.GetMetricDataRequest"
    },
    {
      "type": "software.amazon.awssdk.services.cloudwatch.model.GetMetricDataResponse"
    },
    {
      "type": "software.amazon.awssdk.services.cloudwatch.model.GetMetricStatisticsRequest"
    },
    {
      "type": "software.amazon.awssdk.services.cloudwatch.model.GetMetricStatisticsResponse"
    },
    {
      "type": "software.amazon.awssdk.services.cloudwatch.model.GetMetricStreamRequest"
    },
    {
      "type": "software.amazon.awssdk.services.cloudwatch.model.GetMetricStreamResponse"
    },
    {
      "type": "software.amazon.awssdk.services.cloudwatch.model.GetMetricWidgetImageRequest"
    },
    {
      "type": "software.amazon.awssdk.services.cloudwatch.model.GetMetricWidgetImageResponse"
    },
    {
      "type": "software.amazon.awssdk.services.cloudwatch.model.ListDashboardsRequest"
    },
    {
      "type": "software.amazon.awssdk.services.cloudwatch.model.ListDashboardsResponse"
    },
    {
      "type": "software.amazon.awssdk.services.cloudwatch.model.ListManagedInsightRulesRequest"
    },
    {
      "type": "software.amazon.awssdk.services.cloudwatch.model.ListManagedInsightRulesResponse"
    },
    {
      "type": "software.amazon.awssdk.services.cloudwatch.model.ListMetricStreamsRequest"
    },
    {
      "type": "software.amazon.awssdk.services.cloudwatch.model.ListMetricStreamsResponse"
    },
    {
      "type": "software.amazon.awssdk.services.cloudwatch.model.ListMetricsRequest"
    },
    {
      "type": "software.amazon.awssdk.services.cloudwatch.model.ListMetricsResponse"
    },
    {
      "type": "software.amazon.awssdk.services.cloudwatch.model.ListTagsForResourceRequest"
    },
    {
      "type": "software.amazon.awssdk.services.cloudwatch.model.ListTagsForResourceResponse"
    },
    {
      "type": "software.amazon.awssdk.services.cloudwatch.model.PutAnomalyDetectorRequest"
    },
    {
      "type": "software.amazon.awssdk.services.cloudwatch.model.PutAnomalyDetectorResponse"
    },
    {
      "type": "software.amazon.awssdk.services.cloudwatch.model.PutCompositeAlarmRequest"
    },
    {
      "type": "software.amazon.awssdk.services.cloudwatch.model.PutCompositeAlarmResponse"
    },
    {
      "type": "software.amazon.awssdk.services.cloudwatch.model.PutDashboardRequest"
    },
    {
      "type": "software.amazon.awssdk.services.cloudwatch.model.PutDashboardResponse"
    },
    {
      "type": "software.amazon.awssdk.services.cloudwatch.model.PutInsightRuleRequest"
    },
    {
      "type": "software.amazon.awssdk.services.cloudwatch.model.PutInsightRuleResponse"
    },
    {
      "type": "software.amazon.awssdk.services.cloudwatch.model.PutManagedInsightRulesRequest"
    },
    {
      "type": "software.amazon.awssdk.services.cloudwatch.model.PutManagedInsightRulesResponse"
    },
    {
      "type": "software.amazon.awssdk.services.cloudwatch.model.PutMetricAlarmRequest"
    },
    {
      "type": "software.amazon.awssdk.services.cloudwatch.model.PutMetricAlarmResponse"
    },
    {
      "type": "software.amazon.awssdk.services.cloudwatch.model.PutMetricDataRequest"
    },
    {
      "type": "software.amazon.awssdk.services.cloudwatch.model.PutMetricDataResponse"
    },
    {
      "type": "software.amazon.awssdk.services.cloudwatch.model.PutMetricStreamRequest"
    },
    {
      "type": "software.amazon.awssdk.services.cloudwatch.model.PutMetricStreamResponse"
    },
    {
      "type": "software.amazon.awssdk.services.cloudwatch.model.SetAlarmStateRequest"
    },
    {
      "type": "software.amazon.awssdk.services.cloudwatch.model.SetAlarmStateResponse"
    },
    {
      "type": "software.amazon.awssdk.services.cloudwatch.model.StartMetricStreamsRequest"
    },
    {
      "type": "software.amazon.awssdk.services.cloudwatch.model.StartMetricStreamsResponse"
    },
    {
      "type": "software.amazon.awssdk.services.cloudwatch.model.StopMetricStreamsRequest"
    },
    {
      "type": "software.amazon.awssdk.services.cloudwatch.model.StopMetricStreamsResponse"
    },
    {
      "type": "software.amazon.awssdk.services.cloudwatch.model.TagResourceRequest"
    },
    {
      "type": "software.amazon.awssdk.services.cloudwatch.model.TagResourceResponse"
    },
    {
      "type": "software.amazon.awssdk.services.cloudwatch.model.UntagResourceRequest"
    },
    {
      "type": "software.amazon.awssdk.services.cloudwatch.model.UntagResourceResponse"
    },
    {
      "type": "software.amazon.awssdk.services.cloudwatch.paginators.DescribeAlarmHistoryPublisher"
    },
    {
      "type": "software.amazon.awssdk.services.cloudwatch.paginators.DescribeAlarmsPublisher"
    },
    {
      "type": "software.amazon.awssdk.services.cloudwatch.paginators.DescribeAnomalyDetectorsPublisher"
    },
    {
      "type": "software.amazon.awssdk.services.cloudwatch.paginators.DescribeInsightRulesPublisher"
    },
    {
      "type": "software.amazon.awssdk.services.cloudwatch.paginators.GetMetricDataPublisher"
    },
    {
      "type": "software.amazon.awssdk.services.cloudwatch.paginators.ListDashboardsPublisher"
    },
    {
      "type": "software.amazon.awssdk.services.cloudwatch.paginators.ListManagedInsightRulesPublisher"
    },
    {
      "type": "software.amazon.awssdk.services.cloudwatch.paginators.ListMetricStreamsPublisher"
    },
    {
      "type": "software.amazon.awssdk.services.cloudwatch.paginators.ListMetricsPublisher"
    },
    {
      "type": "software.amazon.awssdk.services.cloudwatch.waiters.CloudWatchAsyncWaiter"
    },
    {
      "type": "software.amazon.awssdk.services.s3.DefaultS3BaseClientBuilder",
      "allDeclaredFields": true
    },
    {
      "type": "software.amazon.awssdk.services.s3.DefaultS3Client",
      "allDeclaredFields": true
    },
    {
      "type": "software.amazon.awssdk.services.s3.DefaultS3ClientBuilder",
      "allDeclaredFields": true
    },
    {
      "type": "software.amazon.awssdk.services.s3.S3BaseClientBuilder"
    },
    {
      "type": "software.amazon.awssdk.services.s3.S3Client"
    },
    {
      "type": "software.amazon.awssdk.services.s3.S3ClientBuilder"
    },
    {
      "type": "software.amazon.awssdk.services.s3.S3Configuration"
    },
    {
      "type": "software.amazon.awssdk.services.s3.S3ServiceClientConfiguration"
    },
    {
      "type": "software.amazon.awssdk.services.s3.S3Utilities"
    },
    {
      "type": "software.amazon.awssdk.services.s3.auth.scheme.S3AuthSchemeProvider"
    },
    {
      "type": "software.amazon.awssdk.services.s3.endpoints.S3EndpointProvider"
    },
    {
      "type": "software.amazon.awssdk.services.s3.internal.endpoints.UseGlobalEndpointResolver"
    },
    {
      "type": "software.amazon.awssdk.services.s3.internal.signing.DefaultS3Presigner",
      "allDeclaredFields": true
    },
    {
      "type": "software.amazon.awssdk.services.s3.internal.signing.DefaultSdkPresigner",
      "allDeclaredFields": true
    },
    {
      "type": "software.amazon.awssdk.services.s3.model.AbortMultipartUploadRequest"
    },
    {
      "type": "software.amazon.awssdk.services.s3.model.AbortMultipartUploadResponse"
    },
    {
      "type": "software.amazon.awssdk.services.s3.model.BucketAlreadyExistsException"
    },
    {
      "type": "software.amazon.awssdk.services.s3.model.BucketAlreadyOwnedByYouException"
    },
    {
      "type": "software.amazon.awssdk.services.s3.model.CompleteMultipartUploadRequest"
    },
    {
      "type": "software.amazon.awssdk.services.s3.model.CompleteMultipartUploadResponse"
    },
    {
      "type": "software.amazon.awssdk.services.s3.model.CopyObjectRequest"
    },
    {
      "type": "software.amazon.awssdk.services.s3.model.CopyObjectResponse"
    },
    {
      "type": "software.amazon.awssdk.services.s3.model.CreateBucketRequest"
    },
    {
      "type": "software.amazon.awssdk.services.s3.model.CreateBucketRequest$Builder"
    },
    {
      "type": "software.amazon.awssdk.services.s3.model.CreateBucketResponse"
    },
    {
      "type": "software.amazon.awssdk.services.s3.model.CreateMultipartUploadRequest"
    },
    {
      "type": "software.amazon.awssdk.services.s3.model.CreateMultipartUploadResponse"
    },
    {
      "type": "software.amazon.awssdk.services.s3.model.CreateSessionRequest"
    },
    {
      "type": "software.amazon.awssdk.services.s3.model.CreateSessionResponse"
    },
    {
      "type": "software.amazon.awssdk.services.s3.model.Delete$Builder"
    },
    {
      "type": "software.amazon.awssdk.services.s3.model.DeleteBucketAnalyticsConfigurationRequest"
    },
    {
      "type": "software.amazon.awssdk.services.s3.model.DeleteBucketAnalyticsConfigurationResponse"
    },
    {
      "type": "software.amazon.awssdk.services.s3.model.DeleteBucketCorsRequest"
    },
    {
      "type": "software.amazon.awssdk.services.s3.model.DeleteBucketCorsResponse"
    },
    {
      "type": "software.amazon.awssdk.services.s3.model.DeleteBucketEncryptionRequest"
    },
    {
      "type": "software.amazon.awssdk.services.s3.model.DeleteBucketEncryptionResponse"
    },
    {
      "type": "software.amazon.awssdk.services.s3.model.DeleteBucketIntelligentTieringConfigurationRequest"
    },
    {
      "type": "software.amazon.awssdk.services.s3.model.DeleteBucketIntelligentTieringConfigurationResponse"
    },
    {
      "type": "software.amazon.awssdk.services.s3.model.DeleteBucketInventoryConfigurationRequest"
    },
    {
      "type": "software.amazon.awssdk.services.s3.model.DeleteBucketInventoryConfigurationResponse"
    },
    {
      "type": "software.amazon.awssdk.services.s3.model.DeleteBucketLifecycleRequest"
    },
    {
      "type": "software.amazon.awssdk.services.s3.model.DeleteBucketLifecycleResponse"
    },
    {
      "type": "software.amazon.awssdk.services.s3.model.DeleteBucketMetricsConfigurationRequest"
    },
    {
      "type": "software.amazon.awssdk.services.s3.model.DeleteBucketMetricsConfigurationResponse"
    },
    {
      "type": "software.amazon.awssdk.services.s3.model.DeleteBucketOwnershipControlsRequest"
    },
    {
      "type": "software.amazon.awssdk.services.s3.model.DeleteBucketOwnershipControlsResponse"
    },
    {
      "type": "software.amazon.awssdk.services.s3.model.DeleteBucketPolicyRequest"
    },
    {
      "type": "software.amazon.awssdk.services.s3.model.DeleteBucketPolicyResponse"
    },
    {
      "type": "software.amazon.awssdk.services.s3.model.DeleteBucketReplicationRequest"
    },
    {
      "type": "software.amazon.awssdk.services.s3.model.DeleteBucketReplicationResponse"
    },
    {
      "type": "software.amazon.awssdk.services.s3.model.DeleteBucketRequest"
    },
    {
      "type": "software.amazon.awssdk.services.s3.model.DeleteBucketRequest$Builder"
    },
    {
      "type": "software.amazon.awssdk.services.s3.model.DeleteBucketResponse"
    },
    {
      "type": "software.amazon.awssdk.services.s3.model.DeleteBucketTaggingRequest"
    },
    {
      "type": "software.amazon.awssdk.services.s3.model.DeleteBucketTaggingResponse"
    },
    {
      "type": "software.amazon.awssdk.services.s3.model.DeleteBucketWebsiteRequest"
    },
    {
      "type": "software.amazon.awssdk.services.s3.model.DeleteBucketWebsiteResponse"
    },
    {
      "type": "software.amazon.awssdk.services.s3.model.DeleteObjectRequest"
    },
    {
      "type": "software.amazon.awssdk.services.s3.model.DeleteObjectRequest$Builder"
    },
    {
      "type": "software.amazon.awssdk.services.s3.model.DeleteObjectResponse"
    },
    {
      "type": "software.amazon.awssdk.services.s3.model.DeleteObjectTaggingRequest"
    },
    {
      "type": "software.amazon.awssdk.services.s3.model.DeleteObjectTaggingResponse"
    },
    {
      "type": "software.amazon.awssdk.services.s3.model.DeleteObjectsRequest"
    },
    {
      "type": "software.amazon.awssdk.services.s3.model.DeleteObjectsResponse"
    },
    {
      "type": "software.amazon.awssdk.services.s3.model.DeletePublicAccessBlockRequest"
    },
    {
      "type": "software.amazon.awssdk.services.s3.model.DeletePublicAccessBlockResponse"
    },
    {
      "type": "software.amazon.awssdk.services.s3.model.EncryptionTypeMismatchException"
    },
    {
      "type": "software.amazon.awssdk.services.s3.model.GetBucketAccelerateConfigurationRequest"
    },
    {
      "type": "software.amazon.awssdk.services.s3.model.GetBucketAccelerateConfigurationResponse"
    },
    {
      "type": "software.amazon.awssdk.services.s3.model.GetBucketAclRequest"
    },
    {
      "type": "software.amazon.awssdk.services.s3.model.GetBucketAclResponse"
    },
    {
      "type": "software.amazon.awssdk.services.s3.model.GetBucketAnalyticsConfigurationRequest"
    },
    {
      "type": "software.amazon.awssdk.services.s3.model.GetBucketAnalyticsConfigurationResponse"
    },
    {
      "type": "software.amazon.awssdk.services.s3.model.GetBucketCorsRequest"
    },
    {
      "type": "software.amazon.awssdk.services.s3.model.GetBucketCorsResponse"
    },
    {
      "type": "software.amazon.awssdk.services.s3.model.GetBucketEncryptionRequest"
    },
    {
      "type": "software.amazon.awssdk.services.s3.model.GetBucketEncryptionResponse"
    },
    {
      "type": "software.amazon.awssdk.services.s3.model.GetBucketIntelligentTieringConfigurationRequest"
    },
    {
      "type": "software.amazon.awssdk.services.s3.model.GetBucketIntelligentTieringConfigurationResponse"
    },
    {
      "type": "software.amazon.awssdk.services.s3.model.GetBucketInventoryConfigurationRequest"
    },
    {
      "type": "software.amazon.awssdk.services.s3.model.GetBucketInventoryConfigurationResponse"
    },
    {
      "type": "software.amazon.awssdk.services.s3.model.GetBucketLifecycleConfigurationRequest"
    },
    {
      "type": "software.amazon.awssdk.services.s3.model.GetBucketLifecycleConfigurationResponse"
    },
    {
      "type": "software.amazon.awssdk.services.s3.model.GetBucketLocationRequest"
    },
    {
      "type": "software.amazon.awssdk.services.s3.model.GetBucketLocationResponse"
    },
    {
      "type": "software.amazon.awssdk.services.s3.model.GetBucketLoggingRequest"
    },
    {
      "type": "software.amazon.awssdk.services.s3.model.GetBucketLoggingResponse"
    },
    {
      "type": "software.amazon.awssdk.services.s3.model.GetBucketMetricsConfigurationRequest"
    },
    {
      "type": "software.amazon.awssdk.services.s3.model.GetBucketMetricsConfigurationResponse"
    },
    {
      "type": "software.amazon.awssdk.services.s3.model.GetBucketNotificationConfigurationRequest"
    },
    {
      "type": "software.amazon.awssdk.services.s3.model.GetBucketNotificationConfigurationResponse"
    },
    {
      "type": "software.amazon.awssdk.services.s3.model.GetBucketOwnershipControlsRequest"
    },
    {
      "type": "software.amazon.awssdk.services.s3.model.GetBucketOwnershipControlsResponse"
    },
    {
      "type": "software.amazon.awssdk.services.s3.model.GetBucketPolicyRequest"
    },
    {
      "type": "software.amazon.awssdk.services.s3.model.GetBucketPolicyResponse"
    },
    {
      "type": "software.amazon.awssdk.services.s3.model.GetBucketPolicyStatusRequest"
    },
    {
      "type": "software.amazon.awssdk.services.s3.model.GetBucketPolicyStatusResponse"
    },
    {
      "type": "software.amazon.awssdk.services.s3.model.GetBucketReplicationRequest"
    },
    {
      "type": "software.amazon.awssdk.services.s3.model.GetBucketReplicationResponse"
    },
    {
      "type": "software.amazon.awssdk.services.s3.model.GetBucketRequestPaymentRequest"
    },
    {
      "type": "software.amazon.awssdk.services.s3.model.GetBucketRequestPaymentResponse"
    },
    {
      "type": "software.amazon.awssdk.services.s3.model.GetBucketTaggingRequest"
    },
    {
      "type": "software.amazon.awssdk.services.s3.model.GetBucketTaggingResponse"
    },
    {
      "type": "software.amazon.awssdk.services.s3.model.GetBucketVersioningRequest"
    },
    {
      "type": "software.amazon.awssdk.services.s3.model.GetBucketVersioningResponse"
    },
    {
      "type": "software.amazon.awssdk.services.s3.model.GetBucketWebsiteRequest"
    },
    {
      "type": "software.amazon.awssdk.services.s3.model.GetBucketWebsiteResponse"
    },
    {
      "type": "software.amazon.awssdk.services.s3.model.GetObjectAclRequest"
    },
    {
      "type": "software.amazon.awssdk.services.s3.model.GetObjectAclResponse"
    },
    {
      "type": "software.amazon.awssdk.services.s3.model.GetObjectAttributesRequest"
    },
    {
      "type": "software.amazon.awssdk.services.s3.model.GetObjectAttributesResponse"
    },
    {
      "type": "software.amazon.awssdk.services.s3.model.GetObjectLegalHoldRequest"
    },
    {
      "type": "software.amazon.awssdk.services.s3.model.GetObjectLegalHoldResponse"
    },
    {
      "type": "software.amazon.awssdk.services.s3.model.GetObjectLockConfigurationRequest"
    },
    {
      "type": "software.amazon.awssdk.services.s3.model.GetObjectLockConfigurationResponse"
    },
    {
      "type": "software.amazon.awssdk.services.s3.model.GetObjectRequest"
    },
    {
      "type": "software.amazon.awssdk.services.s3.model.GetObjectRequest$Builder"
    },
    {
      "type": "software.amazon.awssdk.services.s3.model.GetObjectResponse"
    },
    {
      "type": "software.amazon.awssdk.services.s3.model.GetObjectRetentionRequest"
    },
    {
      "type": "software.amazon.awssdk.services.s3.model.GetObjectRetentionResponse"
    },
    {
      "type": "software.amazon.awssdk.services.s3.model.GetObjectTaggingRequest"
    },
    {
      "type": "software.amazon.awssdk.services.s3.model.GetObjectTaggingResponse"
    },
    {
      "type": "software.amazon.awssdk.services.s3.model.GetObjectTorrentRequest"
    },
    {
      "type": "software.amazon.awssdk.services.s3.model.GetObjectTorrentResponse"
    },
    {
      "type": "software.amazon.awssdk.services.s3.model.GetPublicAccessBlockRequest"
    },
    {
      "type": "software.amazon.awssdk.services.s3.model.GetPublicAccessBlockResponse"
    },
    {
      "type": "software.amazon.awssdk.services.s3.model.HeadBucketRequest"
    },
    {
      "type": "software.amazon.awssdk.services.s3.model.HeadBucketRequest$Builder"
    },
    {
      "type": "software.amazon.awssdk.services.s3.model.HeadBucketResponse"
    },
    {
      "type": "software.amazon.awssdk.services.s3.model.HeadObjectRequest"
    },
    {
      "type": "software.amazon.awssdk.services.s3.model.HeadObjectRequest$Builder"
    },
    {
      "type": "software.amazon.awssdk.services.s3.model.HeadObjectResponse"
    },
    {
      "type": "software.amazon.awssdk.services.s3.model.InvalidObjectStateException"
    },
    {
      "type": "software.amazon.awssdk.services.s3.model.InvalidRequestException"
    },
    {
      "type": "software.amazon.awssdk.services.s3.model.InvalidWriteOffsetException"
    },
    {
      "type": "software.amazon.awssdk.services.s3.model.ListBucketAnalyticsConfigurationsRequest"
    },
    {
      "type": "software.amazon.awssdk.services.s3.model.ListBucketAnalyticsConfigurationsResponse"
    },
    {
      "type": "software.amazon.awssdk.services.s3.model.ListBucketIntelligentTieringConfigurationsRequest"
    },
    {
      "type": "software.amazon.awssdk.services.s3.model.ListBucketIntelligentTieringConfigurationsResponse"
    },
    {
      "type": "software.amazon.awssdk.services.s3.model.ListBucketInventoryConfigurationsRequest"
    },
    {
      "type": "software.amazon.awssdk.services.s3.model.ListBucketInventoryConfigurationsResponse"
    },
    {
      "type": "software.amazon.awssdk.services.s3.model.ListBucketMetricsConfigurationsRequest"
    },
    {
      "type": "software.amazon.awssdk.services.s3.model.ListBucketMetricsConfigurationsResponse"
    },
    {
      "type": "software.amazon.awssdk.services.s3.model.ListBucketsRequest"
    },
    {
      "type": "software.amazon.awssdk.services.s3.model.ListBucketsResponse"
    },
    {
      "type": "software.amazon.awssdk.services.s3.model.ListDirectoryBucketsRequest"
    },
    {
      "type": "software.amazon.awssdk.services.s3.model.ListDirectoryBucketsResponse"
    },
    {
      "type": "software.amazon.awssdk.services.s3.model.ListMultipartUploadsRequest"
    },
    {
      "type": "software.amazon.awssdk.services.s3.model.ListMultipartUploadsResponse"
    },
    {
      "type": "software.amazon.awssdk.services.s3.model.ListObjectVersionsRequest"
    },
    {
      "type": "software.amazon.awssdk.services.s3.model.ListObjectVersionsResponse"
    },
    {
      "type": "software.amazon.awssdk.services.s3.model.ListObjectsRequest"
    },
    {
      "type": "software.amazon.awssdk.services.s3.model.ListObjectsResponse"
    },
    {
      "type": "software.amazon.awssdk.services.s3.model.ListObjectsV2Request"
    },
    {
      "type": "software.amazon.awssdk.services.s3.model.ListObjectsV2Response"
    },
    {
      "type": "software.amazon.awssdk.services.s3.model.ListPartsRequest"
    },
    {
      "type": "software.amazon.awssdk.services.s3.model.ListPartsResponse"
    },
    {
      "type": "software.amazon.awssdk.services.s3.model.NoSuchBucketException"
    },
    {
      "type": "software.amazon.awssdk.services.s3.model.NoSuchKeyException"
    },
    {
      "type": "software.amazon.awssdk.services.s3.model.NoSuchUploadException"
    },
    {
      "type": "software.amazon.awssdk.services.s3.model.ObjectAlreadyInActiveTierErrorException"
    },
    {
      "type": "software.amazon.awssdk.services.s3.model.ObjectNotInActiveTierErrorException"
    },
    {
      "type": "software.amazon.awssdk.services.s3.model.PutBucketAccelerateConfigurationRequest"
    },
    {
      "type": "software.amazon.awssdk.services.s3.model.PutBucketAccelerateConfigurationResponse"
    },
    {
      "type": "software.amazon.awssdk.services.s3.model.PutBucketAclRequest"
    },
    {
      "type": "software.amazon.awssdk.services.s3.model.PutBucketAclResponse"
    },
    {
      "type": "software.amazon.awssdk.services.s3.model.PutBucketAnalyticsConfigurationRequest"
    },
    {
      "type": "software.amazon.awssdk.services.s3.model.PutBucketAnalyticsConfigurationResponse"
    },
    {
      "type": "software.amazon.awssdk.services.s3.model.PutBucketCorsRequest"
    },
    {
      "type": "software.amazon.awssdk.services.s3.model.PutBucketCorsResponse"
    },
    {
      "type": "software.amazon.awssdk.services.s3.model.PutBucketEncryptionRequest"
    },
    {
      "type": "software.amazon.awssdk.services.s3.model.PutBucketEncryptionResponse"
    },
    {
      "type": "software.amazon.awssdk.services.s3.model.PutBucketIntelligentTieringConfigurationRequest"
    },
    {
      "type": "software.amazon.awssdk.services.s3.model.PutBucketIntelligentTieringConfigurationResponse"
    },
    {
      "type": "software.amazon.awssdk.services.s3.model.PutBucketInventoryConfigurationRequest"
    },
    {
      "type": "software.amazon.awssdk.services.s3.model.PutBucketInventoryConfigurationResponse"
    },
    {
      "type": "software.amazon.awssdk.services.s3.model.PutBucketLifecycleConfigurationRequest"
    },
    {
      "type": "software.amazon.awssdk.services.s3.model.PutBucketLifecycleConfigurationResponse"
    },
    {
      "type": "software.amazon.awssdk.services.s3.model.PutBucketLoggingRequest"
    },
    {
      "type": "software.amazon.awssdk.services.s3.model.PutBucketLoggingResponse"
    },
    {
      "type": "software.amazon.awssdk.services.s3.model.PutBucketMetricsConfigurationRequest"
    },
    {
      "type": "software.amazon.awssdk.services.s3.model.PutBucketMetricsConfigurationResponse"
    },
    {
      "type": "software.amazon.awssdk.services.s3.model.PutBucketNotificationConfigurationRequest"
    },
    {
      "type": "software.amazon.awssdk.services.s3.model.PutBucketNotificationConfigurationResponse"
    },
    {
      "type": "software.amazon.awssdk.services.s3.model.PutBucketOwnershipControlsRequest"
    },
    {
      "type": "software.amazon.awssdk.services.s3.model.PutBucketOwnershipControlsResponse"
    },
    {
      "type": "software.amazon.awssdk.services.s3.model.PutBucketPolicyRequest"
    },
    {
      "type": "software.amazon.awssdk.services.s3.model.PutBucketPolicyResponse"
    },
    {
      "type": "software.amazon.awssdk.services.s3.model.PutBucketReplicationRequest"
    },
    {
      "type": "software.amazon.awssdk.services.s3.model.PutBucketReplicationResponse"
    },
    {
      "type": "software.amazon.awssdk.services.s3.model.PutBucketRequestPaymentRequest"
    },
    {
      "type": "software.amazon.awssdk.services.s3.model.PutBucketRequestPaymentResponse"
    },
    {
      "type": "software.amazon.awssdk.services.s3.model.PutBucketTaggingRequest"
    },
    {
      "type": "software.amazon.awssdk.services.s3.model.PutBucketTaggingResponse"
    },
    {
      "type": "software.amazon.awssdk.services.s3.model.PutBucketVersioningRequest"
    },
    {
      "type": "software.amazon.awssdk.services.s3.model.PutBucketVersioningResponse"
    },
    {
      "type": "software.amazon.awssdk.services.s3.model.PutBucketWebsiteRequest"
    },
    {
      "type": "software.amazon.awssdk.services.s3.model.PutBucketWebsiteResponse"
    },
    {
      "type": "software.amazon.awssdk.services.s3.model.PutObjectAclRequest"
    },
    {
      "type": "software.amazon.awssdk.services.s3.model.PutObjectAclResponse"
    },
    {
      "type": "software.amazon.awssdk.services.s3.model.PutObjectLegalHoldRequest"
    },
    {
      "type": "software.amazon.awssdk.services.s3.model.PutObjectLegalHoldResponse"
    },
    {
      "type": "software.amazon.awssdk.services.s3.model.PutObjectLockConfigurationRequest"
    },
    {
      "type": "software.amazon.awssdk.services.s3.model.PutObjectLockConfigurationResponse"
    },
    {
      "type": "software.amazon.awssdk.services.s3.model.PutObjectRequest"
    },
    {
      "type": "software.amazon.awssdk.services.s3.model.PutObjectResponse"
    },
    {
      "type": "software.amazon.awssdk.services.s3.model.PutObjectRetentionRequest"
    },
    {
      "type": "software.amazon.awssdk.services.s3.model.PutObjectRetentionResponse"
    },
    {
      "type": "software.amazon.awssdk.services.s3.model.PutObjectTaggingRequest"
    },
    {
      "type": "software.amazon.awssdk.services.s3.model.PutObjectTaggingResponse"
    },
    {
      "type": "software.amazon.awssdk.services.s3.model.PutPublicAccessBlockRequest"
    },
    {
      "type": "software.amazon.awssdk.services.s3.model.PutPublicAccessBlockResponse"
    },
    {
      "type": "software.amazon.awssdk.services.s3.model.RestoreObjectRequest"
    },
    {
      "type": "software.amazon.awssdk.services.s3.model.RestoreObjectResponse"
    },
    {
      "type": "software.amazon.awssdk.services.s3.model.S3Exception"
    },
    {
      "type": "software.amazon.awssdk.services.s3.model.S3Object"
    },
    {
      "type": "software.amazon.awssdk.services.s3.model.TooManyPartsException"
    },
    {
      "type": "software.amazon.awssdk.services.s3.model.UploadPartCopyRequest"
    },
    {
      "type": "software.amazon.awssdk.services.s3.model.UploadPartCopyResponse"
    },
    {
      "type": "software.amazon.awssdk.services.s3.model.UploadPartRequest"
    },
    {
      "type": "software.amazon.awssdk.services.s3.model.UploadPartResponse"
    },
    {
      "type": "software.amazon.awssdk.services.s3.model.WriteGetObjectResponseRequest"
    },
    {
      "type": "software.amazon.awssdk.services.s3.model.WriteGetObjectResponseResponse"
    },
    {
      "type": "software.amazon.awssdk.services.s3.paginators.ListBucketsIterable"
    },
    {
      "type": "software.amazon.awssdk.services.s3.paginators.ListDirectoryBucketsIterable"
    },
    {
      "type": "software.amazon.awssdk.services.s3.paginators.ListMultipartUploadsIterable"
    },
    {
      "type": "software.amazon.awssdk.services.s3.paginators.ListObjectVersionsIterable"
    },
    {
      "type": "software.amazon.awssdk.services.s3.paginators.ListObjectsV2Iterable"
    },
    {
      "type": "software.amazon.awssdk.services.s3.paginators.ListPartsIterable"
    },
    {
      "type": "software.amazon.awssdk.services.s3.presigner.S3Presigner"
    },
    {
      "type": "software.amazon.awssdk.services.s3.presigner.S3Presigner$Builder"
    },
    {
      "type": "software.amazon.awssdk.services.s3.presigner.model.AbortMultipartUploadPresignRequest"
    },
    {
      "type": "software.amazon.awssdk.services.s3.presigner.model.CompleteMultipartUploadPresignRequest"
    },
    {
      "type": "software.amazon.awssdk.services.s3.presigner.model.CreateMultipartUploadPresignRequest"
    },
    {
      "type": "software.amazon.awssdk.services.s3.presigner.model.DeleteObjectPresignRequest"
    },
    {
      "type": "software.amazon.awssdk.services.s3.presigner.model.GetObjectPresignRequest"
    },
    {
      "type": "software.amazon.awssdk.services.s3.presigner.model.PresignedAbortMultipartUploadRequest"
    },
    {
      "type": "software.amazon.awssdk.services.s3.presigner.model.PresignedCompleteMultipartUploadRequest"
    },
    {
      "type": "software.amazon.awssdk.services.s3.presigner.model.PresignedCreateMultipartUploadRequest"
    },
    {
      "type": "software.amazon.awssdk.services.s3.presigner.model.PresignedDeleteObjectRequest"
    },
    {
      "type": "software.amazon.awssdk.services.s3.presigner.model.PresignedGetObjectRequest"
    },
    {
      "type": "software.amazon.awssdk.services.s3.presigner.model.PresignedPutObjectRequest"
    },
    {
      "type": "software.amazon.awssdk.services.s3.presigner.model.PresignedUploadPartRequest"
    },
    {
      "type": "software.amazon.awssdk.services.s3.presigner.model.PutObjectPresignRequest"
    },
    {
      "type": "software.amazon.awssdk.services.s3.presigner.model.UploadPartPresignRequest"
    },
    {
      "type": "software.amazon.awssdk.services.s3.waiters.S3Waiter"
    },
    {
      "type": "software.amazon.awssdk.services.sts.auth.StsWebIdentityTokenFileCredentialsProvider"
    },
    {
      "type": "software.amazon.awssdk.utils.AttributeMap"
    },
    {
      "type": "software.amazon.awssdk.utils.AttributeMap$LazyValueSource"
    },
    {
      "type": "software.amazon.awssdk.utils.Either"
    },
    {
      "type": "software.amazon.awssdk.utils.Pair"
    },
    {
      "type": "software.amazon.awssdk.utils.SdkAutoCloseable"
    },
    {
      "type": "software.amazon.awssdk.utils.builder.Buildable"
    },
    {
      "type": "software.amazon.awssdk.utils.builder.CopyableBuilder"
    },
    {
      "type": "software.amazon.awssdk.utils.builder.SdkBuilder"
    },
    {
      "type": "software.amazon.awssdk.utils.builder.ToCopyableBuilder"
    },
    {
      "type": "sun.management.ClassLoadingImpl"
    },
    {
      "type": "sun.management.CompilationImpl"
    },
    {
      "type": "sun.management.ManagementFactoryHelper$1"
    },
    {
      "type": "sun.management.ManagementFactoryHelper$PlatformLoggingImpl"
    },
    {
      "type": "sun.management.MemoryImpl"
    },
    {
      "type": "sun.management.MemoryManagerImpl"
    },
    {
      "type": "sun.management.MemoryPoolImpl"
    },
    {
      "type": "sun.management.RuntimeImpl"
    },
    {
      "type": "sun.misc.Unsafe",
      "fields": [
        {
          "name": "theUnsafe"
        }
      ],
      "methods": [
        {
          "name": "invokeCleaner",
          "parameterTypes": [
            "java.nio.ByteBuffer"
          ]
        }
      ]
    },
    {
      "type": "sun.nio.ch.SelectorImpl",
      "fields": [
        {
          "name": "publicSelectedKeys"
        },
        {
          "name": "selectedKeys"
        }
      ]
    },
    {
      "type": "sun.reflect.ReflectionFactory",
      "methods": [
        {
          "name": "getReflectionFactory",
          "parameterTypes": []
        },
        {
          "name": "newConstructorForSerialization",
          "parameterTypes": [
            "java.lang.Class",
            "java.lang.reflect.Constructor"
          ]
        }
      ]
    },
    {
      "type": "sun.security.pkcs12.PKCS12KeyStore",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "sun.security.pkcs12.PKCS12KeyStore$DualFormatPKCS12",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "sun.security.provider.ConfigFile",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "sun.security.provider.DSA$SHA224withDSA",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "sun.security.provider.DSA$SHA256withDSA",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "sun.security.provider.JavaKeyStore$DualFormatJKS",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "sun.security.provider.JavaKeyStore$JKS",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "sun.security.provider.MD5",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "sun.security.provider.NativePRNG",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.security.SecureRandomParameters"
          ]
        }
      ]
    },
    {
      "type": "sun.security.provider.SHA",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "sun.security.provider.SHA2$SHA224",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "sun.security.provider.SHA2$SHA256",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "sun.security.provider.SHA3$SHA256",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "sun.security.provider.SHA5$SHA384",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "sun.security.provider.SHA5$SHA512",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "sun.security.provider.X509Factory",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "sun.security.provider.certpath.PKIXCertPathValidator",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "sun.security.rsa.PSSParameters",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "sun.security.rsa.RSAKeyFactory$Legacy",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "sun.security.rsa.RSAPSSSignature",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "sun.security.rsa.RSASignature$SHA224withRSA",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "sun.security.rsa.RSASignature$SHA256withRSA",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "sun.security.ssl.KeyManagerFactoryImpl$SunX509",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "sun.security.ssl.SSLContextImpl$DefaultSSLContext",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "sun.security.ssl.SSLContextImpl$TLSContext",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "sun.security.ssl.TrustManagerFactoryImpl$PKIXFactory",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "sun.security.x509.AuthorityInfoAccessExtension",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.Boolean",
            "java.lang.Object"
          ]
        }
      ]
    },
    {
      "type": "sun.security.x509.AuthorityKeyIdentifierExtension",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.Boolean",
            "java.lang.Object"
          ]
        }
      ]
    },
    {
      "type": "sun.security.x509.BasicConstraintsExtension",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.Boolean",
            "java.lang.Object"
          ]
        }
      ]
    },
    {
      "type": "sun.security.x509.CRLDistributionPointsExtension",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.Boolean",
            "java.lang.Object"
          ]
        }
      ]
    },
    {
      "type": "sun.security.x509.CertificatePoliciesExtension",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.Boolean",
            "java.lang.Object"
          ]
        }
      ]
    },
    {
      "type": "sun.security.x509.ExtendedKeyUsageExtension",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.Boolean",
            "java.lang.Object"
          ]
        }
      ]
    },
    {
      "type": "sun.security.x509.IssuerAlternativeNameExtension",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.Boolean",
            "java.lang.Object"
          ]
        }
      ]
    },
    {
      "type": "sun.security.x509.KeyUsageExtension",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.Boolean",
            "java.lang.Object"
          ]
        }
      ]
    },
    {
      "type": "sun.security.x509.NetscapeCertTypeExtension",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.Boolean",
            "java.lang.Object"
          ]
        }
      ]
    },
    {
      "type": "sun.security.x509.PrivateKeyUsageExtension",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.Boolean",
            "java.lang.Object"
          ]
        }
      ]
    },
    {
      "type": "sun.security.x509.SubjectAlternativeNameExtension",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.Boolean",
            "java.lang.Object"
          ]
        }
      ]
    },
    {
      "type": "sun.security.x509.SubjectKeyIdentifierExtension",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.Boolean",
            "java.lang.Object"
          ]
        }
      ]
    },
    {
      "type": "void"
    },
    {
      "type": "zipkin2.reporter.BaseHttpSender",
      "allDeclaredFields": true
    },
    {
      "type": "zipkin2.reporter.BytesEncoder"
    },
    {
      "type": "zipkin2.reporter.BytesMessageSender"
    },
    {
      "type": "zipkin2.reporter.BytesMessageSender$Base",
      "allDeclaredFields": true
    },
    {
      "type": "zipkin2.reporter.Encoding",
      "allDeclaredFields": true
    },
    {
      "type": "zipkin2.reporter.Encoding$1",
      "allDeclaredFields": true
    },
    {
      "type": "zipkin2.reporter.HttpEndpointSupplier"
    },
    {
      "type": "zipkin2.reporter.Sender"
    },
    {
      "type": "zipkin2.reporter.brave.AsyncZipkinSpanHandler",
      "allDeclaredFields": true
    },
    {
      "type": "zipkin2.reporter.brave.AsyncZipkinSpanHandler$Builder"
    },
    {
      "type": "zipkin2.reporter.brave.MutableSpanBytesEncoder",
      "allDeclaredFields": true
    },
    {
      "type": "zipkin2.reporter.brave.MutableSpanBytesEncoder$1",
      "allDeclaredFields": true
    },
    {
      "type": {
        "proxy": [
          "com.leijendary.client.PetStoreClient"
        ]
      },
      "allDeclaredFields": true
    },
    {
      "type": {
        "proxy": [
          "com.leijendary.domain.ai.chat.AiChatMemoryRepository",
          "org.springframework.data.repository.Repository",
          "org.springframework.transaction.interceptor.TransactionalProxy",
          "org.springframework.aop.framework.Advised",
          "org.springframework.core.DecoratingProxy"
        ]
      },
      "allDeclaredFields": true
    },
    {
      "type": {
        "proxy": [
          "com.leijendary.domain.ai.chat.AiChatRepository",
          "org.springframework.data.repository.Repository",
          "org.springframework.transaction.interceptor.TransactionalProxy",
          "org.springframework.aop.framework.Advised",
          "org.springframework.core.DecoratingProxy"
        ]
      },
      "allDeclaredFields": true
    },
    {
      "type": {
        "proxy": [
          "com.leijendary.domain.image.ImageMetadataRepository",
          "org.springframework.data.repository.Repository",
          "org.springframework.transaction.interceptor.TransactionalProxy",
          "org.springframework.aop.framework.Advised",
          "org.springframework.core.DecoratingProxy"
        ]
      },
      "allDeclaredFields": true
    },
    {
      "type": {
        "proxy": [
          "com.leijendary.domain.image.ImageRepository",
          "org.springframework.data.repository.Repository",
          "org.springframework.transaction.interceptor.TransactionalProxy",
          "org.springframework.aop.framework.Advised",
          "org.springframework.core.DecoratingProxy"
        ]
      },
      "allDeclaredFields": true
    },
    {
      "type": {
        "proxy": [
          "com.leijendary.domain.sample.SampleImageRepository",
          "org.springframework.data.repository.Repository",
          "org.springframework.transaction.interceptor.TransactionalProxy",
          "org.springframework.aop.framework.Advised",
          "org.springframework.core.DecoratingProxy"
        ]
      },
      "allDeclaredFields": true
    },
    {
      "type": {
        "proxy": [
          "com.leijendary.domain.sample.SampleRepository",
          "org.springframework.data.repository.Repository",
          "org.springframework.transaction.interceptor.TransactionalProxy",
          "org.springframework.aop.framework.Advised",
          "org.springframework.core.DecoratingProxy"
        ]
      },
      "allDeclaredFields": true
    },
    {
      "type": {
        "proxy": [
          "com.leijendary.domain.sample.SampleSearchRepository",
          "org.springframework.data.repository.Repository",
          "org.springframework.transaction.interceptor.TransactionalProxy",
          "org.springframework.aop.framework.Advised",
          "org.springframework.core.DecoratingProxy"
        ]
      },
      "allDeclaredFields": true
    },
    {
      "type": {
        "proxy": [
          "com.leijendary.domain.sample.SampleTranslationRepository",
          "org.springframework.data.repository.Repository",
          "org.springframework.transaction.interceptor.TransactionalProxy",
          "org.springframework.aop.framework.Advised",
          "org.springframework.core.DecoratingProxy"
        ]
      },
      "allDeclaredFields": true
    },
    {
      "type": {
        "proxy": [
          "io.lettuce.core.api.sync.RedisCommands",
          "io.lettuce.core.cluster.api.sync.RedisClusterCommands"
        ]
      }
    },
    {
      "type": {
        "proxy": [
          "java.lang.reflect.GenericArrayType",
          "org.springframework.core.SerializableTypeWrapper$SerializableTypeProxy",
          "java.io.Serializable"
        ]
      }
    },
    {
      "type": {
        "proxy": [
          "java.lang.reflect.ParameterizedType",
          "org.springframework.core.SerializableTypeWrapper$SerializableTypeProxy",
          "java.io.Serializable"
        ]
      }
    },
    {
      "type": {
        "proxy": [
          "java.lang.reflect.TypeVariable",
          "org.springframework.core.SerializableTypeWrapper$SerializableTypeProxy",
          "java.io.Serializable"
        ]
      }
    },
    {
      "type": {
        "proxy": [
          "java.lang.reflect.WildcardType",
          "org.springframework.core.SerializableTypeWrapper$SerializableTypeProxy",
          "java.io.Serializable"
        ]
      }
    },
    {
      "type": {
        "proxy": [
          "java.sql.Connection"
        ]
      }
    },
    {
      "type": {
        "proxy": [
          "net.ttddyy.dsproxy.proxy.ProxyJdbcObject",
          "java.sql.CallableStatement"
        ]
      }
    },
    {
      "type": {
        "proxy": [
          "net.ttddyy.dsproxy.proxy.ProxyJdbcObject",
          "java.sql.Connection"
        ]
      }
    },
    {
      "type": {
        "proxy": [
          "net.ttddyy.dsproxy.proxy.ProxyJdbcObject",
          "java.sql.PreparedStatement"
        ]
      }
    },
    {
      "type": {
        "proxy": [
          "net.ttddyy.dsproxy.proxy.ProxyJdbcObject",
          "java.sql.ResultSet"
        ]
      }
    },
    {
      "type": {
        "proxy": [
          "net.ttddyy.dsproxy.proxy.ProxyJdbcObject",
          "java.sql.Statement"
        ]
      }
    },
    {
      "type": {
        "proxy": [
          "org.springframework.boot.actuate.endpoint.annotation.EndpointExtension"
        ]
      }
    },
    {
      "type": {
        "proxy": [
          "org.springframework.boot.context.properties.ConfigurationProperties"
        ]
      }
    },
    {
      "type": {
        "proxy": [
          "org.springframework.data.domain.AuditorAware",
          "org.springframework.aop.SpringProxy",
          "org.springframework.aop.framework.Advised",
          "org.springframework.core.DecoratingProxy"
        ]
      },
      "allDeclaredFields": true
    },
    {
      "type": {
        "proxy": [
          "org.springframework.data.elasticsearch.annotations.Document"
        ]
      }
    },
    {
      "type": {
        "proxy": [
          "org.springframework.data.elasticsearch.annotations.Field"
        ]
      }
    },
    {
      "type": {
        "proxy": [
          "org.springframework.data.elasticsearch.annotations.MultiField"
        ]
      }
    },
    {
      "type": {
        "proxy": [
          "org.springframework.data.elasticsearch.annotations.Query"
        ]
      }
    },
    {
      "type": {
        "proxy": [
          "org.springframework.data.jdbc.core.convert.RelationResolver",
          "org.springframework.aop.SpringProxy",
          "org.springframework.aop.framework.Advised",
          "org.springframework.core.DecoratingProxy"
        ]
      }
    },
    {
      "type": {
        "proxy": [
          "org.springframework.data.redis.connection.StringRedisConnection",
          "org.springframework.data.redis.connection.DecoratedRedisConnection"
        ]
      }
    },
    {
      "type": {
        "proxy": [
          "org.springframework.data.relational.core.mapping.Table"
        ]
      }
    },
    {
      "type": {
        "proxy": [
          "org.springframework.jdbc.datasource.ConnectionProxy"
        ]
      }
    },
    {
      "type": {
        "proxy": [
          "org.springframework.kafka.annotation.KafkaListener"
        ]
      }
    },
    {
      "type": {
        "proxy": [
          "org.springframework.kafka.annotation.RetryableTopic"
        ]
      }
    },
    {
      "type": {
        "proxy": [
          "org.springframework.retry.annotation.Backoff"
        ]
      }
    },
    {
      "type": {
        "proxy": [
          "org.springframework.retry.annotation.Retryable"
        ]
      }
    },
    {
      "type": {
        "proxy": [
          "org.springframework.web.bind.annotation.ControllerAdvice"
        ]
      }
    },
    {
      "type": {
        "proxy": [
          "org.springframework.web.bind.annotation.ExceptionHandler"
        ]
      }
    },
    {
      "type": {
        "proxy": [
          "org.springframework.web.bind.annotation.PathVariable"
        ]
      }
    },
    {
      "type": {
        "proxy": [
          "org.springframework.web.bind.annotation.RequestMapping"
        ]
      }
    },
    {
      "type": {
        "proxy": [
          "org.springframework.web.bind.annotation.RequestParam"
        ]
      }
    },
    {
      "type": {
        "proxy": [
          "org.springframework.web.bind.annotation.ResponseStatus"
        ]
      }
    }
  ],
  "resources": [
    {
      "glob": "META-INF/elasticsearch-named-queries.properties"
    },
    {
      "glob": "META-INF/jdbc-named-queries.properties"
    },
    {
      "glob": "META-INF/resources/index.html"
    },
    {
      "glob": "META-INF/resources/webjars-locator.properties"
    },
    {
      "glob": "META-INF/services/ch.qos.logback.classic.spi.Configurator"
    },
    {
      "glob": "META-INF/services/io.micrometer.context.ContextAccessor"
    },
    {
      "glob": "META-INF/services/io.micrometer.context.ThreadLocalAccessor"
    },
    {
      "glob": "META-INF/services/io.swagger.v3.core.converter.ModelConverter"
    },
    {
      "glob": "META-INF/services/jakarta.el.ExpressionFactory"
    },
    {
      "glob": "META-INF/services/jakarta.json.spi.JsonProvider"
    },
    {
      "glob": "META-INF/services/jakarta.validation.ConstraintValidator"
    },
    {
      "glob": "META-INF/services/jakarta.validation.spi.ValidationProvider"
    },
    {
      "glob": "META-INF/services/jakarta.validation.valueextraction.ValueExtractor"
    },
    {
      "glob": "META-INF/services/java.lang.System$LoggerFinder"
    },
    {
      "glob": "META-INF/services/java.net.spi.InetAddressResolverProvider"
    },
    {
      "glob": "META-INF/services/java.net.spi.URLStreamHandlerProvider"
    },
    {
      "glob": "META-INF/services/java.nio.channels.spi.SelectorProvider"
    },
    {
      "glob": "META-INF/services/java.sql.Driver"
    },
    {
      "glob": "META-INF/services/java.time.zone.ZoneRulesProvider"
    },
    {
      "glob": "META-INF/services/java.util.spi.ResourceBundleControlProvider"
    },
    {
      "glob": "META-INF/services/javax.xml.parsers.SAXParserFactory"
    },
    {
      "glob": "META-INF/services/javax.xml.stream.XMLInputFactory"
    },
    {
      "glob": "META-INF/services/javax.xml.transform.TransformerFactory"
    },
    {
      "glob": "META-INF/services/kotlin.reflect.jvm.internal.impl.builtins.BuiltInsLoader"
    },
    {
      "glob": "META-INF/services/kotlin.reflect.jvm.internal.impl.resolve.ExternalOverridabilityCondition"
    },
    {
      "glob": "META-INF/services/kotlin.reflect.jvm.internal.impl.util.ModuleVisibilityHelper"
    },
    {
      "glob": "META-INF/services/liquibase.change.Change"
    },
    {
      "glob": "META-INF/services/liquibase.changelog.ChangeLogHistoryService"
    },
    {
      "glob": "META-INF/services/liquibase.changelog.visitor.ValidatingVisitorGenerator"
    },
    {
      "glob": "META-INF/services/liquibase.changeset.ChangeSetService"
    },
    {
      "glob": "META-INF/services/liquibase.command.CommandStep"
    },
    {
      "glob": "META-INF/services/liquibase.configuration.AutoloadedConfigurations"
    },
    {
      "glob": "META-INF/services/liquibase.configuration.ConfigurationValueProvider"
    },
    {
      "glob": "META-INF/services/liquibase.configuration.ConfiguredValueModifier"
    },
    {
      "glob": "META-INF/services/liquibase.database.Database"
    },
    {
      "glob": "META-INF/services/liquibase.database.LiquibaseTableNames"
    },
    {
      "glob": "META-INF/services/liquibase.database.jvm.ConnectionPatterns"
    },
    {
      "glob": "META-INF/services/liquibase.diff.compare.DatabaseObjectComparator"
    },
    {
      "glob": "META-INF/services/liquibase.executor.Executor"
    },
    {
      "glob": "META-INF/services/liquibase.lockservice.LockService"
    },
    {
      "glob": "META-INF/services/liquibase.logging.LogService"
    },
    {
      "glob": "META-INF/services/liquibase.logging.mdc.MdcManager"
    },
    {
      "glob": "META-INF/services/liquibase.parser.ChangeLogParser"
    },
    {
      "glob": "META-INF/services/liquibase.report.ShowSummaryGenerator"
    },
    {
      "glob": "META-INF/services/liquibase.servicelocator.ServiceLocator"
    },
    {
      "glob": "META-INF/services/liquibase.snapshot.SnapshotGenerator"
    },
    {
      "glob": "META-INF/services/liquibase.sqlgenerator.SqlGenerator"
    },
    {
      "glob": "META-INF/services/org.apache.juli.logging.Log"
    },
    {
      "glob": "META-INF/services/org.slf4j.spi.SLF4JServiceProvider"
    },
    {
      "glob": "META-INF/services/software.amazon.awssdk.http.SdkHttpService"
    },
    {
      "glob": "META-INF/services/software.amazon.awssdk.http.async.SdkAsyncHttpService"
    },
    {
      "glob": "META-INF/spring.components"
    },
    {
      "glob": "META-INF/spring.factories"
    },
    {
      "glob": "META-INF/spring.integration.properties"
    },
    {
      "glob": "META-INF/spring/logback-pattern-rules"
    },
    {
      "glob": "META-INF/validation.xml"
    },
    {
      "glob": "application-local.properties"
    },
    {
      "glob": "application-local.xml"
    },
    {
      "glob": "application-local.yaml"
    },
    {
      "glob": "application-local.yml"
    },
    {
      "glob": "application.properties"
    },
    {
      "glob": "application.xml"
    },
    {
      "glob": "application.yaml"
    },
    {
      "glob": "application.yml"
    },
    {
      "glob": "banner.txt"
    },
    {
      "glob": "brave/CurrentSpanCustomizer.class"
    },
    {
      "glob": "brave/Tracer.class"
    },
    {
      "glob": "brave/Tracing$Default.class"
    },
    {
      "glob": "brave/Tracing.class"
    },
    {
      "glob": "brave/baggage/BaggagePropagation$FactoryBuilder.class"
    },
    {
      "glob": "brave/baggage/CorrelationScopeDecorator$Builder.class"
    },
    {
      "glob": "brave/baggage/CorrelationScopeDecorator$Multiple.class"
    },
    {
      "glob": "brave/baggage/CorrelationScopeDecorator.class"
    },
    {
      "glob": "brave/context/slf4j/MDCScopeDecorator$Builder.class"
    },
    {
      "glob": "brave/handler/SpanHandler.class"
    },
    {
      "glob": "brave/propagation/CurrentTraceContext.class"
    },
    {
      "glob": "brave/propagation/Propagation$Factory.class"
    },
    {
      "glob": "brave/propagation/ThreadLocalCurrentTraceContext.class"
    },
    {
      "glob": "brave/sampler/Sampler$1.class"
    },
    {
      "glob": "brave/sampler/Sampler.class"
    },
    {
      "glob": "co/elastic/clients/ApiClient.class"
    },
    {
      "glob": "co/elastic/clients/elasticsearch/ElasticsearchClient.class"
    },
    {
      "glob": "co/elastic/clients/json/JsonpMapper.class"
    },
    {
      "glob": "co/elastic/clients/json/JsonpMapperBase.class"
    },
    {
      "glob": "co/elastic/clients/json/jackson/JacksonJsonpMapper.class"
    },
    {
      "glob": "co/elastic/clients/transport/ElasticsearchTransportBase.class"
    },
    {
      "glob": "co/elastic/clients/transport/rest_client/RestClientTransport.class"
    },
    {
      "glob": "com/fasterxml/jackson/core/ObjectCodec.class"
    },
    {
      "glob": "com/fasterxml/jackson/core/TreeCodec.class"
    },
    {
      "glob": "com/fasterxml/jackson/core/type/TypeReference.class"
    },
    {
      "glob": "com/fasterxml/jackson/databind/Module.class"
    },
    {
      "glob": "com/fasterxml/jackson/databind/ObjectMapper.class"
    },
    {
      "glob": "com/fasterxml/jackson/databind/module/SimpleModule.class"
    },
    {
      "glob": "com/fasterxml/jackson/databind/util/StdConverter.class"
    },
    {
      "glob": "com/fasterxml/jackson/module/paramnames/ParameterNamesModule.class"
    },
    {
      "glob": "com/knuddels/jtokkit/cl100k_base.tiktoken"
    },
    {
      "glob": "com/leijendary/"
    },
    {
      "glob": "com/leijendary/Application.class"
    },
    {
      "glob": "com/leijendary/client/PetStoreClient.class"
    },
    {
      "glob": "com/leijendary/config/AiConfiguration.class"
    },
    {
      "glob": "com/leijendary/config/AwsConfiguration.class"
    },
    {
      "glob": "com/leijendary/config/CacheConfiguration$$Lambda/0x00000ffe01ea9ff8.class"
    },
    {
      "glob": "com/leijendary/config/CacheConfiguration.class"
    },
    {
      "glob": "com/leijendary/config/DatabaseConfiguration$$Lambda/0x00000ffe01b2ccd0.class"
    },
    {
      "glob": "com/leijendary/config/DatabaseConfiguration$$Lambda/0x00000ffe01eab5b0.class"
    },
    {
      "glob": "com/leijendary/config/DatabaseConfiguration.class"
    },
    {
      "glob": "com/leijendary/config/KafkaConfiguration$$Lambda/0x00000ffe016444d0.class"
    },
    {
      "glob": "com/leijendary/config/KafkaConfiguration.class"
    },
    {
      "glob": "com/leijendary/config/OpenApiConfiguration.class"
    },
    {
      "glob": "com/leijendary/config/SynchronizedTransactionManager.class"
    },
    {
      "glob": "com/leijendary/config/TransactionRoutingDataSource.class"
    },
    {
      "glob": "com/leijendary/config/properties/AwsCloudFrontProperties.class"
    },
    {
      "glob": "com/leijendary/config/properties/AwsS3Properties.class"
    },
    {
      "glob": "com/leijendary/config/properties/DataSourcePrimaryProperties.class"
    },
    {
      "glob": "com/leijendary/config/properties/DataSourceReadOnlyProperties.class"
    },
    {
      "glob": "com/leijendary/config/properties/KafkaTopicProperties.class"
    },
    {
      "glob": "com/leijendary/config/properties/OpenApiProperties.class"
    },
    {
      "glob": "com/leijendary/context/DatabaseContext.class"
    },
    {
      "glob": "com/leijendary/context/SpringContext.class"
    },
    {
      "glob": "com/leijendary/domain/ai/chat/AiChatController.class"
    },
    {
      "glob": "com/leijendary/domain/ai/chat/AiChatCursorRepository.class"
    },
    {
      "glob": "com/leijendary/domain/ai/chat/AiChatCursorRepositoryImpl.class"
    },
    {
      "glob": "com/leijendary/domain/ai/chat/AiChatFunction$$SpringCGLIB$$0.class"
    },
    {
      "glob": "com/leijendary/domain/ai/chat/AiChatFunction.class"
    },
    {
      "glob": "com/leijendary/domain/ai/chat/AiChatMemoryRepository.class"
    },
    {
      "glob": "com/leijendary/domain/ai/chat/AiChatRepository.class"
    },
    {
      "glob": "com/leijendary/domain/ai/chat/AiChatServiceImpl.class"
    },
    {
      "glob": "com/leijendary/domain/ai/chat/PersistentChatMemory.class"
    },
    {
      "glob": "com/leijendary/domain/image/ImageController.class"
    },
    {
      "glob": "com/leijendary/domain/image/ImageRepository.class"
    },
    {
      "glob": "com/leijendary/domain/image/ImageServiceImpl.class"
    },
    {
      "glob": "com/leijendary/domain/sample/SampleAdminController.class"
    },
    {
      "glob": "com/leijendary/domain/sample/SampleController.class"
    },
    {
      "glob": "com/leijendary/domain/sample/SampleCursorRepository.class"
    },
    {
      "glob": "com/leijendary/domain/sample/SampleCursorRepositoryImpl.class"
    },
    {
      "glob": "com/leijendary/domain/sample/SampleImageRepository.class"
    },
    {
      "glob": "com/leijendary/domain/sample/SampleMessageConsumer.class"
    },
    {
      "glob": "com/leijendary/domain/sample/SampleMessageProducer.class"
    },
    {
      "glob": "com/leijendary/domain/sample/SampleRepository.class"
    },
    {
      "glob": "com/leijendary/domain/sample/SampleSearchController.class"
    },
    {
      "glob": "com/leijendary/domain/sample/SampleSearchCustomRepository.class"
    },
    {
      "glob": "com/leijendary/domain/sample/SampleSearchCustomRepositoryImpl.class"
    },
    {
      "glob": "com/leijendary/domain/sample/SampleSearchRepository.class"
    },
    {
      "glob": "com/leijendary/domain/sample/SampleSearchServiceImpl.class"
    },
    {
      "glob": "com/leijendary/domain/sample/SampleServiceImpl.class"
    },
    {
      "glob": "com/leijendary/domain/sample/SampleTranslationRepository.class"
    },
    {
      "glob": "com/leijendary/error/AsyncRequestNotUsableExceptionHandler.class"
    },
    {
      "glob": "com/leijendary/error/ClientAbortExceptionHandler.class"
    },
    {
      "glob": "com/leijendary/error/ErrorModelExceptionHandler.class"
    },
    {
      "glob": "com/leijendary/error/GlobalExceptionHandler.class"
    },
    {
      "glob": "com/leijendary/error/HttpClientErrorExceptionHandler.class"
    },
    {
      "glob": "com/leijendary/error/HttpMessageNotReadableExceptionHandler.class"
    },
    {
      "glob": "com/leijendary/error/HttpRequestMethodNotSupportedExceptionHandler.class"
    },
    {
      "glob": "com/leijendary/error/MethodExceptionHandler.class"
    },
    {
      "glob": "com/leijendary/error/MissingServletRequestPartExceptionHandler.class"
    },
    {
      "glob": "com/leijendary/error/NoResourceFoundExceptionHandler.class"
    },
    {
      "glob": "com/leijendary/error/OptimisticLockingFailureExceptionHandler.class"
    },
    {
      "glob": "com/leijendary/error/PSQLExceptionHandler.class"
    },
    {
      "glob": "com/leijendary/error/ResourceNotFoundExceptionHandler.class"
    },
    {
      "glob": "com/leijendary/error/ResourceNotUniqueExceptionHandler.class"
    },
    {
      "glob": "com/leijendary/error/StatusExceptionHandler.class"
    },
    {
      "glob": "com/leijendary/filter/TraceFilter.class"
    },
    {
      "glob": "com/leijendary/interceptor/KafkaInterceptor.class"
    },
    {
      "glob": "com/leijendary/model/TranslationRequest.class"
    },
    {
      "glob": "com/leijendary/security/Encryption.class"
    },
    {
      "glob": "com/leijendary/storage/BlockStorage.class"
    },
    {
      "glob": "com/leijendary/validator/UniqueFieldsValidator.class"
    },
    {
      "glob": "com/zaxxer/hikari/HikariConfig.class"
    },
    {
      "glob": "com/zaxxer/hikari/HikariDataSource.class"
    },
    {
      "glob": "config/application-local.properties"
    },
    {
      "glob": "config/application-local.xml"
    },
    {
      "glob": "config/application-local.yaml"
    },
    {
      "glob": "config/application-local.yml"
    },
    {
      "glob": "config/application.properties"
    },
    {
      "glob": "config/application.xml"
    },
    {
      "glob": "config/application.yaml"
    },
    {
      "glob": "config/application.yml"
    },
    {
      "glob": "data-all.sql"
    },
    {
      "glob": "data.sql"
    },
    {
      "glob": "db/changelog/db.changelog-0.0.1.sql"
    },
    {
      "glob": "db/changelog/db.changelog-master.yaml"
    },
    {
      "glob": "embedding/embedding-model-dimensions.properties"
    },
    {
      "glob": "feign/Capability.class"
    },
    {
      "glob": "io/awspring/cloud/autoconfigure/AwsClientProperties.class"
    },
    {
      "glob": "io/awspring/cloud/autoconfigure/core/AwsAutoConfiguration.class"
    },
    {
      "glob": "io/awspring/cloud/autoconfigure/core/AwsClientBuilderConfigurer.class"
    },
    {
      "glob": "io/awspring/cloud/autoconfigure/core/AwsProperties.class"
    },
    {
      "glob": "io/awspring/cloud/autoconfigure/core/CredentialsProperties.class"
    },
    {
      "glob": "io/awspring/cloud/autoconfigure/core/CredentialsProviderAutoConfiguration.class"
    },
    {
      "glob": "io/awspring/cloud/autoconfigure/core/RegionProperties.class"
    },
    {
      "glob": "io/awspring/cloud/autoconfigure/core/RegionProviderAutoConfiguration.class"
    },
    {
      "glob": "io/awspring/cloud/autoconfigure/metrics/CloudWatchExportAutoConfiguration.class"
    },
    {
      "glob": "io/awspring/cloud/autoconfigure/metrics/CloudWatchProperties.class"
    },
    {
      "glob": "io/awspring/cloud/autoconfigure/metrics/CloudWatchPropertiesConfigAdapter.class"
    },
    {
      "glob": "io/awspring/cloud/autoconfigure/metrics/CloudWatchRegistryProperties.class"
    },
    {
      "glob": "io/awspring/cloud/autoconfigure/s3/S3AutoConfiguration$Jackson2JsonS3ObjectConverterConfiguration$$SpringCGLIB$$0.class"
    },
    {
      "glob": "io/awspring/cloud/autoconfigure/s3/S3AutoConfiguration$Jackson2JsonS3ObjectConverterConfiguration.class"
    },
    {
      "glob": "io/awspring/cloud/autoconfigure/s3/S3AutoConfiguration.class"
    },
    {
      "glob": "io/awspring/cloud/autoconfigure/s3/properties/S3Properties.class"
    },
    {
      "glob": "io/awspring/cloud/core/SpringCloudClientConfiguration.properties"
    },
    {
      "glob": "io/awspring/cloud/s3/InMemoryBufferingS3OutputStreamProvider.class"
    },
    {
      "glob": "io/awspring/cloud/s3/Jackson2JsonS3ObjectConverter.class"
    },
    {
      "glob": "io/awspring/cloud/s3/S3ObjectContentTypeResolver.properties"
    },
    {
      "glob": "io/awspring/cloud/s3/S3Operations.class"
    },
    {
      "glob": "io/awspring/cloud/s3/S3OutputStreamProvider.class"
    },
    {
      "glob": "io/awspring/cloud/s3/S3Template.class"
    },
    {
      "glob": "io/lettuce/core/metrics/MicrometerOptions.class"
    },
    {
      "glob": "io/lettuce/core/resource/ClientResources.class"
    },
    {
      "glob": "io/lettuce/core/resource/DefaultClientResources.class"
    },
    {
      "glob": "io/micrometer/cloudwatch2/CloudWatchConfig.class"
    },
    {
      "glob": "io/micrometer/cloudwatch2/CloudWatchMeterRegistry.class"
    },
    {
      "glob": "io/micrometer/core/instrument/Clock$1.class"
    },
    {
      "glob": "io/micrometer/core/instrument/MeterRegistry.class"
    },
    {
      "glob": "io/micrometer/core/instrument/binder/jvm/ClassLoaderMetrics.class"
    },
    {
      "glob": "io/micrometer/core/instrument/binder/jvm/JvmCompilationMetrics.class"
    },
    {
      "glob": "io/micrometer/core/instrument/binder/jvm/JvmGcMetrics.class"
    },
    {
      "glob": "io/micrometer/core/instrument/binder/jvm/JvmHeapPressureMetrics.class"
    },
    {
      "glob": "io/micrometer/core/instrument/binder/jvm/JvmInfoMetrics.class"
    },
    {
      "glob": "io/micrometer/core/instrument/binder/jvm/JvmMemoryMetrics.class"
    },
    {
      "glob": "io/micrometer/core/instrument/binder/jvm/JvmThreadMetrics.class"
    },
    {
      "glob": "io/micrometer/core/instrument/binder/logging/LogbackMetrics.class"
    },
    {
      "glob": "io/micrometer/core/instrument/binder/system/FileDescriptorMetrics.class"
    },
    {
      "glob": "io/micrometer/core/instrument/binder/system/ProcessorMetrics.class"
    },
    {
      "glob": "io/micrometer/core/instrument/binder/system/UptimeMetrics.class"
    },
    {
      "glob": "io/micrometer/core/instrument/config/MeterFilter$9.class"
    },
    {
      "glob": "io/micrometer/core/instrument/config/MeterFilter.class"
    },
    {
      "glob": "io/micrometer/core/instrument/config/MeterRegistryConfig.class"
    },
    {
      "glob": "io/micrometer/core/instrument/push/PushMeterRegistry.class"
    },
    {
      "glob": "io/micrometer/core/instrument/push/PushRegistryConfig.class"
    },
    {
      "glob": "io/micrometer/core/instrument/step/StepMeterRegistry.class"
    },
    {
      "glob": "io/micrometer/core/instrument/step/StepRegistryConfig.class"
    },
    {
      "glob": "io/micrometer/observation/ObservationHandler.class"
    },
    {
      "glob": "io/micrometer/observation/ObservationRegistry.class"
    },
    {
      "glob": "io/micrometer/observation/SimpleObservationRegistry.class"
    },
    {
      "glob": "io/micrometer/observation/annotation/Observed.class"
    },
    {
      "glob": "io/micrometer/tracing/SpanCustomizer.class"
    },
    {
      "glob": "io/micrometer/tracing/brave/bridge/BravePropagator.class"
    },
    {
      "glob": "io/micrometer/tracing/brave/bridge/BraveSpanCustomizer.class"
    },
    {
      "glob": "io/micrometer/tracing/brave/bridge/BraveTracer.class"
    },
    {
      "glob": "io/micrometer/tracing/brave/bridge/CompositeSpanHandler.class"
    },
    {
      "glob": "io/micrometer/tracing/handler/DefaultTracingObservationHandler.class"
    },
    {
      "glob": "io/micrometer/tracing/handler/PropagatingReceiverTracingObservationHandler.class"
    },
    {
      "glob": "io/micrometer/tracing/handler/PropagatingSenderTracingObservationHandler.class"
    },
    {
      "glob": "io/micrometer/tracing/handler/TracingAwareMeterObservationHandler.class"
    },
    {
      "glob": "io/micrometer/tracing/handler/TracingObservationHandler.class"
    },
    {
      "glob": "io/swagger/v3/core/converter/ModelConverter.class"
    },
    {
      "glob": "io/swagger/v3/core/filter/SpecFilter.class"
    },
    {
      "glob": "io/swagger/v3/core/util/ObjectMapperFactory.class"
    },
    {
      "glob": "io/swagger/v3/oas/models/OpenAPI.class"
    },
    {
      "glob": "jakarta/servlet/Filter.class"
    },
    {
      "glob": "jakarta/servlet/GenericServlet.class"
    },
    {
      "glob": "jakarta/servlet/LocalStrings.properties"
    },
    {
      "glob": "jakarta/servlet/LocalStrings_nl.properties"
    },
    {
      "glob": "jakarta/servlet/LocalStrings_nl_NL.properties"
    },
    {
      "glob": "jakarta/servlet/MultipartConfigElement.class"
    },
    {
      "glob": "jakarta/servlet/http/HttpServlet.class"
    },
    {
      "glob": "jakarta/servlet/http/LocalStrings.properties"
    },
    {
      "glob": "jakarta/servlet/http/LocalStrings_nl.properties"
    },
    {
      "glob": "jakarta/servlet/http/LocalStrings_nl_NL.properties"
    },
    {
      "glob": "jakarta/validation/ConstraintValidator.class"
    },
    {
      "glob": "java/lang/Enum.class"
    },
    {
      "glob": "java/lang/Iterable.class"
    },
    {
      "glob": "java/lang/Object.class"
    },
    {
      "glob": "java/lang/Record.class"
    },
    {
      "glob": "java/lang/reflect/Proxy.class"
    },
    {
      "glob": "java/util/AbstractMap.class"
    },
    {
      "glob": "java/util/HashMap.class"
    },
    {
      "glob": "java/util/Map.class"
    },
    {
      "glob": "java/util/function/BiFunction.class"
    },
    {
      "glob": "java/util/function/BiPredicate.class"
    },
    {
      "glob": "java/util/function/Consumer.class"
    },
    {
      "glob": "javax/sql/CommonDataSource.class"
    },
    {
      "glob": "javax/sql/DataSource.class"
    },
    {
      "glob": "jdk/proxy2/$Proxy140.class"
    },
    {
      "glob": "jdk/proxy2/$Proxy144.class"
    },
    {
      "glob": "jdk/proxy2/$Proxy158.class"
    },
    {
      "glob": "jdk/proxy2/$Proxy162.class"
    },
    {
      "glob": "jdk/proxy2/$Proxy163.class"
    },
    {
      "glob": "jdk/proxy2/$Proxy169.class"
    },
    {
      "glob": "jdk/proxy2/$Proxy178.class"
    },
    {
      "glob": "jdk/proxy2/$Proxy179.class"
    },
    {
      "glob": "jdk/proxy2/$Proxy182.class"
    },
    {
      "glob": "jdk/proxy2/$Proxy186.class"
    },
    {
      "glob": "jndi.properties"
    },
    {
      "glob": "kafka/kafka-version.properties"
    },
    {
      "glob": "kotlin/jvm/internal/CallableReference.class"
    },
    {
      "glob": "kotlin/jvm/internal/FunctionReference.class"
    },
    {
      "glob": "kotlin/jvm/internal/FunctionReferenceImpl.class"
    },
    {
      "glob": "liquibase.build.properties"
    },
    {
      "glob": "liquibase/i18n/liquibase-core.properties"
    },
    {
      "glob": "liquibase/i18n/liquibase-core_nl.properties"
    },
    {
      "glob": "liquibase/i18n/liquibase-core_nl_NL.properties"
    },
    {
      "glob": "liquibase/integration/spring/SpringLiquibase.class"
    },
    {
      "glob": "logback-spring.groovy"
    },
    {
      "glob": "logback-spring.xml"
    },
    {
      "glob": "logback-test-spring.groovy"
    },
    {
      "glob": "logback-test-spring.xml"
    },
    {
      "glob": "logback-test.groovy"
    },
    {
      "glob": "logback-test.scmo"
    },
    {
      "glob": "logback-test.xml"
    },
    {
      "glob": "logback.groovy"
    },
    {
      "glob": "logback.scmo"
    },
    {
      "glob": "logback.xml"
    },
    {
      "glob": "messages/access.properties"
    },
    {
      "glob": "messages/access_en.properties"
    },
    {
      "glob": "messages/access_nl.properties"
    },
    {
      "glob": "messages/access_nl_NL.properties"
    },
    {
      "glob": "messages/error.properties"
    },
    {
      "glob": "messages/error_en.properties"
    },
    {
      "glob": "messages/error_nl.properties"
    },
    {
      "glob": "messages/error_nl_NL.properties"
    },
    {
      "glob": "messages/validation.properties"
    },
    {
      "glob": "messages/validation_en.properties"
    },
    {
      "glob": "messages/validation_nl.properties"
    },
    {
      "glob": "messages/validation_nl_NL.properties"
    },
    {
      "glob": "mozilla/public-suffix-list.txt"
    },
    {
      "glob": "net/ttddyy/observation/boot/autoconfigure/DataSourceObservationAutoConfiguration$$Lambda/0x00000ffe01965d50.class"
    },
    {
      "glob": "net/ttddyy/observation/boot/autoconfigure/DataSourceObservationAutoConfiguration$DataSourceTracing.class"
    },
    {
      "glob": "net/ttddyy/observation/boot/autoconfigure/DataSourceObservationAutoConfiguration$Hikari$$Lambda/0x00000ffe01888700.class"
    },
    {
      "glob": "net/ttddyy/observation/boot/autoconfigure/DataSourceObservationAutoConfiguration$Hikari.class"
    },
    {
      "glob": "net/ttddyy/observation/boot/autoconfigure/DataSourceObservationAutoConfiguration.class"
    },
    {
      "glob": "net/ttddyy/observation/boot/autoconfigure/DataSourceObservationBeanPostProcessor.class"
    },
    {
      "glob": "net/ttddyy/observation/boot/autoconfigure/DefaultDataSourceNameResolver.class"
    },
    {
      "glob": "net/ttddyy/observation/boot/autoconfigure/JdbcProperties.class"
    },
    {
      "glob": "net/ttddyy/observation/tracing/ConnectionTracingObservationHandler.class"
    },
    {
      "glob": "net/ttddyy/observation/tracing/DataSourceBaseObservationHandler.class"
    },
    {
      "glob": "net/ttddyy/observation/tracing/DataSourceObservationListener.class"
    },
    {
      "glob": "net/ttddyy/observation/tracing/HikariJdbcObservationFilter.class"
    },
    {
      "glob": "net/ttddyy/observation/tracing/QueryTracingObservationHandler.class"
    },
    {
      "glob": "net/ttddyy/observation/tracing/ResultSetTracingObservationHandler.class"
    },
    {
      "glob": "org/apache/catalina/authenticator/LocalStrings.properties"
    },
    {
      "glob": "org/apache/catalina/authenticator/LocalStrings_nl.properties"
    },
    {
      "glob": "org/apache/catalina/authenticator/LocalStrings_nl_NL.properties"
    },
    {
      "glob": "org/apache/catalina/authenticator/jaspic/LocalStrings.properties"
    },
    {
      "glob": "org/apache/catalina/authenticator/jaspic/LocalStrings_nl.properties"
    },
    {
      "glob": "org/apache/catalina/authenticator/jaspic/LocalStrings_nl_NL.properties"
    },
    {
      "glob": "org/apache/catalina/connector/LocalStrings.properties"
    },
    {
      "glob": "org/apache/catalina/connector/LocalStrings_nl.properties"
    },
    {
      "glob": "org/apache/catalina/connector/LocalStrings_nl_NL.properties"
    },
    {
      "glob": "org/apache/catalina/core/LocalStrings.properties"
    },
    {
      "glob": "org/apache/catalina/core/LocalStrings_nl.properties"
    },
    {
      "glob": "org/apache/catalina/core/LocalStrings_nl_NL.properties"
    },
    {
      "glob": "org/apache/catalina/core/RestrictedFilters.properties"
    },
    {
      "glob": "org/apache/catalina/core/RestrictedListeners.properties"
    },
    {
      "glob": "org/apache/catalina/core/RestrictedServlets.properties"
    },
    {
      "glob": "org/apache/catalina/deploy/LocalStrings.properties"
    },
    {
      "glob": "org/apache/catalina/deploy/LocalStrings_nl.properties"
    },
    {
      "glob": "org/apache/catalina/deploy/LocalStrings_nl_NL.properties"
    },
    {
      "glob": "org/apache/catalina/loader/JdbcLeakPrevention.class"
    },
    {
      "glob": "org/apache/catalina/loader/LocalStrings.properties"
    },
    {
      "glob": "org/apache/catalina/loader/LocalStrings_nl.properties"
    },
    {
      "glob": "org/apache/catalina/loader/LocalStrings_nl_NL.properties"
    },
    {
      "glob": "org/apache/catalina/mapper/LocalStrings.properties"
    },
    {
      "glob": "org/apache/catalina/mapper/LocalStrings_nl.properties"
    },
    {
      "glob": "org/apache/catalina/mapper/LocalStrings_nl_NL.properties"
    },
    {
      "glob": "org/apache/catalina/mbeans/LocalStrings.properties"
    },
    {
      "glob": "org/apache/catalina/mbeans/LocalStrings_nl.properties"
    },
    {
      "glob": "org/apache/catalina/mbeans/LocalStrings_nl_NL.properties"
    },
    {
      "glob": "org/apache/catalina/realm/LocalStrings.properties"
    },
    {
      "glob": "org/apache/catalina/realm/LocalStrings_nl.properties"
    },
    {
      "glob": "org/apache/catalina/realm/LocalStrings_nl_NL.properties"
    },
    {
      "glob": "org/apache/catalina/security/LocalStrings.properties"
    },
    {
      "glob": "org/apache/catalina/security/LocalStrings_nl.properties"
    },
    {
      "glob": "org/apache/catalina/security/LocalStrings_nl_NL.properties"
    },
    {
      "glob": "org/apache/catalina/session/LocalStrings.properties"
    },
    {
      "glob": "org/apache/catalina/session/LocalStrings_nl.properties"
    },
    {
      "glob": "org/apache/catalina/session/LocalStrings_nl_NL.properties"
    },
    {
      "glob": "org/apache/catalina/startup/LocalStrings.properties"
    },
    {
      "glob": "org/apache/catalina/startup/LocalStrings_nl.properties"
    },
    {
      "glob": "org/apache/catalina/startup/LocalStrings_nl_NL.properties"
    },
    {
      "glob": "org/apache/catalina/util/CharsetMapperDefault.properties"
    },
    {
      "glob": "org/apache/catalina/util/LocalStrings.properties"
    },
    {
      "glob": "org/apache/catalina/util/LocalStrings_nl.properties"
    },
    {
      "glob": "org/apache/catalina/util/LocalStrings_nl_NL.properties"
    },
    {
      "glob": "org/apache/catalina/util/ServerInfo.properties"
    },
    {
      "glob": "org/apache/catalina/valves/LocalStrings.properties"
    },
    {
      "glob": "org/apache/catalina/valves/LocalStrings_nl.properties"
    },
    {
      "glob": "org/apache/catalina/valves/LocalStrings_nl_NL.properties"
    },
    {
      "glob": "org/apache/catalina/webresources/LocalStrings.properties"
    },
    {
      "glob": "org/apache/catalina/webresources/LocalStrings_nl.properties"
    },
    {
      "glob": "org/apache/catalina/webresources/LocalStrings_nl_NL.properties"
    },
    {
      "glob": "org/apache/coyote/LocalStrings.properties"
    },
    {
      "glob": "org/apache/coyote/LocalStrings_nl.properties"
    },
    {
      "glob": "org/apache/coyote/LocalStrings_nl_NL.properties"
    },
    {
      "glob": "org/apache/coyote/http11/LocalStrings.properties"
    },
    {
      "glob": "org/apache/coyote/http11/LocalStrings_nl.properties"
    },
    {
      "glob": "org/apache/coyote/http11/LocalStrings_nl_NL.properties"
    },
    {
      "glob": "org/apache/coyote/http11/filters/LocalStrings.properties"
    },
    {
      "glob": "org/apache/coyote/http11/filters/LocalStrings_nl.properties"
    },
    {
      "glob": "org/apache/coyote/http11/filters/LocalStrings_nl_NL.properties"
    },
    {
      "glob": "org/apache/coyote/http2/LocalStrings.properties"
    },
    {
      "glob": "org/apache/coyote/http2/LocalStrings_nl.properties"
    },
    {
      "glob": "org/apache/coyote/http2/LocalStrings_nl_NL.properties"
    },
    {
      "glob": "org/apache/http/nio/client/version.properties"
    },
    {
      "glob": "org/apache/naming/LocalStrings.properties"
    },
    {
      "glob": "org/apache/naming/LocalStrings_nl.properties"
    },
    {
      "glob": "org/apache/naming/LocalStrings_nl_NL.properties"
    },
    {
      "glob": "org/apache/tomcat/util/LocalStrings.properties"
    },
    {
      "glob": "org/apache/tomcat/util/LocalStrings_nl.properties"
    },
    {
      "glob": "org/apache/tomcat/util/LocalStrings_nl_NL.properties"
    },
    {
      "glob": "org/apache/tomcat/util/buf/LocalStrings.properties"
    },
    {
      "glob": "org/apache/tomcat/util/buf/LocalStrings_nl.properties"
    },
    {
      "glob": "org/apache/tomcat/util/buf/LocalStrings_nl_NL.properties"
    },
    {
      "glob": "org/apache/tomcat/util/compat/LocalStrings.properties"
    },
    {
      "glob": "org/apache/tomcat/util/compat/LocalStrings_nl.properties"
    },
    {
      "glob": "org/apache/tomcat/util/compat/LocalStrings_nl_NL.properties"
    },
    {
      "glob": "org/apache/tomcat/util/descriptor/web/LocalStrings.properties"
    },
    {
      "glob": "org/apache/tomcat/util/descriptor/web/LocalStrings_nl.properties"
    },
    {
      "glob": "org/apache/tomcat/util/descriptor/web/LocalStrings_nl_NL.properties"
    },
    {
      "glob": "org/apache/tomcat/util/http/LocalStrings.properties"
    },
    {
      "glob": "org/apache/tomcat/util/http/LocalStrings_nl.properties"
    },
    {
      "glob": "org/apache/tomcat/util/http/LocalStrings_nl_NL.properties"
    },
    {
      "glob": "org/apache/tomcat/util/http/parser/LocalStrings.properties"
    },
    {
      "glob": "org/apache/tomcat/util/http/parser/LocalStrings_nl.properties"
    },
    {
      "glob": "org/apache/tomcat/util/http/parser/LocalStrings_nl_NL.properties"
    },
    {
      "glob": "org/apache/tomcat/util/modeler/LocalStrings.properties"
    },
    {
      "glob": "org/apache/tomcat/util/modeler/LocalStrings_nl.properties"
    },
    {
      "glob": "org/apache/tomcat/util/modeler/LocalStrings_nl_NL.properties"
    },
    {
      "glob": "org/apache/tomcat/util/net/LocalStrings.properties"
    },
    {
      "glob": "org/apache/tomcat/util/net/LocalStrings_nl.properties"
    },
    {
      "glob": "org/apache/tomcat/util/net/LocalStrings_nl_NL.properties"
    },
    {
      "glob": "org/apache/tomcat/util/scan/LocalStrings.properties"
    },
    {
      "glob": "org/apache/tomcat/util/scan/LocalStrings_nl.properties"
    },
    {
      "glob": "org/apache/tomcat/util/scan/LocalStrings_nl_NL.properties"
    },
    {
      "glob": "org/apache/tomcat/util/threads/LocalStrings.properties"
    },
    {
      "glob": "org/apache/tomcat/util/threads/LocalStrings_nl.properties"
    },
    {
      "glob": "org/apache/tomcat/util/threads/LocalStrings_nl_NL.properties"
    },
    {
      "glob": "org/apache/tomcat/websocket/LocalStrings.properties"
    },
    {
      "glob": "org/apache/tomcat/websocket/LocalStrings_nl.properties"
    },
    {
      "glob": "org/apache/tomcat/websocket/LocalStrings_nl_NL.properties"
    },
    {
      "glob": "org/apache/tomcat/websocket/server/LocalStrings.properties"
    },
    {
      "glob": "org/apache/tomcat/websocket/server/LocalStrings_nl.properties"
    },
    {
      "glob": "org/apache/tomcat/websocket/server/LocalStrings_nl_NL.properties"
    },
    {
      "glob": "org/elasticsearch/client/RestClient.class"
    },
    {
      "glob": "org/elasticsearch/client/RestClientBuilder.class"
    },
    {
      "glob": "org/elasticsearch/client/version.properties"
    },
    {
      "glob": "org/hibernate/validator/internal/constraintvalidators/bv/NotBlankValidator.class"
    },
    {
      "glob": "org/hibernate/validator/internal/constraintvalidators/bv/NotNullValidator.class"
    },
    {
      "glob": "org/hibernate/validator/internal/constraintvalidators/bv/PatternValidator.class"
    },
    {
      "glob": "org/hibernate/validator/internal/constraintvalidators/bv/notempty/NotEmptyValidatorForCollection.class"
    },
    {
      "glob": "org/hibernate/validator/internal/constraintvalidators/bv/number/bound/AbstractMinValidator.class"
    },
    {
      "glob": "org/hibernate/validator/internal/constraintvalidators/bv/number/bound/MinValidatorForInteger.class"
    },
    {
      "glob": "org/hibernate/validator/internal/constraintvalidators/bv/number/bound/decimal/AbstractDecimalMaxValidator.class"
    },
    {
      "glob": "org/hibernate/validator/internal/constraintvalidators/bv/number/bound/decimal/AbstractDecimalMinValidator.class"
    },
    {
      "glob": "org/hibernate/validator/internal/constraintvalidators/bv/number/bound/decimal/DecimalMaxValidatorForBigDecimal.class"
    },
    {
      "glob": "org/hibernate/validator/internal/constraintvalidators/bv/number/bound/decimal/DecimalMinValidatorForBigDecimal.class"
    },
    {
      "glob": "org/hibernate/validator/internal/constraintvalidators/bv/size/SizeValidatorForCharSequence.class"
    },
    {
      "glob": "org/postgresql/driverconfig.properties"
    },
    {
      "glob": "org/postgresql/translation/messages.properties"
    },
    {
      "glob": "org/postgresql/translation/messages_nl_NL.properties"
    },
    {
      "glob": "org/springdoc/api/AbstractOpenApiResource.class"
    },
    {
      "glob": "org/springdoc/core/configuration/SpringDocConfiguration$OpenApiResourceAdvice.class"
    },
    {
      "glob": "org/springdoc/core/configuration/SpringDocConfiguration$QuerydslProvider.class"
    },
    {
      "glob": "org/springdoc/core/configuration/SpringDocConfiguration$SpringDocSpringDataWebPropertiesProvider.class"
    },
    {
      "glob": "org/springdoc/core/configuration/SpringDocConfiguration$SpringDocWebFluxSupportConfiguration.class"
    },
    {
      "glob": "org/springdoc/core/configuration/SpringDocConfiguration$WebConversionServiceConfiguration.class"
    },
    {
      "glob": "org/springdoc/core/configuration/SpringDocConfiguration.class"
    },
    {
      "glob": "org/springdoc/core/configuration/SpringDocJacksonKotlinModuleConfiguration.class"
    },
    {
      "glob": "org/springdoc/core/configuration/SpringDocKotlinConfiguration$$Lambda/0x00000ffe01efdd70.class"
    },
    {
      "glob": "org/springdoc/core/configuration/SpringDocKotlinConfiguration.class"
    },
    {
      "glob": "org/springdoc/core/configuration/SpringDocPageableConfiguration.class"
    },
    {
      "glob": "org/springdoc/core/configuration/SpringDocSortConfiguration.class"
    },
    {
      "glob": "org/springdoc/core/configuration/SpringDocUIConfiguration.class"
    },
    {
      "glob": "org/springdoc/core/converters/AdditionalModelsConverter.class"
    },
    {
      "glob": "org/springdoc/core/converters/FileSupportConverter.class"
    },
    {
      "glob": "org/springdoc/core/converters/ModelConverterRegistrar.class"
    },
    {
      "glob": "org/springdoc/core/converters/PageOpenAPIConverter.class"
    },
    {
      "glob": "org/springdoc/core/converters/PageableOpenAPIConverter.class"
    },
    {
      "glob": "org/springdoc/core/converters/PolymorphicModelConverter.class"
    },
    {
      "glob": "org/springdoc/core/converters/ResponseSupportConverter.class"
    },
    {
      "glob": "org/springdoc/core/converters/SchemaPropertyDeprecatingConverter.class"
    },
    {
      "glob": "org/springdoc/core/converters/SortOpenAPIConverter.class"
    },
    {
      "glob": "org/springdoc/core/converters/WebFluxSupportConverter.class"
    },
    {
      "glob": "org/springdoc/core/customizers/DataRestDelegatingMethodParameterCustomizer.class"
    },
    {
      "glob": "org/springdoc/core/customizers/OperationIdCustomizer.class"
    },
    {
      "glob": "org/springdoc/core/customizers/ParameterObjectNamingStrategyCustomizer.class"
    },
    {
      "glob": "org/springdoc/core/customizers/SpringDocCustomizers.class"
    },
    {
      "glob": "org/springdoc/core/discoverer/SpringDocParameterNameDiscoverer.class"
    },
    {
      "glob": "org/springdoc/core/properties/AbstractSwaggerUiConfigProperties.class"
    },
    {
      "glob": "org/springdoc/core/properties/SpringDocConfigProperties.class"
    },
    {
      "glob": "org/springdoc/core/properties/SwaggerUiConfigProperties.class"
    },
    {
      "glob": "org/springdoc/core/properties/SwaggerUiOAuthProperties.class"
    },
    {
      "glob": "org/springdoc/core/providers/ObjectMapperProvider.class"
    },
    {
      "glob": "org/springdoc/core/providers/SpringDataWebPropertiesProvider.class"
    },
    {
      "glob": "org/springdoc/core/providers/SpringDocProviders.class"
    },
    {
      "glob": "org/springdoc/core/providers/SpringWebProvider.class"
    },
    {
      "glob": "org/springdoc/core/providers/WebConversionServiceProvider.class"
    },
    {
      "glob": "org/springdoc/core/service/AbstractRequestService.class"
    },
    {
      "glob": "org/springdoc/core/service/GenericParameterService.class"
    },
    {
      "glob": "org/springdoc/core/service/GenericResponseService.class"
    },
    {
      "glob": "org/springdoc/core/service/OpenAPIService.class"
    },
    {
      "glob": "org/springdoc/core/service/OperationService.class"
    },
    {
      "glob": "org/springdoc/core/service/RequestBodyService.class"
    },
    {
      "glob": "org/springdoc/core/service/SecurityService.class"
    },
    {
      "glob": "org/springdoc/core/utils/PropertyResolverUtils.class"
    },
    {
      "glob": "org/springdoc/ui/AbstractSwaggerIndexTransformer.class"
    },
    {
      "glob": "org/springdoc/ui/AbstractSwaggerWelcome.class"
    },
    {
      "glob": "org/springdoc/webmvc/api/OpenApiResource.class"
    },
    {
      "glob": "org/springdoc/webmvc/api/OpenApiWebMvcResource.class"
    },
    {
      "glob": "org/springdoc/webmvc/core/configuration/SpringDocWebMvcConfiguration$SpringDocWebMvcActuatorConfiguration.class"
    },
    {
      "glob": "org/springdoc/webmvc/core/configuration/SpringDocWebMvcConfiguration$SpringDocWebMvcRouterConfiguration.class"
    },
    {
      "glob": "org/springdoc/webmvc/core/configuration/SpringDocWebMvcConfiguration.class"
    },
    {
      "glob": "org/springdoc/webmvc/core/providers/RouterFunctionWebMvcProvider.class"
    },
    {
      "glob": "org/springdoc/webmvc/core/providers/SpringWebMvcProvider.class"
    },
    {
      "glob": "org/springdoc/webmvc/core/service/RequestService.class"
    },
    {
      "glob": "org/springdoc/webmvc/ui/SwaggerConfig.class"
    },
    {
      "glob": "org/springdoc/webmvc/ui/SwaggerConfigResource.class"
    },
    {
      "glob": "org/springdoc/webmvc/ui/SwaggerIndexPageTransformer.class"
    },
    {
      "glob": "org/springdoc/webmvc/ui/SwaggerResourceResolver.class"
    },
    {
      "glob": "org/springdoc/webmvc/ui/SwaggerWebMvcConfigurer.class"
    },
    {
      "glob": "org/springdoc/webmvc/ui/SwaggerWelcomeCommon.class"
    },
    {
      "glob": "org/springdoc/webmvc/ui/SwaggerWelcomeWebMvc.class"
    },
    {
      "glob": "org/springframework/ai/autoconfigure/chat/client/ChatClientAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/ai/autoconfigure/chat/client/ChatClientBuilderConfigurer.class"
    },
    {
      "glob": "org/springframework/ai/autoconfigure/chat/client/ChatClientBuilderProperties.class"
    },
    {
      "glob": "org/springframework/ai/autoconfigure/chat/observation/ChatObservationAutoConfiguration$FallbackChatContentObservationConfiguration.class"
    },
    {
      "glob": "org/springframework/ai/autoconfigure/chat/observation/ChatObservationAutoConfiguration$TracingChatContentObservationConfiguration.class"
    },
    {
      "glob": "org/springframework/ai/autoconfigure/chat/observation/ChatObservationAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/ai/autoconfigure/chat/observation/ChatObservationProperties.class"
    },
    {
      "glob": "org/springframework/ai/autoconfigure/embedding/observation/EmbeddingObservationAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/ai/autoconfigure/image/observation/ImageObservationAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/ai/autoconfigure/image/observation/ImageObservationProperties.class"
    },
    {
      "glob": "org/springframework/ai/autoconfigure/ollama/OllamaAutoConfiguration$PropertiesOllamaConnectionDetails.class"
    },
    {
      "glob": "org/springframework/ai/autoconfigure/ollama/OllamaAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/ai/autoconfigure/ollama/OllamaChatProperties.class"
    },
    {
      "glob": "org/springframework/ai/autoconfigure/ollama/OllamaConnectionProperties.class"
    },
    {
      "glob": "org/springframework/ai/autoconfigure/ollama/OllamaEmbeddingProperties.class"
    },
    {
      "glob": "org/springframework/ai/autoconfigure/ollama/OllamaInitializationProperties.class"
    },
    {
      "glob": "org/springframework/ai/autoconfigure/retry/SpringAiRetryAutoConfiguration$2.class"
    },
    {
      "glob": "org/springframework/ai/autoconfigure/retry/SpringAiRetryAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/ai/autoconfigure/retry/SpringAiRetryProperties.class"
    },
    {
      "glob": "org/springframework/ai/autoconfigure/vectorstore/CommonVectorStoreProperties.class"
    },
    {
      "glob": "org/springframework/ai/autoconfigure/vectorstore/observation/VectorStoreObservationAutoConfiguration$FallbackVectorStoreQueryResponseContentObservationConfiguration.class"
    },
    {
      "glob": "org/springframework/ai/autoconfigure/vectorstore/observation/VectorStoreObservationAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/ai/autoconfigure/vectorstore/observation/VectorStoreObservationProperties.class"
    },
    {
      "glob": "org/springframework/ai/autoconfigure/vectorstore/pgvector/PgVectorStoreAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/ai/autoconfigure/vectorstore/pgvector/PgVectorStoreProperties.class"
    },
    {
      "glob": "org/springframework/ai/chat/client/ChatClient.class"
    },
    {
      "glob": "org/springframework/ai/chat/client/DefaultChatClient.class"
    },
    {
      "glob": "org/springframework/ai/chat/client/DefaultChatClientBuilder.class"
    },
    {
      "glob": "org/springframework/ai/chat/memory/ChatMemory.class"
    },
    {
      "glob": "org/springframework/ai/chat/model/AbstractToolCallSupport.class"
    },
    {
      "glob": "org/springframework/ai/chat/model/ChatModel.class"
    },
    {
      "glob": "org/springframework/ai/chat/model/StreamingChatModel.class"
    },
    {
      "glob": "org/springframework/ai/chat/observation/ChatModelMeterObservationHandler.class"
    },
    {
      "glob": "org/springframework/ai/document/DocumentWriter.class"
    },
    {
      "glob": "org/springframework/ai/embedding/AbstractEmbeddingModel.class"
    },
    {
      "glob": "org/springframework/ai/embedding/EmbeddingModel.class"
    },
    {
      "glob": "org/springframework/ai/embedding/TokenCountBatchingStrategy.class"
    },
    {
      "glob": "org/springframework/ai/embedding/observation/EmbeddingModelMeterObservationHandler.class"
    },
    {
      "glob": "org/springframework/ai/model/function/AbstractFunctionCallback.class"
    },
    {
      "glob": "org/springframework/ai/model/function/DefaultFunctionCallbackResolver.class"
    },
    {
      "glob": "org/springframework/ai/model/function/FunctionCallback.class"
    },
    {
      "glob": "org/springframework/ai/model/function/FunctionInvokingFunctionCallback.class"
    },
    {
      "glob": "org/springframework/ai/ollama/OllamaChatModel.class"
    },
    {
      "glob": "org/springframework/ai/ollama/OllamaEmbeddingModel.class"
    },
    {
      "glob": "org/springframework/ai/ollama/api/OllamaApi.class"
    },
    {
      "glob": "org/springframework/ai/vectorstore/VectorStore.class"
    },
    {
      "glob": "org/springframework/ai/vectorstore/observation/AbstractObservationVectorStore.class"
    },
    {
      "glob": "org/springframework/ai/vectorstore/pgvector/PgVectorStore.class"
    },
    {
      "glob": "org/springframework/aop/TargetClassAware.class"
    },
    {
      "glob": "org/springframework/aop/TargetSource.class"
    },
    {
      "glob": "org/springframework/aop/framework/Advised.class"
    },
    {
      "glob": "org/springframework/aop/framework/AdvisedSupport.class"
    },
    {
      "glob": "org/springframework/aop/framework/ProxyConfig.class"
    },
    {
      "glob": "org/springframework/aop/framework/ProxyCreatorSupport.class"
    },
    {
      "glob": "org/springframework/aop/framework/ProxyFactoryBean.class"
    },
    {
      "glob": "org/springframework/aop/target/AbstractBeanFactoryBasedTargetSource.class"
    },
    {
      "glob": "org/springframework/aop/target/LazyInitTargetSource.class"
    },
    {
      "glob": "org/springframework/beans/factory/BeanFactoryAware.class"
    },
    {
      "glob": "org/springframework/beans/factory/FactoryBean.class"
    },
    {
      "glob": "org/springframework/beans/factory/config/AbstractFactoryBean.class"
    },
    {
      "glob": "org/springframework/beans/factory/config/BeanPostProcessor.class"
    },
    {
      "glob": "org/springframework/beans/factory/config/ObjectFactoryCreatingFactoryBean$TargetBeanObjectFactory.class"
    },
    {
      "glob": "org/springframework/beans/factory/config/ObjectFactoryCreatingFactoryBean.class"
    },
    {
      "glob": "org/springframework/beans/factory/support/NullBean.class"
    },
    {
      "glob": "org/springframework/boot/LazyInitializationExcludeFilter$$Lambda/0x00000ffe01f2cc20.class"
    },
    {
      "glob": "org/springframework/boot/LazyInitializationExcludeFilter.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/availability/AvailabilityHealthContributorAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/data/elasticsearch/ElasticsearchReactiveHealthContributorAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/data/redis/RedisHealthContributorAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/data/redis/RedisReactiveHealthContributorAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/elasticsearch/ElasticsearchRestHealthContributorAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/endpoint/EndpointAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/endpoint/PropertiesEndpointAccessResolver.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/endpoint/expose/IncludeExcludeEndpointFilter.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/endpoint/jackson/JacksonEndpointAutoConfiguration$$Lambda/0x00000ffe01e199f0.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/endpoint/jackson/JacksonEndpointAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/endpoint/web/CorsEndpointProperties.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/endpoint/web/MappingWebEndpointPathMapper.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/endpoint/web/ServletEndpointManagementContextConfiguration$WebMvcServletEndpointManagementContextConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/endpoint/web/ServletEndpointManagementContextConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/endpoint/web/WebEndpointAutoConfiguration$WebEndpointServletConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/endpoint/web/WebEndpointAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/endpoint/web/WebEndpointProperties.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/endpoint/web/servlet/WebMvcEndpointManagementContextConfiguration$EndpointObjectMapperWebMvcConfigurer.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/endpoint/web/servlet/WebMvcEndpointManagementContextConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/health/AbstractCompositeHealthContributorConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/health/AutoConfiguredHealthContributorRegistry.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/health/AutoConfiguredHealthEndpointGroups.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/health/AutoConfiguredReactiveHealthContributorRegistry.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/health/CompositeHealthContributorConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/health/CompositeReactiveHealthContributorConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/health/HealthContributorAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/health/HealthEndpointAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/health/HealthEndpointConfiguration$HealthEndpointGroupMembershipValidator.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/health/HealthEndpointConfiguration$HealthEndpointGroupsBeanPostProcessor.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/health/HealthEndpointConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/health/HealthEndpointProperties.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/health/HealthEndpointWebExtensionConfiguration$MvcAdditionalHealthEndpointPathsConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/health/HealthEndpointWebExtensionConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/health/HealthProperties.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/health/ReactiveHealthEndpointConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/info/InfoContributorAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/info/InfoContributorProperties.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/jdbc/DataSourceHealthContributorAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/jdbc/DataSourceHealthIndicatorProperties.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/metrics/CompositeMeterRegistryAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/metrics/JvmMetricsAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/metrics/KafkaMetricsAutoConfiguration$$Lambda/0x00000ffe01d593d8.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/metrics/KafkaMetricsAutoConfiguration$$Lambda/0x00000ffe01e9edb0.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/metrics/KafkaMetricsAutoConfiguration$KafkaStreamsMetricsConfiguration$$Lambda/0x00000ffe01f29e78.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/metrics/KafkaMetricsAutoConfiguration$KafkaStreamsMetricsConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/metrics/KafkaMetricsAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/metrics/LogbackMetricsAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/metrics/MeterRegistryPostProcessor.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/metrics/MetricsAutoConfiguration$MeterRegistryCloser.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/metrics/MetricsAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/metrics/MetricsProperties.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/metrics/PropertiesMeterFilter.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/metrics/SystemMetricsAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/metrics/cache/CacheMeterBinderProvidersConfiguration$RedisCacheMeterBinderProviderConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/metrics/cache/CacheMeterBinderProvidersConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/metrics/cache/CacheMetricsAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/metrics/cache/CacheMetricsRegistrarConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/metrics/data/MetricsRepositoryMethodInvocationListenerBeanPostProcessor.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/metrics/data/RepositoryMetricsAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/metrics/export/properties/PropertiesConfigAdapter.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/metrics/export/properties/PushRegistryProperties.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/metrics/export/properties/PushRegistryPropertiesConfigAdapter.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/metrics/export/properties/StepRegistryProperties.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/metrics/export/properties/StepRegistryPropertiesConfigAdapter.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/metrics/integration/IntegrationMetricsAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/metrics/jdbc/DataSourcePoolMetricsAutoConfiguration$DataSourcePoolMetadataMetricsConfiguration$DataSourcePoolMetadataMeterBinder.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/metrics/jdbc/DataSourcePoolMetricsAutoConfiguration$DataSourcePoolMetadataMetricsConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/metrics/jdbc/DataSourcePoolMetricsAutoConfiguration$HikariDataSourceMetricsConfiguration$HikariDataSourceMeterBinder.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/metrics/jdbc/DataSourcePoolMetricsAutoConfiguration$HikariDataSourceMetricsConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/metrics/jdbc/DataSourcePoolMetricsAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/metrics/redis/LettuceMetricsAutoConfiguration$$Lambda/0x00000ffe01e34530.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/metrics/redis/LettuceMetricsAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/metrics/startup/StartupTimeMetricsListenerAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/metrics/task/TaskExecutorMetricsAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/metrics/web/tomcat/TomcatMetricsAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/observation/ObservationAutoConfiguration$MeterObservationHandlerConfiguration$TracingAndMetricsObservationHandlerConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/observation/ObservationAutoConfiguration$MeterObservationHandlerConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/observation/ObservationAutoConfiguration$MetricsWithTracingConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/observation/ObservationAutoConfiguration$ObservedAspectConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/observation/ObservationAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/observation/ObservationHandlerGrouping.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/observation/ObservationProperties.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/observation/ObservationRegistryPostProcessor.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/observation/PropertiesObservationFilterPredicate.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/observation/web/client/HttpClientObservationsAutoConfiguration$MeterFilterConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/observation/web/client/HttpClientObservationsAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/observation/web/client/RestClientObservationConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/observation/web/client/RestTemplateObservationConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/observation/web/client/WebClientObservationConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/observation/web/servlet/WebMvcObservationAutoConfiguration$MeterFilterConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/observation/web/servlet/WebMvcObservationAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/scheduling/ScheduledTasksObservabilityAutoConfiguration$ObservabilitySchedulingConfigurer.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/scheduling/ScheduledTasksObservabilityAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/ssl/SslHealthContributorAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/ssl/SslHealthIndicatorProperties.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/system/DiskSpaceHealthContributorAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/system/DiskSpaceHealthIndicatorProperties.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/tracing/BraveAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/tracing/BravePropagationConfigurations$NoPropagation.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/tracing/BravePropagationConfigurations$PropagationWithBaggage$$Lambda/0x00000ffe0176c000.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/tracing/BravePropagationConfigurations$PropagationWithBaggage$$Lambda/0x00000ffe0176de58.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/tracing/BravePropagationConfigurations$PropagationWithBaggage.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/tracing/CompositePropagationFactory.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/tracing/MicrometerTracingAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/tracing/TracingProperties.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/tracing/zipkin/HttpSender.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/tracing/zipkin/PropertiesZipkinConnectionDetails.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/tracing/zipkin/ZipkinAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/tracing/zipkin/ZipkinConfigurations$BraveConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/tracing/zipkin/ZipkinConfigurations$HttpClientSenderConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/tracing/zipkin/ZipkinConfigurations$RestTemplateSenderConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/tracing/zipkin/ZipkinConfigurations$SenderConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/tracing/zipkin/ZipkinConfigurations$WebClientSenderConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/tracing/zipkin/ZipkinProperties.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/tracing/zipkin/ZipkinWebClientSender.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/web/ManagementContextFactory.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/web/server/ManagementContextAutoConfiguration$SameManagementContextConfiguration$EnableSameManagementContextConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/web/server/ManagementContextAutoConfiguration$SameManagementContextConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/web/server/ManagementContextAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/web/server/ManagementServerProperties.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/web/servlet/ServletManagementContextAutoConfiguration$$Lambda/0x00000ffe01f21640.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/web/servlet/ServletManagementContextAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/data/elasticsearch/ElasticsearchReactiveHealthIndicator.class"
    },
    {
      "glob": "org/springframework/boot/actuate/data/redis/RedisReactiveHealthIndicator.class"
    },
    {
      "glob": "org/springframework/boot/actuate/endpoint/OperationFilter$$Lambda/0x00000ffe01f18458.class"
    },
    {
      "glob": "org/springframework/boot/actuate/endpoint/OperationFilter.class"
    },
    {
      "glob": "org/springframework/boot/actuate/endpoint/annotation/EndpointDiscoverer.class"
    },
    {
      "glob": "org/springframework/boot/actuate/endpoint/invoke/ParameterValueMapper.class"
    },
    {
      "glob": "org/springframework/boot/actuate/endpoint/invoke/convert/ConversionServiceParameterValueMapper.class"
    },
    {
      "glob": "org/springframework/boot/actuate/endpoint/invoker/cache/CachingOperationInvokerAdvisor.class"
    },
    {
      "glob": "org/springframework/boot/actuate/endpoint/web/EndpointMediaTypes.class"
    },
    {
      "glob": "org/springframework/boot/actuate/endpoint/web/PathMappedEndpoints.class"
    },
    {
      "glob": "org/springframework/boot/actuate/endpoint/web/PathMapper.class"
    },
    {
      "glob": "org/springframework/boot/actuate/endpoint/web/ServletEndpointRegistrar.class"
    },
    {
      "glob": "org/springframework/boot/actuate/endpoint/web/annotation/ControllerEndpointDiscoverer.class"
    },
    {
      "glob": "org/springframework/boot/actuate/endpoint/web/annotation/ServletEndpointDiscoverer.class"
    },
    {
      "glob": "org/springframework/boot/actuate/endpoint/web/annotation/WebEndpointDiscoverer.class"
    },
    {
      "glob": "org/springframework/boot/actuate/endpoint/web/servlet/AbstractWebMvcEndpointHandlerMapping.class"
    },
    {
      "glob": "org/springframework/boot/actuate/endpoint/web/servlet/AdditionalHealthEndpointPathsWebMvcHandlerMapping.class"
    },
    {
      "glob": "org/springframework/boot/actuate/endpoint/web/servlet/ControllerEndpointHandlerMapping.class"
    },
    {
      "glob": "org/springframework/boot/actuate/endpoint/web/servlet/WebMvcEndpointHandlerMapping.class"
    },
    {
      "glob": "org/springframework/boot/actuate/health/AbstractHealthIndicator.class"
    },
    {
      "glob": "org/springframework/boot/actuate/health/AbstractReactiveHealthIndicator.class"
    },
    {
      "glob": "org/springframework/boot/actuate/health/CompositeHealthContributor.class"
    },
    {
      "glob": "org/springframework/boot/actuate/health/CompositeHealthContributorMapAdapter.class"
    },
    {
      "glob": "org/springframework/boot/actuate/health/CompositeReactiveHealthContributor.class"
    },
    {
      "glob": "org/springframework/boot/actuate/health/DefaultContributorRegistry.class"
    },
    {
      "glob": "org/springframework/boot/actuate/health/DefaultHealthContributorRegistry.class"
    },
    {
      "glob": "org/springframework/boot/actuate/health/DefaultReactiveHealthContributorRegistry.class"
    },
    {
      "glob": "org/springframework/boot/actuate/health/HealthEndpoint.class"
    },
    {
      "glob": "org/springframework/boot/actuate/health/HealthEndpointGroups.class"
    },
    {
      "glob": "org/springframework/boot/actuate/health/HealthEndpointSupport.class"
    },
    {
      "glob": "org/springframework/boot/actuate/health/HealthEndpointWebExtension.class"
    },
    {
      "glob": "org/springframework/boot/actuate/health/HealthIndicator.class"
    },
    {
      "glob": "org/springframework/boot/actuate/health/NamedContributors.class"
    },
    {
      "glob": "org/springframework/boot/actuate/health/NamedContributorsMapAdapter.class"
    },
    {
      "glob": "org/springframework/boot/actuate/health/PingHealthIndicator.class"
    },
    {
      "glob": "org/springframework/boot/actuate/health/ReactiveHealthContributor.class"
    },
    {
      "glob": "org/springframework/boot/actuate/health/ReactiveHealthIndicator.class"
    },
    {
      "glob": "org/springframework/boot/actuate/health/SimpleHttpCodeStatusMapper.class"
    },
    {
      "glob": "org/springframework/boot/actuate/health/SimpleStatusAggregator.class"
    },
    {
      "glob": "org/springframework/boot/actuate/health/StatusAggregator.class"
    },
    {
      "glob": "org/springframework/boot/actuate/metrics/cache/CacheMetricsRegistrar.class"
    },
    {
      "glob": "org/springframework/boot/actuate/metrics/cache/RedisCacheMeterBinderProvider.class"
    },
    {
      "glob": "org/springframework/boot/actuate/metrics/data/DefaultRepositoryTagsProvider.class"
    },
    {
      "glob": "org/springframework/boot/actuate/metrics/data/MetricsRepositoryMethodInvocationListener.class"
    },
    {
      "glob": "org/springframework/boot/actuate/metrics/startup/StartupTimeMetricsListener.class"
    },
    {
      "glob": "org/springframework/boot/actuate/metrics/system/DiskSpaceMetricsBinder.class"
    },
    {
      "glob": "org/springframework/boot/actuate/metrics/web/client/ObservationRestClientCustomizer.class"
    },
    {
      "glob": "org/springframework/boot/actuate/metrics/web/client/ObservationRestTemplateCustomizer.class"
    },
    {
      "glob": "org/springframework/boot/actuate/metrics/web/reactive/client/ObservationWebClientCustomizer.class"
    },
    {
      "glob": "org/springframework/boot/actuate/metrics/web/tomcat/TomcatMetricsBinder.class"
    },
    {
      "glob": "org/springframework/boot/actuate/ssl/SslHealthIndicator.class"
    },
    {
      "glob": "org/springframework/boot/actuate/system/DiskSpaceHealthIndicator.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/AutoConfigurationPackages$BasePackages.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/aop/AopAutoConfiguration$AspectJAutoProxyingConfiguration$CglibAutoProxyConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/aop/AopAutoConfiguration$AspectJAutoProxyingConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/aop/AopAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/availability/ApplicationAvailabilityAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/cache/CacheAutoConfiguration$CacheManagerValidator.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/cache/CacheAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/cache/CacheManagerCustomizers.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/cache/CacheProperties.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/cache/RedisCacheConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/codec/CodecProperties.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/context/ConfigurationPropertiesAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/context/LifecycleAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/context/LifecycleProperties.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/context/MessageSourceAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/context/MessageSourceProperties.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/context/PropertyPlaceholderAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/dao/PersistenceExceptionTranslationAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/data/elasticsearch/ElasticsearchDataAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/data/elasticsearch/ElasticsearchDataConfiguration$BaseConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/data/elasticsearch/ElasticsearchDataConfiguration$JavaClientConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/data/elasticsearch/ElasticsearchDataConfiguration$ReactiveRestClientConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/data/elasticsearch/ElasticsearchRepositoriesAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/data/jdbc/JdbcDataProperties.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/data/jdbc/JdbcRepositoriesAutoConfiguration$JdbcRepositoriesConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/data/jdbc/JdbcRepositoriesAutoConfiguration$SpringBootJdbcConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/data/jdbc/JdbcRepositoriesAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/data/redis/LettuceConnectionConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/data/redis/PropertiesRedisConnectionDetails.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/data/redis/RedisAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/data/redis/RedisConnectionConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/data/redis/RedisProperties.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/data/redis/RedisReactiveAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/elasticsearch/ElasticsearchClientAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/elasticsearch/ElasticsearchClientConfigurations$ElasticsearchClientConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/elasticsearch/ElasticsearchClientConfigurations$ElasticsearchTransportConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/elasticsearch/ElasticsearchClientConfigurations$JacksonJsonpMapperConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/elasticsearch/ElasticsearchClientConfigurations$JsonpMapperConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/elasticsearch/ElasticsearchProperties.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/elasticsearch/ElasticsearchRestClientAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/elasticsearch/ElasticsearchRestClientConfigurations$DefaultRestClientBuilderCustomizer.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/elasticsearch/ElasticsearchRestClientConfigurations$PropertiesElasticsearchConnectionDetails.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/elasticsearch/ElasticsearchRestClientConfigurations$RestClientBuilderConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/elasticsearch/ElasticsearchRestClientConfigurations$RestClientConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/elasticsearch/ReactiveElasticsearchClientAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/http/HttpMessageConverters.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/http/HttpMessageConvertersAutoConfiguration$StringHttpMessageConverterConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/http/HttpMessageConvertersAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/http/JacksonHttpMessageConvertersConfiguration$MappingJackson2HttpMessageConverterConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/http/JacksonHttpMessageConvertersConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/http/client/HttpClientAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/http/client/HttpClientProperties.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/http/codec/CodecsAutoConfiguration$DefaultCodecsConfiguration$$Lambda/0x00000ffe01bae7e0.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/http/codec/CodecsAutoConfiguration$DefaultCodecsConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/http/codec/CodecsAutoConfiguration$JacksonCodecConfiguration$$Lambda/0x00000ffe01baea08.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/http/codec/CodecsAutoConfiguration$JacksonCodecConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/http/codec/CodecsAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/info/ProjectInfoAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/info/ProjectInfoProperties.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/jackson/JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$StandardJackson2ObjectMapperBuilderCustomizer.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/jackson/JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/jackson/JacksonAutoConfiguration$JacksonMixinConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/jackson/JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/jackson/JacksonAutoConfiguration$JacksonObjectMapperConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/jackson/JacksonAutoConfiguration$ParameterNamesModuleConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/jackson/JacksonAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/jackson/JacksonProperties.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/jdbc/DataSourceAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/jdbc/DataSourceProperties.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/jdbc/DataSourceTransactionManagerAutoConfiguration$JdbcTransactionManagerConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/jdbc/DataSourceTransactionManagerAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/jdbc/JdbcClientAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/jdbc/JdbcProperties.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/jdbc/JdbcTemplateAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/jdbc/JdbcTemplateConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/jdbc/NamedParameterJdbcTemplateConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/jdbc/metadata/DataSourcePoolMetadataProvidersConfiguration$HikariPoolDataSourceMetadataProviderConfiguration$$Lambda/0x00000ffe01ef3128.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/jdbc/metadata/DataSourcePoolMetadataProvidersConfiguration$HikariPoolDataSourceMetadataProviderConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/jdbc/metadata/DataSourcePoolMetadataProvidersConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/kafka/ConcurrentKafkaListenerContainerFactoryConfigurer.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/kafka/KafkaAnnotationDrivenConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/kafka/KafkaAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/kafka/KafkaConnectionDetails.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/kafka/KafkaProperties.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/kafka/PropertiesKafkaConnectionDetails.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/liquibase/LiquibaseAutoConfiguration$CustomizerConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/liquibase/LiquibaseAutoConfiguration$LiquibaseConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/liquibase/LiquibaseAutoConfiguration$PropertiesLiquibaseConnectionDetails.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/liquibase/LiquibaseAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/liquibase/LiquibaseProperties.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/liquibase/LiquibaseSchemaManagementProvider.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/netty/NettyAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/netty/NettyProperties.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/reactor/ReactorAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/reactor/ReactorProperties.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/sql/init/DataSourceInitializationConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/sql/init/SqlDataSourceScriptDatabaseInitializer.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/sql/init/SqlInitializationAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/sql/init/SqlInitializationProperties.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/ssl/FileWatcher.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/ssl/SslAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/ssl/SslProperties.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/ssl/SslPropertiesBundleRegistrar.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/task/TaskExecutionAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/task/TaskExecutionProperties.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/task/TaskExecutorConfigurations$SimpleAsyncTaskExecutorBuilderConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/task/TaskExecutorConfigurations$TaskExecutorConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/task/TaskExecutorConfigurations$ThreadPoolTaskExecutorBuilderConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/task/TaskSchedulingAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/task/TaskSchedulingConfigurations$SimpleAsyncTaskSchedulerBuilderConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/task/TaskSchedulingConfigurations$ThreadPoolTaskSchedulerBuilderConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/task/TaskSchedulingProperties.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/transaction/ExecutionListenersTransactionManagerCustomizer.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/transaction/TransactionAutoConfiguration$EnableTransactionManagementConfiguration$CglibAutoProxyConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/transaction/TransactionAutoConfiguration$EnableTransactionManagementConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/transaction/TransactionAutoConfiguration$TransactionTemplateConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/transaction/TransactionAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/transaction/TransactionManagerCustomizationAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/transaction/TransactionManagerCustomizers.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/transaction/TransactionProperties.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/validation/ValidationAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/validation/ValidatorAdapter.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/web/ServerProperties.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/web/WebProperties.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/web/client/AutoConfiguredRestClientSsl.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/web/client/HttpMessageConvertersRestClientCustomizer.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/web/client/RestClientAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/web/client/RestClientBuilderConfigurer.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/web/client/RestTemplateAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/web/embedded/EmbeddedWebServerFactoryCustomizerAutoConfiguration$TomcatWebServerFactoryCustomizerConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/web/embedded/EmbeddedWebServerFactoryCustomizerAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/web/embedded/TomcatVirtualThreadsWebServerFactoryCustomizer.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/web/embedded/TomcatWebServerFactoryCustomizer.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/web/format/WebConversionService.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/web/reactive/function/client/AutoConfiguredWebClientSsl.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/web/reactive/function/client/ClientHttpConnectorAutoConfiguration$$Lambda/0x00000ffe01baec30.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/web/reactive/function/client/ClientHttpConnectorAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/web/reactive/function/client/ClientHttpConnectorFactory.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/web/reactive/function/client/ClientHttpConnectorFactoryConfiguration$JdkClient.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/web/reactive/function/client/JdkClientHttpConnectorFactory.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/web/reactive/function/client/WebClientAutoConfiguration$WebClientCodecsConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/web/reactive/function/client/WebClientAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/web/reactive/function/client/WebClientCodecCustomizer.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/web/servlet/DispatcherServletAutoConfiguration$DispatcherServletConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/web/servlet/DispatcherServletAutoConfiguration$DispatcherServletRegistrationConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/web/servlet/DispatcherServletAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/web/servlet/DispatcherServletPath.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/web/servlet/DispatcherServletRegistrationBean.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/web/servlet/HttpEncodingAutoConfiguration$LocaleCharsetMappingsCustomizer.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/web/servlet/HttpEncodingAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/web/servlet/MultipartAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/web/servlet/MultipartProperties.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/web/servlet/ServletWebServerFactoryAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/web/servlet/ServletWebServerFactoryConfiguration$EmbeddedTomcat.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/web/servlet/ServletWebServerFactoryCustomizer.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/web/servlet/TomcatServletWebServerFactoryCustomizer.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/web/servlet/WebMvcAutoConfiguration$EnableWebMvcConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/web/servlet/WebMvcAutoConfiguration$ResourceChainCustomizerConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/web/servlet/WebMvcAutoConfiguration$ResourceChainResourceHandlerRegistrationCustomizer.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/web/servlet/WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/web/servlet/WebMvcAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/web/servlet/WebMvcProperties.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/web/servlet/WelcomePageHandlerMapping.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/web/servlet/WelcomePageNotAcceptableHandlerMapping.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/web/servlet/error/AbstractErrorController.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/web/servlet/error/BasicErrorController.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/web/servlet/error/DefaultErrorViewResolver.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/web/servlet/error/ErrorMvcAutoConfiguration$DefaultErrorViewResolverConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/web/servlet/error/ErrorMvcAutoConfiguration$ErrorPageCustomizer.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/web/servlet/error/ErrorMvcAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/websocket/servlet/TomcatWebSocketServletWebServerCustomizer.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/websocket/servlet/WebSocketServletAutoConfiguration$TomcatWebSocketConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/websocket/servlet/WebSocketServletAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/availability/ApplicationAvailability.class"
    },
    {
      "glob": "org/springframework/boot/availability/ApplicationAvailabilityBean.class"
    },
    {
      "glob": "org/springframework/boot/context/properties/BoundConfigurationProperties.class"
    },
    {
      "glob": "org/springframework/boot/http/client/AbstractClientHttpRequestFactoryBuilder.class"
    },
    {
      "glob": "org/springframework/boot/http/client/ClientHttpRequestFactoryBuilder.class"
    },
    {
      "glob": "org/springframework/boot/http/client/ClientHttpRequestFactorySettings.class"
    },
    {
      "glob": "org/springframework/boot/http/client/JdkClientHttpRequestFactoryBuilder.class"
    },
    {
      "glob": "org/springframework/boot/info/SslInfo.class"
    },
    {
      "glob": "org/springframework/boot/jackson/JsonComponentModule.class"
    },
    {
      "glob": "org/springframework/boot/jackson/JsonMixinModule.class"
    },
    {
      "glob": "org/springframework/boot/jackson/JsonMixinModuleEntries.class"
    },
    {
      "glob": "org/springframework/boot/jdbc/init/DataSourceScriptDatabaseInitializer.class"
    },
    {
      "glob": "org/springframework/boot/sql/init/AbstractScriptDatabaseInitializer.class"
    },
    {
      "glob": "org/springframework/boot/ssl/DefaultSslBundleRegistry.class"
    },
    {
      "glob": "org/springframework/boot/task/SimpleAsyncTaskExecutorBuilder.class"
    },
    {
      "glob": "org/springframework/boot/task/SimpleAsyncTaskSchedulerBuilder.class"
    },
    {
      "glob": "org/springframework/boot/task/ThreadPoolTaskExecutorBuilder.class"
    },
    {
      "glob": "org/springframework/boot/task/ThreadPoolTaskSchedulerBuilder.class"
    },
    {
      "glob": "org/springframework/boot/web/embedded/tomcat/TomcatServletWebServerFactory.class"
    },
    {
      "glob": "org/springframework/boot/web/server/AbstractConfigurableWebServerFactory.class"
    },
    {
      "glob": "org/springframework/boot/web/server/ConfigurableWebServerFactory.class"
    },
    {
      "glob": "org/springframework/boot/web/servlet/AbstractFilterRegistrationBean.class"
    },
    {
      "glob": "org/springframework/boot/web/servlet/DynamicRegistrationBean.class"
    },
    {
      "glob": "org/springframework/boot/web/servlet/FilterRegistrationBean.class"
    },
    {
      "glob": "org/springframework/boot/web/servlet/RegistrationBean.class"
    },
    {
      "glob": "org/springframework/boot/web/servlet/ServletRegistrationBean.class"
    },
    {
      "glob": "org/springframework/boot/web/servlet/error/DefaultErrorAttributes.class"
    },
    {
      "glob": "org/springframework/boot/web/servlet/filter/OrderedCharacterEncodingFilter.class"
    },
    {
      "glob": "org/springframework/boot/web/servlet/filter/OrderedFormContentFilter.class"
    },
    {
      "glob": "org/springframework/boot/web/servlet/filter/OrderedRequestContextFilter.class"
    },
    {
      "glob": "org/springframework/boot/web/servlet/server/AbstractServletWebServerFactory.class"
    },
    {
      "glob": "org/springframework/cache/annotation/AbstractCachingConfiguration.class"
    },
    {
      "glob": "org/springframework/cache/annotation/AnnotationCacheOperationSource.class"
    },
    {
      "glob": "org/springframework/cache/annotation/ProxyCachingConfiguration.class"
    },
    {
      "glob": "org/springframework/cache/interceptor/AbstractFallbackCacheOperationSource.class"
    },
    {
      "glob": "org/springframework/cache/support/AbstractCacheManager.class"
    },
    {
      "glob": "org/springframework/cache/transaction/AbstractTransactionSupportingCacheManager.class"
    },
    {
      "glob": "org/springframework/cloud/autoconfigure/ConfigurationPropertiesRebinderAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/cloud/autoconfigure/LifecycleMvcEndpointAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/cloud/autoconfigure/PauseResumeEndpointsConfiguration.class"
    },
    {
      "glob": "org/springframework/cloud/autoconfigure/RefreshEndpointAutoConfiguration$RefreshEndpointConfiguration.class"
    },
    {
      "glob": "org/springframework/cloud/autoconfigure/RefreshEndpointAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/cloud/autoconfigure/RestartEndpointWithoutIntegrationConfiguration.class"
    },
    {
      "glob": "org/springframework/cloud/client/CommonsClientAutoConfiguration$ActuatorConfiguration.class"
    },
    {
      "glob": "org/springframework/cloud/client/CommonsClientAutoConfiguration$DiscoveryLoadBalancerConfiguration.class"
    },
    {
      "glob": "org/springframework/cloud/client/CommonsClientAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/cloud/client/ReactiveCommonsClientAutoConfiguration$ReactiveDiscoveryLoadBalancerConfiguration.class"
    },
    {
      "glob": "org/springframework/cloud/client/ReactiveCommonsClientAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/cloud/client/actuator/HasFeatures.class"
    },
    {
      "glob": "org/springframework/cloud/client/discovery/DiscoveryClient.class"
    },
    {
      "glob": "org/springframework/cloud/client/discovery/ReactiveDiscoveryClient.class"
    },
    {
      "glob": "org/springframework/cloud/client/discovery/composite/CompositeDiscoveryClient.class"
    },
    {
      "glob": "org/springframework/cloud/client/discovery/composite/CompositeDiscoveryClientAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/cloud/client/discovery/composite/reactive/ReactiveCompositeDiscoveryClient.class"
    },
    {
      "glob": "org/springframework/cloud/client/discovery/composite/reactive/ReactiveCompositeDiscoveryClientAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/cloud/client/discovery/health/DiscoveryClientHealthIndicator.class"
    },
    {
      "glob": "org/springframework/cloud/client/discovery/health/DiscoveryClientHealthIndicatorProperties.class"
    },
    {
      "glob": "org/springframework/cloud/client/discovery/health/DiscoveryCompositeHealthContributor.class"
    },
    {
      "glob": "org/springframework/cloud/client/discovery/health/reactive/ReactiveDiscoveryClientHealthIndicator.class"
    },
    {
      "glob": "org/springframework/cloud/client/discovery/health/reactive/ReactiveDiscoveryCompositeHealthContributor.class"
    },
    {
      "glob": "org/springframework/cloud/client/discovery/simple/SimpleDiscoveryClient.class"
    },
    {
      "glob": "org/springframework/cloud/client/discovery/simple/SimpleDiscoveryClientAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/cloud/client/discovery/simple/SimpleDiscoveryProperties.class"
    },
    {
      "glob": "org/springframework/cloud/client/discovery/simple/reactive/SimpleReactiveDiscoveryClient.class"
    },
    {
      "glob": "org/springframework/cloud/client/discovery/simple/reactive/SimpleReactiveDiscoveryClientAutoConfiguration$HealthConfiguration.class"
    },
    {
      "glob": "org/springframework/cloud/client/discovery/simple/reactive/SimpleReactiveDiscoveryClientAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/cloud/client/discovery/simple/reactive/SimpleReactiveDiscoveryProperties.class"
    },
    {
      "glob": "org/springframework/cloud/client/loadbalancer/LoadBalancerDefaultMappingsProviderAutoConfiguration$$Lambda/0x00000ffe01639378.class"
    },
    {
      "glob": "org/springframework/cloud/client/loadbalancer/LoadBalancerDefaultMappingsProviderAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/cloud/client/serviceregistry/AutoServiceRegistrationAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/cloud/client/serviceregistry/AutoServiceRegistrationConfiguration.class"
    },
    {
      "glob": "org/springframework/cloud/client/serviceregistry/AutoServiceRegistrationProperties.class"
    },
    {
      "glob": "org/springframework/cloud/client/serviceregistry/ServiceRegistryAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/cloud/commons/config/CommonsConfigAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/cloud/commons/config/DefaultsBindHandlerAdvisor.class"
    },
    {
      "glob": "org/springframework/cloud/commons/security/ResourceServerTokenRelayAutoConfiguration$ResourceServerTokenRelayRegistrationAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/cloud/commons/security/ResourceServerTokenRelayAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/cloud/commons/util/InetUtils.class"
    },
    {
      "glob": "org/springframework/cloud/commons/util/InetUtilsProperties.class"
    },
    {
      "glob": "org/springframework/cloud/commons/util/UtilAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/cloud/configuration/CompatibilityVerifierAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/cloud/configuration/CompatibilityVerifierProperties.class"
    },
    {
      "glob": "org/springframework/cloud/configuration/CompositeCompatibilityVerifier.class"
    },
    {
      "glob": "org/springframework/cloud/configuration/SleuthPresentVerifier.class"
    },
    {
      "glob": "org/springframework/cloud/configuration/SpringBootVersionVerifier.class"
    },
    {
      "glob": "org/springframework/cloud/context/environment/EnvironmentManager.class"
    },
    {
      "glob": "org/springframework/cloud/context/named/NamedContextFactory.class"
    },
    {
      "glob": "org/springframework/cloud/context/properties/ConfigurationPropertiesBeans.class"
    },
    {
      "glob": "org/springframework/cloud/context/properties/ConfigurationPropertiesRebinder.class"
    },
    {
      "glob": "org/springframework/cloud/health/RefreshScopeHealthIndicator.class"
    },
    {
      "glob": "org/springframework/cloud/openfeign/CachingCapability.class"
    },
    {
      "glob": "org/springframework/cloud/openfeign/DefaultTargeter.class"
    },
    {
      "glob": "org/springframework/cloud/openfeign/FeignAutoConfiguration$DefaultFeignTargeterConfiguration.class"
    },
    {
      "glob": "org/springframework/cloud/openfeign/FeignAutoConfiguration$FeignJacksonConfiguration.class"
    },
    {
      "glob": "org/springframework/cloud/openfeign/FeignAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/cloud/openfeign/FeignClientFactory.class"
    },
    {
      "glob": "org/springframework/cloud/openfeign/FeignClientFactoryBean.class"
    },
    {
      "glob": "org/springframework/cloud/openfeign/FeignClientProperties.class"
    },
    {
      "glob": "org/springframework/cloud/openfeign/FeignClientSpecification.class"
    },
    {
      "glob": "org/springframework/cloud/openfeign/support/FeignEncoderProperties.class"
    },
    {
      "glob": "org/springframework/cloud/openfeign/support/FeignHttpClientProperties.class"
    },
    {
      "glob": "org/springframework/cloud/openfeign/support/PageJacksonModule.class"
    },
    {
      "glob": "org/springframework/cloud/openfeign/support/SortJacksonModule.class"
    },
    {
      "glob": "org/springframework/context/ApplicationListener.class"
    },
    {
      "glob": "org/springframework/context/SmartLifecycle.class"
    },
    {
      "glob": "org/springframework/context/event/SmartApplicationListener.class"
    },
    {
      "glob": "org/springframework/context/support/AbstractMessageSource.class"
    },
    {
      "glob": "org/springframework/context/support/AbstractResourceBasedMessageSource.class"
    },
    {
      "glob": "org/springframework/context/support/ApplicationObjectSupport.class"
    },
    {
      "glob": "org/springframework/context/support/DefaultLifecycleProcessor.class"
    },
    {
      "glob": "org/springframework/context/support/MessageSourceSupport.class"
    },
    {
      "glob": "org/springframework/context/support/ResourceBundleMessageSource.class"
    },
    {
      "glob": "org/springframework/core/DecoratingProxy.class"
    },
    {
      "glob": "org/springframework/core/DefaultParameterNameDiscoverer.class"
    },
    {
      "glob": "org/springframework/core/PrioritizedParameterNameDiscoverer.class"
    },
    {
      "glob": "org/springframework/core/convert/ConversionService.class"
    },
    {
      "glob": "org/springframework/core/convert/support/GenericConversionService.class"
    },
    {
      "glob": "org/springframework/core/io/support/PropertiesLoaderSupport.class"
    },
    {
      "glob": "org/springframework/core/task/AsyncTaskExecutor.class"
    },
    {
      "glob": "org/springframework/core/task/SimpleAsyncTaskExecutor.class"
    },
    {
      "glob": "org/springframework/data/auditing/AuditingHandler.class"
    },
    {
      "glob": "org/springframework/data/auditing/AuditingHandlerSupport.class"
    },
    {
      "glob": "org/springframework/data/auditing/IsNewAwareAuditingHandler.class"
    },
    {
      "glob": "org/springframework/data/convert/CustomConversions.class"
    },
    {
      "glob": "org/springframework/data/domain/AuditorAware.class"
    },
    {
      "glob": "org/springframework/data/domain/ManagedTypes.class"
    },
    {
      "glob": "org/springframework/data/elasticsearch/client/elc/ElasticsearchTemplate.class"
    },
    {
      "glob": "org/springframework/data/elasticsearch/client/elc/ReactiveElasticsearchClient.class"
    },
    {
      "glob": "org/springframework/data/elasticsearch/client/elc/ReactiveElasticsearchTemplate.class"
    },
    {
      "glob": "org/springframework/data/elasticsearch/core/AbstractElasticsearchTemplate.class"
    },
    {
      "glob": "org/springframework/data/elasticsearch/core/AbstractReactiveElasticsearchTemplate.class"
    },
    {
      "glob": "org/springframework/data/elasticsearch/core/DocumentOperations.class"
    },
    {
      "glob": "org/springframework/data/elasticsearch/core/ElasticsearchOperations.class"
    },
    {
      "glob": "org/springframework/data/elasticsearch/core/ReactiveDocumentOperations.class"
    },
    {
      "glob": "org/springframework/data/elasticsearch/core/ReactiveSearchOperations.class"
    },
    {
      "glob": "org/springframework/data/elasticsearch/core/SearchOperations.class"
    },
    {
      "glob": "org/springframework/data/elasticsearch/core/convert/ElasticsearchConverter.class"
    },
    {
      "glob": "org/springframework/data/elasticsearch/core/convert/ElasticsearchCustomConversions.class"
    },
    {
      "glob": "org/springframework/data/elasticsearch/core/convert/MappingElasticsearchConverter.class"
    },
    {
      "glob": "org/springframework/data/elasticsearch/core/mapping/SimpleElasticsearchMappingContext.class"
    },
    {
      "glob": "org/springframework/data/elasticsearch/repository/ElasticsearchRepository.class"
    },
    {
      "glob": "org/springframework/data/elasticsearch/repository/support/ElasticsearchRepositoryFactoryBean.class"
    },
    {
      "glob": "org/springframework/data/geo/GeoModule.class"
    },
    {
      "glob": "org/springframework/data/jdbc/core/JdbcAggregateTemplate.class"
    },
    {
      "glob": "org/springframework/data/jdbc/core/convert/DefaultDataAccessStrategy.class"
    },
    {
      "glob": "org/springframework/data/jdbc/core/convert/JdbcConverter.class"
    },
    {
      "glob": "org/springframework/data/jdbc/core/convert/JdbcCustomConversions.class"
    },
    {
      "glob": "org/springframework/data/jdbc/core/convert/MappingJdbcConverter.class"
    },
    {
      "glob": "org/springframework/data/jdbc/core/dialect/JdbcPostgresDialect.class"
    },
    {
      "glob": "org/springframework/data/jdbc/core/mapping/JdbcMappingContext.class"
    },
    {
      "glob": "org/springframework/data/jdbc/repository/config/AbstractJdbcConfiguration.class"
    },
    {
      "glob": "org/springframework/data/jdbc/repository/support/JdbcRepositoryFactoryBean.class"
    },
    {
      "glob": "org/springframework/data/mapping/context/AbstractMappingContext.class"
    },
    {
      "glob": "org/springframework/data/mapping/context/MappingContext.class"
    },
    {
      "glob": "org/springframework/data/redis/cache/RedisCacheManager.class"
    },
    {
      "glob": "org/springframework/data/redis/connection/lettuce/LettuceConnectionFactory.class"
    },
    {
      "glob": "org/springframework/data/redis/core/ReactiveRedisOperations.class"
    },
    {
      "glob": "org/springframework/data/redis/core/ReactiveRedisTemplate.class"
    },
    {
      "glob": "org/springframework/data/redis/core/ReactiveStringRedisTemplate.class"
    },
    {
      "glob": "org/springframework/data/redis/core/RedisAccessor.class"
    },
    {
      "glob": "org/springframework/data/redis/core/RedisOperations.class"
    },
    {
      "glob": "org/springframework/data/redis/core/RedisTemplate.class"
    },
    {
      "glob": "org/springframework/data/redis/core/StringRedisTemplate.class"
    },
    {
      "glob": "org/springframework/data/redis/core/convert/RedisCustomConversions.class"
    },
    {
      "glob": "org/springframework/data/relational/RelationalManagedTypes.class"
    },
    {
      "glob": "org/springframework/data/relational/auditing/RelationalAuditingCallback.class"
    },
    {
      "glob": "org/springframework/data/relational/core/conversion/AbstractRelationalConverter.class"
    },
    {
      "glob": "org/springframework/data/relational/core/conversion/MappingRelationalConverter.class"
    },
    {
      "glob": "org/springframework/data/relational/core/dialect/AbstractDialect.class"
    },
    {
      "glob": "org/springframework/data/relational/core/dialect/Dialect.class"
    },
    {
      "glob": "org/springframework/data/relational/core/dialect/PostgresDialect.class"
    },
    {
      "glob": "org/springframework/data/relational/core/mapping/RelationalMappingContext.class"
    },
    {
      "glob": "org/springframework/data/repository/CrudRepository.class"
    },
    {
      "glob": "org/springframework/data/repository/ListCrudRepository.class"
    },
    {
      "glob": "org/springframework/data/repository/PagingAndSortingRepository.class"
    },
    {
      "glob": "org/springframework/data/repository/config/PropertiesBasedNamedQueriesFactoryBean.class"
    },
    {
      "glob": "org/springframework/data/repository/core/support/PropertiesBasedNamedQueries.class"
    },
    {
      "glob": "org/springframework/data/repository/core/support/RepositoryComposition$RepositoryFragments.class"
    },
    {
      "glob": "org/springframework/data/repository/core/support/RepositoryFactoryBeanSupport.class"
    },
    {
      "glob": "org/springframework/data/repository/core/support/RepositoryFragment$ImplementedRepositoryFragment.class"
    },
    {
      "glob": "org/springframework/data/repository/core/support/RepositoryFragment.class"
    },
    {
      "glob": "org/springframework/data/repository/core/support/RepositoryFragmentsFactoryBean.class"
    },
    {
      "glob": "org/springframework/data/repository/core/support/TransactionalRepositoryFactoryBeanSupport.class"
    },
    {
      "glob": "org/springframework/data/util/Streamable.class"
    },
    {
      "glob": "org/springframework/data/web/OffsetScrollPositionHandlerMethodArgumentResolver.class"
    },
    {
      "glob": "org/springframework/data/web/OffsetScrollPositionHandlerMethodArgumentResolverSupport.class"
    },
    {
      "glob": "org/springframework/data/web/PageableHandlerMethodArgumentResolver.class"
    },
    {
      "glob": "org/springframework/data/web/PageableHandlerMethodArgumentResolverSupport.class"
    },
    {
      "glob": "org/springframework/data/web/SortHandlerMethodArgumentResolver.class"
    },
    {
      "glob": "org/springframework/data/web/SortHandlerMethodArgumentResolverSupport.class"
    },
    {
      "glob": "org/springframework/data/web/config/ProjectingArgumentResolverRegistrar$ProjectingArgumentResolverBeanPostProcessor.class"
    },
    {
      "glob": "org/springframework/data/web/config/ProjectingArgumentResolverRegistrar.class"
    },
    {
      "glob": "org/springframework/data/web/config/SpringDataJacksonConfiguration$PageModule$PageModelConverter.class"
    },
    {
      "glob": "org/springframework/data/web/config/SpringDataJacksonConfiguration$PageModule.class"
    },
    {
      "glob": "org/springframework/data/web/config/SpringDataJacksonConfiguration.class"
    },
    {
      "glob": "org/springframework/data/web/config/SpringDataWebConfiguration.class"
    },
    {
      "glob": "org/springframework/data/web/config/SpringDataWebSettings.class"
    },
    {
      "glob": "org/springframework/format/support/DefaultFormattingConversionService.class"
    },
    {
      "glob": "org/springframework/format/support/FormattingConversionService.class"
    },
    {
      "glob": "org/springframework/http/client/reactive/JdkClientHttpConnector.class"
    },
    {
      "glob": "org/springframework/http/codec/CodecConfigurer.properties"
    },
    {
      "glob": "org/springframework/http/converter/AbstractGenericHttpMessageConverter.class"
    },
    {
      "glob": "org/springframework/http/converter/AbstractHttpMessageConverter.class"
    },
    {
      "glob": "org/springframework/http/converter/HttpMessageConverter.class"
    },
    {
      "glob": "org/springframework/http/converter/StringHttpMessageConverter.class"
    },
    {
      "glob": "org/springframework/http/converter/json/AbstractJackson2HttpMessageConverter.class"
    },
    {
      "glob": "org/springframework/http/converter/json/Jackson2ObjectMapperBuilder.class"
    },
    {
      "glob": "org/springframework/http/converter/json/MappingJackson2HttpMessageConverter.class"
    },
    {
      "glob": "org/springframework/jdbc/core/JdbcTemplate.class"
    },
    {
      "glob": "org/springframework/jdbc/core/namedparam/NamedParameterJdbcTemplate.class"
    },
    {
      "glob": "org/springframework/jdbc/core/simple/DefaultJdbcClient.class"
    },
    {
      "glob": "org/springframework/jdbc/core/simple/JdbcClient.class"
    },
    {
      "glob": "org/springframework/jdbc/datasource/AbstractDataSource.class"
    },
    {
      "glob": "org/springframework/jdbc/datasource/DataSourceTransactionManager.class"
    },
    {
      "glob": "org/springframework/jdbc/datasource/lookup/AbstractRoutingDataSource.class"
    },
    {
      "glob": "org/springframework/jdbc/support/JdbcAccessor.class"
    },
    {
      "glob": "org/springframework/jdbc/support/JdbcTransactionManager.class"
    },
    {
      "glob": "org/springframework/kafka/config/AbstractKafkaListenerContainerFactory.class"
    },
    {
      "glob": "org/springframework/kafka/config/ConcurrentKafkaListenerContainerFactory.class"
    },
    {
      "glob": "org/springframework/kafka/config/KafkaListenerEndpointRegistry.class"
    },
    {
      "glob": "org/springframework/kafka/core/ConsumerFactory.class"
    },
    {
      "glob": "org/springframework/kafka/core/DefaultKafkaConsumerFactory.class"
    },
    {
      "glob": "org/springframework/kafka/core/DefaultKafkaProducerFactory.class"
    },
    {
      "glob": "org/springframework/kafka/core/KafkaAdmin.class"
    },
    {
      "glob": "org/springframework/kafka/core/KafkaOperations.class"
    },
    {
      "glob": "org/springframework/kafka/core/KafkaResourceFactory.class"
    },
    {
      "glob": "org/springframework/kafka/core/KafkaTemplate.class"
    },
    {
      "glob": "org/springframework/kafka/core/ProducerFactory.class"
    },
    {
      "glob": "org/springframework/kafka/listener/RecordInterceptor.class"
    },
    {
      "glob": "org/springframework/kafka/listener/ThreadStateProcessor.class"
    },
    {
      "glob": "org/springframework/kafka/retrytopic/RetryTopicConfigurationSupport.class"
    },
    {
      "glob": "org/springframework/kafka/retrytopic/RetryTopicConfigurer$LoggingDltListenerHandlerMethod.class"
    },
    {
      "glob": "org/springframework/kafka/retrytopic/RetryTopicConfigurer.class"
    },
    {
      "glob": "org/springframework/kafka/retrytopic/RetryTopicSchedulerWrapper.class"
    },
    {
      "glob": "org/springframework/kafka/security/jaas/KafkaJaasLoginModuleInitializer.class"
    },
    {
      "glob": "org/springframework/kafka/support/LoggingProducerListener.class"
    },
    {
      "glob": "org/springframework/kafka/support/ProducerListener.class"
    },
    {
      "glob": "org/springframework/retry/support/RetryTemplate.class"
    },
    {
      "glob": "org/springframework/transaction/ConfigurableTransactionManager.class"
    },
    {
      "glob": "org/springframework/transaction/TransactionDefinition.class"
    },
    {
      "glob": "org/springframework/transaction/annotation/AbstractTransactionManagementConfiguration.class"
    },
    {
      "glob": "org/springframework/transaction/annotation/AnnotationTransactionAttributeSource.class"
    },
    {
      "glob": "org/springframework/transaction/annotation/ProxyTransactionManagementConfiguration.class"
    },
    {
      "glob": "org/springframework/transaction/interceptor/AbstractFallbackTransactionAttributeSource.class"
    },
    {
      "glob": "org/springframework/transaction/support/AbstractPlatformTransactionManager.class"
    },
    {
      "glob": "org/springframework/transaction/support/DefaultTransactionDefinition.class"
    },
    {
      "glob": "org/springframework/transaction/support/TransactionOperations.class"
    },
    {
      "glob": "org/springframework/transaction/support/TransactionTemplate.class"
    },
    {
      "glob": "org/springframework/util/AntPathMatcher.class"
    },
    {
      "glob": "org/springframework/util/CustomizableThreadCreator.class"
    },
    {
      "glob": "org/springframework/validation/SmartValidator.class"
    },
    {
      "glob": "org/springframework/validation/Validator.class"
    },
    {
      "glob": "org/springframework/validation/beanvalidation/LocalValidatorFactoryBean.class"
    },
    {
      "glob": "org/springframework/validation/beanvalidation/SpringValidatorAdapter.class"
    },
    {
      "glob": "org/springframework/web/accept/ContentNegotiationManager.class"
    },
    {
      "glob": "org/springframework/web/client/DefaultRestClientBuilder.class"
    },
    {
      "glob": "org/springframework/web/client/ResponseErrorHandler.class"
    },
    {
      "glob": "org/springframework/web/context/support/WebApplicationObjectSupport.class"
    },
    {
      "glob": "org/springframework/web/filter/CharacterEncodingFilter.class"
    },
    {
      "glob": "org/springframework/web/filter/FormContentFilter.class"
    },
    {
      "glob": "org/springframework/web/filter/GenericFilterBean.class"
    },
    {
      "glob": "org/springframework/web/filter/OncePerRequestFilter.class"
    },
    {
      "glob": "org/springframework/web/filter/RequestContextFilter.class"
    },
    {
      "glob": "org/springframework/web/method/support/CompositeUriComponentsContributor.class"
    },
    {
      "glob": "org/springframework/web/multipart/support/StandardServletMultipartResolver.class"
    },
    {
      "glob": "org/springframework/web/reactive/function/client/DefaultWebClientBuilder.class"
    },
    {
      "glob": "org/springframework/web/servlet/DispatcherServlet.class"
    },
    {
      "glob": "org/springframework/web/servlet/FrameworkServlet.class"
    },
    {
      "glob": "org/springframework/web/servlet/HandlerMapping.class"
    },
    {
      "glob": "org/springframework/web/servlet/HttpServletBean.class"
    },
    {
      "glob": "org/springframework/web/servlet/config/annotation/DelegatingWebMvcConfiguration.class"
    },
    {
      "glob": "org/springframework/web/servlet/config/annotation/WebMvcConfigurationSupport.class"
    },
    {
      "glob": "org/springframework/web/servlet/config/annotation/WebMvcConfigurer.class"
    },
    {
      "glob": "org/springframework/web/servlet/function/support/HandlerFunctionAdapter.class"
    },
    {
      "glob": "org/springframework/web/servlet/function/support/RouterFunctionMapping.class"
    },
    {
      "glob": "org/springframework/web/servlet/handler/AbstractDetectingUrlHandlerMapping.class"
    },
    {
      "glob": "org/springframework/web/servlet/handler/AbstractHandlerMapping.class"
    },
    {
      "glob": "org/springframework/web/servlet/handler/AbstractHandlerMethodMapping.class"
    },
    {
      "glob": "org/springframework/web/servlet/handler/AbstractUrlHandlerMapping.class"
    },
    {
      "glob": "org/springframework/web/servlet/handler/BeanNameUrlHandlerMapping.class"
    },
    {
      "glob": "org/springframework/web/servlet/handler/HandlerExceptionResolverComposite.class"
    },
    {
      "glob": "org/springframework/web/servlet/handler/MatchableHandlerMapping.class"
    },
    {
      "glob": "org/springframework/web/servlet/handler/SimpleUrlHandlerMapping.class"
    },
    {
      "glob": "org/springframework/web/servlet/i18n/AbstractLocaleResolver.class"
    },
    {
      "glob": "org/springframework/web/servlet/i18n/AcceptHeaderLocaleResolver.class"
    },
    {
      "glob": "org/springframework/web/servlet/mvc/HttpRequestHandlerAdapter.class"
    },
    {
      "glob": "org/springframework/web/servlet/mvc/SimpleControllerHandlerAdapter.class"
    },
    {
      "glob": "org/springframework/web/servlet/mvc/method/AbstractHandlerMethodAdapter.class"
    },
    {
      "glob": "org/springframework/web/servlet/mvc/method/RequestMappingInfoHandlerMapping.class"
    },
    {
      "glob": "org/springframework/web/servlet/mvc/method/annotation/RequestMappingHandlerAdapter.class"
    },
    {
      "glob": "org/springframework/web/servlet/mvc/method/annotation/RequestMappingHandlerMapping.class"
    },
    {
      "glob": "org/springframework/web/servlet/resource/AbstractResourceResolver.class"
    },
    {
      "glob": "org/springframework/web/servlet/resource/LiteWebJarsResourceResolver.class"
    },
    {
      "glob": "org/springframework/web/servlet/resource/ResourceUrlProvider.class"
    },
    {
      "glob": "org/springframework/web/servlet/support/AbstractFlashMapManager.class"
    },
    {
      "glob": "org/springframework/web/servlet/support/SessionFlashMapManager.class"
    },
    {
      "glob": "org/springframework/web/servlet/support/WebContentGenerator.class"
    },
    {
      "glob": "org/springframework/web/servlet/theme/AbstractThemeResolver.class"
    },
    {
      "glob": "org/springframework/web/servlet/theme/FixedThemeResolver.class"
    },
    {
      "glob": "org/springframework/web/servlet/view/AbstractCachingViewResolver.class"
    },
    {
      "glob": "org/springframework/web/servlet/view/ContentNegotiatingViewResolver.class"
    },
    {
      "glob": "org/springframework/web/servlet/view/DefaultRequestToViewNameTranslator.class"
    },
    {
      "glob": "org/springframework/web/servlet/view/InternalResourceViewResolver.class"
    },
    {
      "glob": "org/springframework/web/servlet/view/UrlBasedViewResolver.class"
    },
    {
      "glob": "org/springframework/web/servlet/view/ViewResolverComposite.class"
    },
    {
      "glob": "org/springframework/web/util/UrlPathHelper.class"
    },
    {
      "glob": "org/springframework/web/util/pattern/PathPatternParser.class"
    },
    {
      "glob": "prompts/general-instruction-system.txt"
    },
    {
      "glob": "prompts/title-generator-system.txt"
    },
    {
      "glob": "public/index.html"
    },
    {
      "glob": "resources/index.html"
    },
    {
      "glob": "schema-all.sql"
    },
    {
      "glob": "schema.sql"
    },
    {
      "glob": "software/amazon/awssdk/auth/credentials/AwsCredentialsProvider.class"
    },
    {
      "glob": "software/amazon/awssdk/auth/credentials/AwsCredentialsProviderChain.class"
    },
    {
      "glob": "software/amazon/awssdk/awscore/client/builder/AwsClientBuilder.class"
    },
    {
      "glob": "software/amazon/awssdk/awscore/client/builder/AwsDefaultClientBuilder.class"
    },
    {
      "glob": "software/amazon/awssdk/core/client/builder/SdkClientBuilder.class"
    },
    {
      "glob": "software/amazon/awssdk/core/client/builder/SdkDefaultClientBuilder.class"
    },
    {
      "glob": "software/amazon/awssdk/global/handlers/execution.interceptors"
    },
    {
      "glob": "software/amazon/awssdk/global/partitions.json"
    },
    {
      "glob": "software/amazon/awssdk/identity/spi/IdentityProvider.class"
    },
    {
      "glob": "software/amazon/awssdk/regions/providers/AwsRegionProviderChain.class"
    },
    {
      "glob": "software/amazon/awssdk/services/cloudfront/CloudFrontClient.class"
    },
    {
      "glob": "software/amazon/awssdk/services/cloudfront/DefaultCloudFrontClient.class"
    },
    {
      "glob": "software/amazon/awssdk/services/cloudfront/execution.interceptors"
    },
    {
      "glob": "software/amazon/awssdk/services/cloudwatch/CloudWatchAsyncClient.class"
    },
    {
      "glob": "software/amazon/awssdk/services/cloudwatch/DefaultCloudWatchAsyncClient.class"
    },
    {
      "glob": "software/amazon/awssdk/services/cloudwatch/execution.interceptors"
    },
    {
      "glob": "software/amazon/awssdk/services/s3/DefaultS3BaseClientBuilder.class"
    },
    {
      "glob": "software/amazon/awssdk/services/s3/DefaultS3Client.class"
    },
    {
      "glob": "software/amazon/awssdk/services/s3/DefaultS3ClientBuilder.class"
    },
    {
      "glob": "software/amazon/awssdk/services/s3/S3BaseClientBuilder.class"
    },
    {
      "glob": "software/amazon/awssdk/services/s3/S3Client.class"
    },
    {
      "glob": "software/amazon/awssdk/services/s3/execution.interceptors"
    },
    {
      "glob": "software/amazon/awssdk/services/s3/internal/signing/DefaultS3Presigner.class"
    },
    {
      "glob": "software/amazon/awssdk/services/s3/internal/signing/DefaultSdkPresigner.class"
    },
    {
      "glob": "software/amazon/awssdk/services/s3/presigner/S3Presigner.class"
    },
    {
      "glob": "software/amazon/awssdk/utils/builder/SdkBuilder.class"
    },
    {
      "glob": "software/amazon/awssdk/utils/builder/ToCopyableBuilder.class"
    },
    {
      "glob": "spring.properties"
    },
    {
      "glob": "springdoc.config.properties"
    },
    {
      "glob": "static/index.html"
    },
    {
      "glob": "versions.properties"
    },
    {
      "glob": "zipkin2/reporter/BaseHttpSender.class"
    },
    {
      "glob": "zipkin2/reporter/BytesMessageSender$Base.class"
    },
    {
      "glob": "zipkin2/reporter/Encoding$1.class"
    },
    {
      "glob": "zipkin2/reporter/Encoding.class"
    },
    {
      "glob": "zipkin2/reporter/brave/AsyncZipkinSpanHandler.class"
    },
    {
      "glob": "zipkin2/reporter/brave/MutableSpanBytesEncoder$1.class"
    },
    {
      "glob": "zipkin2/reporter/brave/MutableSpanBytesEncoder.class"
    },
    {
      "module": "java.base",
      "glob": "java/lang/Enum.class"
    },
    {
      "module": "java.base",
      "glob": "java/lang/Iterable.class"
    },
    {
      "module": "java.base",
      "glob": "java/lang/Object.class"
    },
    {
      "module": "java.base",
      "glob": "java/lang/Record.class"
    },
    {
      "module": "java.base",
      "glob": "java/lang/reflect/Proxy.class"
    },
    {
      "module": "java.base",
      "glob": "java/util/AbstractMap.class"
    },
    {
      "module": "java.base",
      "glob": "java/util/HashMap.class"
    },
    {
      "module": "java.base",
      "glob": "java/util/Map.class"
    },
    {
      "module": "java.base",
      "glob": "java/util/function/BiFunction.class"
    },
    {
      "module": "java.base",
      "glob": "java/util/function/BiPredicate.class"
    },
    {
      "module": "java.base",
      "glob": "java/util/function/Consumer.class"
    },
    {
      "module": "java.base",
      "glob": "jdk/internal/icu/impl/data/icudt74b/nfc.nrm"
    },
    {
      "module": "java.base",
      "glob": "jdk/internal/icu/impl/data/icudt74b/nfkc.nrm"
    },
    {
      "module": "java.base",
      "glob": "jdk/internal/icu/impl/data/icudt74b/uprops.icu"
    },
    {
      "module": "java.base",
      "glob": "sun/net/idn/uidna.spp"
    },
    {
      "module": "java.sql",
      "glob": "javax/sql/CommonDataSource.class"
    },
    {
      "module": "java.sql",
      "glob": "javax/sql/DataSource.class"
    },
    {
      "module": "java.xml",
      "glob": "jdk/xml/internal/jdkcatalog/JDKCatalog.xml"
    },
    {
      "module": "jdk.jfr",
      "glob": "jdk/jfr/internal/query/view.ini"
    }
  ],
  "bundles": [
    {
      "name": "jakarta.servlet.LocalStrings",
      "locales": [
        "nl-NL"
      ]
    },
    {
      "name": "jakarta.servlet.http.LocalStrings",
      "locales": [
        "nl-NL"
      ]
    },
    {
      "name": "liquibase/i18n/liquibase-core",
      "locales": [
        "nl-NL"
      ]
    },
    {
      "name": "messages.access",
      "locales": [
        "en",
        "nl-NL"
      ]
    },
    {
      "name": "messages.error",
      "locales": [
        "en",
        "nl-NL"
      ]
    },
    {
      "name": "org.apache.catalina.authenticator.LocalStrings",
      "locales": [
        "nl-NL"
      ]
    },
    {
      "name": "org.apache.catalina.authenticator.jaspic.LocalStrings",
      "locales": [
        "nl-NL"
      ]
    },
    {
      "name": "org.apache.catalina.connector.LocalStrings",
      "locales": [
        "nl-NL"
      ]
    },
    {
      "name": "org.apache.catalina.core.LocalStrings",
      "locales": [
        "nl-NL"
      ]
    },
    {
      "name": "org.apache.catalina.deploy.LocalStrings",
      "locales": [
        "nl-NL"
      ]
    },
    {
      "name": "org.apache.catalina.loader.LocalStrings",
      "locales": [
        "nl-NL"
      ]
    },
    {
      "name": "org.apache.catalina.mapper.LocalStrings",
      "locales": [
        "nl-NL"
      ]
    },
    {
      "name": "org.apache.catalina.mbeans.LocalStrings",
      "locales": [
        "nl-NL"
      ]
    },
    {
      "name": "org.apache.catalina.realm.LocalStrings",
      "locales": [
        "nl-NL"
      ]
    },
    {
      "name": "org.apache.catalina.security.LocalStrings",
      "locales": [
        "nl-NL"
      ]
    },
    {
      "name": "org.apache.catalina.session.LocalStrings",
      "locales": [
        "nl-NL"
      ]
    },
    {
      "name": "org.apache.catalina.startup.LocalStrings",
      "locales": [
        "nl-NL"
      ]
    },
    {
      "name": "org.apache.catalina.util.LocalStrings",
      "locales": [
        "nl-NL"
      ]
    },
    {
      "name": "org.apache.catalina.valves.LocalStrings",
      "locales": [
        "nl-NL"
      ]
    },
    {
      "name": "org.apache.catalina.webresources.LocalStrings",
      "locales": [
        "nl-NL"
      ]
    },
    {
      "name": "org.apache.coyote.LocalStrings",
      "locales": [
        "nl-NL"
      ]
    },
    {
      "name": "org.apache.coyote.http11.LocalStrings",
      "locales": [
        "nl-NL"
      ]
    },
    {
      "name": "org.apache.coyote.http11.filters.LocalStrings",
      "locales": [
        "nl-NL"
      ]
    },
    {
      "name": "org.apache.coyote.http2.LocalStrings",
      "locales": [
        "nl-NL"
      ]
    },
    {
      "name": "org.apache.naming.LocalStrings",
      "locales": [
        "nl-NL"
      ]
    },
    {
      "name": "org.apache.tomcat.util.LocalStrings",
      "locales": [
        "nl-NL"
      ]
    },
    {
      "name": "org.apache.tomcat.util.buf.LocalStrings",
      "locales": [
        "nl-NL"
      ]
    },
    {
      "name": "org.apache.tomcat.util.compat.LocalStrings",
      "locales": [
        "nl-NL"
      ]
    },
    {
      "name": "org.apache.tomcat.util.descriptor.web.LocalStrings",
      "locales": [
        "nl-NL"
      ]
    },
    {
      "name": "org.apache.tomcat.util.http.LocalStrings",
      "locales": [
        "nl-NL"
      ]
    },
    {
      "name": "org.apache.tomcat.util.http.parser.LocalStrings",
      "locales": [
        "nl-NL"
      ]
    },
    {
      "name": "org.apache.tomcat.util.modeler.LocalStrings",
      "locales": [
        "nl-NL"
      ]
    },
    {
      "name": "org.apache.tomcat.util.net.LocalStrings",
      "locales": [
        "nl-NL"
      ]
    },
    {
      "name": "org.apache.tomcat.util.scan.LocalStrings",
      "locales": [
        "nl-NL"
      ]
    },
    {
      "name": "org.apache.tomcat.util.threads.LocalStrings",
      "locales": [
        "nl-NL"
      ]
    },
    {
      "name": "org.apache.tomcat.websocket.LocalStrings",
      "locales": [
        "nl-NL"
      ]
    },
    {
      "name": "org.apache.tomcat.websocket.server.LocalStrings",
      "locales": [
        "nl-NL"
      ]
    },
    {
      "name": "org.postgresql.translation.messages",
      "locales": [
        "nl-NL"
      ]
    }
  ],
  "serialization": [
    {
      "type": "java.util.HashMap"
    },
    {
      "type": "org.apache.http.impl.auth.BasicScheme"
    },
    {
      "type": "org.apache.http.impl.auth.RFC2617Scheme"
    }
  ],
  "jni": [
    {
      "type": "[Lcom.sun.management.internal.DiagnosticCommandArgumentInfo;"
    },
    {
      "type": "[Lcom.sun.management.internal.DiagnosticCommandInfo;"
    },
    {
      "type": "com.sun.management.internal.DiagnosticCommandArgumentInfo",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.String",
            "java.lang.String",
            "java.lang.String",
            "java.lang.String",
            "boolean",
            "boolean",
            "boolean",
            "int"
          ]
        }
      ]
    },
    {
      "type": "com.sun.management.internal.DiagnosticCommandInfo",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.String",
            "java.lang.String",
            "java.lang.String",
            "java.lang.String",
            "java.lang.String",
            "java.lang.String",
            "boolean",
            "java.util.List"
          ]
        }
      ]
    },
    {
      "type": "java.lang.Boolean",
      "methods": [
        {
          "name": "getBoolean",
          "parameterTypes": [
            "java.lang.String"
          ]
        }
      ]
    },
    {
      "type": "java.util.Arrays",
      "methods": [
        {
          "name": "asList",
          "parameterTypes": [
            "java.lang.Object[]"
          ]
        }
      ]
    },
    {
      "type": "sun.management.VMManagementImpl",
      "fields": [
        {
          "name": "compTimeMonitoringSupport"
        },
        {
          "name": "currentThreadCpuTimeSupport"
        },
        {
          "name": "objectMonitorUsageSupport"
        },
        {
          "name": "otherThreadCpuTimeSupport"
        },
        {
          "name": "remoteDiagnosticCommandsSupport"
        },
        {
          "name": "synchronizerUsageSupport"
        },
        {
          "name": "threadAllocatedMemorySupport"
        },
        {
          "name": "threadContentionMonitoringSupport"
        }
      ]
    }
  ]
}
