name: Build

on:
  workflow_call:
    outputs:
      version:
        description: Application version from gradle.
        value: ${{ jobs.docker.outputs.version }}

permissions:
  id-token: write
  contents: write

jobs:
  docker:
    name: Docker
    runs-on: ubuntu-24.04-arm
    timeout-minutes: 30
    outputs:
      version: ${{ steps.determine-version.outputs.version }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v3
        with:
          cache-read-only: false
      - id: determine-version
        name: Determine version
        run: |
          version=$(./gradlew properties | grep '^version: ' | sed -n 's/version: \(.*\)/\1/p')
          echo Version is $version. Checking if tag already exists...
          git pull --tags
          git tag $version
          echo version=$version >> $GITHUB_OUTPUT
      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          platforms: linux/arm64
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{ vars.AWS_REGION }}
          role-to-assume: arn:aws:iam::${{ secrets.AWS_BUILD_ACCOUNT_ID }}:role/BuildRole
      - id: login-ecr
        name: Login to AWS ECR
        uses: aws-actions/amazon-ecr-login@v2
      - name: Build and push
        uses: docker/build-push-action@v6
        env:
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          VERSION: ${{ steps.determine-version.outputs.version }}
        with:
          cache-from: type=gha
          cache-to: type=gha,mode=max
          platforms: linux/arm64
          push: true
          tags: ${{ env.REGISTRY }}/${{ github.event.repository.name }}:${{ env.VERSION }}
      - name: Create tag
        env:
          VERSION: ${{ steps.determine-version.outputs.version }}
        run: |
          git config user.name "gitfhub-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git tag -a $VERSION -m "Release $VERSION"
          git push origin $VERSION
