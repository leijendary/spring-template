on:
  workflow_call:
    inputs:
      environment:
        required: true
        type: string

jobs:
  binary:
    runs-on: ubuntu-latest
    # TODO: adjust timeout
    timeout-minutes: 120
    environment: ${{ inputs.environment }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup graalvm
        uses: graalvm/setup-graalvm@v1
        with:
          distribution: graalvm-community
          java-version: 21
      - name: Setup gradle
        uses: gradle/gradle-build-action@v2
      - name: Execute gradle compile
        run: ./gradlew nativeCompile -i -x test
      - name: Upload dockerfile
        uses: actions/upload-artifact@v3
        with:
          name: dockerfile
          path: Dockerfile
          retention-days: 5
          if-no-files-found: error
      - name: Upload binary
        uses: actions/upload-artifact@v3
        with:
          name: binary
          path: build/native/nativeCompile/*
          retention-days: 5
          if-no-files-found: error
  push:
    needs: binary
    runs-on: ubuntu-latest
    timeout-minutes: 2
    environment: ${{ inputs.environment }}
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Set up qemu
        uses: docker/setup-qemu-action@v3
        with:
          platforms: arm64
      - name: Setup docker buildx
        uses: docker/setup-buildx-action@v3
        with:
          platforms: linux/arm64
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{ vars.AWS_REGION }}
          #          role-to-assume: arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/DeploymentRole-${{ inputs.environment }}
          role-to-assume: arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/DeploymentRole-dev
      - id: login-registry
        name: Login to registry
        uses: aws-actions/amazon-ecr-login@v2
        with:
          mask-password: "true"
      - name: Download dockerfile
        uses: actions/download-artifact@v3
        with:
          name: dockerfile
      - name: Download binary
        uses: actions/download-artifact@v3
        with:
          name: binary
          path: build/native/nativeCompile
      - id: metadata
        name: Metadata
        uses: docker/metadata-action@v5
        with:
          images: ${{ steps.login-registry.outputs.registry }}/${{ github.event.repository.name }}
          tags: |
            type=semver,pattern={{version}}
            type=sha,prefix=
      - name: Push to registry
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/arm64
          push: true
          tags: ${{ steps.metadata.outputs.tags }}
