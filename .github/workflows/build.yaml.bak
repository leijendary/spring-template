on:
  workflow_call:
    inputs:
      environment:
        required: true
        type: string

jobs:
  docker:
    runs-on: ubuntu-latest
    # TODO: adjust timeout
    timeout-minutes: 120
    environment: ${{ inputs.environment }}
    steps:
      - name: Set up qemu
        uses: docker/setup-qemu-action@v3
        with:
          platforms: arm64
      - name: Setup docker buildx
        uses: docker/setup-buildx-action@v3
        with:
          platforms: linux/arm64
      #      - name: Configure AWS credentials
      #        uses: aws-actions/configure-aws-credentials@v4
      #        with:
      #          aws-region: ${{ vars.AWS_REGION }}
      #          role-to-assume: arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/DeploymentRole-${{ inputs.environment }}
      #      - id: login-registry
      #        name: Login to registry
      #        uses: aws-actions/amazon-ecr-login@v2
      #        with:
      #          mask-password: "true"
      - name: Login to registry
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup graalvm
        uses: graalvm/setup-graalvm@v1
        with:
          distribution: graalvm-community
          java-version: 21
      - name: Setup gradle
        uses: gradle/gradle-build-action@v2
      - id: metadata
        name: Metadata
        uses: docker/metadata-action@v5
        with:
          # images: ${{ steps.login-registry.outputs.registry }}/${{ github.event.repository.name }}
          images: ${{ secrets.DOCKERHUB_USERNAME }}/${{ github.event.repository.name }}
          tags: |
            type=semver,pattern={{version}}
            type=sha,prefix=
      - name: Build and push
        uses: docker/build-push-action@v5
        env:
          # CACHE_REF: ${{ steps.login-registry.outputs.registry }}/${{ github.event.repository.name }}:cache
          CACHE_REF: ${{ secrets.DOCKERHUB_USERNAME }}/${{ github.event.repository.name }}:cache
        with:
          cache-from: type=registry,ref=${{ env.CACHE_REF }}
          cache-to: type=registry,ref=${{ env.CACHE_REF }},mode=max
          context: .
          platforms: linux/arm64
          push: true
          tags: ${{ steps.metadata.outputs.tags }}
